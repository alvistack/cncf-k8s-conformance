  I0902 07:30:39.537077      16 e2e.go:109] Starting e2e run "98d3bfa0-79c6-4655-86d0-63d46ea81efd" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756798237 - will randomize all specs

Will run 411 of 6624 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0902 07:30:39.978402 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  I0902 07:30:39.987706 16 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0902 07:30:40.075549 16 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0902 07:30:40.084657 16 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0902 07:30:40.085021 16 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  I0902 07:30:40.085365 16 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0902 07:30:40.085659 16 e2e.go:245] e2e test version: v1.32.8
  I0902 07:30:40.089644 16 e2e.go:254] kube-apiserver version: v1.32.8
  I0902 07:30:40.089794 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  I0902 07:30:40.100233 16 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/02/25 07:30:40.358
  I0902 07:30:40.358506 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:30:40.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:30:40.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:30:40.405
  STEP: Creating projection with secret that has name projected-secret-test-f6bd99c3-8444-498b-9301-12cb4a8ac017 @ 09/02/25 07:30:40.412
  STEP: Creating a pod to test consume secrets @ 09/02/25 07:30:40.434
  STEP: Saw pod success @ 09/02/25 07:30:54.534
  I0902 07:30:54.541739 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-secrets-74c514f9-59c4-49c6-84c7-a9938e4d8518 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 07:30:54.586
  I0902 07:30:54.626876 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6866" for this suite. @ 09/02/25 07:30:54.636
• [14.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 09/02/25 07:30:54.652
  I0902 07:30:54.653018 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 07:30:54.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:30:54.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:30:54.689
  STEP: creating Agnhost RC @ 09/02/25 07:30:54.696
  I0902 07:30:54.697298 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6523 create -f -'
  I0902 07:30:55.169306 16 builder.go:146] stderr: ""
  I0902 07:30:55.169639 16 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/25 07:30:55.169
  I0902 07:30:56.228967 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 07:30:56.229082 16 framework.go:733] Found 0 / 1
  I0902 07:30:57.178965 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 07:30:57.179136 16 framework.go:733] Found 1 / 1
  I0902 07:30:57.179258 16 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/02/25 07:30:57.179
  I0902 07:30:57.186196 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 07:30:57.186285 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 07:30:57.186716 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6523 patch pod agnhost-primary-qhvnf -p {"metadata":{"annotations":{"x":"y"}}}'
  I0902 07:30:57.361283 16 builder.go:146] stderr: ""
  I0902 07:30:57.361359 16 builder.go:147] stdout: "pod/agnhost-primary-qhvnf patched\n"
  STEP: checking annotations @ 09/02/25 07:30:57.361
  I0902 07:30:57.369481 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 07:30:57.369632 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 07:30:57.370244 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6523" for this suite. @ 09/02/25 07:30:57.382
• [2.764 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/02/25 07:30:57.417
  I0902 07:30:57.417501 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 07:30:57.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:30:57.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:30:57.48
  STEP: Counting existing ResourceQuota @ 09/02/25 07:31:14.493
  STEP: Creating a ResourceQuota @ 09/02/25 07:31:19.504
  STEP: Ensuring resource quota status is calculated @ 09/02/25 07:31:19.513
  STEP: Creating a ConfigMap @ 09/02/25 07:31:21.524
  STEP: Ensuring resource quota status captures configMap creation @ 09/02/25 07:31:21.547
  STEP: Deleting a ConfigMap @ 09/02/25 07:31:23.56
  STEP: Ensuring resource quota status released usage @ 09/02/25 07:31:23.575
  I0902 07:31:25.582491 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-104" for this suite. @ 09/02/25 07:31:25.593
• [28.192 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/02/25 07:31:25.609
  I0902 07:31:25.609260 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 07:31:25.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:25.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:25.659
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/02/25 07:31:25.665
  STEP: Saw pod success @ 09/02/25 07:31:29.713
  I0902 07:31:29.729979 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-7f8ae2f0-ddcd-416c-85ef-6085a401ba35 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 07:31:29.746
  I0902 07:31:29.786297 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-161" for this suite. @ 09/02/25 07:31:29.795
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 09/02/25 07:31:29.813
  I0902 07:31:29.813288 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 07:31:29.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:29.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:29.852
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 07:31:29.858
  I0902 07:31:29.858558 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-9900 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0902 07:31:30.021598 16 builder.go:146] stderr: ""
  I0902 07:31:30.021673 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/02/25 07:31:30.021
  I0902 07:31:30.022105 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-9900 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0902 07:31:30.217059 16 builder.go:146] stderr: ""
  I0902 07:31:30.217137 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 07:31:30.217
  I0902 07:31:30.223721 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-9900 delete pods e2e-test-httpd-pod'
  I0902 07:31:47.701583 16 builder.go:146] stderr: ""
  I0902 07:31:47.703184 16 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0902 07:31:47.704307 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9900" for this suite. @ 09/02/25 07:31:47.729
• [17.939 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 09/02/25 07:31:47.756
  I0902 07:31:47.756495 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 07:31:47.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:47.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:47.809
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 07:31:47.821
  I0902 07:31:47.827466 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-1173 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0902 07:31:48.055145 16 builder.go:146] stderr: ""
  I0902 07:31:48.055380 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/02/25 07:31:48.055
  I0902 07:31:48.070128 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-1173 delete pods e2e-test-httpd-pod'
  I0902 07:31:50.708366 16 builder.go:146] stderr: ""
  I0902 07:31:50.708691 16 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0902 07:31:50.709589 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1173" for this suite. @ 09/02/25 07:31:50.723
• [2.990 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/02/25 07:31:50.746
  I0902 07:31:50.746820 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 07:31:50.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:31:50.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:31:50.797
  I0902 07:31:50.862228 16 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0902 07:31:50.876126 16 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0902 07:31:51.057174 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 07:31:51.057506 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:51.926154 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 07:31:51.929071 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:52.912501 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:52.912684 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:53.920840 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:53.920933 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:54.897320 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:54.897437 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:55.935734 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:55.935853 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:56.897356 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:56.897446 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:57.907070 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:57.907145 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:58.897643 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:58.897896 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:31:59.953356 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:31:59.953467 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:00.899169 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:32:00.899312 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:01.901984 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:32:01.902085 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:02.899316 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:32:02.899395 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:03.912710 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:32:03.912795 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:04.896689 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 07:32:04.896779 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:05.897676 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 07:32:05.897755 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:06.902912 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 07:32:06.903017 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:07.929509 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 07:32:07.929649 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:09.004311 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 07:32:09.004434 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:09.896557 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 07:32:09.896637 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:10.897045 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 07:32:10.897127 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 07:32:11.902416 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 07:32:11.902609 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0902 07:32:11.902655 16 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0902 07:32:11.927365 16 daemon_set.go:102] Updating DaemonSet daemon-set
  I0902 07:32:12.971945 16 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0902 07:32:13.003032 16 daemon_set.go:102] Updating DaemonSet daemon-set
  I0902 07:32:13.003131 16 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0902 07:32:20.011709 16 daemon_set.go:1198] Pod daemon-set-rrk5n is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 07:32:20.047
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7634, will wait for the garbage collector to delete the pods @ 09/02/25 07:32:20.047
  I0902 07:32:20.122809 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.65522ms
  I0902 07:32:20.323713 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.828117ms
  I0902 07:32:22.933757 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 07:32:22.933844 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 07:32:22.951127 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7446"},"items":null}

  I0902 07:32:22.957736 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7446"},"items":null}

  I0902 07:32:23.018852 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7634" for this suite. @ 09/02/25 07:32:23.029
• [32.296 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/02/25 07:32:23.044
  I0902 07:32:23.044191 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 07:32:23.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:32:23.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:32:23.093
  STEP: Creating pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851 @ 09/02/25 07:32:23.098
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 07:32:25.137
  I0902 07:32:25.143827 16 container_probe.go:1749] Initial restart count of pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a is 0
  I0902 07:32:25.151613 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:27.165120 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:29.175498 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:31.185158 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:33.194754 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:35.208478 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:37.218845 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:39.233781 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:41.246400 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:43.255797 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:45.267358 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:47.277452 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:49.289745 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:51.303608 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:53.317256 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:55.333648 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:57.351204 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:32:59.359602 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:01.371903 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:03.383817 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:05.393504 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:07.417396 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:09.430121 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:11.445585 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:13.454072 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:15.464403 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:17.474405 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:19.485120 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:21.494604 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:23.505359 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:25.514426 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:27.524687 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:29.534360 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:31.545947 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:33.557070 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:35.573766 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:37.583640 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:39.598291 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:41.608458 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:43.617711 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:45.628387 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:47.640575 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:49.650163 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:51.660310 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:53.669620 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:55.677456 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:57.685058 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:33:59.695649 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:01.711221 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:03.727208 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:05.741751 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:07.751150 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:09.762835 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:11.777847 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:13.791179 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:15.813549 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:17.823443 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:19.836226 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:21.845948 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:23.917977 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:25.932156 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:27.948961 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:29.961973 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:31.972779 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:33.984714 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:35.992787 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:38.001401 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:40.010847 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:42.031755 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:44.046916 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:46.060472 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:48.073683 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:50.086073 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:52.094747 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:54.108196 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:56.118363 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:34:58.127480 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:00.138261 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:02.149274 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:04.161826 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:06.174282 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:08.185859 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:10.199456 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:12.209025 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:14.218600 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:16.228028 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:18.237895 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:20.250304 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:22.260634 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:24.271080 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:26.279336 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:28.290053 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:30.304622 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:32.316826 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:34.328506 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:36.339369 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:38.352082 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:40.361580 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:42.375146 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:44.394483 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:46.408098 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:48.420055 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:50.433042 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:52.445207 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:54.453550 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:56.465828 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:35:58.477576 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:00.486170 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:02.495369 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:04.506177 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:06.515215 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:08.522336 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:10.532128 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:12.542277 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:14.552303 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:16.562864 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:18.572482 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:20.581286 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:22.590875 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  I0902 07:36:24.600261 16 container_probe.go:1759] Get pod liveness-88bf5318-a0e1-4933-b681-52d0e652c08a in namespace container-probe-3851
  STEP: deleting the pod @ 09/02/25 07:36:26.601
  I0902 07:36:26.632037 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3851" for this suite. @ 09/02/25 07:36:26.662
• [243.634 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/02/25 07:36:26.678
  I0902 07:36:26.679261 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:36:26.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:36:26.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:36:26.729
  STEP: Creating projection with secret that has name projected-secret-test-map-683d5391-103c-4fa9-adad-a6bf177d0e56 @ 09/02/25 07:36:26.736
  STEP: Creating a pod to test consume secrets @ 09/02/25 07:36:26.744
  STEP: Saw pod success @ 09/02/25 07:36:30.803
  I0902 07:36:30.818130 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-secrets-0b59ba8d-ce7e-455b-b056-f2b8f9a358c9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 07:36:30.879
  I0902 07:36:30.949075 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4649" for this suite. @ 09/02/25 07:36:30.968
• [4.332 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/02/25 07:36:31.01
  I0902 07:36:31.011096 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 07:36:31.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:36:31.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:36:31.053
  STEP: create the container @ 09/02/25 07:36:31.069
  W0902 07:36:31.102206      16 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/02/25 07:36:31.102
  STEP: get the container status @ 09/02/25 07:36:38.19
  STEP: the container should be terminated @ 09/02/25 07:36:38.199
  STEP: the termination message should be set @ 09/02/25 07:36:38.199
  I0902 07:36:38.199190 16 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/02/25 07:36:38.199
  I0902 07:36:38.253432 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3408" for this suite. @ 09/02/25 07:36:38.266
• [7.273 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/02/25 07:36:38.284
  I0902 07:36:38.284730 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 07:36:38.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:36:38.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:36:38.327
  STEP: Creating a cronjob @ 09/02/25 07:36:38.334
  STEP: Ensuring more than one job is running at a time @ 09/02/25 07:36:38.356
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/02/25 07:38:00.367
  STEP: Removing cronjob @ 09/02/25 07:38:00.379
  I0902 07:38:00.402103 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8582" for this suite. @ 09/02/25 07:38:00.416
• [82.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/02/25 07:38:00.44
  I0902 07:38:00.440419 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-webhook @ 09/02/25 07:38:00.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:00.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:00.56
  STEP: Setting up server cert @ 09/02/25 07:38:00.568
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/25 07:38:01.033
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/25 07:38:01.046
  STEP: Wait for the deployment to be ready @ 09/02/25 07:38:01.078
  I0902 07:38:01.102763 16 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 07:38:03.132
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 07:38:03.156
  I0902 07:38:04.157738 16 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0902 07:38:04.175226 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Creating a v1 custom resource @ 09/02/25 07:38:07.034
  STEP: Create a v2 custom resource @ 09/02/25 07:38:07.073
  STEP: List CRs in v1 @ 09/02/25 07:38:07.284
  STEP: List CRs in v2 @ 09/02/25 07:38:07.292
  I0902 07:38:08.001655 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2674" for this suite. @ 09/02/25 07:38:08.012
• [7.606 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/02/25 07:38:08.049
  I0902 07:38:08.050253 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:38:08.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:08.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:08.115
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 07:38:08.124
  STEP: Saw pod success @ 09/02/25 07:38:12.192
  I0902 07:38:12.202943 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-c71e4bff-08bf-462d-ab64-c33a6d2a3108 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 07:38:12.237
  I0902 07:38:12.280608 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6821" for this suite. @ 09/02/25 07:38:12.294
• [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/02/25 07:38:12.316
  I0902 07:38:12.316160 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pv @ 09/02/25 07:38:12.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:12.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:12.36
  STEP: Creating initial PV and PVC @ 09/02/25 07:38:12.367
  I0902 07:38:12.367929 16 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2567" @ 09/02/25 07:38:12.419
  STEP: Listing PVCs in namespace "pv-2567" @ 09/02/25 07:38:12.429
  STEP: Patching the PV "pv-2567-9wg24" @ 09/02/25 07:38:12.439
  STEP: Patching the PVC "pvc-2q4n8" @ 09/02/25 07:38:12.486
  STEP: Getting PV "pv-2567-9wg24" @ 09/02/25 07:38:12.508
  STEP: Getting PVC "pvc-2q4n8" @ 09/02/25 07:38:12.517
  STEP: Deleting PVC "pvc-2q4n8" @ 09/02/25 07:38:12.525
  STEP: Confirm deletion of PVC "pvc-2q4n8" @ 09/02/25 07:38:12.54
  STEP: Deleting PV "pv-2567-9wg24" @ 09/02/25 07:38:14.57
  STEP: Confirm deletion of PV "pv-2567-9wg24" @ 09/02/25 07:38:14.585
  STEP: Recreating another PV & PVC @ 09/02/25 07:38:16.604
  I0902 07:38:16.604505 16 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2567-6jx8d" @ 09/02/25 07:38:16.632
  STEP: Updating the PVC "pvc-6brdv" @ 09/02/25 07:38:16.699
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-6brdv=updated" @ 09/02/25 07:38:16.723
  STEP: Deleting PVC "pvc-6brdv" via DeleteCollection @ 09/02/25 07:38:16.73
  STEP: Confirm deletion of PVC "pvc-6brdv" @ 09/02/25 07:38:16.75
  STEP: Deleting PV "pv-2567-6jx8d" via DeleteCollection @ 09/02/25 07:38:18.771
  STEP: Confirm deletion of PV "pv-2567-6jx8d" @ 09/02/25 07:38:18.794
  I0902 07:38:20.814963 16 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0902 07:38:20.815073 16 pv.go:205] Deleting PersistentVolumeClaim "pvc-6brdv"
  I0902 07:38:20.822794 16 pv.go:193] Deleting PersistentVolume "pv-2567-6jx8d"
  I0902 07:38:20.830430 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2567" for this suite. @ 09/02/25 07:38:20.842
• [8.542 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/02/25 07:38:20.858
  I0902 07:38:20.858348 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 07:38:20.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:20.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:20.894
  STEP: Deleting RuntimeClass runtimeclass-3084-delete-me @ 09/02/25 07:38:20.917
  STEP: Waiting for the RuntimeClass to disappear @ 09/02/25 07:38:20.93
  I0902 07:38:20.960441 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3084" for this suite. @ 09/02/25 07:38:20.971
• [0.127 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/02/25 07:38:20.986
  I0902 07:38:20.986238 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 07:38:20.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:21.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:21.023
  STEP: Creating configMap that has name configmap-test-emptyKey-a8dc1032-f0da-4fd4-9cf4-c9ddf2d30a83 @ 09/02/25 07:38:21.03
  I0902 07:38:21.035125 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7969" for this suite. @ 09/02/25 07:38:21.071
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/02/25 07:38:21.086
  I0902 07:38:21.086858 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:38:21.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:21.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:21.123
  STEP: Creating configMap with name projected-configmap-test-volume-e7b4d29a-94ad-443d-b13f-69d984799b60 @ 09/02/25 07:38:21.129
  STEP: Creating a pod to test consume configMaps @ 09/02/25 07:38:21.141
  STEP: Saw pod success @ 09/02/25 07:38:25.196
  I0902 07:38:25.208626 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-026a4be9-38a2-433d-bb3f-dba4b5f63085 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:38:25.23
  I0902 07:38:25.269564 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4052" for this suite. @ 09/02/25 07:38:25.281
• [4.208 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/02/25 07:38:25.296
  I0902 07:38:25.296650 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 07:38:25.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:25.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:25.339
  STEP: creating a secret @ 09/02/25 07:38:25.346
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/02/25 07:38:25.357
  STEP: patching the secret @ 09/02/25 07:38:25.365
  STEP: deleting the secret using a LabelSelector @ 09/02/25 07:38:25.387
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/02/25 07:38:25.41
  I0902 07:38:25.417971 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6347" for this suite. @ 09/02/25 07:38:25.428
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/02/25 07:38:25.446
  I0902 07:38:25.446713 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 07:38:25.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:25.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:25.482
  STEP: create the container @ 09/02/25 07:38:25.49
  W0902 07:38:25.515038      16 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/02/25 07:38:25.515
  STEP: get the container status @ 09/02/25 07:38:29.563
  STEP: the container should be terminated @ 09/02/25 07:38:29.57
  STEP: the termination message should be set @ 09/02/25 07:38:29.57
  I0902 07:38:29.570400 16 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/02/25 07:38:29.57
  I0902 07:38:29.619013 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7120" for this suite. @ 09/02/25 07:38:29.631
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/02/25 07:38:29.657
  I0902 07:38:29.657996 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 07:38:29.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:29.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:29.701
  STEP: Creating secret with name secret-test-cb178f9d-6285-4a03-94fd-74c8f783140c @ 09/02/25 07:38:29.708
  STEP: Creating a pod to test consume secrets @ 09/02/25 07:38:29.718
  STEP: Saw pod success @ 09/02/25 07:38:33.787
  I0902 07:38:33.798399 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-2357edc3-c007-45ba-87e6-eafd81c98402 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 07:38:33.832
  I0902 07:38:33.881480 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1295" for this suite. @ 09/02/25 07:38:33.898
• [4.263 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 09/02/25 07:38:33.924
  I0902 07:38:33.924305 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 07:38:33.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:33.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:33.974
  STEP: Creating a Serviceaccount "e2e-sa-q8ztz" in namespace "svcaccounts-8783" @ 09/02/25 07:38:33.981
  STEP: Creating a ServiceaccountToken "e2e-sa-q8ztz" in namespace "svcaccounts-8783" @ 09/02/25 07:38:33.993
  STEP: Creating a TokenReview for "e2e-sa-q8ztz" in namespace "svcaccounts-8783" @ 09/02/25 07:38:34.008
  I0902 07:38:34.014084 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8783" for this suite. @ 09/02/25 07:38:34.026
• [0.118 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/02/25 07:38:34.045
  I0902 07:38:34.045326 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 07:38:34.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:34.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:34.09
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/02/25 07:38:34.105
  STEP: Saw pod success @ 09/02/25 07:38:38.158
  I0902 07:38:38.170326 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-296948be-b24b-437a-bebd-b2a4870306bf container test-container: <nil>
  STEP: delete the pod @ 09/02/25 07:38:38.186
  I0902 07:38:38.237803 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8908" for this suite. @ 09/02/25 07:38:38.249
• [4.242 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/02/25 07:38:38.287
  I0902 07:38:38.287727 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename containers @ 09/02/25 07:38:38.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:38.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:38.331
  I0902 07:38:40.413262 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6455" for this suite. @ 09/02/25 07:38:40.421
• [2.149 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/02/25 07:38:40.438
  I0902 07:38:40.438352 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 07:38:40.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:38:40.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:38:40.479
  I0902 07:38:40.506385 16 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0902 07:38:45.518354 16 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 07:38:45.518
  I0902 07:38:45.518573 16 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0902 07:38:47.529141 16 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0902 07:38:47.550460 16 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0902 07:38:49.569813 16 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0902 07:38:49.585747 16 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0902 07:38:49.602619 16 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0902 07:38:49.629151 16 deployment.go:314] Updating deployment test-rollover-deployment
  I0902 07:38:49.629225 16 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0902 07:38:51.648505 16 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0902 07:38:51.664778 16 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0902 07:38:51.678153 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:38:51.678385 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:38:53.701403 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:38:53.701875 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:38:55.694848 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:38:55.695005 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:38:57.696056 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:38:57.696188 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:38:59.696883 16 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0902 07:38:59.697077 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 7, 38, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 7, 38, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0902 07:39:01.697188 16 deployment.go:95] 
  I0902 07:39:01.697891 16 deployment.go:974] Ensure that both old replica sets have no replicas
  I0902 07:39:01.723088 16 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55aa1990-04b6-48e1-a541-55a2f85b4772",
      ResourceVersion: (string) (len=4) "8893",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 07:39:01.743370 16 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7365c8a5-0ed7-4443-b190-343240de2889",
      ResourceVersion: (string) (len=4) "8881",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "55aa1990-04b6-48e1-a541-55a2f85b4772",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 61 61 31 39  39 30 2d 30 34 62 36 2d  |\"55aa1990-04b6-|
              00000120  34 38 65 31 2d 61 35 34  31 2d 35 35 61 32 66 38  |48e1-a541-55a2f8|
              00000130  35 62 34 37 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5b4772\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:39:01.757450 16 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0902 07:39:01.760373 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d89af219-18f5-41d5-9286-467398cf2770",
      ResourceVersion: (string) (len=4) "8892",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "55aa1990-04b6-48e1-a541-55a2f85b4772",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 35 61 61 31 39 39 30  2d 30 34 62 36 2d 34 38  |55aa1990-04b6-48|
              000000c0  65 31 2d 61 35 34 31 2d  35 35 61 32 66 38 35 62  |e1-a541-55a2f85b|
              000000d0  34 37 37 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4772\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:39:01.778345 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99c06ebe-cb95-48e4-adba-f99d66cdde32",
      ResourceVersion: (string) (len=4) "8843",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "55aa1990-04b6-48e1-a541-55a2f85b4772",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 61 61 31 39  39 30 2d 30 34 62 36 2d  |\"55aa1990-04b6-|
              00000120  34 38 65 31 2d 61 35 34  31 2d 35 35 61 32 66 38  |48e1-a541-55a2f8|
              00000130  35 62 34 37 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5b4772\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 07:39:01.802001 16 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-w6mwr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-w6mwr",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-1113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b27f586-bebd-4112-99b6-f742053d9dc8",
      ResourceVersion: (string) (len=4) "8857",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "7365c8a5-0ed7-4443-b190-343240de2889",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  36 35 63 38 61 35 2d 30  |d\":\"7365c8a5-0|
              00000090  65 64 37 2d 34 34 34 33  2d 62 31 39 30 2d 33 34  |ed7-4443-b190-34|
              000000a0  33 32 34 30 64 65 32 38  38 39 5c 22 7d 22 3a 7b  |3240de2889\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  39 32 5c 22 7d 22 3a 7b  |.233.66.92\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25q6c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25q6c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892395529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=12) "10.233.66.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892395529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892395530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://aa50af785b70cac2486feb7e0b9f2564366feeb298aec45d5fc8ddea47b70500",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-25q6c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 07:39:01.807884 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1113" for this suite. @ 09/02/25 07:39:01.825
• [21.409 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/02/25 07:39:01.848
  I0902 07:39:01.848570 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 07:39:01.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:39:01.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:39:01.886
  STEP: apply creating a deployment @ 09/02/25 07:39:01.892
  I0902 07:39:01.926320 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6054" for this suite. @ 09/02/25 07:39:01.935
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/02/25 07:39:01.958
  I0902 07:39:01.958232 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 07:39:01.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:39:01.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:39:02.004
  STEP: Create set of pods @ 09/02/25 07:39:02.009
  I0902 07:39:02.030965 16 pods.go:871] created test-pod-1
  I0902 07:39:02.047857 16 pods.go:871] created test-pod-2
  I0902 07:39:02.074640 16 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/02/25 07:39:02.074
  STEP: waiting for all pods to be deleted @ 09/02/25 07:39:04.167
  I0902 07:39:04.178055 16 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0902 07:39:05.215471 16 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0902 07:39:06.188786 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5660" for this suite. @ 09/02/25 07:39:06.201
• [4.259 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/02/25 07:39:06.218
  I0902 07:39:06.218753 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 07:39:06.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:39:06.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:39:06.273
  STEP: Creating pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974 @ 09/02/25 07:39:06.28
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 07:39:08.336
  I0902 07:39:08.344041 16 container_probe.go:1749] Initial restart count of pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd is 0
  I0902 07:39:08.351850 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:10.370356 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:12.378871 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:14.391936 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:16.400930 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:18.415022 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:20.423597 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:22.434786 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:24.447779 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:26.460600 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:28.479345 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:30.489194 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:32.501224 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:34.511079 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:36.520451 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:38.530488 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:40.538862 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:42.549690 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:44.560769 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:46.570732 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:48.578309 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:50.587839 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:52.596610 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:54.604993 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:56.614432 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:58.623900 16 container_probe.go:1759] Get pod busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd in namespace container-probe-9974
  I0902 07:39:58.623991 16 container_probe.go:1763] Restart count of pod container-probe-9974/busybox-d89a04e5-9b9f-47e5-804d-67e68847e6dd is now 1 (50.279070727s elapsed)
  STEP: deleting the pod @ 09/02/25 07:39:58.624
  I0902 07:39:58.665886 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9974" for this suite. @ 09/02/25 07:39:58.679
• [52.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/02/25 07:39:58.707
  I0902 07:39:58.707108 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename events @ 09/02/25 07:39:58.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:39:58.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:39:58.786
  STEP: Create set of events @ 09/02/25 07:39:58.797
  I0902 07:39:58.813972 16 core_events.go:198] created test-event-1
  I0902 07:39:58.824361 16 core_events.go:198] created test-event-2
  I0902 07:39:58.835997 16 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/02/25 07:39:58.836
  STEP: delete collection of events @ 09/02/25 07:39:58.846
  I0902 07:39:58.846604 16 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/02/25 07:39:58.901
  I0902 07:39:58.901479 16 core_events.go:230] requesting list of events to confirm quantity
  I0902 07:39:58.909800 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7418" for this suite. @ 09/02/25 07:39:58.918
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/02/25 07:39:58.948
  I0902 07:39:58.948927 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 07:39:58.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:39:58.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:39:59.012
  STEP: creating the pod with failed condition @ 09/02/25 07:39:59.018
  STEP: updating the pod @ 09/02/25 07:41:59.049
  I0902 07:41:59.602605 16 pod_client.go:173] Successfully updated pod "var-expansion-3f7a91a8-1ddc-4ef1-a72c-bee4afc3cd5f"
  STEP: waiting for pod running @ 09/02/25 07:41:59.603
  STEP: deleting the pod gracefully @ 09/02/25 07:42:01.625
  I0902 07:42:01.626324 16 delete.go:62] Deleting pod "var-expansion-3f7a91a8-1ddc-4ef1-a72c-bee4afc3cd5f" in namespace "var-expansion-3655"
  I0902 07:42:01.652350 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-3f7a91a8-1ddc-4ef1-a72c-bee4afc3cd5f" to be fully deleted
  I0902 07:42:35.874087 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3655" for this suite. @ 09/02/25 07:42:35.892
• [156.963 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/02/25 07:42:35.914
  I0902 07:42:35.914807 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 07:42:35.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:42:35.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:42:35.954
  I0902 07:42:35.960048 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  I0902 07:42:42.526787 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7956" for this suite. @ 09/02/25 07:42:42.535
• [6.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/02/25 07:42:42.553
  I0902 07:42:42.553860 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:42:42.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:42:42.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:42:42.589
  STEP: Creating a pod to test downward api env vars @ 09/02/25 07:42:42.6
  STEP: Saw pod success @ 09/02/25 07:42:46.795
  I0902 07:42:46.813024 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downward-api-1d6167cc-35f3-4eaf-954f-b5d9ee352ee5 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:42:46.858
  I0902 07:42:46.895329 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5659" for this suite. @ 09/02/25 07:42:46.905
• [4.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/02/25 07:42:46.966
  I0902 07:42:46.967048 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 07:42:46.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:42:47.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:42:47.04
  I0902 07:42:47.050632 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/25 07:42:50.388
  I0902 07:42:50.389926 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-6727 --namespace=crd-publish-openapi-6727 create -f -'
  I0902 07:42:50.773291 16 builder.go:146] stderr: ""
  I0902 07:42:50.773487 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-95-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0902 07:42:50.773858 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-6727 --namespace=crd-publish-openapi-6727 delete e2e-test-crd-publish-openapi-95-crds test-cr'
  I0902 07:42:51.017969 16 builder.go:146] stderr: ""
  I0902 07:42:51.018053 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-95-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0902 07:42:51.018398 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-6727 --namespace=crd-publish-openapi-6727 apply -f -'
  I0902 07:42:51.204493 16 builder.go:146] stderr: ""
  I0902 07:42:51.204839 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-95-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0902 07:42:51.205058 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-6727 --namespace=crd-publish-openapi-6727 delete e2e-test-crd-publish-openapi-95-crds test-cr'
  I0902 07:42:51.408467 16 builder.go:146] stderr: ""
  I0902 07:42:51.408569 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-95-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/02/25 07:42:51.408
  I0902 07:42:51.409131 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-6727 explain e2e-test-crd-publish-openapi-95-crds'
  I0902 07:42:51.571143 16 builder.go:146] stderr: ""
  I0902 07:42:51.571562 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-95-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0902 07:42:54.173992 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6727" for this suite. @ 09/02/25 07:42:54.194
• [7.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/02/25 07:42:54.209
  I0902 07:42:54.209774 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 07:42:54.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:42:54.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:42:54.244
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5282 @ 09/02/25 07:42:54.252
  STEP: changing the ExternalName service to type=NodePort @ 09/02/25 07:42:54.262
  STEP: creating replication controller externalname-service in namespace services-5282 @ 09/02/25 07:42:54.314
  I0902 07:42:54.329426      16 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5282, replica count: 2
  I0902 07:42:57.382219      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 07:43:00.382558      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 07:43:03.384907      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 07:43:06.385424      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 07:43:09.387875      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 07:43:12.388940      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 07:43:12.389346 16 resource.go:361] Creating new exec pod
  I0902 07:43:15.442096 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-5282 exec execpodbzk58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0902 07:43:15.841509 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.13.33) 80 port [tcp/http] succeeded!\n"
  I0902 07:43:15.841673 16 builder.go:147] stdout: "externalname-service-d49vz"
  I0902 07:43:15.842100 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-5282 exec execpodbzk58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.33 80'
  I0902 07:43:16.099108 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.33 80\nConnection to 10.233.13.33 80 port [tcp/http] succeeded!\n"
  I0902 07:43:16.099252 16 builder.go:147] stdout: "externalname-service-5gs2s"
  I0902 07:43:16.099899 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-5282 exec execpodbzk58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.5 30989'
  I0902 07:43:16.358713 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.5 30989\nConnection to 192.168.121.5 30989 port [tcp/*] succeeded!\n"
  I0902 07:43:16.358830 16 builder.go:147] stdout: "externalname-service-5gs2s"
  I0902 07:43:16.359096 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-5282 exec execpodbzk58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.152 30989'
  I0902 07:43:16.606566 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.152 30989\nConnection to 192.168.121.152 30989 port [tcp/*] succeeded!\n"
  I0902 07:43:16.606647 16 builder.go:147] stdout: "externalname-service-5gs2s"
  I0902 07:43:16.606830 16 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0902 07:43:16.656668 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5282" for this suite. @ 09/02/25 07:43:16.665
• [22.469 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/02/25 07:43:16.679
  I0902 07:43:16.679548 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 07:43:16.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:43:16.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:43:16.723
  STEP: Creating a pod to test substitution in container's args @ 09/02/25 07:43:16.73
  STEP: Saw pod success @ 09/02/25 07:43:20.777
  I0902 07:43:20.783484 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod var-expansion-f6c33f5d-2d83-497d-a700-862a53daf689 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:43:20.84
  I0902 07:43:20.886403 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5858" for this suite. @ 09/02/25 07:43:20.898
• [4.232 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/02/25 07:43:20.911
  I0902 07:43:20.911677 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 07:43:20.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:43:20.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:43:20.947
  I0902 07:43:21.015797 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1195" for this suite. @ 09/02/25 07:43:21.025
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/02/25 07:43:21.042
  I0902 07:43:21.042383 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sysctl @ 09/02/25 07:43:21.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:43:21.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:43:21.076
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/02/25 07:43:21.085
  I0902 07:43:21.099046 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6436" for this suite. @ 09/02/25 07:43:21.125
• [0.099 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/02/25 07:43:21.14
  I0902 07:43:21.140984 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 07:43:21.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:43:21.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:43:21.179
  STEP: Creating a test headless service @ 09/02/25 07:43:21.185
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-5444.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-5444.svc.cluster.local;sleep 1; done
   @ 09/02/25 07:43:21.203
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5444.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5444.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5444.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5444.svc.cluster.local;sleep 1; done
   @ 09/02/25 07:43:21.203
  STEP: creating a pod to probe DNS @ 09/02/25 07:43:21.203
  STEP: submitting the pod to kubernetes @ 09/02/25 07:43:21.203
  STEP: retrieving the pod @ 09/02/25 07:43:53.453
  STEP: looking for the results for each expected name from probers @ 09/02/25 07:43:53.463
  I0902 07:43:53.546212 16 dns_common.go:546] DNS probes using dns-5444/dns-test-88b7ecc8-2f98-4922-a132-09710cb7f37b succeeded

  STEP: deleting the pod @ 09/02/25 07:43:53.546
  STEP: deleting the test headless service @ 09/02/25 07:43:53.573
  I0902 07:43:53.624412 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5444" for this suite. @ 09/02/25 07:43:53.637
• [32.512 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/02/25 07:43:53.659
  I0902 07:43:53.659271 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 07:43:53.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:43:53.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:43:53.696
  I0902 07:43:53.705443 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/02/25 07:43:56.183
  I0902 07:43:56.183970 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 create -f -'
  I0902 07:43:56.571807 16 builder.go:146] stderr: ""
  I0902 07:43:56.571888 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4426-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0902 07:43:56.572272 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 delete e2e-test-crd-publish-openapi-4426-crds test-foo'
  I0902 07:43:56.870671 16 builder.go:146] stderr: ""
  I0902 07:43:56.871171 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4426-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0902 07:43:56.871841 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 apply -f -'
  I0902 07:43:57.075822 16 builder.go:146] stderr: ""
  I0902 07:43:57.076724 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4426-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0902 07:43:57.077667 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 delete e2e-test-crd-publish-openapi-4426-crds test-foo'
  I0902 07:43:57.349770 16 builder.go:146] stderr: ""
  I0902 07:43:57.350499 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4426-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/02/25 07:43:57.35
  I0902 07:43:57.351859 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 create -f -'
  I0902 07:43:57.614894 16 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/02/25 07:43:57.615
  I0902 07:43:57.615658 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 create -f -'
  I0902 07:43:57.775618 16 builder.go:135] rc: 1
  I0902 07:43:57.776102 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 apply -f -'
  I0902 07:43:57.970935 16 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/02/25 07:43:57.971
  I0902 07:43:57.971959 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 create -f -'
  I0902 07:43:58.136933 16 builder.go:135] rc: 1
  I0902 07:43:58.137751 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 --namespace=crd-publish-openapi-4799 apply -f -'
  I0902 07:43:58.366306 16 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/02/25 07:43:58.367
  I0902 07:43:58.369400 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 explain e2e-test-crd-publish-openapi-4426-crds'
  I0902 07:43:58.545068 16 builder.go:146] stderr: ""
  I0902 07:43:58.545177 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4426-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/02/25 07:43:58.545
  I0902 07:43:58.546283 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 explain e2e-test-crd-publish-openapi-4426-crds.metadata'
  I0902 07:43:58.767510 16 builder.go:146] stderr: ""
  I0902 07:43:58.767843 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4426-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0902 07:43:58.768484 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 explain e2e-test-crd-publish-openapi-4426-crds.spec'
  I0902 07:43:58.958713 16 builder.go:146] stderr: ""
  I0902 07:43:58.958790 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4426-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0902 07:43:58.959062 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 explain e2e-test-crd-publish-openapi-4426-crds.spec.bars'
  I0902 07:43:59.164691 16 builder.go:146] stderr: ""
  I0902 07:43:59.164822 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4426-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/02/25 07:43:59.165
  I0902 07:43:59.165737 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-4799 explain e2e-test-crd-publish-openapi-4426-crds.spec.bars2'
  I0902 07:43:59.362715 16 builder.go:135] rc: 1
  I0902 07:44:01.695309 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4799" for this suite. @ 09/02/25 07:44:01.721
• [8.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/02/25 07:44:01.743
  I0902 07:44:01.743352 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 07:44:01.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:01.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:01.788
  STEP: Creating configMap with name projected-configmap-test-volume-0b20f1a1-45b4-4d4e-bd28-980111d08656 @ 09/02/25 07:44:01.793
  STEP: Creating a pod to test consume configMaps @ 09/02/25 07:44:01.806
  STEP: Saw pod success @ 09/02/25 07:44:05.907
  I0902 07:44:05.916161 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-7a92ffd4-a1a0-4143-8dd9-2f5f4fdc4012 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 07:44:05.935
  I0902 07:44:05.974564 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7122" for this suite. @ 09/02/25 07:44:05.984
• [4.255 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/02/25 07:44:05.998
  I0902 07:44:05.998592 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 07:44:06.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:06.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:06.04
  STEP: Creating a ResourceQuota @ 09/02/25 07:44:06.046
  STEP: Getting a ResourceQuota @ 09/02/25 07:44:06.057
  STEP: Updating a ResourceQuota @ 09/02/25 07:44:06.07
  STEP: Verifying a ResourceQuota was modified @ 09/02/25 07:44:06.084
  STEP: Deleting a ResourceQuota @ 09/02/25 07:44:06.092
  STEP: Verifying the deleted ResourceQuota @ 09/02/25 07:44:06.108
  I0902 07:44:06.115226 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5682" for this suite. @ 09/02/25 07:44:06.126
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/02/25 07:44:06.144
  I0902 07:44:06.144187 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 07:44:06.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:06.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:06.179
  STEP: Creating a pod to test substitution in volume subpath @ 09/02/25 07:44:06.185
  STEP: Saw pod success @ 09/02/25 07:44:10.239
  I0902 07:44:10.248135 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod var-expansion-60202ba0-335e-458b-ae86-1f4636471286 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:44:10.264
  I0902 07:44:10.299435 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3993" for this suite. @ 09/02/25 07:44:10.308
• [4.180 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/02/25 07:44:10.325
  I0902 07:44:10.325801 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 07:44:10.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:10.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:10.36
  STEP: Creating secret with name secret-test-cffffd1e-0d25-4810-adda-7d843322ffb5 @ 09/02/25 07:44:10.369
  STEP: Creating a pod to test consume secrets @ 09/02/25 07:44:10.379
  STEP: Saw pod success @ 09/02/25 07:44:14.438
  I0902 07:44:14.445971 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-e65b6f3a-4e4f-4917-836c-365a4fabfb17 container secret-env-test: <nil>
  STEP: delete the pod @ 09/02/25 07:44:14.46
  I0902 07:44:14.494639 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4612" for this suite. @ 09/02/25 07:44:14.504
• [4.196 seconds]
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/02/25 07:44:14.521
  I0902 07:44:14.521993 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 07:44:14.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:14.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:14.561
  STEP: Create a pod @ 09/02/25 07:44:14.567
  STEP: patching /status @ 09/02/25 07:44:16.616
  I0902 07:44:16.642044 16 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0902 07:44:16.642276 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6514" for this suite. @ 09/02/25 07:44:16.651
• [2.144 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 09/02/25 07:44:16.666
  I0902 07:44:16.666557 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 07:44:16.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:16.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:16.706
  STEP: creating a collection of services @ 09/02/25 07:44:16.712
  I0902 07:44:16.713059 16 service.go:3635] Creating e2e-svc-a-8667p
  I0902 07:44:16.747049 16 service.go:3635] Creating e2e-svc-b-jndtj
  I0902 07:44:16.785123 16 service.go:3635] Creating e2e-svc-c-lsr4m
  STEP: deleting service collection @ 09/02/25 07:44:16.83
  I0902 07:44:16.917303 16 service.go:3670] Collection of services has been deleted
  I0902 07:44:16.917605 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6895" for this suite. @ 09/02/25 07:44:16.928
• [0.275 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/02/25 07:44:16.942
  I0902 07:44:16.942734 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 07:44:16.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:16.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:16.978
  STEP: Performing setup for networking test in namespace pod-network-test-8431 @ 09/02/25 07:44:16.984
  STEP: creating a selector @ 09/02/25 07:44:16.984
  STEP: Creating the service pods in kubernetes @ 09/02/25 07:44:16.984
  I0902 07:44:16.984404 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/02/25 07:44:41.621
  I0902 07:44:43.750137 16 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0902 07:44:43.750230 16 utils.go:496] Going to poll 10.233.65.41 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0902 07:44:43.759758 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.41 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8431 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:44:43.759837 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 07:44:43.759965 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8431/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.41+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 07:44:44.883601 16 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0902 07:44:44.883675 16 utils.go:496] Going to poll 10.233.64.133 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0902 07:44:44.894180 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.133 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8431 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:44:44.894385 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 07:44:44.894484 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8431/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.133+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 07:44:45.986055 16 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0902 07:44:45.986128 16 utils.go:496] Going to poll 10.233.66.4 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0902 07:44:45.994714 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.4 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8431 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:44:45.995263 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 07:44:45.995741 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8431/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.4+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 07:44:47.094395 16 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0902 07:44:47.095358 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8431" for this suite. @ 09/02/25 07:44:47.107
• [30.183 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/02/25 07:44:47.125
  I0902 07:44:47.125720 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:44:47.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:47.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:47.175
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 07:44:47.183
  STEP: Saw pod success @ 09/02/25 07:44:51.25
  I0902 07:44:51.258684 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-97923af2-74f2-4efc-b98e-f019cf83617a container client-container: <nil>
  STEP: delete the pod @ 09/02/25 07:44:51.275
  I0902 07:44:51.349652 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8215" for this suite. @ 09/02/25 07:44:51.382
• [4.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/02/25 07:44:51.413
  I0902 07:44:51.413513 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename init-container @ 09/02/25 07:44:51.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:44:51.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:44:51.465
  STEP: creating the pod @ 09/02/25 07:44:51.472
  I0902 07:44:51.472625 16 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0902 07:45:34.879180 16 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-47b91fba-9b01-4057-ae25-cfcf1508a774", GenerateName:"", Namespace:"init-container-5297", SelfLink:"", UID:"b09c48c9-a937-43f6-8974-c9c0f9840e9e", ResourceVersion:"10594", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"472584365"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a44468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 7, 45, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a44498), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-kv4j6", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003dd6560), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kv4j6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kv4j6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kv4j6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003c3f380), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"noo9iech3thi-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003c7b320), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003c3f410)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003c3f430)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003c3f438), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003c3f43c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000cd5d50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 44, 53, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.152", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.152"}}, PodIP:"10.233.66.100", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.100"}}, StartTime:time.Date(2025, time.September, 2, 7, 44, 51, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002503f0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002504d0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://6b76be81c43ff6507e3cb8c15c7b46fab5a48ef09cbc0ca5a96fdcdb7dd6d9a0", Started:(*bool)(0xc003c3f4ea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-kv4j6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000cd5d90)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003dd65c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003c3f4fd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-kv4j6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000cd5db0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003dd65a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003c3f4b4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-kv4j6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000cd5d60)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0902 07:45:34.885679 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5297" for this suite. @ 09/02/25 07:45:34.909
• [43.513 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/02/25 07:45:34.928
  I0902 07:45:34.929081 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 07:45:34.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:45:34.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:45:34.986
  STEP: Creating a pod to test downward api env vars @ 09/02/25 07:45:34.993
  STEP: Saw pod success @ 09/02/25 07:45:39.061
  I0902 07:45:39.070216 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downward-api-62ad9a6f-2de2-4eda-880d-4840d2f5b4cd container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 07:45:39.094
  I0902 07:45:39.140836 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8200" for this suite. @ 09/02/25 07:45:39.15
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/02/25 07:45:39.166
  I0902 07:45:39.166392 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename chunking @ 09/02/25 07:45:39.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:45:39.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:45:39.209
  STEP: creating a large number of resources @ 09/02/25 07:45:39.215
  STEP: retrieving the first page @ 09/02/25 07:45:56.885
  I0902 07:45:56.931710 16 chunking.go:163] Retrieved 40/40 results with rv 11090 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/02/25 07:45:56.931
  I0902 07:46:16.970506 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:46:36.967385 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:46:56.952321 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:47:16.953980 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:47:36.952578 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:47:56.949737 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:48:16.958745 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:48:36.945718 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:48:56.944840 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:49:16.952960 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:49:36.967552 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:49:56.955135 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:50:16.948271 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:50:36.948633 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:50:56.948609 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:51:16.950778 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:51:36.956373 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:51:56.947371 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:52:16.950643 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:52:36.954145 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:52:56.947733 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:53:16.951992 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:53:36.946687 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:53:56.947761 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:54:16.953337 16 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0902 07:54:36.943194 16 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0902 07:54:36.943404 16 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/02/25 07:54:36.943
  STEP: retrieving all remaining pages @ 09/02/25 07:54:36.955
  I0902 07:54:36.969376 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0902 07:54:36.980571 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0902 07:54:36.992277 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0902 07:54:37.003562 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0902 07:54:37.017302 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0902 07:54:37.030276 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0902 07:54:37.042485 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIyMjksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0902 07:54:37.054878 16 chunking.go:221] Retrieved 40/40 results with rv 12229 and continue 
  I0902 07:54:37.056225 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5998" for this suite. @ 09/02/25 07:54:37.068
• [537.920 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/02/25 07:54:37.09
  I0902 07:54:37.090327 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 07:54:37.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:54:37.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:54:37.14
  STEP: creating the pod @ 09/02/25 07:54:37.15
  STEP: waiting for pod running @ 09/02/25 07:54:37.178
  STEP: creating a file in subpath @ 09/02/25 07:54:39.202
  I0902 07:54:39.213363 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1693 PodName:var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:54:39.213490 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 07:54:39.213722 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1693/pods/var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/02/25 07:54:39.324
  I0902 07:54:39.332776 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1693 PodName:var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 07:54:39.332932 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 07:54:39.333017 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1693/pods/var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/02/25 07:54:39.488
  I0902 07:54:40.017723 16 pod_client.go:173] Successfully updated pod "var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb"
  STEP: waiting for annotated pod running @ 09/02/25 07:54:40.017
  STEP: deleting the pod gracefully @ 09/02/25 07:54:40.026
  I0902 07:54:40.026370 16 delete.go:62] Deleting pod "var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb" in namespace "var-expansion-1693"
  I0902 07:54:40.044916 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-3defc066-1a9d-4fe5-a756-127683951ceb" to be fully deleted
  I0902 07:55:12.235141 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1693" for this suite. @ 09/02/25 07:55:12.252
• [35.189 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/02/25 07:55:12.278
  I0902 07:55:12.278748 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 07:55:12.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:55:12.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:55:12.327
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/02/25 07:55:12.333
  STEP: Saw pod success @ 09/02/25 07:55:16.394
  I0902 07:55:16.400594 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-089e0952-9881-44fb-8c6d-1b02a2b751d4 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 07:55:16.441
  I0902 07:55:16.479267 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1721" for this suite. @ 09/02/25 07:55:16.491
• [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/02/25 07:55:16.509
  I0902 07:55:16.509771 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 07:55:16.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:55:16.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:55:16.554
  STEP: Creating ReplicationController "e2e-rc-7grkw" @ 09/02/25 07:55:16.562
  I0902 07:55:16.577340 16 rc.go:792] Get Replication Controller "e2e-rc-7grkw" to confirm replicas
  I0902 07:55:17.577578 16 rc.go:792] Get Replication Controller "e2e-rc-7grkw" to confirm replicas
  I0902 07:55:17.597804 16 rc.go:801] Found 1 replicas for "e2e-rc-7grkw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-7grkw" @ 09/02/25 07:55:17.597
  STEP: Updating a scale subresource @ 09/02/25 07:55:17.61
  STEP: Verifying replicas where modified for replication controller "e2e-rc-7grkw" @ 09/02/25 07:55:17.649
  I0902 07:55:17.650192 16 rc.go:792] Get Replication Controller "e2e-rc-7grkw" to confirm replicas
  I0902 07:55:18.651200 16 rc.go:792] Get Replication Controller "e2e-rc-7grkw" to confirm replicas
  I0902 07:55:18.665551 16 rc.go:801] Found 2 replicas for "e2e-rc-7grkw" replication controller
  I0902 07:55:18.665865 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7888" for this suite. @ 09/02/25 07:55:18.698
• [2.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/02/25 07:55:18.726
  I0902 07:55:18.726598 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/02/25 07:55:18.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:55:18.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:55:18.812
  STEP: Creating two CSIDrivers @ 09/02/25 07:55:18.827
  STEP: Getting "inline-driver-c3415e89-7676-4e91-a488-cd96476ec1bc" & "inline-driver-3b85bd22-f388-4a80-9802-9dadfef1c106" @ 09/02/25 07:55:18.891
  STEP: Patching the CSIDriver "inline-driver-3b85bd22-f388-4a80-9802-9dadfef1c106" @ 09/02/25 07:55:18.912
  STEP: Updating the CSIDriver "inline-driver-3b85bd22-f388-4a80-9802-9dadfef1c106" @ 09/02/25 07:55:18.934
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4013" @ 09/02/25 07:55:18.961
  STEP: Deleting CSIDriver "inline-driver-c3415e89-7676-4e91-a488-cd96476ec1bc" @ 09/02/25 07:55:18.981
  STEP: Confirm deletion of CSIDriver "inline-driver-c3415e89-7676-4e91-a488-cd96476ec1bc" @ 09/02/25 07:55:19.023
  STEP: Deleting CSIDriver "inline-driver-3b85bd22-f388-4a80-9802-9dadfef1c106" via DeleteCollection @ 09/02/25 07:55:19.042
  STEP: Confirm deletion of CSIDriver "inline-driver-3b85bd22-f388-4a80-9802-9dadfef1c106" @ 09/02/25 07:55:19.071
  I0902 07:55:19.078242 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4013" for this suite. @ 09/02/25 07:55:19.096
• [0.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 09/02/25 07:55:19.126
  I0902 07:55:19.126225 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 07:55:19.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 07:55:19.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 07:55:19.181
  STEP: Creating service test in namespace statefulset-9201 @ 09/02/25 07:55:19.189
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/02/25 07:55:19.207
  STEP: Creating stateful set ss in namespace statefulset-9201 @ 09/02/25 07:55:19.223
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9201 @ 09/02/25 07:55:19.255
  I0902 07:55:19.321221 16 wait.go:40] Found 0 stateful pods, waiting for 1
  I0902 07:55:29.272381 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/02/25 07:55:29.272
  I0902 07:55:29.280312 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 07:55:29.612218 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 07:55:29.613187 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 07:55:29.613396 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 07:55:29.623008 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0902 07:55:39.624643 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 07:55:39.624738 16 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0902 07:55:39.728981 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999336s
  I0902 07:55:40.740795 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.924492548s
  I0902 07:55:41.753820 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.912708813s
  I0902 07:55:42.763872 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.899739047s
  I0902 07:55:43.774663 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.889414361s
  I0902 07:55:44.785837 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.878281705s
  I0902 07:55:45.798965 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.867744569s
  I0902 07:55:46.812277 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.854689423s
  I0902 07:55:47.829659 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.840834856s
  I0902 07:55:48.841319 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 823.214132ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9201 @ 09/02/25 07:55:49.842
  I0902 07:55:49.859593 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:55:50.108553 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 07:55:50.108961 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 07:55:50.108987 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 07:55:50.117419 16 wait.go:40] Found 1 stateful pods, waiting for 3
  I0902 07:56:00.122600 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 07:56:00.122694 16 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 07:56:00.122858 16 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/02/25 07:56:00.123
  STEP: Scale down will halt with unhealthy stateful pod @ 09/02/25 07:56:00.123
  I0902 07:56:00.141503 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 07:56:00.378377 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 07:56:00.378483 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 07:56:00.378820 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 07:56:00.379123 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 07:56:00.727558 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 07:56:00.727647 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 07:56:00.727671 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 07:56:00.727925 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 07:56:01.024009 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 07:56:01.024135 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 07:56:01.024186 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 07:56:01.024226 16 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0902 07:56:01.037934 16 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0902 07:56:11.057013 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 07:56:11.057205 16 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0902 07:56:11.057727 16 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0902 07:56:11.157442 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999532s
  I0902 07:56:12.171138 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.924250533s
  I0902 07:56:13.182060 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.911794336s
  I0902 07:56:14.190107 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.900803804s
  I0902 07:56:15.200671 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.892883252s
  I0902 07:56:16.211978 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.882322862s
  I0902 07:56:17.230926 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.867946581s
  I0902 07:56:18.251238 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.852040503s
  I0902 07:56:19.263732 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.831526229s
  I0902 07:56:20.277886 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 818.484268ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9201 @ 09/02/25 07:56:21.279
  I0902 07:56:21.291653 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:56:21.557447 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 07:56:21.557909 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 07:56:21.557946 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 07:56:21.558422 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:56:21.868232 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 07:56:21.868404 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 07:56:21.868455 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 07:56:21.868972 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:56:22.248760 16 builder.go:135] rc: 1
  I0902 07:56:22.248923 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: Internal error occurred: error executing command in container: container is not created or running

  error:
  exit status 1
  I0902 07:56:32.250180 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:56:32.412049 16 builder.go:135] rc: 1
  I0902 07:56:32.412232 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:56:42.415324 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:56:42.576190 16 builder.go:135] rc: 1
  I0902 07:56:42.576344 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:56:52.577616 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:56:52.790595 16 builder.go:135] rc: 1
  I0902 07:56:52.790751 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:57:02.794286 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:57:03.033448 16 builder.go:135] rc: 1
  I0902 07:57:03.033622 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:57:13.034266 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:57:13.203815 16 builder.go:135] rc: 1
  I0902 07:57:13.204050 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:57:23.206725 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:57:23.386162 16 builder.go:135] rc: 1
  I0902 07:57:23.386295 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:57:33.388104 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:57:33.568091 16 builder.go:135] rc: 1
  I0902 07:57:33.568633 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:57:43.570439 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:57:43.779725 16 builder.go:135] rc: 1
  I0902 07:57:43.780151 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:57:53.784126 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:57:53.993851 16 builder.go:135] rc: 1
  I0902 07:57:53.994351 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:58:03.994902 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:58:04.187315 16 builder.go:135] rc: 1
  I0902 07:58:04.187935 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:58:14.192149 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:58:14.387284 16 builder.go:135] rc: 1
  I0902 07:58:14.387735 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:58:24.389409 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:58:24.592330 16 builder.go:135] rc: 1
  I0902 07:58:24.592481 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:58:34.593994 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:58:34.763001 16 builder.go:135] rc: 1
  I0902 07:58:34.763098 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:58:44.764076 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:58:44.957625 16 builder.go:135] rc: 1
  I0902 07:58:44.957742 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:58:54.958865 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:58:55.124018 16 builder.go:135] rc: 1
  I0902 07:58:55.124136 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:59:05.125231 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:59:05.282385 16 builder.go:135] rc: 1
  I0902 07:59:05.282538 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:59:15.283074 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:59:15.470095 16 builder.go:135] rc: 1
  I0902 07:59:15.470240 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:59:25.471583 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:59:25.642878 16 builder.go:135] rc: 1
  I0902 07:59:25.643008 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:59:35.643957 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:59:35.849340 16 builder.go:135] rc: 1
  I0902 07:59:35.849442 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:59:45.850776 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:59:46.034119 16 builder.go:135] rc: 1
  I0902 07:59:46.034214 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 07:59:56.035765 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 07:59:56.245573 16 builder.go:135] rc: 1
  I0902 07:59:56.245815 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:00:06.246661 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:00:06.422713 16 builder.go:135] rc: 1
  I0902 08:00:06.422842 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:00:16.423722 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:00:16.611027 16 builder.go:135] rc: 1
  I0902 08:00:16.611126 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:00:26.612308 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:00:26.763098 16 builder.go:135] rc: 1
  I0902 08:00:26.763199 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:00:36.763901 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:00:36.934861 16 builder.go:135] rc: 1
  I0902 08:00:36.935013 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:00:46.939010 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:00:47.148237 16 builder.go:135] rc: 1
  I0902 08:00:47.148368 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:00:57.150328 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:00:57.318091 16 builder.go:135] rc: 1
  I0902 08:00:57.318365 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:01:07.320620 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:01:07.515261 16 builder.go:135] rc: 1
  I0902 08:01:07.515502 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:01:17.518154 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:01:17.713195 16 builder.go:135] rc: 1
  I0902 08:01:17.713787 16 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  I0902 08:01:27.717126 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-9201 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:01:27.938752 16 builder.go:135] rc: 1
  I0902 08:01:27.939250 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: 
  I0902 08:01:27.940015 16 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/02/25 08:01:27.98
  I0902 08:01:27.981079 16 statefulset.go:138] Deleting all statefulset in ns statefulset-9201
  I0902 08:01:27.992408 16 rest.go:152] Scaling statefulset ss to 0
  I0902 08:01:28.008218 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 08:01:28.020976 16 rest.go:90] Deleting statefulset ss
  I0902 08:01:28.059103 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9201" for this suite. @ 09/02/25 08:01:28.073
• [368.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/02/25 08:01:28.095
  I0902 08:01:28.095629 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:01:28.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:01:28.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:01:28.137
  STEP: Creating the pod @ 09/02/25 08:01:28.145
  I0902 08:01:32.775171 16 pod_client.go:173] Successfully updated pod "labelsupdatecc59e3fa-79b0-47fa-a139-1e8f52d40643"
  I0902 08:01:34.808422 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8644" for this suite. @ 09/02/25 08:01:34.824
• [6.752 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/02/25 08:01:34.849
  I0902 08:01:34.849694 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 08:01:34.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:01:34.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:01:34.885
  STEP: Looking for a node to schedule job pods @ 09/02/25 08:01:34.892
  STEP: Creating a job @ 09/02/25 08:01:34.924
  STEP: Waiting for all the pods to be ready @ 09/02/25 08:01:34.942
  STEP: Fetch all running pods @ 09/02/25 08:01:45.03
  STEP: Evict all the Pods @ 09/02/25 08:01:45.04
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-kqp46/job-381 @ 09/02/25 08:01:45.041
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-p92jn/job-381 @ 09/02/25 08:01:45.041
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-vgbmb/job-381 @ 09/02/25 08:01:45.041
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-kqp46/job-381 to be deleted @ 09/02/25 08:01:45.108
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-vgbmb/job-381 to be deleted @ 09/02/25 08:01:45.11
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-p92jn/job-381 to be deleted @ 09/02/25 08:01:45.121
  STEP: Ensuring job reaches completions @ 09/02/25 08:01:49.148
  I0902 08:02:35.435719 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-381" for this suite. @ 09/02/25 08:02:35.447
• [60.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/02/25 08:02:35.472
  I0902 08:02:35.472237 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:02:35.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:02:35.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:02:35.512
  STEP: set up a multi version CRD @ 09/02/25 08:02:35.518
  I0902 08:02:35.519846 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: mark a version not serverd @ 09/02/25 08:02:41.022
  STEP: check the unserved version gets removed @ 09/02/25 08:02:41.092
  STEP: check the other version is not changed @ 09/02/25 08:02:43.003
  I0902 08:02:47.379495 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7665" for this suite. @ 09/02/25 08:02:47.406
• [11.952 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/02/25 08:02:47.427
  I0902 08:02:47.427813 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:02:47.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:02:47.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:02:47.464
  STEP: create the deployment @ 09/02/25 08:02:47.469
  W0902 08:02:47.482663      16 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/02/25 08:02:47.482
  STEP: delete the deployment @ 09/02/25 08:02:48.013
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/02/25 08:02:48.056
  STEP: Gathering metrics @ 09/02/25 08:02:48.619
  I0902 08:02:48.880922 16 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:02:48.882045 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7252" for this suite. @ 09/02/25 08:02:48.894
• [1.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/02/25 08:02:48.919
  I0902 08:02:48.919944 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename subjectreview @ 09/02/25 08:02:48.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:02:48.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:02:48.976
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5239" @ 09/02/25 08:02:48.981
  I0902 08:02:48.991894 16 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5239:e2e"
  I0902 08:02:48.992215 16 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5239"}
  I0902 08:02:48.992294 16 subjectreviews.go:71] saUID: "ef40530b-df8c-48f1-a214-9854866d78b2"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5239:e2e" @ 09/02/25 08:02:48.992
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5239:e2e" @ 09/02/25 08:02:48.993
  I0902 08:02:48.997220 16 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5239:e2e" api 'list' configmaps in "subjectreview-5239" namespace @ 09/02/25 08:02:48.997
  I0902 08:02:49.002780 16 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5239:e2e" @ 09/02/25 08:02:49.002
  I0902 08:02:49.007120 16 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0902 08:02:49.007168 16 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0902 08:02:49.007337 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5239" for this suite. @ 09/02/25 08:02:49.017
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/02/25 08:02:49.035
  I0902 08:02:49.035965 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:02:49.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:02:49.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:02:49.069
  STEP: Creating pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722 @ 09/02/25 08:02:49.074
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 08:02:51.13
  I0902 08:02:51.142872 16 container_probe.go:1749] Initial restart count of pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 is 0
  I0902 08:02:51.152899 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:02:53.171033 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:02:55.183647 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:02:57.197215 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:02:59.207346 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:01.223822 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:03.233673 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:05.245021 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:07.255649 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:09.264997 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:11.273725 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:11.273816 16 container_probe.go:1763] Restart count of pod container-probe-2722/liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 is now 1 (20.130824189s elapsed)
  I0902 08:03:13.283081 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:15.292726 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:17.301996 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:19.317978 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:21.327401 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:23.349052 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:25.358191 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:27.371592 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:29.385056 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:31.396667 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:31.396747 16 container_probe.go:1763] Restart count of pod container-probe-2722/liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 is now 2 (40.253764347s elapsed)
  I0902 08:03:33.405153 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:35.419947 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:37.430565 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:39.440716 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:41.450103 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:43.462082 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:45.471971 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:47.482947 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:49.501649 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:51.510896 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:51.510975 16 container_probe.go:1763] Restart count of pod container-probe-2722/liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 is now 3 (1m0.367992382s elapsed)
  I0902 08:03:53.523875 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:55.532957 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:57.541091 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:03:59.553664 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:01.561292 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:03.571782 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:05.582016 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:07.592255 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:09.605507 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:11.616709 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:11.616787 16 container_probe.go:1763] Restart count of pod container-probe-2722/liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 is now 4 (1m20.473805085s elapsed)
  I0902 08:04:13.624458 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:15.632772 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:17.642487 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:19.653390 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:21.671136 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:23.681630 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:25.691425 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:27.699124 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:29.710892 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:31.741633 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:33.749838 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:35.760483 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:37.770825 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:39.786734 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:41.802790 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:43.817487 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:45.827177 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:47.852784 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:49.870423 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:51.894649 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:53.905215 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:55.948713 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:57.963063 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:04:59.974967 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:01.985560 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:03.995022 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:06.004178 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:08.014619 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:10.025429 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:12.035228 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:14.044783 16 container_probe.go:1759] Get pod liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 in namespace container-probe-2722
  I0902 08:05:14.045026 16 container_probe.go:1763] Restart count of pod container-probe-2722/liveness-064706ae-40b4-49b3-87d4-bd70e7c63c99 is now 5 (2m22.902040601s elapsed)
  STEP: deleting the pod @ 09/02/25 08:05:14.045
  I0902 08:05:14.078694 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2722" for this suite. @ 09/02/25 08:05:14.095
• [145.080 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/02/25 08:05:14.117
  I0902 08:05:14.117248 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:05:14.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:14.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:14.203
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/02/25 08:05:14.257
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:05:14.273
  I0902 08:05:14.345377 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:05:14.345470 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 08:05:15.302473 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:05:15.302624 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 08:05:16.295892 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:05:16.296005 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/02/25 08:05:16.306
  I0902 08:05:16.398344 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:05:16.398433 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 08:05:17.386932 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:05:17.387009 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 08:05:18.378894 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:05:18.379165 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/02/25 08:05:18.379
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:05:18.394
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5831, will wait for the garbage collector to delete the pods @ 09/02/25 08:05:18.394
  I0902 08:05:18.470062 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.907027ms
  I0902 08:05:18.570905 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.821177ms
  I0902 08:05:20.378071 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:05:20.378147 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:05:20.390268 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14842"},"items":null}

  I0902 08:05:20.396415 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14842"},"items":null}

  I0902 08:05:20.444171 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5831" for this suite. @ 09/02/25 08:05:20.454
• [6.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/02/25 08:05:20.47
  I0902 08:05:20.470447 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:05:20.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:20.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:20.514
  STEP: creating the pod @ 09/02/25 08:05:20.518
  STEP: setting up watch @ 09/02/25 08:05:20.519
  STEP: submitting the pod to kubernetes @ 09/02/25 08:05:20.69
  STEP: verifying the pod is in kubernetes @ 09/02/25 08:05:20.711
  STEP: verifying pod creation was observed @ 09/02/25 08:05:20.723
  STEP: deleting the pod gracefully @ 09/02/25 08:05:22.752
  STEP: verifying pod deletion was observed @ 09/02/25 08:05:22.77
  I0902 08:05:24.562616 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9766" for this suite. @ 09/02/25 08:05:24.57
• [4.123 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/02/25 08:05:24.594
  I0902 08:05:24.594068 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:05:24.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:24.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:24.642
  STEP: Creating a test headless service @ 09/02/25 08:05:24.649
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8879 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8879;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8879 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8879;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8879.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8879.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8879.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8879.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8879.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8879.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8879.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8879.svc;check="$$(dig +notcp +noall +answer +search 132.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.132_udp@PTR;check="$$(dig +tcp +noall +answer +search 132.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.132_tcp@PTR;sleep 1; done
   @ 09/02/25 08:05:24.711
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8879 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8879;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8879 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8879;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8879.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8879.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8879.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8879.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8879.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8879.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8879.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8879.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8879.svc;check="$$(dig +notcp +noall +answer +search 132.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.132_udp@PTR;check="$$(dig +tcp +noall +answer +search 132.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.132_tcp@PTR;sleep 1; done
   @ 09/02/25 08:05:24.711
  STEP: creating a pod to probe DNS @ 09/02/25 08:05:24.711
  STEP: submitting the pod to kubernetes @ 09/02/25 08:05:24.711
  STEP: retrieving the pod @ 09/02/25 08:05:26.786
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:05:26.796
  I0902 08:05:26.810351 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.819163 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.827498 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8879 from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.836854 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8879 from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.845164 16 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.854336 16 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.861299 16 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.868375 16 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.916583 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.923754 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.931801 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8879 from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.943051 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8879 from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.953555 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.964692 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.973409 16 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:26.979444 16 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:27.002947 16 dns_common.go:495] Unable to read jessie_udp@_http._tcp.test-service-2.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:27.012315 16 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:27.033133 16 dns_common.go:506] Lookups using dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-8879 agnhost_tcp@dns-test-service.dns-8879 agnhost_udp@dns-test-service.dns-8879.svc agnhost_tcp@dns-test-service.dns-8879.svc agnhost_udp@_http._tcp.dns-test-service.dns-8879.svc agnhost_tcp@_http._tcp.dns-test-service.dns-8879.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8879 jessie_tcp@dns-test-service.dns-8879 jessie_udp@dns-test-service.dns-8879.svc jessie_tcp@dns-test-service.dns-8879.svc jessie_udp@_http._tcp.dns-test-service.dns-8879.svc jessie_tcp@_http._tcp.dns-test-service.dns-8879.svc jessie_udp@_http._tcp.test-service-2.dns-8879.svc jessie_tcp@_http._tcp.test-service-2.dns-8879.svc]

  I0902 08:05:27.077211 16 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:05:27.097628 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:05:27.113067 16 dns_common.go:514] Pod client logs for jessie-querier: 
  I0902 08:05:31.948086 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.954931 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.961904 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8879 from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.968995 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8879 from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.976694 16 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.983503 16 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.990111 16 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:31.998001 16 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:32.009662 16 dns_common.go:495] Unable to read jessie_udp@_http._tcp.test-service-2.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:32.018821 16 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-8879.svc from pod dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296: the server could not find the requested resource (get pods dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296)
  I0902 08:05:32.035300 16 dns_common.go:506] Lookups using dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296 failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8879 jessie_tcp@dns-test-service.dns-8879 jessie_udp@dns-test-service.dns-8879.svc jessie_tcp@dns-test-service.dns-8879.svc jessie_udp@_http._tcp.dns-test-service.dns-8879.svc jessie_tcp@_http._tcp.dns-test-service.dns-8879.svc jessie_udp@_http._tcp.test-service-2.dns-8879.svc jessie_tcp@_http._tcp.test-service-2.dns-8879.svc]

  I0902 08:05:32.050479 16 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:05:32.065301 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:05:32.080341 16 dns_common.go:514] Pod client logs for jessie-querier: 
  I0902 08:05:37.075986 16 dns_common.go:546] DNS probes using dns-8879/dns-test-19f4d04e-b352-47c0-8e75-5e4d3b555296 succeeded

  STEP: deleting the pod @ 09/02/25 08:05:37.076
  STEP: deleting the test service @ 09/02/25 08:05:37.144
  STEP: deleting the test headless service @ 09/02/25 08:05:37.22
  I0902 08:05:37.265281 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8879" for this suite. @ 09/02/25 08:05:37.29
• [12.719 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/02/25 08:05:37.316
  I0902 08:05:37.317265 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:05:37.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:37.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:37.372
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:05:37.379
  STEP: Saw pod success @ 09/02/25 08:05:41.449
  I0902 08:05:41.458942 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-d75d5c49-1fdb-43b5-8462-78ec66b38690 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:05:41.474
  I0902 08:05:41.505007 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-550" for this suite. @ 09/02/25 08:05:41.515
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/02/25 08:05:41.531
  I0902 08:05:41.531788 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename volumeattachment @ 09/02/25 08:05:41.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:41.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:41.569
  STEP: Create VolumeAttachment "va-e2e-kxtmz" on node "noo9iech3thi-3" @ 09/02/25 08:05:41.615
  STEP: Get VolumeAttachment "va-e2e-kxtmz" on node "noo9iech3thi-3" @ 09/02/25 08:05:41.624
  STEP: Patch VolumeAttachment "va-e2e-kxtmz" on node "noo9iech3thi-3" @ 09/02/25 08:05:41.63
  STEP: List VolumeAttachments with "va-e2e-kxtmz=patched" label @ 09/02/25 08:05:41.645
  STEP: Delete VolumeAttachment "va-e2e-kxtmz" on node "noo9iech3thi-3" @ 09/02/25 08:05:41.652
  STEP: Confirm deletion of VolumeAttachment "va-e2e-kxtmz" on node "noo9iech3thi-3" @ 09/02/25 08:05:41.664
  STEP: Create VolumeAttachment "va-e2e-l7m75" on node "noo9iech3thi-2" @ 09/02/25 08:05:41.714
  STEP: Update the VolumeAttachment "va-e2e-l7m75" on node "noo9iech3thi-2" with label "va-e2e=updated" @ 09/02/25 08:05:41.726
  STEP: Create VolumeAttachment "va-e2e-4s8cx" on node "noo9iech3thi-2" @ 09/02/25 08:05:41.816
  STEP: Update the VolumeAttachment "va-e2e-4s8cx" on node "noo9iech3thi-2" with label "va-e2e=updated" @ 09/02/25 08:05:41.826
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/02/25 08:05:41.845
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/02/25 08:05:41.872
  I0902 08:05:41.880478 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8696" for this suite. @ 09/02/25 08:05:41.917
• [0.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/02/25 08:05:41.933
  I0902 08:05:41.934010 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename conformance-tests @ 09/02/25 08:05:41.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:41.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:41.984
  STEP: Getting node addresses @ 09/02/25 08:05:41.992
  I0902 08:05:41.992684 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0902 08:05:42.018550 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2699" for this suite. @ 09/02/25 08:05:42.024
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/02/25 08:05:42.042
  I0902 08:05:42.043015 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:05:42.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:42.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:42.082
  STEP: Counting existing ResourceQuota @ 09/02/25 08:05:42.088
  STEP: Creating a ResourceQuota @ 09/02/25 08:05:47.105
  STEP: Ensuring resource quota status is calculated @ 09/02/25 08:05:47.115
  STEP: Creating a Service @ 09/02/25 08:05:49.122
  STEP: Creating a NodePort Service @ 09/02/25 08:05:49.158
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/02/25 08:05:49.21
  STEP: Ensuring resource quota status captures service creation @ 09/02/25 08:05:49.26
  STEP: Deleting Services @ 09/02/25 08:05:51.268
  STEP: Ensuring resource quota status released usage @ 09/02/25 08:05:51.391
  I0902 08:05:53.402121 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6977" for this suite. @ 09/02/25 08:05:53.422
• [11.398 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/02/25 08:05:53.442
  I0902 08:05:53.442831 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:05:53.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:53.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:53.488
  STEP: Setting up server cert @ 09/02/25 08:05:53.54
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:05:54.87
  STEP: Deploying the webhook pod @ 09/02/25 08:05:54.882
  STEP: Wait for the deployment to be ready @ 09/02/25 08:05:54.908
  I0902 08:05:54.927989 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 08:05:56.96
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:05:56.991
  I0902 08:05:57.991867 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/02/25 08:05:58.144
  STEP: Creating a configMap that should be mutated @ 09/02/25 08:05:58.18
  STEP: Deleting the collection of validation webhooks @ 09/02/25 08:05:58.289
  STEP: Creating a configMap that should not be mutated @ 09/02/25 08:05:58.46
  I0902 08:05:58.656558 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3603" for this suite. @ 09/02/25 08:05:58.677
  STEP: Destroying namespace "webhook-markers-1120" for this suite. @ 09/02/25 08:05:58.695
• [5.270 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/02/25 08:05:58.714
  I0902 08:05:58.714067 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:05:58.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:05:58.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:05:58.756
  STEP: Creating a test headless service @ 09/02/25 08:05:58.764
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1959.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1959.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/02/25 08:05:58.778
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1959.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1959.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/02/25 08:05:58.779
  STEP: creating a pod to probe DNS @ 09/02/25 08:05:58.779
  STEP: submitting the pod to kubernetes @ 09/02/25 08:05:58.779
  STEP: retrieving the pod @ 09/02/25 08:06:00.827
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:06:00.834
  I0902 08:06:00.870263 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-1959/dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570: the server could not find the requested resource (get pods dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570)
  I0902 08:06:00.870413 16 dns_common.go:506] Lookups using dns-1959/dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570 failed for: [jessie_hosts@dns-querier-2]

  I0902 08:06:00.884461 16 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:06:00.896976 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:06:00.910737 16 dns_common.go:514] Pod client logs for jessie-querier: 
  I0902 08:06:05.868732 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-1959/dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570: the server could not find the requested resource (get pods dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570)
  I0902 08:06:05.868808 16 dns_common.go:506] Lookups using dns-1959/dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570 failed for: [jessie_hosts@dns-querier-2]

  I0902 08:06:05.881229 16 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:06:05.897358 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:06:05.912457 16 dns_common.go:514] Pod client logs for jessie-querier: 
  I0902 08:06:10.868995 16 dns_common.go:546] DNS probes using dns-1959/dns-test-3f9ac21e-db95-49f3-bf97-1748e3d82570 succeeded

  STEP: deleting the pod @ 09/02/25 08:06:10.869
  STEP: deleting the test headless service @ 09/02/25 08:06:10.909
  I0902 08:06:10.984463 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1959" for this suite. @ 09/02/25 08:06:10.992
• [12.324 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/02/25 08:06:11.041
  I0902 08:06:11.042011 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pv @ 09/02/25 08:06:11.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:11.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:11.08
  STEP: Creating initial PV and PVC @ 09/02/25 08:06:11.087
  I0902 08:06:11.087345 16 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1861" @ 09/02/25 08:06:11.123
  STEP: Listing PVCs in namespace "pv-1861" @ 09/02/25 08:06:11.136
  STEP: Reading "pvc-xr59v" Status @ 09/02/25 08:06:11.149
  STEP: Reading "pv-1861-xmmsq" Status @ 09/02/25 08:06:11.161
  STEP: Patching "pvc-xr59v" Status @ 09/02/25 08:06:11.177
  STEP: Patching "pv-1861-xmmsq" Status @ 09/02/25 08:06:11.203
  STEP: Updating "pvc-xr59v" Status @ 09/02/25 08:06:11.213
  STEP: Updating "pv-1861-xmmsq" Status @ 09/02/25 08:06:11.233
  I0902 08:06:11.253046 16 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0902 08:06:11.253688 16 pv.go:205] Deleting PersistentVolumeClaim "pvc-xr59v"
  I0902 08:06:11.266838 16 pv.go:193] Deleting PersistentVolume "pv-1861-xmmsq"
  I0902 08:06:11.281484 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1861" for this suite. @ 09/02/25 08:06:11.292
• [0.286 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/02/25 08:06:11.328
  I0902 08:06:11.328615 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:06:11.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:11.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:11.395
  STEP: Creating configMap with name configmap-test-volume-map-8c8aa49c-8d20-4ecf-8c31-d7f953ecfb96 @ 09/02/25 08:06:11.401
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:06:11.427
  STEP: Saw pod success @ 09/02/25 08:06:15.497
  I0902 08:06:15.523321 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-38ba37c6-d8e4-420c-866f-46ff26c201ea container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:06:15.538
  I0902 08:06:15.566587 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1769" for this suite. @ 09/02/25 08:06:15.575
• [4.265 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/02/25 08:06:15.596
  I0902 08:06:15.596402 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:06:15.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:15.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:15.632
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/02/25 08:06:15.642
  I0902 08:06:15.670973 16 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0902 08:06:20.682038 16 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 08:06:20.682
  STEP: getting scale subresource @ 09/02/25 08:06:20.682
  STEP: updating a scale subresource @ 09/02/25 08:06:20.69
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/02/25 08:06:20.703
  STEP: Patch a scale subresource @ 09/02/25 08:06:20.71
  I0902 08:06:20.745570 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-661" for this suite. @ 09/02/25 08:06:20.803
• [5.240 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/02/25 08:06:20.836
  I0902 08:06:20.836809 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:06:20.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:20.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:20.887
  STEP: Creating configMap configmap-6435/configmap-test-8f2c7630-477f-433b-9f34-5a3bd6d3f748 @ 09/02/25 08:06:20.897
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:06:20.907
  STEP: Saw pod success @ 09/02/25 08:06:25.016
  I0902 08:06:25.026785 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-55c291a4-aa3c-4d9f-b597-9ddcae5ff590 container env-test: <nil>
  STEP: delete the pod @ 09/02/25 08:06:25.052
  I0902 08:06:25.094950 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6435" for this suite. @ 09/02/25 08:06:25.105
• [4.283 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/02/25 08:06:25.12
  I0902 08:06:25.120905 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:06:25.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:25.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:25.157
  STEP: Setting up server cert @ 09/02/25 08:06:25.258
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:06:26.079
  STEP: Deploying the webhook pod @ 09/02/25 08:06:26.097
  STEP: Wait for the deployment to be ready @ 09/02/25 08:06:26.13
  I0902 08:06:26.153257 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 08:06:28.179
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:06:28.203
  I0902 08:06:29.204367 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/02/25 08:06:29.224
  STEP: create a pod @ 09/02/25 08:06:29.26
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/02/25 08:06:31.306
  I0902 08:06:31.306689 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=webhook-5780 attach --namespace=webhook-5780 to-be-attached-pod -i -c=container1'
  I0902 08:06:31.564675 16 builder.go:135] rc: 1
  I0902 08:06:31.694680 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5780" for this suite. @ 09/02/25 08:06:31.706
  STEP: Destroying namespace "webhook-markers-57" for this suite. @ 09/02/25 08:06:31.736
• [6.640 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/02/25 08:06:31.761
  I0902 08:06:31.761850 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 08:06:31.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:31.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:31.801
  I0902 08:06:39.941269 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6954" for this suite. @ 09/02/25 08:06:39.959
• [8.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/02/25 08:06:39.992
  I0902 08:06:39.992221 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:06:40.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:40.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:40.047
  STEP: Setting up server cert @ 09/02/25 08:06:40.102
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:06:40.994
  STEP: Deploying the webhook pod @ 09/02/25 08:06:41.004
  STEP: Wait for the deployment to be ready @ 09/02/25 08:06:41.026
  I0902 08:06:41.043607 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0902 08:06:43.093571 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 6, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 6, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 6, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 6, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 08:06:45.105
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:06:45.126
  I0902 08:06:46.129268 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/02/25 08:06:46.151
  STEP: create a configmap that should be updated by the webhook @ 09/02/25 08:06:46.199
  I0902 08:06:46.413272 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5005" for this suite. @ 09/02/25 08:06:46.445
  STEP: Destroying namespace "webhook-markers-1476" for this suite. @ 09/02/25 08:06:46.468
• [6.489 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/02/25 08:06:46.482
  I0902 08:06:46.482493 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:06:46.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:46.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:46.516
  STEP: creating a ConfigMap @ 09/02/25 08:06:46.522
  STEP: fetching the ConfigMap @ 09/02/25 08:06:46.53
  STEP: patching the ConfigMap @ 09/02/25 08:06:46.537
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/02/25 08:06:46.554
  STEP: deleting the ConfigMap by collection with a label selector @ 09/02/25 08:06:46.56
  STEP: listing all ConfigMaps in test namespace @ 09/02/25 08:06:46.579
  I0902 08:06:46.587902 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9627" for this suite. @ 09/02/25 08:06:46.598
• [0.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 09/02/25 08:06:46.614
  I0902 08:06:46.615843 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:06:46.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:06:46.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:06:46.65
  STEP: Creating service test in namespace statefulset-6513 @ 09/02/25 08:06:46.695
  STEP: Creating stateful set ss in namespace statefulset-6513 @ 09/02/25 08:06:46.707
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6513 @ 09/02/25 08:06:46.725
  I0902 08:06:46.742831 16 wait.go:40] Found 0 stateful pods, waiting for 1
  I0902 08:06:56.744443 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/02/25 08:06:56.746
  I0902 08:06:56.755368 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:06:57.045355 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:06:57.045461 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:06:57.045506 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:06:57.054742 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0902 08:07:07.056974 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:07:07.057086 16 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0902 08:07:07.123809 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999218s
  I0902 08:07:08.240129 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.970314924s
  I0902 08:07:09.251090 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.854051711s
  I0902 08:07:10.262615 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.843036939s
  I0902 08:07:11.282470 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.831287135s
  I0902 08:07:12.292467 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.811564042s
  I0902 08:07:13.305039 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.801640619s
  I0902 08:07:14.315771 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.788676486s
  I0902 08:07:15.343060 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.777488496s
  I0902 08:07:16.352404 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 751.133471ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6513 @ 09/02/25 08:07:17.352
  I0902 08:07:17.375205 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:07:17.753859 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:07:17.754430 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:07:17.754642 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:07:17.755204 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:07:18.061788 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0902 08:07:18.062192 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:07:18.062244 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:07:18.063187 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:07:18.348158 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0902 08:07:18.348254 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:07:18.348296 16 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0902 08:07:18.355483 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:07:18.355567 16 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:07:18.355606 16 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/02/25 08:07:18.355
  I0902 08:07:18.364829 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:07:18.629688 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:07:18.630148 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:07:18.630180 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:07:18.630615 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:07:18.921843 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:07:18.922889 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:07:18.923019 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:07:18.923706 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-6513 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:07:19.244824 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:07:19.244913 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:07:19.244967 16 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0902 08:07:19.244994 16 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0902 08:07:19.255726 16 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0902 08:07:29.268445 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:07:29.269605 16 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:07:29.270297 16 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0902 08:07:29.330748 16 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0902 08:07:29.331233 16 resource.go:175] ss-0  noo9iech3thi-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:06:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:06:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:06:46 +0000 UTC  }]
  I0902 08:07:29.331342 16 resource.go:175] ss-1  noo9iech3thi-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:07 +0000 UTC  }]
  I0902 08:07:29.331445 16 resource.go:175] ss-2  noo9iech3thi-2  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:07 +0000 UTC  }]
  I0902 08:07:29.331484 16 resource.go:178] 
  I0902 08:07:29.334383 16 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0902 08:07:30.366608 16 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0902 08:07:30.370641 16 resource.go:175] ss-0  noo9iech3thi-3  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:06:46 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:06:46 +0000 UTC  }]
  I0902 08:07:30.370719 16 resource.go:175] ss-2  noo9iech3thi-2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:07 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:19 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:07:07 +0000 UTC  }]
  I0902 08:07:30.370738 16 resource.go:178] 
  I0902 08:07:30.370755 16 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 2
  I0902 08:07:31.384502 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.933526767s
  I0902 08:07:32.394297 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.920405779s
  I0902 08:07:33.404945 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.910605245s
  I0902 08:07:34.416648 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.899993299s
  I0902 08:07:35.433331 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.88806846s
  I0902 08:07:36.441884 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.871458445s
  I0902 08:07:37.458051 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.862920536s
  I0902 08:07:38.466677 16 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 846.880393ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6513 @ 09/02/25 08:07:39.467
  I0902 08:07:39.478497 16 rest.go:152] Scaling statefulset ss to 0
  I0902 08:07:39.493974 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 08:07:39.499494 16 statefulset.go:138] Deleting all statefulset in ns statefulset-6513
  I0902 08:07:39.509131 16 rest.go:152] Scaling statefulset ss to 0
  I0902 08:07:39.530287 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 08:07:39.538851 16 rest.go:90] Deleting statefulset ss
  I0902 08:07:39.575376 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6513" for this suite. @ 09/02/25 08:07:39.591
• [52.995 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/02/25 08:07:39.611
  I0902 08:07:39.612007 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:07:39.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:07:39.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:07:39.659
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:07:39.679
  STEP: Saw pod success @ 09/02/25 08:07:43.731
  I0902 08:07:43.738086 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-74e1b403-94a4-4407-a807-5e36337d4931 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:07:43.751
  I0902 08:07:43.785942 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6913" for this suite. @ 09/02/25 08:07:43.797
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 09/02/25 08:07:43.832
  I0902 08:07:43.832464 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 08:07:43.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:07:43.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:07:43.9
  STEP: Creating a job @ 09/02/25 08:07:43.906
  STEP: Ensuring job reaches completions @ 09/02/25 08:07:43.92
  I0902 08:07:53.986330 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5318" for this suite. @ 09/02/25 08:07:53.998
• [10.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 09/02/25 08:07:54.02
  I0902 08:07:54.020953 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:07:54.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:07:54.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:07:54.057
  I0902 08:07:54.098738 16 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0902 08:07:54.098865 16 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0902 08:07:54.123640 16 service_accounts.go:282] created pod pod-service-account-mountsa
  I0902 08:07:54.124104 16 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0902 08:07:54.151134 16 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0902 08:07:54.151225 16 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0902 08:07:54.167740 16 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0902 08:07:54.167826 16 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0902 08:07:54.182660 16 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0902 08:07:54.182775 16 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0902 08:07:54.219502 16 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0902 08:07:54.220211 16 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0902 08:07:54.248119 16 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0902 08:07:54.248188 16 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0902 08:07:54.268917 16 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0902 08:07:54.268990 16 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0902 08:07:54.326661 16 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0902 08:07:54.326783 16 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0902 08:07:54.327001 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6365" for this suite. @ 09/02/25 08:07:54.408
• [0.455 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/02/25 08:07:54.487
  I0902 08:07:54.487165 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:07:54.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:07:54.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:07:54.914
  STEP: create the container @ 09/02/25 08:07:55
  W0902 08:07:55.052446      16 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/02/25 08:07:55.083
  STEP: get the container status @ 09/02/25 08:08:01.374
  STEP: the container should be terminated @ 09/02/25 08:08:01.382
  STEP: the termination message should be set @ 09/02/25 08:08:01.382
  I0902 08:08:01.383008 16 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/02/25 08:08:01.383
  I0902 08:08:01.421632 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7068" for this suite. @ 09/02/25 08:08:01.432
• [6.978 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/02/25 08:08:01.454
  I0902 08:08:01.454606 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 08:08:01.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:01.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:01.56
  STEP: getting /apis @ 09/02/25 08:08:01.581
  STEP: getting /apis/admissionregistration.k8s.io @ 09/02/25 08:08:01.598
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/02/25 08:08:01.601
  STEP: creating @ 09/02/25 08:08:01.605
  STEP: getting @ 09/02/25 08:08:01.677
  STEP: listing @ 09/02/25 08:08:01.685
  STEP: watching @ 09/02/25 08:08:01.69
  I0902 08:08:01.690890 16 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/02/25 08:08:01.694
  STEP: updating @ 09/02/25 08:08:01.71
  I0902 08:08:01.736151 16 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/02/25 08:08:01.736
  STEP: patching /status @ 09/02/25 08:08:01.746
  STEP: updating /status @ 09/02/25 08:08:01.759
  STEP: deleting @ 09/02/25 08:08:01.782
  STEP: deleting a collection @ 09/02/25 08:08:01.828
  I0902 08:08:01.948434 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2530" for this suite. @ 09/02/25 08:08:01.964
• [0.540 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/02/25 08:08:01.999
  I0902 08:08:01.999294 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 08:08:02.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:02.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:02.084
  I0902 08:08:02.092798 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 08:08:02.122701 16 util.go:396] Waiting for terminating namespaces to be deleted...
  I0902 08:08:02.160871 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-1 before test
  I0902 08:08:02.173115 16 predicates.go:957] cilium-nj7vw from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.173478 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 08:08:02.180698 16 predicates.go:957] cilium-node-init-hgzhs from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.183489 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:08:02.183880 16 predicates.go:957] coredns-668d6bf9bc-pmh8x from kube-system started at 2025-09-02 07:05:54 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.184806 16 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0902 08:08:02.184856 16 predicates.go:957] kube-apiserver-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.184884 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 08:08:02.184903 16 predicates.go:957] kube-controller-manager-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.184925 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:08:02.185227 16 predicates.go:957] kube-proxy-9w4sn from kube-system started at 2025-09-02 06:43:28 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.185247 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:08:02.185272 16 predicates.go:957] kube-scheduler-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.185287 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 08:08:02.186836 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-rzhk6 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:08:02.186934 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:08:02.186957 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:08:02.187138 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-2 before test
  I0902 08:08:02.213448 16 predicates.go:957] cilium-c4w69 from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214122 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 08:08:02.214164 16 predicates.go:957] cilium-node-init-5mfbq from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214199 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:08:02.214225 16 predicates.go:957] cilium-operator-b676844bf-xs2kw from kube-system started at 2025-09-02 07:07:12 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214242 16 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0902 08:08:02.214259 16 predicates.go:957] coredns-668d6bf9bc-94wcm from kube-system started at 2025-09-02 06:55:39 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214287 16 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0902 08:08:02.214307 16 predicates.go:957] kube-apiserver-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214322 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 08:08:02.214345 16 predicates.go:957] kube-controller-manager-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214360 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:08:02.214383 16 predicates.go:957] kube-proxy-5rgj5 from kube-system started at 2025-09-02 06:53:43 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.214397 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:08:02.214414 16 predicates.go:957] kube-scheduler-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.215472 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 08:08:02.216720 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-99jz9 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:08:02.216745 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:08:02.216913 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:08:02.216936 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-3 before test
  I0902 08:08:02.240429 16 predicates.go:957] cilium-node-init-ll5nc from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.240496 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:08:02.240565 16 predicates.go:957] cilium-wbqzn from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.240590 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 4
  I0902 08:08:02.240608 16 predicates.go:957] kube-proxy-98k2m from kube-system started at 2025-09-02 06:54:14 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.240622 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:08:02.240656 16 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-02 07:29:54 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.240673 16 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 08:08:02.240691 16 predicates.go:957] sonobuoy-e2e-job-0b6c70a640004788 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:08:02.240706 16 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0902 08:08:02.240719 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:08:02.240737 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-7knzw from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:08:02.240751 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:08:02.240764 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:08:02.240780 16 predicates.go:957] pod-service-account-nomountsa from svcaccounts-6365 started at 2025-09-02 08:07:54 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.240795 16 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0902 08:08:02.240811 16 predicates.go:957] pod-service-account-nomountsa-mountspec from svcaccounts-6365 started at 2025-09-02 08:07:54 +0000 UTC (1 container statuses recorded)
  I0902 08:08:02.240825 16 predicates.go:959] 	Container token-test ready: false, restart count 0
  STEP: verifying the node has the label node noo9iech3thi-1 @ 09/02/25 08:08:02.308
  STEP: verifying the node has the label node noo9iech3thi-2 @ 09/02/25 08:08:02.389
  STEP: verifying the node has the label node noo9iech3thi-3 @ 09/02/25 08:08:02.445
  I0902 08:08:02.544313 16 predicates.go:372] Pod cilium-c4w69 requesting resource cpu=0m on Node noo9iech3thi-2
  I0902 08:08:02.544380 16 predicates.go:372] Pod cilium-nj7vw requesting resource cpu=0m on Node noo9iech3thi-1
  I0902 08:08:02.544400 16 predicates.go:372] Pod cilium-node-init-5mfbq requesting resource cpu=100m on Node noo9iech3thi-2
  I0902 08:08:02.544416 16 predicates.go:372] Pod cilium-node-init-hgzhs requesting resource cpu=100m on Node noo9iech3thi-1
  I0902 08:08:02.544432 16 predicates.go:372] Pod cilium-node-init-ll5nc requesting resource cpu=100m on Node noo9iech3thi-3
  I0902 08:08:02.544453 16 predicates.go:372] Pod cilium-operator-b676844bf-xs2kw requesting resource cpu=0m on Node noo9iech3thi-2
  I0902 08:08:02.544469 16 predicates.go:372] Pod cilium-wbqzn requesting resource cpu=0m on Node noo9iech3thi-3
  I0902 08:08:02.544484 16 predicates.go:372] Pod coredns-668d6bf9bc-94wcm requesting resource cpu=100m on Node noo9iech3thi-2
  I0902 08:08:02.544500 16 predicates.go:372] Pod coredns-668d6bf9bc-pmh8x requesting resource cpu=100m on Node noo9iech3thi-1
  I0902 08:08:02.544565 16 predicates.go:372] Pod kube-apiserver-noo9iech3thi-1 requesting resource cpu=250m on Node noo9iech3thi-1
  I0902 08:08:02.544582 16 predicates.go:372] Pod kube-apiserver-noo9iech3thi-2 requesting resource cpu=250m on Node noo9iech3thi-2
  I0902 08:08:02.544597 16 predicates.go:372] Pod kube-controller-manager-noo9iech3thi-1 requesting resource cpu=200m on Node noo9iech3thi-1
  I0902 08:08:02.544612 16 predicates.go:372] Pod kube-controller-manager-noo9iech3thi-2 requesting resource cpu=200m on Node noo9iech3thi-2
  I0902 08:08:02.544627 16 predicates.go:372] Pod kube-proxy-5rgj5 requesting resource cpu=0m on Node noo9iech3thi-2
  I0902 08:08:02.544663 16 predicates.go:372] Pod kube-proxy-98k2m requesting resource cpu=0m on Node noo9iech3thi-3
  I0902 08:08:02.544679 16 predicates.go:372] Pod kube-proxy-9w4sn requesting resource cpu=0m on Node noo9iech3thi-1
  I0902 08:08:02.544695 16 predicates.go:372] Pod kube-scheduler-noo9iech3thi-1 requesting resource cpu=100m on Node noo9iech3thi-1
  I0902 08:08:02.544711 16 predicates.go:372] Pod kube-scheduler-noo9iech3thi-2 requesting resource cpu=100m on Node noo9iech3thi-2
  I0902 08:08:02.544726 16 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node noo9iech3thi-3
  I0902 08:08:02.544744 16 predicates.go:372] Pod sonobuoy-e2e-job-0b6c70a640004788 requesting resource cpu=0m on Node noo9iech3thi-3
  I0902 08:08:02.544772 16 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-7knzw requesting resource cpu=0m on Node noo9iech3thi-3
  I0902 08:08:02.544788 16 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-99jz9 requesting resource cpu=0m on Node noo9iech3thi-2
  I0902 08:08:02.544803 16 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-rzhk6 requesting resource cpu=0m on Node noo9iech3thi-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/02/25 08:08:02.544
  I0902 08:08:02.544879 16 predicates.go:382] Creating a pod which consumes cpu=595m on Node noo9iech3thi-1
  I0902 08:08:02.588732 16 predicates.go:382] Creating a pod which consumes cpu=595m on Node noo9iech3thi-2
  I0902 08:08:02.624501 16 predicates.go:382] Creating a pod which consumes cpu=1050m on Node noo9iech3thi-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/02/25 08:08:04.743
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8.186168bb24347ef8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8253/filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8 to noo9iech3thi-2] @ 09/02/25 08:08:04.752
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8.186168bb5474f7f7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/02/25 08:08:04.752
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8.186168bb5bd37c04], Reason = [Created], Message = [Created container: filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8] @ 09/02/25 08:08:04.752
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8.186168bb5d57c10b], Reason = [Started], Message = [Started container filler-pod-627fe058-19dc-4ae2-85d4-2da5f0d4e8e8] @ 09/02/25 08:08:04.752
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd.186168bb2239058f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8253/filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd to noo9iech3thi-1] @ 09/02/25 08:08:04.752
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd.186168bb6b727f94], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/02/25 08:08:04.752
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd.186168bb76b621c6], Reason = [Created], Message = [Created container: filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd] @ 09/02/25 08:08:04.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd.186168bb79e60faa], Reason = [Started], Message = [Started container filler-pod-6ce32f34-f6d2-4812-9f2b-ac1993e32dbd] @ 09/02/25 08:08:04.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f.186168bb265e59d0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8253/filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f to noo9iech3thi-3] @ 09/02/25 08:08:04.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f.186168bb5389d0d8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/02/25 08:08:04.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f.186168bb5968a2a4], Reason = [Created], Message = [Created container: filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f] @ 09/02/25 08:08:04.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f.186168bb5aa97a46], Reason = [Started], Message = [Started container filler-pod-e7cdfcf3-dc10-448a-9cc9-b763e4c0c39f] @ 09/02/25 08:08:04.753
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186168bba2f37028], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 09/02/25 08:08:04.8
  STEP: removing the label node off the node noo9iech3thi-1 @ 09/02/25 08:08:05.794
  STEP: verifying the node doesn't have the label node @ 09/02/25 08:08:05.854
  STEP: removing the label node off the node noo9iech3thi-2 @ 09/02/25 08:08:05.871
  STEP: verifying the node doesn't have the label node @ 09/02/25 08:08:05.92
  STEP: removing the label node off the node noo9iech3thi-3 @ 09/02/25 08:08:05.941
  STEP: verifying the node doesn't have the label node @ 09/02/25 08:08:06.005
  I0902 08:08:06.015703 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8253" for this suite. @ 09/02/25 08:08:06.025
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/02/25 08:08:06.042
  I0902 08:08:06.043223 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename subpath @ 09/02/25 08:08:06.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:06.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:06.17
  STEP: Setting up data @ 09/02/25 08:08:06.177
  STEP: Creating pod pod-subpath-test-configmap-ljcr @ 09/02/25 08:08:06.2
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 08:08:06.201
  STEP: Saw pod success @ 09/02/25 08:08:30.388
  I0902 08:08:30.398630 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-subpath-test-configmap-ljcr container test-container-subpath-configmap-ljcr: <nil>
  STEP: delete the pod @ 09/02/25 08:08:30.416
  STEP: Deleting pod pod-subpath-test-configmap-ljcr @ 09/02/25 08:08:30.454
  I0902 08:08:30.454726 16 delete.go:62] Deleting pod "pod-subpath-test-configmap-ljcr" in namespace "subpath-8594"
  I0902 08:08:30.461278 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8594" for this suite. @ 09/02/25 08:08:30.471
• [24.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/02/25 08:08:30.495
  I0902 08:08:30.495813 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:08:30.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:30.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:30.537
  STEP: creating service in namespace services-4008 @ 09/02/25 08:08:30.544
  STEP: creating service affinity-clusterip-transition in namespace services-4008 @ 09/02/25 08:08:30.544
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4008 @ 09/02/25 08:08:30.568
  I0902 08:08:30.588785      16 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-4008, replica count: 3
  I0902 08:08:33.642809      16 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 08:08:33.669623 16 resource.go:361] Creating new exec pod
  I0902 08:08:36.727235 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-4008 exec execpod-affinitydxcgz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0902 08:08:37.058134 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.28.111) 80 port [tcp/http] succeeded!\n"
  I0902 08:08:37.058450 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:08:37.058937 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-4008 exec execpod-affinitydxcgz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.28.111 80'
  I0902 08:08:37.335701 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.28.111 80\nConnection to 10.233.28.111 80 port [tcp/http] succeeded!\n"
  I0902 08:08:37.335826 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:08:37.363438 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-4008 exec execpod-affinitydxcgz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.28.111:80/ ; done'
  I0902 08:08:38.039359 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n"
  I0902 08:08:38.039782 16 builder.go:147] stdout: "\naffinity-clusterip-transition-czvbh\naffinity-clusterip-transition-czvbh\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-jpgk2\naffinity-clusterip-transition-czvbh\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-czvbh\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-czvbh\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-jpgk2\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-jpgk2\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-czvbh\naffinity-clusterip-transition-2ppln"
  I0902 08:08:38.040106 16 service.go:242] Received response from host: affinity-clusterip-transition-czvbh
  I0902 08:08:38.040287 16 service.go:242] Received response from host: affinity-clusterip-transition-czvbh
  I0902 08:08:38.040315 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.040477 16 service.go:242] Received response from host: affinity-clusterip-transition-jpgk2
  I0902 08:08:38.040497 16 service.go:242] Received response from host: affinity-clusterip-transition-czvbh
  I0902 08:08:38.040553 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.040571 16 service.go:242] Received response from host: affinity-clusterip-transition-czvbh
  I0902 08:08:38.040605 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.040621 16 service.go:242] Received response from host: affinity-clusterip-transition-czvbh
  I0902 08:08:38.040637 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.040653 16 service.go:242] Received response from host: affinity-clusterip-transition-jpgk2
  I0902 08:08:38.040668 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.040682 16 service.go:242] Received response from host: affinity-clusterip-transition-jpgk2
  I0902 08:08:38.040722 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.040739 16 service.go:242] Received response from host: affinity-clusterip-transition-czvbh
  I0902 08:08:38.040755 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.062767 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-4008 exec execpod-affinitydxcgz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.28.111:80/ ; done'
  I0902 08:08:38.643676 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.111:80/\n"
  I0902 08:08:38.643772 16 builder.go:147] stdout: "\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln\naffinity-clusterip-transition-2ppln"
  I0902 08:08:38.643804 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643824 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643842 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643858 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643879 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643895 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643911 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643927 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643943 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643961 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643979 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.643994 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.644009 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.644024 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.644039 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.644054 16 service.go:242] Received response from host: affinity-clusterip-transition-2ppln
  I0902 08:08:38.644152 16 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4008, will wait for the garbage collector to delete the pods @ 09/02/25 08:08:38.684
  I0902 08:08:38.764509 16 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 19.036965ms
  I0902 08:08:38.877919 16 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 113.391093ms
  I0902 08:08:42.124486 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4008" for this suite. @ 09/02/25 08:08:42.143
• [11.666 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/02/25 08:08:42.161
  I0902 08:08:42.161667 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:08:42.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:42.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:42.197
  STEP: Setting up server cert @ 09/02/25 08:08:42.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:08:42.893
  STEP: Deploying the webhook pod @ 09/02/25 08:08:42.907
  STEP: Wait for the deployment to be ready @ 09/02/25 08:08:42.938
  I0902 08:08:42.972121 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 08:08:45.012
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:08:45.044
  I0902 08:08:46.044645 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 08:08:46.060959 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4305-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/25 08:08:46.584
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/02/25 08:08:46.622
  I0902 08:08:49.476087 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7141" for this suite. @ 09/02/25 08:08:49.486
  STEP: Destroying namespace "webhook-markers-6292" for this suite. @ 09/02/25 08:08:49.497
• [7.351 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/02/25 08:08:49.512
  I0902 08:08:49.512800 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:08:49.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:49.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:49.551
  STEP: Creating a pod to test downward api env vars @ 09/02/25 08:08:49.558
  STEP: Saw pod success @ 09/02/25 08:08:53.614
  I0902 08:08:53.621230 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downward-api-b4d87723-5132-474e-8cbe-51debe27e880 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:08:53.639
  I0902 08:08:53.675405 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7134" for this suite. @ 09/02/25 08:08:53.685
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/02/25 08:08:53.701
  I0902 08:08:53.701916 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:08:53.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:53.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:53.745
  STEP: Setting up server cert @ 09/02/25 08:08:53.792
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:08:54.485
  STEP: Deploying the webhook pod @ 09/02/25 08:08:54.496
  STEP: Wait for the deployment to be ready @ 09/02/25 08:08:54.528
  I0902 08:08:54.556000 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/25 08:08:56.583
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:08:56.612
  I0902 08:08:57.612364 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/02/25 08:08:57.629
  STEP: create a pod that should be updated by the webhook @ 09/02/25 08:08:57.672
  I0902 08:08:57.883593 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4892" for this suite. @ 09/02/25 08:08:57.903
  STEP: Destroying namespace "webhook-markers-599" for this suite. @ 09/02/25 08:08:57.925
• [4.243 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/02/25 08:08:57.944
  I0902 08:08:57.944746 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/02/25 08:08:57.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:57.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:57.983
  STEP: creating @ 09/02/25 08:08:57.99
  STEP: getting @ 09/02/25 08:08:58.031
  STEP: listing in namespace @ 09/02/25 08:08:58.045
  STEP: patching @ 09/02/25 08:08:58.063
  STEP: deleting @ 09/02/25 08:08:58.079
  I0902 08:08:58.102364 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7681" for this suite. @ 09/02/25 08:08:58.112
• [0.184 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/02/25 08:08:58.129
  I0902 08:08:58.129389 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:08:58.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:08:58.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:08:58.174
  STEP: Setting up server cert @ 09/02/25 08:08:58.225
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:08:59.331
  STEP: Deploying the webhook pod @ 09/02/25 08:08:59.355
  STEP: Wait for the deployment to be ready @ 09/02/25 08:08:59.383
  I0902 08:08:59.446386 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0902 08:09:01.478645 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 8, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 8, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 8, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 8, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/25 08:09:03.49
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:09:03.535
  I0902 08:09:04.536103 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/02/25 08:09:04.618
  STEP: verifying the validating webhook match conditions @ 09/02/25 08:09:04.648
  STEP: updating the validating webhook match conditions @ 09/02/25 08:09:04.657
  STEP: verifying the validating webhook match conditions @ 09/02/25 08:09:04.681
  I0902 08:09:04.855590 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-641" for this suite. @ 09/02/25 08:09:04.866
  STEP: Destroying namespace "webhook-markers-4247" for this suite. @ 09/02/25 08:09:04.888
• [6.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/02/25 08:09:04.931
  I0902 08:09:04.931739 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:09:04.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:04.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:04.977
  STEP: creating secret secrets-406/secret-test-e66654c3-3784-4b0e-9ff1-95f69b47a6bc @ 09/02/25 08:09:04.987
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:09:05
  STEP: Saw pod success @ 09/02/25 08:09:09.058
  I0902 08:09:09.069895 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-3e7c4ea4-d16e-4887-b498-eae4cf6382e9 container env-test: <nil>
  STEP: delete the pod @ 09/02/25 08:09:09.099
  I0902 08:09:09.144816 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-406" for this suite. @ 09/02/25 08:09:09.155
• [4.243 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/02/25 08:09:09.173
  I0902 08:09:09.173363 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:09:09.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:09.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:09.208
  STEP: Creating configMap with name projected-configmap-test-volume-map-553a5526-0b60-4fa8-86ab-3b0155696d76 @ 09/02/25 08:09:09.214
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:09:09.224
  STEP: Saw pod success @ 09/02/25 08:09:13.305
  I0902 08:09:13.317689 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-78674504-611c-42be-b467-9a1833019ac8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:09:13.347
  I0902 08:09:13.397125 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2394" for this suite. @ 09/02/25 08:09:13.407
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/02/25 08:09:13.429
  I0902 08:09:13.429301 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 08:09:13.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:13.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:13.482
  STEP: creating a ReplicationController @ 09/02/25 08:09:13.496
  STEP: waiting for RC to be added @ 09/02/25 08:09:13.508
  STEP: waiting for available Replicas @ 09/02/25 08:09:13.509
  STEP: patching ReplicationController @ 09/02/25 08:09:14.611
  STEP: waiting for RC to be modified @ 09/02/25 08:09:14.628
  STEP: patching ReplicationController status @ 09/02/25 08:09:14.63
  STEP: waiting for RC to be modified @ 09/02/25 08:09:14.644
  STEP: waiting for available Replicas @ 09/02/25 08:09:14.644
  STEP: fetching ReplicationController status @ 09/02/25 08:09:14.654
  STEP: patching ReplicationController scale @ 09/02/25 08:09:14.664
  STEP: waiting for RC to be modified @ 09/02/25 08:09:14.679
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/02/25 08:09:14.679
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/02/25 08:09:16.646
  STEP: updating ReplicationController status @ 09/02/25 08:09:16.654
  STEP: waiting for RC to be modified @ 09/02/25 08:09:16.666
  STEP: listing all ReplicationControllers @ 09/02/25 08:09:16.667
  STEP: checking that ReplicationController has expected values @ 09/02/25 08:09:16.673
  STEP: deleting ReplicationControllers by collection @ 09/02/25 08:09:16.673
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/02/25 08:09:16.694
  I0902 08:09:16.844499 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:09:16.844832      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8042" for this suite. @ 09/02/25 08:09:16.854
• [3.446 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/02/25 08:09:16.875
  I0902 08:09:16.875760 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:09:16.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:16.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:16.916
  STEP: apply creating a deployment @ 09/02/25 08:09:16.923
  I0902 08:09:16.972089 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7276" for this suite. @ 09/02/25 08:09:16.981
• [0.122 seconds]
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/02/25 08:09:16.998
  I0902 08:09:16.998036 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:09:17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:17.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:17.049
  STEP: Creating a pod to test downward api env vars @ 09/02/25 08:09:17.057
  E0902 08:09:17.845906      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:18.846690      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:19.846779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:20.846947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:09:21.114
  I0902 08:09:21.121404 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downward-api-aef2184b-08ee-4da4-89a2-5d851c82d180 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:09:21.141
  I0902 08:09:21.177586 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9283" for this suite. @ 09/02/25 08:09:21.186
• [4.201 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/02/25 08:09:21.199
  I0902 08:09:21.199873 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename ingressclass @ 09/02/25 08:09:21.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:21.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:21.241
  STEP: getting /apis @ 09/02/25 08:09:21.247
  STEP: getting /apis/networking.k8s.io @ 09/02/25 08:09:21.257
  STEP: getting /apis/networking.k8s.iov1 @ 09/02/25 08:09:21.258
  STEP: creating @ 09/02/25 08:09:21.26
  STEP: getting @ 09/02/25 08:09:21.289
  STEP: listing @ 09/02/25 08:09:21.295
  STEP: watching @ 09/02/25 08:09:21.301
  I0902 08:09:21.301416 16 ingressclass.go:348] starting watch
  STEP: patching @ 09/02/25 08:09:21.303
  STEP: updating @ 09/02/25 08:09:21.313
  I0902 08:09:21.326619 16 ingressclass.go:364] waiting for watch events with expected annotations
  I0902 08:09:21.326707 16 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/02/25 08:09:21.327
  STEP: deleting a collection @ 09/02/25 08:09:21.354
  I0902 08:09:21.385381 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3059" for this suite. @ 09/02/25 08:09:21.394
• [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/02/25 08:09:21.407
  I0902 08:09:21.407590 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:09:21.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:09:21.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:09:21.446
  STEP: Creating secret with name s-test-opt-del-6222ec6c-bbc1-4627-b716-afacef9a7984 @ 09/02/25 08:09:21.494
  STEP: Creating secret with name s-test-opt-upd-4729df73-0fa7-4154-8b3d-577b31729530 @ 09/02/25 08:09:21.506
  STEP: Creating the pod @ 09/02/25 08:09:21.517
  E0902 08:09:21.847651      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:22.849269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:23.849203      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:24.848879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-6222ec6c-bbc1-4627-b716-afacef9a7984 @ 09/02/25 08:09:25.622
  STEP: Updating secret s-test-opt-upd-4729df73-0fa7-4154-8b3d-577b31729530 @ 09/02/25 08:09:25.643
  STEP: Creating secret with name s-test-opt-create-300b4b0e-762a-44dd-bdcf-226f2ba98803 @ 09/02/25 08:09:25.654
  STEP: waiting to observe update in volume @ 09/02/25 08:09:25.667
  E0902 08:09:25.849569      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:26.850357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:27.850350      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:28.851153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:29.852170      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:30.852596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:31.852723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:32.853100      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:33.853423      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:34.853992      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:35.854341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:36.854883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:37.855938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:38.856689      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:39.857369      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:40.857642      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:41.858725      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:42.859304      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:43.860168      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:44.861171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:45.861814      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:46.862156      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:47.862660      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:48.862745      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:49.862842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:50.863156      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:51.863947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:52.864228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:53.864829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:54.864888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:55.865986      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:56.867046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:57.867663      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:58.868093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:09:59.869045      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:00.869710      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:01.870079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:02.870340      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:03.870704      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:04.871753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:05.871959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:06.872271      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:07.873085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:08.873562      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:09.873957      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:10.874364      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:11.874758      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:12.874976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:13.874976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:14.876200      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:15.876994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:16.877315      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:17.878021      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:18.878628      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:19.879619      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:20.880508      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:21.881192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:22.881995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:23.882306      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:24.883194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:25.883472      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:26.883724      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:27.883988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:28.884179      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:29.884981      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:30.885943      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:31.886482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:32.886563      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:33.886881      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:10:34.524508 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6978" for this suite. @ 09/02/25 08:10:34.538
• [73.148 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 09/02/25 08:10:34.556
  I0902 08:10:34.556428 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 08:10:34.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:10:34.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:10:34.621
  I0902 08:10:34.664940 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:10:34.887950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:35.888443      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:36.889460      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:37.889971      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:38.890625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:39.890916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:40.890978      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:41.891097      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:42.891864      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:43.892890      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:44.893787      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:45.893970      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:46.894622      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:47.895187      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:48.896161      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:49.897039      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:50.897220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:51.898220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:52.898977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:53.899630      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:54.900204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:55.900589      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:56.900799      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:57.900882      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:58.901816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:10:59.902075      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:00.902711      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:01.902856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:02.903484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:03.904083      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:04.904693      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:05.904934      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:06.905937      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:07.906793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:08.907011      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:09.907982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:10.908818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:11.909510      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:12.909673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:13.909973      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:14.910846      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:15.910990      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:16.912093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:17.912323      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:18.912490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:19.912884      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:20.912849      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:21.913655      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:22.914110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:23.914213      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:24.914642      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:25.914511      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:26.915338      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:27.915901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:28.916993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:29.918028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:30.919159      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:31.919401      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:32.920353      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:33.921263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:11:34.675233 16 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/02/25 08:11:34.689
  STEP: Adding a custom resource @ 09/02/25 08:11:34.689
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/02/25 08:11:34.71
  I0902 08:11:34.735210 16 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/02/25 08:11:34.735
  E0902 08:11:34.921654      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:35.922403      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/02/25 08:11:36.752
  I0902 08:11:36.765610 16 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/02/25 08:11:36.765
  E0902 08:11:36.922746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:37.922947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/02/25 08:11:38.784
  I0902 08:11:38.796057 16 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0902 08:11:38.923281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:11:39.338025 16 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/02/25 08:11:39.382
  STEP: Removing a custom resource @ 09/02/25 08:11:39.42
  STEP: Removing a custom resource @ 09/02/25 08:11:39.442
  I0902 08:11:39.465147 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3986" for this suite. @ 09/02/25 08:11:39.472
• [64.929 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/02/25 08:11:39.485
  I0902 08:11:39.485812 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:11:39.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:11:39.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:11:39.523
  STEP: Setting up server cert @ 09/02/25 08:11:39.561
  E0902 08:11:39.923090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:11:40.48
  STEP: Deploying the webhook pod @ 09/02/25 08:11:40.496
  STEP: Wait for the deployment to be ready @ 09/02/25 08:11:40.543
  I0902 08:11:40.569214 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0902 08:11:40.923406      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:41.923587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:11:42.592
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:11:42.614
  E0902 08:11:42.924512      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:11:43.614922 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/02/25 08:11:43.631
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/02/25 08:11:43.666
  STEP: Creating a dummy validating-webhook-configuration object @ 09/02/25 08:11:43.7
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/02/25 08:11:43.716
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/02/25 08:11:43.729
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/02/25 08:11:43.745
  E0902 08:11:43.925442      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:11:43.971926 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-55" for this suite. @ 09/02/25 08:11:43.986
  STEP: Destroying namespace "webhook-markers-9384" for this suite. @ 09/02/25 08:11:44.01
• [4.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/02/25 08:11:44.026
  I0902 08:11:44.026320 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:11:44.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:11:44.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:11:44.058
  STEP: Creating configMap with name configmap-test-volume-map-9f8cfdf4-1346-4c27-b0b2-cf8014cf6915 @ 09/02/25 08:11:44.064
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:11:44.073
  E0902 08:11:44.926097      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:45.926850      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:46.927952      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:47.928451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:11:48.128
  I0902 08:11:48.134247 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-eecbfb55-51c2-4a0f-b242-47724a19e200 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:11:48.147
  I0902 08:11:48.179370 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9177" for this suite. @ 09/02/25 08:11:48.187
• [4.178 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/02/25 08:11:48.204
  I0902 08:11:48.204888 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:11:48.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:11:48.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:11:48.238
  STEP: Creating service test in namespace statefulset-7638 @ 09/02/25 08:11:48.244
  STEP: Creating a new StatefulSet @ 09/02/25 08:11:48.252
  I0902 08:11:48.290439 16 wait.go:40] Found 0 stateful pods, waiting for 3
  E0902 08:11:48.929632      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:49.930503      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:50.931800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:51.931835      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:52.932045      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:53.932171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:54.932373      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:55.932857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:56.933065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:57.933363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:11:58.279710 16 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:11:58.279791 16 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:11:58.279814 16 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:11:58.303711 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-7638 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:11:58.631299 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:11:58.631508 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:11:58.631772 16 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0902 08:11:58.933959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:11:59.934927      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:00.935191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:01.935449      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:02.936141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:03.936186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:04.936489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:05.936762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:06.937232      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:07.938018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/02/25 08:12:08.648
  I0902 08:12:08.669205 16 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/02/25 08:12:08.669
  E0902 08:12:08.938850      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:09.940017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:10.940346      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:11.940601      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:12.941030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:13.942026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:14.941933      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:15.942490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:16.942902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:17.943084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/02/25 08:12:18.687
  I0902 08:12:18.696701 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-7638 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0902 08:12:18.944375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:12:19.025243 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:12:19.025351 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:12:19.025397 16 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0902 08:12:19.944299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:20.944122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:21.944879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:22.944624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:23.944829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:24.945331      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:25.945694      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:26.945825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:27.946197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:28.946492      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:12:29.060765 16 wait.go:158] Waiting for StatefulSet statefulset-7638/ss2 to complete update
  I0902 08:12:29.060975 16 wait.go:165] Waiting for Pod statefulset-7638/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0902 08:12:29.061075 16 wait.go:165] Waiting for Pod statefulset-7638/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0902 08:12:29.947195      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:30.947919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:31.948236      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:32.948295      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:33.948597      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:34.949596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:35.950058      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:36.950410      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:37.950788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:38.950809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:12:39.071036 16 wait.go:158] Waiting for StatefulSet statefulset-7638/ss2 to complete update
  I0902 08:12:39.071138 16 wait.go:165] Waiting for Pod statefulset-7638/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0902 08:12:39.951003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:40.951266      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:41.951431      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:42.951834      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:43.951916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:44.953035      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:45.953415      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:46.953375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:47.953776      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:48.953845      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:12:49.072066 16 wait.go:158] Waiting for StatefulSet statefulset-7638/ss2 to complete update
  I0902 08:12:49.072148 16 wait.go:165] Waiting for Pod statefulset-7638/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0902 08:12:49.954402      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:50.954633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:51.955146      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:52.956065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:53.958217      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:54.958605      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:55.958874      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:56.959028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:57.959192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:12:58.959387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:12:59.069100 16 wait.go:158] Waiting for StatefulSet statefulset-7638/ss2 to complete update
  E0902 08:12:59.959675      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:00.959767      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:01.961029      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:02.961133      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:03.961681      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:04.962153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:05.963265      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:06.964069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:07.965289      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:08.964823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/02/25 08:13:09.064
  I0902 08:13:09.064818 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-7638 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0902 08:13:09.337724 16 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0902 08:13:09.337852 16 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0902 08:13:09.337909 16 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0902 08:13:09.965164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:10.965324      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:11.965722      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:12.966147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:13.966323      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:14.966729      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:15.967825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:16.967341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:17.967832      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:18.967845      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:13:19.419892 16 statefulset.go:2510] Updating stateful set ss2
  E0902 08:13:19.968968      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:20.970268      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:21.970879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:22.971222      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:23.971756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:24.972034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:25.972894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:26.973188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:27.974202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:28.974336      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/02/25 08:13:29.441
  I0902 08:13:29.451347 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=statefulset-7638 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0902 08:13:29.747106 16 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0902 08:13:29.747251 16 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0902 08:13:29.747322 16 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0902 08:13:29.974731      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:30.974836      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:31.975208      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:32.975299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:33.975939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:34.975855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:35.976249      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:36.976463      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:37.976811      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:38.977016      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:13:39.787097 16 statefulset.go:138] Deleting all statefulset in ns statefulset-7638
  I0902 08:13:39.810399 16 rest.go:152] Scaling statefulset ss2 to 0
  E0902 08:13:39.978037      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:40.978365      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:41.978857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:42.979234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:43.979269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:44.979905      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:45.981263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:46.980804      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:47.981241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:48.981769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:13:49.892631 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 08:13:49.898154 16 rest.go:90] Deleting statefulset ss2
  I0902 08:13:49.936579 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7638" for this suite. @ 09/02/25 08:13:49.957
• [121.772 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/02/25 08:13:49.977
  I0902 08:13:49.977838 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:13:49.982839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:13:49.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:50.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:50.017
  STEP: Creating Pod @ 09/02/25 08:13:50.024
  E0902 08:13:50.984435      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:51.984817      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/02/25 08:13:52.084
  I0902 08:13:52.085104 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3098 PodName:pod-sharedvolume-67d8ab8b-0f05-461f-9c99-b7f16e6b7d92 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:13:52.085175 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:13:52.085395 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-3098/pods/pod-sharedvolume-67d8ab8b-0f05-461f-9c99-b7f16e6b7d92/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0902 08:13:52.197238 16 exec_util.go:108] Exec stderr: ""
  I0902 08:13:52.197776 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3098" for this suite. @ 09/02/25 08:13:52.208
• [2.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/02/25 08:13:52.226
  I0902 08:13:52.226400 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 08:13:52.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:52.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:52.259
  E0902 08:13:52.986058      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:53.986080      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:54.986357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:55.986880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:13:56.311828 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3092" for this suite. @ 09/02/25 08:13:56.328
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/02/25 08:13:56.348
  I0902 08:13:56.348879 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:13:56.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:56.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:56.389
  I0902 08:13:56.399032 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:13:56.987447      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:57.987868      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:13:58.987938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:13:59.765029 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7992" for this suite. @ 09/02/25 08:13:59.774
• [3.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/02/25 08:13:59.79
  I0902 08:13:59.790361 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/02/25 08:13:59.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:13:59.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:13:59.835
  E0902 08:13:59.988582      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:00.988872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/02/25 08:14:01.943
  STEP: Cleaning up the configmap @ 09/02/25 08:14:01.96
  STEP: Cleaning up the pod @ 09/02/25 08:14:01.979
  E0902 08:14:01.989101      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:14:02.017118 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9571" for this suite. @ 09/02/25 08:14:02.03
• [2.253 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/02/25 08:14:02.043
  I0902 08:14:02.043853 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:14:02.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:02.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:02.092
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:14:02.13
  E0902 08:14:02.989298      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:03.989488      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:04.989848      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:05.990234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:14:06.212
  I0902 08:14:06.220841 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-05fb56ae-e8d2-4ca3-9af5-1348d17c9e23 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:14:06.257
  I0902 08:14:06.299202 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7591" for this suite. @ 09/02/25 08:14:06.312
• [4.290 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/02/25 08:14:06.333
  I0902 08:14:06.333778 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:14:06.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:06.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:06.374
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/02/25 08:14:06.38
  E0902 08:14:06.990499      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:07.990747      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:08.990977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:09.991181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:14:10.433
  I0902 08:14:10.442096 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-d208279c-1a30-4a1f-9944-030952dd2a12 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:14:10.458
  I0902 08:14:10.493090 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6178" for this suite. @ 09/02/25 08:14:10.504
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/02/25 08:14:10.519
  I0902 08:14:10.519194 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 08:14:10.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:10.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:10.554
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 08:14:10.602
  E0902 08:14:10.991452      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:11.991980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 08:14:12.66
  E0902 08:14:12.992958      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:13.993377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/02/25 08:14:14.714
  E0902 08:14:14.993186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:15.994409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/02/25 08:14:16.75
  I0902 08:14:16.770740 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9184" for this suite. @ 09/02/25 08:14:16.782
• [6.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/02/25 08:14:16.809
  I0902 08:14:16.810064 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:14:16.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:14:16.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:14:16.844
  STEP: Creating service test in namespace statefulset-3380 @ 09/02/25 08:14:16.85
  STEP: Creating a new StatefulSet @ 09/02/25 08:14:16.862
  I0902 08:14:16.899723 16 wait.go:40] Found 0 stateful pods, waiting for 3
  E0902 08:14:16.995754      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:17.995874      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:18.995838      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:19.996370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:20.996984      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:21.997084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:22.997988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:23.998348      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:24.999104      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:25.999141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:14:26.899576 16 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:14:26.899743 16 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:14:26.900024 16 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/02/25 08:14:26.92
  I0902 08:14:26.947858 16 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/02/25 08:14:26.948
  E0902 08:14:27.000083      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:28.001137      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:29.001472      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:30.001793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:31.002272      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:32.003020      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:33.003740      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:34.004623      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:35.005727      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:36.006014      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/02/25 08:14:36.979
  STEP: Performing a canary update @ 09/02/25 08:14:36.98
  E0902 08:14:37.007697      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:14:37.020296 16 statefulset.go:2510] Updating stateful set ss2
  I0902 08:14:37.056183 16 wait.go:74] Waiting for Pod statefulset-3380/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0902 08:14:38.007299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:39.007333      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:40.008466      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:41.008282      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:42.008495      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:43.008678      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:44.009059      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:45.009390      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:46.009721      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:47.010070      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/02/25 08:14:47.039
  I0902 08:14:47.208413 16 wait.go:40] Found 1 stateful pods, waiting for 3
  E0902 08:14:48.012848      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:49.011504      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:50.012051      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:51.012954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:52.013360      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:53.013853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:54.014377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:55.015081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:56.015166      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:57.015608      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:14:57.191606 16 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:14:57.191740 16 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:14:57.191779 16 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/02/25 08:14:57.218
  I0902 08:14:57.258809 16 statefulset.go:2510] Updating stateful set ss2
  I0902 08:14:57.299489 16 wait.go:74] Waiting for Pod statefulset-3380/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0902 08:14:58.016087      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:14:59.016700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:00.016970      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:01.017710      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:02.017806      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:03.018245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:04.019048      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:05.019827      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:06.020784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:07.021055      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:07.295798 16 statefulset.go:2510] Updating stateful set ss2
  I0902 08:15:07.358179 16 wait.go:56] Waiting for StatefulSet statefulset-3380/ss2 to complete update
  I0902 08:15:07.358301 16 wait.go:63] Waiting for Pod statefulset-3380/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0902 08:15:08.021175      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:09.021596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:10.022903      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:11.023434      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:12.023896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:13.024396      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:14.024899      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:15.025072      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:16.025346      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:17.025628      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:17.315042 16 statefulset.go:138] Deleting all statefulset in ns statefulset-3380
  I0902 08:15:17.327255 16 rest.go:152] Scaling statefulset ss2 to 0
  E0902 08:15:18.026249      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:19.026405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:20.026448      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:21.026645      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:22.027214      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:23.028267      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:24.028698      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:25.029199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:26.029842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:27.030164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:27.371022 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 08:15:27.387363 16 rest.go:90] Deleting statefulset ss2
  I0902 08:15:27.437572 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3380" for this suite. @ 09/02/25 08:15:27.459
• [70.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/02/25 08:15:27.498
  I0902 08:15:27.498891 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 08:15:27.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:27.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:27.559
  I0902 08:15:27.581358 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6811" for this suite. @ 09/02/25 08:15:27.594
• [0.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/02/25 08:15:27.619
  I0902 08:15:27.619378 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename ingress @ 09/02/25 08:15:27.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:27.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:27.687
  STEP: getting /apis @ 09/02/25 08:15:27.695
  STEP: getting /apis/networking.k8s.io @ 09/02/25 08:15:27.706
  STEP: getting /apis/networking.k8s.iov1 @ 09/02/25 08:15:27.708
  STEP: creating @ 09/02/25 08:15:27.711
  STEP: getting @ 09/02/25 08:15:27.747
  STEP: listing @ 09/02/25 08:15:27.758
  STEP: watching @ 09/02/25 08:15:27.766
  I0902 08:15:27.766469 16 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/02/25 08:15:27.769
  STEP: cluster-wide watching @ 09/02/25 08:15:27.776
  I0902 08:15:27.776060 16 ingress.go:198] starting watch
  STEP: patching @ 09/02/25 08:15:27.779
  STEP: updating @ 09/02/25 08:15:27.795
  I0902 08:15:27.821045 16 ingress.go:221] waiting for watch events with expected annotations
  I0902 08:15:27.821234 16 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/02/25 08:15:27.821
  STEP: updating /status @ 09/02/25 08:15:27.865
  STEP: get /status @ 09/02/25 08:15:27.885
  STEP: deleting @ 09/02/25 08:15:27.893
  STEP: deleting a collection @ 09/02/25 08:15:27.92
  I0902 08:15:27.957340 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3681" for this suite. @ 09/02/25 08:15:27.967
• [0.365 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/02/25 08:15:27.985
  I0902 08:15:27.985055 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 08:15:27.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:28.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:28.017
  E0902 08:15:28.030141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:29.030818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:30.030919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:31.031769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:32.032025      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:32.059351 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2865" for this suite. @ 09/02/25 08:15:32.068
• [4.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/02/25 08:15:32.082
  I0902 08:15:32.082792 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename certificates @ 09/02/25 08:15:32.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:32.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:32.111
  E0902 08:15:33.032887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/02/25 08:15:33.617
  STEP: getting /apis/certificates.k8s.io @ 09/02/25 08:15:33.634
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/02/25 08:15:33.636
  STEP: creating @ 09/02/25 08:15:33.641
  STEP: getting @ 09/02/25 08:15:33.679
  STEP: listing @ 09/02/25 08:15:33.685
  STEP: watching @ 09/02/25 08:15:33.691
  I0902 08:15:33.691430 16 certificates.go:316] starting watch
  STEP: patching @ 09/02/25 08:15:33.693
  STEP: updating @ 09/02/25 08:15:33.706
  I0902 08:15:33.718173 16 certificates.go:332] waiting for watch events with expected annotations
  I0902 08:15:33.719130 16 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/02/25 08:15:33.719
  STEP: patching /approval @ 09/02/25 08:15:33.726
  STEP: updating /approval @ 09/02/25 08:15:33.737
  STEP: getting /status @ 09/02/25 08:15:33.748
  STEP: patching /status @ 09/02/25 08:15:33.756
  STEP: updating /status @ 09/02/25 08:15:33.783
  STEP: deleting @ 09/02/25 08:15:33.804
  STEP: deleting a collection @ 09/02/25 08:15:33.83
  I0902 08:15:33.860010 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4086" for this suite. @ 09/02/25 08:15:33.869
• [1.811 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/02/25 08:15:33.893
  I0902 08:15:33.893841 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:15:33.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:33.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:33.935
  STEP: create the container @ 09/02/25 08:15:33.941
  W0902 08:15:33.990863      16 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/02/25 08:15:33.991
  E0902 08:15:34.033132      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:35.034219      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:36.035130      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/02/25 08:15:37.034
  E0902 08:15:37.035164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: the container should be terminated @ 09/02/25 08:15:37.042
  STEP: the termination message should be set @ 09/02/25 08:15:37.042
  I0902 08:15:37.042300 16 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/02/25 08:15:37.042
  I0902 08:15:37.084137 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5314" for this suite. @ 09/02/25 08:15:37.099
• [3.227 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/02/25 08:15:37.122
  I0902 08:15:37.122307 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:15:37.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:37.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:37.165
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/02/25 08:15:37.17
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/02/25 08:15:37.17
  STEP: creating a pod to probe DNS @ 09/02/25 08:15:37.17
  STEP: submitting the pod to kubernetes @ 09/02/25 08:15:37.17
  E0902 08:15:38.035770      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:39.036060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:15:39.223
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:15:39.234
  I0902 08:15:39.278575 16 dns_common.go:546] DNS probes using dns-2424/dns-test-e4a3dc81-9666-41ff-a0b9-d8768e1957c3 succeeded

  STEP: deleting the pod @ 09/02/25 08:15:39.278
  I0902 08:15:39.313946 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2424" for this suite. @ 09/02/25 08:15:39.326
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/02/25 08:15:39.346
  I0902 08:15:39.346456 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:15:39.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:39.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:39.392
  STEP: Setting up server cert @ 09/02/25 08:15:39.433
  E0902 08:15:40.036569      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:15:40.638
  STEP: Deploying the webhook pod @ 09/02/25 08:15:40.649
  STEP: Wait for the deployment to be ready @ 09/02/25 08:15:40.675
  I0902 08:15:40.689068 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:15:41.036974      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:42.037825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:15:42.721
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:15:42.759
  E0902 08:15:43.037896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:43.759379 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/02/25 08:15:43.774
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/02/25 08:15:43.822
  STEP: Creating a configMap that should not be mutated @ 09/02/25 08:15:43.874
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/02/25 08:15:43.897
  STEP: Creating a configMap that should be mutated @ 09/02/25 08:15:43.913
  E0902 08:15:44.038776      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:44.056967 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9271" for this suite. @ 09/02/25 08:15:44.064
  STEP: Destroying namespace "webhook-markers-292" for this suite. @ 09/02/25 08:15:44.078
• [4.746 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/02/25 08:15:44.094
  I0902 08:15:44.095015 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:15:44.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:44.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:44.136
  I0902 08:15:44.146370 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3241" for this suite. @ 09/02/25 08:15:44.166
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/02/25 08:15:44.183
  I0902 08:15:44.183088 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename proxy @ 09/02/25 08:15:44.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:44.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:44.229
  I0902 08:15:44.233562 16 proxy.go:293] Creating pod...
  E0902 08:15:45.041375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:46.041749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:46.280782 16 proxy.go:317] Creating service...
  I0902 08:15:46.301795 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/DELETE
  I0902 08:15:46.323077 16 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 08:15:46.323162 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/GET
  I0902 08:15:46.334551 16 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0902 08:15:46.334630 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/HEAD
  I0902 08:15:46.342205 16 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0902 08:15:46.342478 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/OPTIONS
  I0902 08:15:46.351144 16 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 08:15:46.351201 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/PATCH
  I0902 08:15:46.358317 16 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 08:15:46.358372 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/POST
  I0902 08:15:46.366654 16 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 08:15:46.367301 16 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/pods/agnhost/proxy/some/path/with/PUT
  I0902 08:15:46.374879 16 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 08:15:46.375077 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/DELETE
  I0902 08:15:46.391914 16 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 08:15:46.392195 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/GET
  I0902 08:15:46.402980 16 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0902 08:15:46.403094 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/HEAD
  I0902 08:15:46.413805 16 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0902 08:15:46.414067 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/OPTIONS
  I0902 08:15:46.424309 16 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 08:15:46.424579 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/PATCH
  I0902 08:15:46.433693 16 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 08:15:46.433801 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/POST
  I0902 08:15:46.447562 16 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 08:15:46.447757 16 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4975/services/test-service/proxy/some/path/with/PUT
  I0902 08:15:46.459365 16 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 08:15:46.459859 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4975" for this suite. @ 09/02/25 08:15:46.467
• [2.299 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 09/02/25 08:15:46.482
  I0902 08:15:46.482856 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:15:46.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:46.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:46.515
  STEP: Starting the proxy @ 09/02/25 08:15:46.52
  I0902 08:15:46.521705 16 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-3426 proxy --unix-socket=/tmp/kubectl-proxy-unix2839465387/test'
  STEP: retrieving proxy /api/ output @ 09/02/25 08:15:46.658
  I0902 08:15:46.662241 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3426" for this suite. @ 09/02/25 08:15:46.672
• [0.205 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/02/25 08:15:46.689
  I0902 08:15:46.689861 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename containers @ 09/02/25 08:15:46.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:46.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:46.722
  STEP: Creating a pod to test override all @ 09/02/25 08:15:46.729
  E0902 08:15:47.042219      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:48.042822      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:49.043783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:50.044049      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:15:50.775
  I0902 08:15:50.782893 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod client-containers-08f8eee2-9a0f-4d92-b3b6-d111835a7b18 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:15:50.822
  I0902 08:15:50.856363 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1750" for this suite. @ 09/02/25 08:15:50.867
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/02/25 08:15:50.886
  I0902 08:15:50.886761 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename discovery @ 09/02/25 08:15:50.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:50.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:50.924
  STEP: Setting up server cert @ 09/02/25 08:15:50.938
  E0902 08:15:51.044800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:52.045307      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:15:52.757892 16 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0902 08:15:52.760367 16 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0902 08:15:52.760436 16 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0902 08:15:52.760474 16 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0902 08:15:52.760573 16 discovery.go:139] Checking APIGroup: apps
  I0902 08:15:52.762811 16 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0902 08:15:52.762860 16 discovery.go:148] Versions found [{apps/v1 v1}]
  I0902 08:15:52.762901 16 discovery.go:154] apps/v1 matches apps/v1
  I0902 08:15:52.762917 16 discovery.go:139] Checking APIGroup: events.k8s.io
  I0902 08:15:52.764558 16 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0902 08:15:52.764628 16 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0902 08:15:52.764722 16 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0902 08:15:52.764758 16 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0902 08:15:52.773580 16 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0902 08:15:52.773673 16 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0902 08:15:52.773698 16 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0902 08:15:52.773714 16 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0902 08:15:52.775330 16 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0902 08:15:52.775396 16 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0902 08:15:52.775424 16 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0902 08:15:52.775449 16 discovery.go:139] Checking APIGroup: autoscaling
  I0902 08:15:52.777209 16 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0902 08:15:52.777264 16 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0902 08:15:52.777283 16 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0902 08:15:52.777299 16 discovery.go:139] Checking APIGroup: batch
  I0902 08:15:52.780829 16 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0902 08:15:52.780903 16 discovery.go:148] Versions found [{batch/v1 v1}]
  I0902 08:15:52.780939 16 discovery.go:154] batch/v1 matches batch/v1
  I0902 08:15:52.780972 16 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0902 08:15:52.782861 16 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0902 08:15:52.782972 16 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0902 08:15:52.782994 16 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0902 08:15:52.783010 16 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0902 08:15:52.785726 16 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0902 08:15:52.785866 16 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0902 08:15:52.785890 16 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0902 08:15:52.785945 16 discovery.go:139] Checking APIGroup: policy
  I0902 08:15:52.787852 16 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0902 08:15:52.787902 16 discovery.go:148] Versions found [{policy/v1 v1}]
  I0902 08:15:52.787920 16 discovery.go:154] policy/v1 matches policy/v1
  I0902 08:15:52.787936 16 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0902 08:15:52.789351 16 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0902 08:15:52.789726 16 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0902 08:15:52.789913 16 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0902 08:15:52.789947 16 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0902 08:15:52.791753 16 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0902 08:15:52.791802 16 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0902 08:15:52.791820 16 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0902 08:15:52.791835 16 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0902 08:15:52.794771 16 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0902 08:15:52.794847 16 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0902 08:15:52.794909 16 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0902 08:15:52.794929 16 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0902 08:15:52.796500 16 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0902 08:15:52.796624 16 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0902 08:15:52.796672 16 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0902 08:15:52.796690 16 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0902 08:15:52.799690 16 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0902 08:15:52.799744 16 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0902 08:15:52.799766 16 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0902 08:15:52.799782 16 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0902 08:15:52.801453 16 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0902 08:15:52.801852 16 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0902 08:15:52.802035 16 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0902 08:15:52.802200 16 discovery.go:139] Checking APIGroup: node.k8s.io
  I0902 08:15:52.806249 16 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0902 08:15:52.806305 16 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0902 08:15:52.806324 16 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0902 08:15:52.806339 16 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0902 08:15:52.811749 16 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0902 08:15:52.811852 16 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0902 08:15:52.812043 16 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0902 08:15:52.812071 16 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0902 08:15:52.813980 16 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0902 08:15:52.814032 16 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0902 08:15:52.814056 16 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0902 08:15:52.814193 16 discovery.go:139] Checking APIGroup: cilium.io
  I0902 08:15:52.815921 16 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0902 08:15:52.815997 16 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0902 08:15:52.816032 16 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0902 08:15:52.816294 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7092" for this suite. @ 09/02/25 08:15:52.825
• [1.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/02/25 08:15:52.844
  I0902 08:15:52.844446 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:15:52.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:52.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:52.881
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/02/25 08:15:52.887
  E0902 08:15:53.046328      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:54.046869      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:55.047953      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:56.049362      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:15:56.957
  I0902 08:15:56.965571 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-dd394c61-30a8-451b-a317-008a91abbdd5 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:15:56.989
  I0902 08:15:57.035648 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2528" for this suite. @ 09/02/25 08:15:57.044
  E0902 08:15:57.050230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 09/02/25 08:15:57.06
  I0902 08:15:57.060640 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:15:57.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:15:57.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:15:57.108
  STEP: Creating service test in namespace statefulset-3301 @ 09/02/25 08:15:57.114
  I0902 08:15:57.164945 16 wait.go:40] Found 0 stateful pods, waiting for 1
  E0902 08:15:58.051205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:15:59.052149      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:00.053212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:01.053876      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:02.054244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:03.054796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:04.054994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:05.055405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:06.055871      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:07.056082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:07.166762 16 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/02/25 08:16:07.181
  I0902 08:16:07.238401 16 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:16:07.238495 16 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0902 08:16:08.056747      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:09.056752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:10.057013      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:11.057904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:12.058054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:13.059347      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:14.058926      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:15.059197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:16.059760      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:17.059851      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:17.227483 16 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0902 08:16:17.227615 16 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/02/25 08:16:17.241
  STEP: Delete all of the StatefulSets @ 09/02/25 08:16:17.249
  STEP: Verify that StatefulSets have been deleted @ 09/02/25 08:16:17.269
  I0902 08:16:17.276915 16 statefulset.go:138] Deleting all statefulset in ns statefulset-3301
  I0902 08:16:17.332749 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3301" for this suite. @ 09/02/25 08:16:17.406
• [20.442 seconds]
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 09/02/25 08:16:17.502
  I0902 08:16:17.502315 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:16:17.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:17.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:17.599
  STEP: Creating ServiceAccount "e2e-sa-7mxsh"  @ 09/02/25 08:16:17.606
  I0902 08:16:17.618012 16 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7mxsh"  @ 09/02/25 08:16:17.619
  I0902 08:16:17.654696 16 service_accounts.go:868] AutomountServiceAccountToken: true
  I0902 08:16:17.655132 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8372" for this suite. @ 09/02/25 08:16:17.667
• [0.186 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/02/25 08:16:17.688
  I0902 08:16:17.688259 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:16:17.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:17.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:17.746
  STEP: Creating secret with name secret-test-68f80760-fdcb-43e1-8850-0a8afb94ecd9 @ 09/02/25 08:16:17.758
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:16:17.771
  E0902 08:16:18.060896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:19.061446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:20.063048      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:21.062844      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:16:21.834
  I0902 08:16:21.850290 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-f0c249c4-ff89-4e13-a522-6359e5de3820 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:16:21.873
  I0902 08:16:21.928647 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-643" for this suite. @ 09/02/25 08:16:21.943
• [4.276 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/02/25 08:16:21.965
  I0902 08:16:21.965554 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:16:21.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:22.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:22.037
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/02/25 08:16:22.047
  E0902 08:16:22.065074      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:23.065191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:24.065572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:25.066245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:26.066715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:16:26.103
  I0902 08:16:26.111209 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-87b0ab08-04c4-4f6b-ae6d-ea4b1e2e920c container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:16:26.128
  I0902 08:16:26.166812 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5733" for this suite. @ 09/02/25 08:16:26.177
• [4.226 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/02/25 08:16:26.193
  I0902 08:16:26.193560 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename init-container @ 09/02/25 08:16:26.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:26.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:26.248
  STEP: creating the pod @ 09/02/25 08:16:26.254
  I0902 08:16:26.254512 16 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0902 08:16:27.067445      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:28.067587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:29.068385      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:29.282152 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4131" for this suite. @ 09/02/25 08:16:29.293
• [3.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/02/25 08:16:29.31
  I0902 08:16:29.310168 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:16:29.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:29.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:29.349
  I0902 08:16:29.354822 16 deployment.go:1645] Creating simple deployment test-new-deployment
  I0902 08:16:29.380888 16 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  E0902 08:16:30.068816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:31.070245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/02/25 08:16:31.418
  STEP: updating a scale subresource @ 09/02/25 08:16:31.425
  STEP: verifying the deployment Spec.Replicas was modified @ 09/02/25 08:16:31.44
  STEP: Patch a scale subresource @ 09/02/25 08:16:31.446
  I0902 08:16:31.495673 16 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ee6207b-d417-4741-b94f-0ce92677c8be",
      ResourceVersion: (string) (len=5) "19902",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:16:31.537397 16 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cccd036-a4f6-4cc0-9ff3-1c2223cee313",
      ResourceVersion: (string) (len=5) "19907",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "8ee6207b-d417-4741-b94f-0ce92677c8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 65 65 36 32 30  37 62 2d 64 34 31 37 2d  |\"8ee6207b-d417-|
              00000120  34 37 34 31 2d 62 39 34  66 2d 30 63 65 39 32 36  |4741-b94f-0ce926|
              00000130  37 37 63 38 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |77c8be\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:16:31.555616 16 deployment.go:68] Pod "test-new-deployment-685b768f58-7vpqk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-7vpqk",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84cfdb34-58cb-4334-ad3c-2542e74f7a45",
      ResourceVersion: (string) (len=5) "19906",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "0cccd036-a4f6-4cc0-9ff3-1c2223cee313",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 63  63 63 64 30 33 36 2d 61  |d\":\"0cccd036-a|
              00000090  34 66 36 2d 34 63 63 30  2d 39 66 66 33 2d 31 63  |4f6-4cc0-9ff3-1c|
              000000a0  32 32 32 33 63 65 65 33  31 33 5c 22 7d 22 3a 7b  |2223cee313\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9wqsj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9wqsj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:16:31.558725 16 deployment.go:68] Pod "test-new-deployment-685b768f58-8ntqh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-8ntqh",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3634dae0-1eee-4b6e-8a2f-9fafd5b2d6f2",
      ResourceVersion: (string) (len=5) "19897",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "0cccd036-a4f6-4cc0-9ff3-1c2223cee313",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 63  63 63 64 30 33 36 2d 61  |d\":\"0cccd036-a|
              00000090  34 66 36 2d 34 63 63 30  2d 39 66 66 33 2d 31 63  |4f6-4cc0-9ff3-1c|
              000000a0  32 32 32 33 63 65 65 33  31 33 5c 22 7d 22 3a 7b  |2223cee313\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 35 5c 22 7d 22 3a  |.233.66.135\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2zqf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2zqf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=13) "10.233.66.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397790,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://7929285bcee8e9d170691004313a44fed41c6b6beaa20fc3b1e259be140433d3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j2zqf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:16:31.562327 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-542" for this suite. @ 09/02/25 08:16:31.594
• [2.349 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/02/25 08:16:31.663
  I0902 08:16:31.665218 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename disruption @ 09/02/25 08:16:31.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:31.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:31.742
  STEP: creating the pdb @ 09/02/25 08:16:31.747
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:16:31.762
  E0902 08:16:32.070135      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:33.070851      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/02/25 08:16:33.77
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:16:33.791
  STEP: patching the pdb @ 09/02/25 08:16:33.801
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:16:33.829
  STEP: Waiting for the pdb to be deleted @ 09/02/25 08:16:33.858
  I0902 08:16:33.865061 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-942" for this suite. @ 09/02/25 08:16:33.875
• [2.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/02/25 08:16:33.894
  I0902 08:16:33.895021 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:16:33.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:33.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:33.924
  STEP: creating pod @ 09/02/25 08:16:33.929
  E0902 08:16:34.071374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:35.071764      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:35.981722 16 pods.go:83] Pod pod-hostip-376fe185-1b6a-4878-a138-fd61ddbd49ae has hostIP: 192.168.121.152
  I0902 08:16:35.982028 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9280" for this suite. @ 09/02/25 08:16:35.989
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/02/25 08:16:36.003
  I0902 08:16:36.003717 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:16:36.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:36.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:36.036
  E0902 08:16:36.072621      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/02/25 08:16:36.103
  E0902 08:16:37.073894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:16:37.445
  STEP: Deploying the webhook pod @ 09/02/25 08:16:37.461
  STEP: Wait for the deployment to be ready @ 09/02/25 08:16:37.506
  I0902 08:16:37.528568 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:16:38.073292      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:39.073681      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:39.560267 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 16, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 16, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 16, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 16, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:16:40.073805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:41.073868      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:16:41.566
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:16:41.597
  E0902 08:16:42.074320      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:42.598773 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/02/25 08:16:42.615
  STEP: create the configmap with a random name @ 09/02/25 08:16:42.668
  STEP: verify the configmap is mutated @ 09/02/25 08:16:42.711
  STEP: create the configmap with 'skip-me' name @ 09/02/25 08:16:42.711
  I0902 08:16:42.843794 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8456" for this suite. @ 09/02/25 08:16:42.851
  STEP: Destroying namespace "webhook-markers-9806" for this suite. @ 09/02/25 08:16:42.867
• [6.891 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/02/25 08:16:42.895
  I0902 08:16:42.895637 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:16:42.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:42.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:42.951
  STEP: create the deployment @ 09/02/25 08:16:42.957
  W0902 08:16:42.970975      16 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/02/25 08:16:42.971
  E0902 08:16:43.075287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/02/25 08:16:43.48
  STEP: wait for all rs to be garbage collected @ 09/02/25 08:16:43.494
  STEP: expected 0 pods, got 2 pods @ 09/02/25 08:16:43.534
  STEP: Gathering metrics @ 09/02/25 08:16:44.029
  E0902 08:16:44.075371      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:44.317147 16 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:16:44.317718 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8701" for this suite. @ 09/02/25 08:16:44.326
• [1.441 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/02/25 08:16:44.337
  I0902 08:16:44.337450 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:16:44.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:44.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:44.363
  I0902 08:16:44.467767 16 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 08:16:44.476
  E0902 08:16:45.075811      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:46.075916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up "test-rs" replicaset @ 09/02/25 08:16:46.499
  I0902 08:16:46.520360 16 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/02/25 08:16:46.52
  I0902 08:16:46.556610 16 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2557 with ReadyReplicas 1, AvailableReplicas 1
  I0902 08:16:46.621607 16 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2557 with ReadyReplicas 1, AvailableReplicas 1
  I0902 08:16:46.659786 16 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2557 with ReadyReplicas 1, AvailableReplicas 1
  I0902 08:16:46.679262 16 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2557 with ReadyReplicas 1, AvailableReplicas 1
  E0902 08:16:47.076938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:48.078839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:48.283330 16 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2557 with ReadyReplicas 2, AvailableReplicas 2
  I0902 08:16:48.690913 16 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-2557 with ReadyReplicas 3 found true
  I0902 08:16:48.691633 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2557" for this suite. @ 09/02/25 08:16:48.701
• [4.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/02/25 08:16:48.716
  I0902 08:16:48.716971 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 08:16:48.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:48.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:48.754
  STEP: Waiting for pod completion @ 09/02/25 08:16:48.786
  E0902 08:16:49.077660      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:50.078236      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:51.079087      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:52.078852      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:52.829658 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5304" for this suite. @ 09/02/25 08:16:52.841
• [4.139 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/02/25 08:16:52.857
  I0902 08:16:52.858006 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename disruption @ 09/02/25 08:16:52.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:52.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:52.894
  STEP: Waiting for the pdb to be processed @ 09/02/25 08:16:52.947
  E0902 08:16:53.079453      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:54.079403      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:55.081046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/02/25 08:16:55.096
  I0902 08:16:55.108720 16 disruption.go:691] running pods: 0 < 3
  E0902 08:16:56.080240      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:57.080686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:57.116664 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9532" for this suite. @ 09/02/25 08:16:57.126
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/02/25 08:16:57.143
  I0902 08:16:57.143723 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename fake-node @ 09/02/25 08:16:57.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:57.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:57.178
  STEP: Create "e2e-fake-node-6ljpq" @ 09/02/25 08:16:57.183
  STEP: Getting "e2e-fake-node-6ljpq" @ 09/02/25 08:16:57.192
  STEP: Patching "e2e-fake-node-6ljpq" @ 09/02/25 08:16:57.2
  STEP: Listing nodes with LabelSelector "e2e-fake-node-6ljpq=patched" @ 09/02/25 08:16:57.21
  STEP: Updating "e2e-fake-node-6ljpq" @ 09/02/25 08:16:57.225
  STEP: Delete "e2e-fake-node-6ljpq" @ 09/02/25 08:16:57.255
  STEP: Confirm deletion of "e2e-fake-node-6ljpq" @ 09/02/25 08:16:57.269
  I0902 08:16:57.275809 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-4350" for this suite. @ 09/02/25 08:16:57.284
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/02/25 08:16:57.3
  I0902 08:16:57.300419 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:16:57.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:16:57.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:16:57.346
  I0902 08:16:57.351768 16 deployment.go:1196] Creating deployment "webserver-deployment"
  I0902 08:16:57.366398 16 deployment.go:1200] Waiting for observed generation 1
  E0902 08:16:58.084568      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:16:59.083812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:16:59.424370 16 deployment.go:1205] Waiting for all required pods to come up
  I0902 08:16:59.472976 16 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/02/25 08:16:59.473
  E0902 08:17:00.084716      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:01.084871      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:01.613776 16 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0902 08:17:01.635168 16 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0902 08:17:01.663924 16 deployment.go:314] Updating deployment webserver-deployment
  I0902 08:17:01.664007 16 deployment.go:1224] Waiting for observed generation 2
  E0902 08:17:02.085207      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:03.085175      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:03.695361 16 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0902 08:17:03.734290 16 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0902 08:17:03.761717 16 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0902 08:17:03.797569 16 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0902 08:17:03.799257 16 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0902 08:17:03.809846 16 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0902 08:17:03.824758 16 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0902 08:17:03.824826 16 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0902 08:17:03.866918 16 deployment.go:314] Updating deployment webserver-deployment
  I0902 08:17:03.867043 16 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0902 08:17:03.895211 16 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0902 08:17:03.927564 16 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0902 08:17:04.086396      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:04.101334 16 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f92080d0-2194-4c8a-aa5d-a595d9284b3f",
      ResourceVersion: (string) (len=5) "20640",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:17:04.250381 16 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
      ResourceVersion: (string) (len=5) "20672",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f92080d0-2194-4c8a-aa5d-a595d9284b3f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 32 30 38 30  64 30 2d 32 31 39 34 2d  |\"f92080d0-2194-|
              00000120  34 63 38 61 2d 61 61 35  64 2d 61 35 39 35 64 39  |4c8a-aa5d-a595d9|
              00000130  32 38 34 62 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |284b3f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:17:04.253097 16 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0902 08:17:04.253574 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
      ResourceVersion: (string) (len=5) "20679",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f92080d0-2194-4c8a-aa5d-a595d9284b3f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 32 30 38 30  64 30 2d 32 31 39 34 2d  |\"f92080d0-2194-|
              00000120  34 63 38 61 2d 61 61 35  64 2d 61 35 39 35 64 39  |4c8a-aa5d-a595d9|
              00000130  32 38 34 62 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |284b3f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:17:04.377075 16 deployment.go:68] Pod "webserver-deployment-685b768f58-4tmnk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4tmnk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0bb4c47-76b9-4eb0-9ca1-800e68afd261",
      ResourceVersion: (string) (len=5) "20471",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 30 39 5c 22 7d 22 3a  |.233.64.209\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4wqp9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4wqp9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) (len=13) "10.233.64.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397819,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f02b46c2ada62b8d61d6125cc511c8b66029ec7cf1f9bbc36925c581f6e2436b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4wqp9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.380318 16 deployment.go:68] Pod "webserver-deployment-685b768f58-585c2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-585c2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7411e302-db60-42b5-885d-e7e141e81430",
      ResourceVersion: (string) (len=5) "20661",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-twwg2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-twwg2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.382311 16 deployment.go:68] Pod "webserver-deployment-685b768f58-5z547" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5z547",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a23612a-a95a-489f-bb1d-53d2560c31d9",
      ResourceVersion: (string) (len=5) "20461",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 31 5c 22 7d 22 3a  |.233.66.191\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p95nr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p95nr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=13) "10.233.66.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397819,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://52b992a027ad8381477599d2eac23b4972403e83774bc4b950b5ee7f4e52c800",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p95nr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.385245 16 deployment.go:68] Pod "webserver-deployment-685b768f58-65tgd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-65tgd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fedda8ac-a8bb-4d9b-9b17-69def778337d",
      ResourceVersion: (string) (len=5) "20666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rb5l2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rb5l2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.388300 16 deployment.go:68] Pod "webserver-deployment-685b768f58-9jr5q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9jr5q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be65067b-d6b8-44dd-ac3e-6eceee326a6d",
      ResourceVersion: (string) (len=5) "20503",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 32 35 5c 22 7d 22 3a  |.233.65.225\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnn4p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnn4p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.5"
        }
      },
      PodIP: (string) (len=13) "10.233.65.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397820,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://4002542c4e73ebe6eae04d79e02e2019a3cb3f659b36399ba3762919574614d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pnn4p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.397222 16 deployment.go:68] Pod "webserver-deployment-685b768f58-bvkn4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bvkn4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c0c190b-652f-48c7-8f85-408b0ad2becf",
      ResourceVersion: (string) (len=5) "20663",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nnfv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nnfv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.403043 16 deployment.go:68] Pod "webserver-deployment-685b768f58-cgqs4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cgqs4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74ede3ea-720d-4630-9c2c-6adf1d7d2cd8",
      ResourceVersion: (string) (len=5) "20469",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 37 30 5c 22 7d 22 3a  |.233.64.170\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g4wzm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g4wzm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) (len=13) "10.233.64.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397819,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d64ad913af80fc891d976a5882d8d494425ac0e9cbc4299378cb9f06cf670e28",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g4wzm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.410137 16 deployment.go:68] Pod "webserver-deployment-685b768f58-dh6tr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dh6tr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf43ff69-11aa-4d30-8d31-60c844fa0d4f",
      ResourceVersion: (string) (len=5) "20665",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ftvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ftvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5ftvk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.420869 16 deployment.go:68] Pod "webserver-deployment-685b768f58-f7gtf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f7gtf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96b5dfe2-a712-4bce-8423-18231abe9b37",
      ResourceVersion: (string) (len=5) "20664",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pwtlm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pwtlm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.423885 16 deployment.go:68] Pod "webserver-deployment-685b768f58-fc9fg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fc9fg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "234cf589-9bc5-4018-8c45-6d08e2127969",
      ResourceVersion: (string) (len=5) "20505",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 31 35 5c 22 7d 22 3a  |.233.65.115\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g2s7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g2s7j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.5"
        }
      },
      PodIP: (string) (len=13) "10.233.65.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397821,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0532471cc35e23feca47b6dfa876ce143df6546b7ea95d7cdf253b1b6d711ca5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g2s7j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.427849 16 deployment.go:68] Pod "webserver-deployment-685b768f58-gn9cv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gn9cv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cf3bb15-0f0d-418b-b52e-6d9f027a0690",
      ResourceVersion: (string) (len=5) "20659",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tsjwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tsjwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.430167 16 deployment.go:68] Pod "webserver-deployment-685b768f58-l7hn7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l7hn7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b19efa76-b4c7-4051-8ef6-1196b70ca118",
      ResourceVersion: (string) (len=5) "20631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plqxb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plqxb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-plqxb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.433424 16 deployment.go:68] Pod "webserver-deployment-685b768f58-l8s5b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l8s5b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7abe77bd-d211-4077-939a-8e3411de2633",
      ResourceVersion: (string) (len=5) "20474",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 33 5c 22 7d 22 3a 7b  |.233.64.23\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2r9x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2r9x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) (len=12) "10.233.64.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397819,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a469ab75150c2c3d8f62f59bd2d830994ed50d48e776f4e8f1dfe8e7850fa3d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j2r9x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.436240 16 deployment.go:68] Pod "webserver-deployment-685b768f58-n7wvc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n7wvc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da54f8b4-f1d1-423a-9cc4-b81ebbdebad8",
      ResourceVersion: (string) (len=5) "20660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-46xd2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-46xd2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.438335 16 deployment.go:68] Pod "webserver-deployment-685b768f58-nzt9d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nzt9d",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb556dd4-bc55-405a-a236-ffdccfca651a",
      ResourceVersion: (string) (len=5) "20645",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mgvjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mgvjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mgvjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.441840 16 deployment.go:68] Pod "webserver-deployment-685b768f58-pk872" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pk872",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df65054d-1e0e-48aa-9c58-0db3219a55cc",
      ResourceVersion: (string) (len=5) "20464",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  38 33 5c 22 7d 22 3a 7b  |.233.66.83\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlzwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlzwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397819,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=12) "10.233.66.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397819,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://5d47fe5ba8ccc03902502cb7bac9620c3ecaf072509ebb9d86e50913295128d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rlzwx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.456847 16 deployment.go:68] Pod "webserver-deployment-685b768f58-pmxkl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pmxkl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88be9d31-1a24-46b1-9083-aab5dab57513",
      ResourceVersion: (string) (len=5) "20671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-686pv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-686pv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-686pv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.504334 16 deployment.go:68] Pod "webserver-deployment-685b768f58-rn6lj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rn6lj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2e6550d-bac8-4d38-9d45-70dde24695a4",
      ResourceVersion: (string) (len=5) "20658",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wcv2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wcv2p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.509787 16 deployment.go:68] Pod "webserver-deployment-685b768f58-xv7qg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xv7qg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "956f1361-b9c8-4b22-9d42-e5af7c8da6a8",
      ResourceVersion: (string) (len=5) "20678",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ww86b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ww86b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ww86b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.515108 16 deployment.go:68] Pod "webserver-deployment-685b768f58-zxplz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zxplz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac17ccc0-a5a1-4f4f-894d-652a2af85bed",
      ResourceVersion: (string) (len=5) "20508",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7fda15f4-a441-44e7-aa5d-536d8973016b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  64 61 31 35 66 34 2d 61  |d\":\"7fda15f4-a|
              00000090  34 34 31 2d 34 34 65 37  2d 61 61 35 64 2d 35 33  |441-44e7-aa5d-53|
              000000a0  36 64 38 39 37 33 30 31  36 62 5c 22 7d 22 3a 7b  |6d8973016b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  34 30 5c 22 7d 22 3a 7b  |.233.65.40\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9b2ng",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9b2ng",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.5"
        }
      },
      PodIP: (string) (len=12) "10.233.65.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892397820,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b0850122da6e43dcbe804cd091c35eaebee1adf991ebb8bd0da959f282ba79c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9b2ng",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.535049 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-56g9w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-56g9w",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac75bb78-3653-4908-9477-8f606e07e7fe",
      ResourceVersion: (string) (len=5) "20648",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jm6ln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jm6ln",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jm6ln",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.551100 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7ql58" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7ql58",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a035b8cb-d6b2-4b6a-a4ba-cc7fd2e1a184",
      ResourceVersion: (string) (len=5) "20668",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bksv6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bksv6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.555414 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-d7vtb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-d7vtb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4466221b-800f-4996-8f2f-d242ecbd0070",
      ResourceVersion: (string) (len=5) "20638",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpdlr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpdlr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mpdlr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.562464 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fchdc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fchdc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "406b980b-aea3-4e47-b263-b962059881d2",
      ResourceVersion: (string) (len=5) "20641",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29npr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29npr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.566943 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jvth9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jvth9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "777a8499-81f9-4dec-9ad8-7488f29918aa",
      ResourceVersion: (string) (len=5) "20560",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8kd2l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8kd2l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8kd2l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.572838 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ql9ct" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ql9ct",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a691771f-88f1-405f-9a2a-e77cb0d614f5",
      ResourceVersion: (string) (len=5) "20688",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrx78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrx78",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qrx78",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.581301 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tmbm6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tmbm6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc171d2f-cd27-44d4-9bd6-6e7ce8370ee0",
      ResourceVersion: (string) (len=5) "20561",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qfvzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qfvzs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qfvzs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.587301 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tw6js" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tw6js",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e69d553-68e1-4e14-bf00-93efcb6ce0b8",
      ResourceVersion: (string) (len=5) "20540",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29vkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29vkt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-29vkt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.595872 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vpwcc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vpwcc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cdffe7b-2c9c-48cb-a412-bc4d0fefdf8c",
      ResourceVersion: (string) (len=5) "20681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmqw6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmqw6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tmqw6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.601856 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vsxvs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vsxvs",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75553fcb-8bf5-4999-bae6-e305ae7a3954",
      ResourceVersion: (string) (len=5) "20677",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4bf6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4bf6w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.620595 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wcsrk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wcsrk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca0ded7d-0171-48b5-9c0a-14a1c838ea92",
      ResourceVersion: (string) (len=5) "20526",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7f2fn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7f2fn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7f2fn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.633976 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wjx6j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wjx6j",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26da5617-d4bd-4d97-8f03-68eeee4e0b12",
      ResourceVersion: (string) (len=5) "20683",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jhfzp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jhfzp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jhfzp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.645367 16 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wz54r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wz54r",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0f69502-d473-4f61-ac8e-871c22c33dd5",
      ResourceVersion: (string) (len=5) "20541",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "07538122-00a2-4ec8-8ba1-652076cc1c30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 33 38 31 32 32 2d 30  |d\":\"07538122-0|
              00000090  30 61 32 2d 34 65 63 38  2d 38 62 61 31 2d 36 35  |0a2-4ec8-8ba1-65|
              000000a0  32 30 37 36 63 63 31 63  33 30 5c 22 7d 22 3a 7b  |2076cc1c30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtjxw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtjxw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892397821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892397821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xtjxw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:17:04.652157 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1796" for this suite. @ 09/02/25 08:17:04.818
  E0902 08:17:05.111182      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [7.884 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/02/25 08:17:05.193
  I0902 08:17:05.193866 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:17:05.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:05.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:05.978
  E0902 08:17:06.142394      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:17:06.142
  E0902 08:17:07.149019      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:08.149355      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:09.150674      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:10.150902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:17:10.757
  I0902 08:17:10.767820 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-4de4d858-d70d-4a08-bb69-c9675420ac87 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:17:10.791
  I0902 08:17:10.900711 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1440" for this suite. @ 09/02/25 08:17:10.943
• [5.844 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/02/25 08:17:11.05
  I0902 08:17:11.050166 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:17:11.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:11.123
  E0902 08:17:11.151283      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:11.158
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:17:11.183
  E0902 08:17:12.151918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:13.152185      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:14.153744      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:15.152797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:17:15.701
  I0902 08:17:15.709552 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-16fe56da-4f62-48c2-9ad1-50311554e3df container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:17:15.765
  I0902 08:17:15.830544 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-504" for this suite. @ 09/02/25 08:17:15.856
• [4.834 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/02/25 08:17:15.884
  I0902 08:17:15.884714 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:17:15.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:15.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:15.915
  STEP: Creating projection with secret that has name projected-secret-test-map-baa6747e-bb52-4f15-ac58-404fdd4cd3e6 @ 09/02/25 08:17:15.92
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:17:15.928
  E0902 08:17:16.152982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:17.154161      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:18.154492      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:19.155146      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:17:19.967
  I0902 08:17:19.974613 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-secrets-eb5a5840-e72c-4d22-8c87-2d7b64b8b7b9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:17:19.989
  I0902 08:17:20.020070 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-673" for this suite. @ 09/02/25 08:17:20.028
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/02/25 08:17:20.044
  I0902 08:17:20.044217 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:17:20.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:20.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:20.077
  I0902 08:17:20.083392 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: creating the pod @ 09/02/25 08:17:20.085
  STEP: submitting the pod to kubernetes @ 09/02/25 08:17:20.085
  E0902 08:17:20.155645      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:21.156253      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:22.156991      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:22.191346 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4395" for this suite. @ 09/02/25 08:17:22.215
• [2.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/02/25 08:17:22.243
  I0902 08:17:22.243187 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:17:22.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:22.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:22.285
  E0902 08:17:23.158140      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:24.158309      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:25.159056      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:26.160128      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:27.160301      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:28.160752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:29.161128      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:30.161241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:31.162400      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:32.162239      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:33.163089      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:34.163718      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:35.164837      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:36.165558      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:37.165940      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:38.166044      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:39.167018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:40.167438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:41.167693      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:42.167909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:43.167867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:44.168137      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:45.168230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:46.168421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:46.440715 16 container_probe.go:92] Container started at 2025-09-02 08:17:23 +0000 UTC, pod became ready at 2025-09-02 08:17:46 +0000 UTC
  I0902 08:17:46.440973 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9808" for this suite. @ 09/02/25 08:17:46.449
• [24.219 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/02/25 08:17:46.462
  I0902 08:17:46.462930 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:17:46.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:46.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:46.506
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/02/25 08:17:46.51
  I0902 08:17:46.511512 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:17:47.169353      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:48.169862      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:48.943097 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:17:49.170095      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:50.171001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:51.171130      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:52.173191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:53.173578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:54.173889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:55.173995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:56.174403      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:57.174929      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:17:58.176029      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:17:58.530199 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4216" for this suite. @ 09/02/25 08:17:58.556
• [12.107 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/02/25 08:17:58.57
  I0902 08:17:58.570575 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:17:58.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:17:58.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:17:58.626
  STEP: creating service in namespace services-3724 @ 09/02/25 08:17:58.633
  STEP: creating service affinity-nodeport-transition in namespace services-3724 @ 09/02/25 08:17:58.633
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3724 @ 09/02/25 08:17:58.664
  I0902 08:17:58.690680      16 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-3724, replica count: 3
  E0902 08:17:59.176833      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:00.177510      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:01.177681      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:18:01.742298      16 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 08:18:01.767509 16 resource.go:361] Creating new exec pod
  E0902 08:18:02.177784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:03.177859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:04.178793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:18:04.830697 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3724 exec execpod-affinityr4xsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0902 08:18:05.178901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:18:05.240160 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.7.21) 80 port [tcp/http] succeeded!\n"
  I0902 08:18:05.240342 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:05.241024 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3724 exec execpod-affinityr4xsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.21 80'
  I0902 08:18:05.506615 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.21 80\nConnection to 10.233.7.21 80 port [tcp/http] succeeded!\n"
  I0902 08:18:05.506708 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:05.506989 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3724 exec execpod-affinityr4xsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.22 31938'
  I0902 08:18:05.772403 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.22 31938\nConnection to 192.168.121.22 31938 port [tcp/*] succeeded!\n"
  I0902 08:18:05.772663 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:05.773183 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3724 exec execpod-affinityr4xsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.5 31938'
  I0902 08:18:06.043657 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.5 31938\nConnection to 192.168.121.5 31938 port [tcp/*] succeeded!\n"
  I0902 08:18:06.043739 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:18:06.065365 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3724 exec execpod-affinityr4xsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.5:31938/ ; done'
  E0902 08:18:06.178966      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:18:06.668757 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n"
  I0902 08:18:06.668869 16 builder.go:147] stdout: "\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-nmcpb\naffinity-nodeport-transition-xdfh5\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-nmcpb\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-xdfh5\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-xdfh5\naffinity-nodeport-transition-xdfh5\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-xdfh5\naffinity-nodeport-transition-9gbsw"
  I0902 08:18:06.668901 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.669385 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.669564 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.669590 16 service.go:242] Received response from host: affinity-nodeport-transition-nmcpb
  I0902 08:18:06.669768 16 service.go:242] Received response from host: affinity-nodeport-transition-xdfh5
  I0902 08:18:06.669789 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.669805 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.669966 16 service.go:242] Received response from host: affinity-nodeport-transition-nmcpb
  I0902 08:18:06.669994 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.670103 16 service.go:242] Received response from host: affinity-nodeport-transition-xdfh5
  I0902 08:18:06.670144 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.670168 16 service.go:242] Received response from host: affinity-nodeport-transition-xdfh5
  I0902 08:18:06.670184 16 service.go:242] Received response from host: affinity-nodeport-transition-xdfh5
  I0902 08:18:06.670200 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.670215 16 service.go:242] Received response from host: affinity-nodeport-transition-xdfh5
  I0902 08:18:06.670231 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:06.694669 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3724 exec execpod-affinityr4xsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.5:31938/ ; done'
  E0902 08:18:07.179236      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:18:07.281402 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:31938/\n"
  I0902 08:18:07.281496 16 builder.go:147] stdout: "\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw\naffinity-nodeport-transition-9gbsw"
  I0902 08:18:07.281632 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.281871 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282017 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282177 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282217 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282348 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282372 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282501 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282705 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282827 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282865 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.282881 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.283014 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.283032 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.283220 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.283357 16 service.go:242] Received response from host: affinity-nodeport-transition-9gbsw
  I0902 08:18:07.283676 16 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3724, will wait for the garbage collector to delete the pods @ 09/02/25 08:18:07.327
  I0902 08:18:07.409055 16 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 16.701672ms
  I0902 08:18:07.510213 16 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.141112ms
  E0902 08:18:08.179945      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:09.180615      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:10.180887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:18:10.686865 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3724" for this suite. @ 09/02/25 08:18:10.699
• [12.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/02/25 08:18:10.721
  I0902 08:18:10.721292 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 08:18:10.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:18:10.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:18:10.755
  STEP: Creating a suspended cronjob @ 09/02/25 08:18:10.761
  STEP: Ensuring no jobs are scheduled @ 09/02/25 08:18:10.776
  E0902 08:18:11.181765      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:12.182367      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:13.182732      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:14.182933      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:15.183465      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:16.183894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:17.184043      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:18.184641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:19.185179      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:20.185298      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:21.186027      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:22.186361      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:23.187175      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:24.188093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:25.188789      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:26.189377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:27.189638      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:28.190391      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:29.190790      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:30.191121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:31.192665      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:32.192459      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:33.192700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:34.192828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:35.193470      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:36.193304      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:37.193471      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:38.194222      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:39.194743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:40.195193      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:41.196441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:42.197174      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:43.197905      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:44.198111      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:45.199352      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:46.200119      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:47.200345      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:48.200765      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:49.201677      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:50.201729      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:51.202337      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:52.203026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:53.203747      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:54.204489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:55.204905      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:56.205725      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:57.205820      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:58.206041      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:18:59.206610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:00.207441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:01.207572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:02.208242      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:03.209439      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:04.209470      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:05.210229      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:06.210439      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:07.211931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:08.212186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:09.212986      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:10.214003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:11.214339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:12.214883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:13.216110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:14.217109      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:15.217285      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:16.217337      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:17.217982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:18.218190      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:19.218955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:20.219283      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:21.219489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:22.220233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:23.221134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:24.221502      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:25.224750      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:26.222817      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:27.223129      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:28.223846      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:29.224872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:30.225793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:31.226338      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:32.227001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:33.227269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:34.228595      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:35.229093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:36.230002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:37.229717      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:38.230016      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:39.230169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:40.230456      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:41.231487      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:42.231880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:43.232807      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:44.232914      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:45.233198      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:46.233795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:47.234402      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:48.234486      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:49.234730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:50.234857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:51.235234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:52.235794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:53.236308      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:54.236416      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:55.236620      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:56.237136      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:57.237478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:58.237483      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:19:59.238252      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:00.237954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:01.238759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:02.239206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:03.239871      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:04.240847      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:05.241930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:06.242169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:07.242380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:08.242684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:09.243018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:10.244062      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:11.244296      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:12.244560      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:13.244969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:14.245188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:15.245475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:16.245862      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:17.246605      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:18.246813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:19.247422      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:20.247865      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:21.248666      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:22.248445      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:23.249737      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:24.250105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:25.250344      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:26.250497      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:27.251148      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:28.251577      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:29.251798      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:30.251950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:31.252643      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:32.252930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:33.253473      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:34.254259      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:35.254727      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:36.255567      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:37.256272      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:38.256489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:39.257059      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:40.257234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:41.257420      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:42.257682      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:43.257756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:44.258126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:45.258404      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:46.259105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:47.260117      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:48.261166      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:49.261645      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:50.262359      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:51.262997      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:52.262825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:53.263586      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:54.264744      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:55.264903      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:56.266053      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:57.267038      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:58.267087      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:20:59.268193      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:00.268474      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:01.269016      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:02.269200      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:03.270633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:04.269749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:05.269889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:06.270859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:07.271047      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:08.272017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:09.272033      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:10.272091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:11.272723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:12.273960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:13.273831      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:14.274790      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:15.275150      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:16.275640      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:17.276311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:18.276379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:19.277194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:20.277718      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:21.277704      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:22.278393      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:23.278812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:24.279596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:25.279883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:26.279967      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:27.280629      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:28.281094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:29.281325      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:30.281781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:31.282664      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:32.282781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:33.282820      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:34.283459      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:35.284058      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:36.285286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:37.285865      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:38.286200      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:39.286840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:40.287014      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:41.287405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:42.288421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:43.288719      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:44.289452      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:45.290483      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:46.291487      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:47.292239      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:48.292469      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:49.292704      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:50.293662      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:51.294388      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:52.294578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:53.294912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:54.295779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:55.296823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:56.297142      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:57.297466      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:58.298070      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:21:59.298163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:00.298869      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:01.299948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:02.301138      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:03.302058      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:04.302132      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:05.302379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:06.302703      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:07.303134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:08.303757      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:09.303953      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:10.304188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:11.304126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:12.305131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:13.305306      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:14.305652      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:15.306105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:16.306833      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:17.307398      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:18.307777      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:19.309080      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:20.309301      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:21.309753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:22.309997      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:23.309995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:24.311245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:25.311477      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:26.311654      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:27.311796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:28.312855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:29.313340      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:30.314337      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:31.315042      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:32.315625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:33.315777      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:34.316943      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:35.317419      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:36.317444      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:37.317666      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:38.317826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:39.318020      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:40.318949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:41.319012      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:42.319844      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:43.320157      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:44.320791      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:45.321248      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:46.321488      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:47.322555      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:48.323010      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:49.323468      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:50.323777      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:51.324139      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:52.324362      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:53.324820      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:54.325424      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:55.326011      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:56.325923      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:57.326357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:58.326760      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:22:59.326723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:00.326976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:01.327705      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:02.327818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:03.328471      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:04.328359      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:05.328650      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:06.328781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:07.329745      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:08.329756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:09.329894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:10.330624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/02/25 08:23:10.777
  STEP: Removing cronjob @ 09/02/25 08:23:10.787
  I0902 08:23:10.803707 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8523" for this suite. @ 09/02/25 08:23:10.816
• [300.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/02/25 08:23:10.834
  I0902 08:23:10.834699 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:23:10.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:10.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:10.877
  STEP: creating a watch on configmaps @ 09/02/25 08:23:10.883
  STEP: creating a new configmap @ 09/02/25 08:23:10.89
  STEP: modifying the configmap once @ 09/02/25 08:23:10.9
  STEP: closing the watch once it receives two notifications @ 09/02/25 08:23:10.915
  I0902 08:23:10.915751 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5199  cd2c3662-b241-4a32-a333-12cc4108d9c2 22147 0 2025-09-02 08:23:10 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:23:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:23:10.916118 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5199  cd2c3662-b241-4a32-a333-12cc4108d9c2 22148 0 2025-09-02 08:23:10 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:23:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/02/25 08:23:10.916
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/02/25 08:23:10.93
  STEP: deleting the configmap @ 09/02/25 08:23:10.933
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/02/25 08:23:10.948
  I0902 08:23:10.948281 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5199  cd2c3662-b241-4a32-a333-12cc4108d9c2 22149 0 2025-09-02 08:23:10 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:23:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:23:10.948579 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5199  cd2c3662-b241-4a32-a333-12cc4108d9c2 22150 0 2025-09-02 08:23:10 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-02 08:23:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:23:10.948804 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5199" for this suite. @ 09/02/25 08:23:10.956
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/02/25 08:23:10.969
  I0902 08:23:10.969289 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:23:10.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:10.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:11.007
  STEP: creating service endpoint-test2 in namespace services-150 @ 09/02/25 08:23:11.011
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-150 to expose endpoints map[] @ 09/02/25 08:23:11.039
  I0902 08:23:11.084777 16 service.go:4460] successfully validated that service endpoint-test2 in namespace services-150 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-150 @ 09/02/25 08:23:11.084
  E0902 08:23:11.330741      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:12.331013      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-150 to expose endpoints map[pod1:[80]] @ 09/02/25 08:23:13.135
  I0902 08:23:13.157700 16 service.go:4460] successfully validated that service endpoint-test2 in namespace services-150 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/02/25 08:23:13.157
  I0902 08:23:13.157809 16 resource.go:361] Creating new exec pod
  E0902 08:23:13.331759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:14.332797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:15.333733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:16.186727 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-150 exec execpodm54ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0902 08:23:16.335026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:16.631918 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.11.46) 80 port [tcp/http] succeeded!\n"
  I0902 08:23:16.632113 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:23:16.632874 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-150 exec execpodm54ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.46 80'
  I0902 08:23:16.937284 16 builder.go:146] stderr: "+ + nc -v -t -w 2 10.233.11.46 80\necho hostName\nConnection to 10.233.11.46 80 port [tcp/http] succeeded!\n"
  I0902 08:23:16.937398 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-150 @ 09/02/25 08:23:16.937
  E0902 08:23:17.335853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:18.336407      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-150 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/02/25 08:23:18.983
  I0902 08:23:19.046662 16 service.go:4460] successfully validated that service endpoint-test2 in namespace services-150 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/02/25 08:23:19.046
  E0902 08:23:19.337350      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:20.047620 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-150 exec execpodm54ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0902 08:23:20.280659 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.11.46) 80 port [tcp/http] succeeded!\n"
  I0902 08:23:20.280770 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:23:20.281131 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-150 exec execpodm54ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.46 80'
  E0902 08:23:20.337814      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:20.574436 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.46 80\nConnection to 10.233.11.46 80 port [tcp/http] succeeded!\n"
  I0902 08:23:20.574714 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-150 @ 09/02/25 08:23:20.574
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-150 to expose endpoints map[pod2:[80]] @ 09/02/25 08:23:20.599
  E0902 08:23:21.338735      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:21.659907 16 service.go:4460] successfully validated that service endpoint-test2 in namespace services-150 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/02/25 08:23:21.66
  E0902 08:23:22.339951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:22.662745 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-150 exec execpodm54ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0902 08:23:22.917287 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.11.46) 80 port [tcp/http] succeeded!\n"
  I0902 08:23:22.917619 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:23:22.918130 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-150 exec execpodm54ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.46 80'
  I0902 08:23:23.175314 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.46 80\nConnection to 10.233.11.46 80 port [tcp/http] succeeded!\n"
  I0902 08:23:23.175672 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-150 @ 09/02/25 08:23:23.175
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-150 to expose endpoints map[] @ 09/02/25 08:23:23.208
  E0902 08:23:23.340902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:24.341162      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:25.233387 16 service.go:4460] successfully validated that service endpoint-test2 in namespace services-150 exposes endpoints map[]
  I0902 08:23:25.268000 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-150" for this suite. @ 09/02/25 08:23:25.278
• [14.327 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/02/25 08:23:25.297
  I0902 08:23:25.298073 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename subpath @ 09/02/25 08:23:25.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:25.337
  E0902 08:23:25.342455      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:25.344
  STEP: Setting up data @ 09/02/25 08:23:25.354
  STEP: Creating pod pod-subpath-test-secret-k6w7 @ 09/02/25 08:23:25.376
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 08:23:25.376
  E0902 08:23:26.341882      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:27.343883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:28.343999      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:29.344187      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:30.344564      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:31.345025      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:32.345397      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:33.345783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:34.345847      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:35.346046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:36.346684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:37.347350      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:38.347438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:39.349105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:40.347926      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:41.348441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:42.348992      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:43.349784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:44.350458      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:45.351101      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:46.352046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:47.351818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:48.352168      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:49.352840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:23:49.523
  I0902 08:23:49.532056 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-subpath-test-secret-k6w7 container test-container-subpath-secret-k6w7: <nil>
  STEP: delete the pod @ 09/02/25 08:23:49.573
  STEP: Deleting pod pod-subpath-test-secret-k6w7 @ 09/02/25 08:23:49.614
  I0902 08:23:49.614494 16 delete.go:62] Deleting pod "pod-subpath-test-secret-k6w7" in namespace "subpath-3748"
  I0902 08:23:49.620455 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3748" for this suite. @ 09/02/25 08:23:49.631
• [24.348 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/02/25 08:23:49.645
  I0902 08:23:49.645759 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:23:49.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:23:49.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:23:49.676
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-220.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-220.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/02/25 08:23:49.682
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-220.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-220.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/02/25 08:23:49.682
  STEP: creating a pod to probe /etc/hosts @ 09/02/25 08:23:49.682
  STEP: submitting the pod to kubernetes @ 09/02/25 08:23:49.682
  E0902 08:23:50.353419      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:51.353931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:23:51.73
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:23:51.739
  I0902 08:23:51.777032 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-220/dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6: the server could not find the requested resource (get pods dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6)
  I0902 08:23:51.777453 16 dns_common.go:506] Lookups using dns-220/dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6 failed for: [jessie_hosts@dns-querier-1]

  I0902 08:23:51.795296 16 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:23:51.819292 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:23:51.833200 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0902 08:23:52.354054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:53.354752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:54.355345      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:55.355636      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:56.356133      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:23:56.780364 16 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-220/dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6: the server could not find the requested resource (get pods dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6)
  I0902 08:23:56.780458 16 dns_common.go:506] Lookups using dns-220/dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6 failed for: [jessie_hosts@dns-querier-1]

  I0902 08:23:56.800632 16 dns_common.go:514] Pod client logs for webserver: 
  I0902 08:23:56.818130 16 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0902 08:23:56.837133 16 dns_common.go:514] Pod client logs for jessie-querier: 
  E0902 08:23:57.357197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:58.357963      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:23:59.361273      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:00.358230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:01.358381      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:24:01.770614 16 dns_common.go:546] DNS probes using dns-220/dns-test-d50a9359-10e5-478e-b3e1-38c32e83c5d6 succeeded

  STEP: deleting the pod @ 09/02/25 08:24:01.77
  I0902 08:24:01.804492 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-220" for this suite. @ 09/02/25 08:24:01.828
• [12.205 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/02/25 08:24:01.855
  I0902 08:24:01.856012 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename containers @ 09/02/25 08:24:01.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:01.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:01.887
  STEP: Creating a pod to test override command @ 09/02/25 08:24:01.893
  E0902 08:24:02.358835      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:03.360011      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:04.361950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:05.361243      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:05.943
  I0902 08:24:05.949024 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod client-containers-ce4d7cfb-1dc7-4ebf-8e29-c4c900c8cb1e container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:24:05.967
  I0902 08:24:05.999887 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5034" for this suite. @ 09/02/25 08:24:06.012
• [4.168 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/02/25 08:24:06.024
  I0902 08:24:06.024751 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename podtemplate @ 09/02/25 08:24:06.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:06.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:06.063
  I0902 08:24:06.145849 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3769" for this suite. @ 09/02/25 08:24:06.157
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/02/25 08:24:06.175
  I0902 08:24:06.175976 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:24:06.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:06.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:06.221
  I0902 08:24:06.329131 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6662" for this suite. @ 09/02/25 08:24:06.341
• [0.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/02/25 08:24:06.357
  I0902 08:24:06.357673 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename lease-test @ 09/02/25 08:24:06.361
  E0902 08:24:06.362167      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:06.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:06.397
  I0902 08:24:06.531644 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9864" for this suite. @ 09/02/25 08:24:06.54
• [0.198 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/02/25 08:24:06.556
  I0902 08:24:06.556295 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:24:06.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:06.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:06.59
  STEP: creating a new configmap @ 09/02/25 08:24:06.6
  STEP: modifying the configmap once @ 09/02/25 08:24:06.61
  STEP: modifying the configmap a second time @ 09/02/25 08:24:06.626
  STEP: deleting the configmap @ 09/02/25 08:24:06.642
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/02/25 08:24:06.663
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/02/25 08:24:06.668
  I0902 08:24:06.669220 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2550  b92b2233-022f-4ec7-9841-e2df19d2e6d9 22467 0 2025-09-02 08:24:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:06.669432 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2550  b92b2233-022f-4ec7-9841-e2df19d2e6d9 22468 0 2025-09-02 08:24:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:06.669626 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2550" for this suite. @ 09/02/25 08:24:06.686
• [0.151 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/02/25 08:24:06.707
  I0902 08:24:06.707063 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 08:24:06.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:06.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:06.753
  STEP: Creating a cronjob @ 09/02/25 08:24:06.758
  STEP: creating @ 09/02/25 08:24:06.758
  STEP: getting @ 09/02/25 08:24:06.771
  STEP: listing @ 09/02/25 08:24:06.783
  STEP: watching @ 09/02/25 08:24:06.792
  I0902 08:24:06.792864 16 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/02/25 08:24:06.796
  STEP: cluster-wide watching @ 09/02/25 08:24:06.806
  I0902 08:24:06.806618 16 cronjob.go:407] starting watch
  STEP: patching @ 09/02/25 08:24:06.81
  STEP: updating @ 09/02/25 08:24:06.832
  I0902 08:24:06.853974 16 cronjob.go:431] waiting for watch events with expected annotations
  I0902 08:24:06.854075 16 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/02/25 08:24:06.854
  STEP: updating /status @ 09/02/25 08:24:06.868
  STEP: get /status @ 09/02/25 08:24:06.898
  STEP: deleting @ 09/02/25 08:24:06.907
  STEP: deleting a collection @ 09/02/25 08:24:06.941
  I0902 08:24:06.967068 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1834" for this suite. @ 09/02/25 08:24:06.975
• [0.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 09/02/25 08:24:07.012
  I0902 08:24:07.012675 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:24:07.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:07.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:07.052
  STEP: Creating a pod to test service account token:  @ 09/02/25 08:24:07.057
  E0902 08:24:07.362724      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:08.362951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:09.363166      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:10.364691      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:11.105
  I0902 08:24:11.117304 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod test-pod-168bac2a-7aed-46c4-a765-a609af608dc3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:24:11.139
  I0902 08:24:11.193455 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-980" for this suite. @ 09/02/25 08:24:11.203
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/02/25 08:24:11.218
  I0902 08:24:11.218067 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:24:11.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:11.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:11.267
  STEP: Creating a ResourceQuota @ 09/02/25 08:24:11.273
  STEP: Getting a ResourceQuota @ 09/02/25 08:24:11.284
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/02/25 08:24:11.292
  STEP: Patching the ResourceQuota @ 09/02/25 08:24:11.298
  STEP: Deleting a Collection of ResourceQuotas @ 09/02/25 08:24:11.315
  STEP: Verifying the deleted ResourceQuota @ 09/02/25 08:24:11.339
  I0902 08:24:11.346786 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8855" for this suite. @ 09/02/25 08:24:11.359
  E0902 08:24:11.364757      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/02/25 08:24:11.381
  I0902 08:24:11.381486 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename events @ 09/02/25 08:24:11.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:11.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:11.438
  STEP: creating a test event @ 09/02/25 08:24:11.448
  STEP: listing all events in all namespaces @ 09/02/25 08:24:11.458
  STEP: patching the test event @ 09/02/25 08:24:11.471
  STEP: fetching the test event @ 09/02/25 08:24:11.487
  STEP: updating the test event @ 09/02/25 08:24:11.495
  STEP: getting the test event @ 09/02/25 08:24:11.515
  STEP: deleting the test event @ 09/02/25 08:24:11.521
  STEP: listing all events in all namespaces @ 09/02/25 08:24:11.535
  I0902 08:24:11.546878 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2114" for this suite. @ 09/02/25 08:24:11.556
• [0.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/02/25 08:24:11.568
  I0902 08:24:11.568791 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename podtemplate @ 09/02/25 08:24:11.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:11.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:11.615
  STEP: Create a pod template @ 09/02/25 08:24:11.621
  STEP: Replace a pod template @ 09/02/25 08:24:11.632
  I0902 08:24:11.657226 16 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0902 08:24:11.657743 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-934" for this suite. @ 09/02/25 08:24:11.666
• [0.112 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/02/25 08:24:11.68
  I0902 08:24:11.680636 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:24:11.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:11.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:11.767
  STEP: creating a watch on configmaps with a certain label @ 09/02/25 08:24:11.773
  STEP: creating a new configmap @ 09/02/25 08:24:11.785
  STEP: modifying the configmap once @ 09/02/25 08:24:11.797
  STEP: changing the label value of the configmap @ 09/02/25 08:24:11.818
  STEP: Expecting to observe a delete notification for the watched object @ 09/02/25 08:24:11.881
  I0902 08:24:11.882698 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3334  ff1f5d15-7f63-492a-a578-e5581f81ddd6 22562 0 2025-09-02 08:24:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:11.882918 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3334  ff1f5d15-7f63-492a-a578-e5581f81ddd6 22563 0 2025-09-02 08:24:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:11.883070 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3334  ff1f5d15-7f63-492a-a578-e5581f81ddd6 22564 0 2025-09-02 08:24:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/02/25 08:24:11.883
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/02/25 08:24:11.903
  E0902 08:24:12.364357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:13.364813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:14.365140      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:15.366249      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:16.366866      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:17.366743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:18.367268      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:19.367691      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:20.367883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:21.368231      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/02/25 08:24:21.904
  STEP: modifying the configmap a third time @ 09/02/25 08:24:21.922
  STEP: deleting the configmap @ 09/02/25 08:24:21.94
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/02/25 08:24:21.955
  I0902 08:24:21.955298 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3334  ff1f5d15-7f63-492a-a578-e5581f81ddd6 22630 0 2025-09-02 08:24:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:21.955576 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3334  ff1f5d15-7f63-492a-a578-e5581f81ddd6 22631 0 2025-09-02 08:24:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:21.955762 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3334  ff1f5d15-7f63-492a-a578-e5581f81ddd6 22632 0 2025-09-02 08:24:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-02 08:24:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 08:24:21.955955 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3334" for this suite. @ 09/02/25 08:24:21.966
• [10.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/02/25 08:24:21.982
  I0902 08:24:21.982914 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:24:21.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:22.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:22.021
  STEP: Creating configMap with name configmap-test-volume-55bc6e50-1e6c-485f-a2e2-3727e7ed509c @ 09/02/25 08:24:22.026
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:24:22.037
  E0902 08:24:22.368422      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:23.371069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:24.370026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:25.370959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:26.08
  I0902 08:24:26.087760 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-20103970-3544-4fa7-a222-fd33c72b99b8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:24:26.101
  I0902 08:24:26.141264 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8702" for this suite. @ 09/02/25 08:24:26.152
• [4.184 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/02/25 08:24:26.167
  I0902 08:24:26.167999 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:24:26.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:26.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:26.221
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/25 08:24:26.284
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:24:26.297
  E0902 08:24:26.371687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:24:26.384481 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:24:26.384738 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:24:27.372401      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:24:27.369861 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:24:27.373795 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  I0902 08:24:28.318848 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:24:28.318926 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:24:28.373094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:24:29.324640 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:24:29.324730 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/02/25 08:24:29.331
  I0902 08:24:29.342432 16 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/02/25 08:24:29.342
  I0902 08:24:29.365677 16 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/02/25 08:24:29.365
  I0902 08:24:29.371077 16 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0902 08:24:29.371334 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.371636 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.372295 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.372930 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.373360 16 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  E0902 08:24:29.373567      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:24:29.373696 16 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-2417 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 08:24:29.373837 16 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/02/25 08:24:29.373
  STEP: watching for the daemon set status to be patched @ 09/02/25 08:24:29.387
  I0902 08:24:29.392314 16 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0902 08:24:29.392902 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.393147 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.393409 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.394235 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.395066 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.395441 16 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-2417 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 08:24:29.396664 16 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0902 08:24:29.397108 16 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-2417 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0902 08:24:29.397141 16 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:24:29.408
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2417, will wait for the garbage collector to delete the pods @ 09/02/25 08:24:29.408
  I0902 08:24:29.485810 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.224639ms
  I0902 08:24:29.586946 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.131935ms
  E0902 08:24:30.373975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:31.376043      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:24:31.497763 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:24:31.497895 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:24:31.506030 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22744"},"items":null}

  I0902 08:24:31.512911 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22744"},"items":null}

  I0902 08:24:31.555058 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2417" for this suite. @ 09/02/25 08:24:31.623
• [5.474 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/02/25 08:24:31.643
  I0902 08:24:31.643704 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename subpath @ 09/02/25 08:24:31.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:31.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:31.69
  STEP: Setting up data @ 09/02/25 08:24:31.698
  STEP: Creating pod pod-subpath-test-downwardapi-8gtb @ 09/02/25 08:24:31.718
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 08:24:31.718
  E0902 08:24:32.378005      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:33.377205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:34.377553      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:35.377800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:36.378738      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:37.379185      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:38.380168      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:39.380270      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:40.380734      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:41.381008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:42.381919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:43.382269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:44.382311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:45.382734      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:46.382938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:47.383089      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:48.383501      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:49.384100      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:50.385315      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:51.386383      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:52.386641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:53.386949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:54.387023      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:55.387995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:24:55.916
  I0902 08:24:55.923890 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-subpath-test-downwardapi-8gtb container test-container-subpath-downwardapi-8gtb: <nil>
  STEP: delete the pod @ 09/02/25 08:24:55.942
  STEP: Deleting pod pod-subpath-test-downwardapi-8gtb @ 09/02/25 08:24:55.974
  I0902 08:24:55.974366 16 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-8gtb" in namespace "subpath-8939"
  I0902 08:24:55.983037 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8939" for this suite. @ 09/02/25 08:24:55.994
• [24.364 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 09/02/25 08:24:56.008
  I0902 08:24:56.008191 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 08:24:56.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:24:56.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:24:56.04
  I0902 08:24:56.075920 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:24:56.388694      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:57.389369      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:58.389933      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:24:59.390187      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:00.390648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:01.390799      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:02.391131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:03.391180      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:04.392172      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:05.392390      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:06.393610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:07.394051      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:08.394261      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:09.394743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:10.395873      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:11.397055      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:12.397202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:13.397715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:14.398423      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:15.398954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:16.398984      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:17.399147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:18.399344      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:19.400118      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:20.401166      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:21.401339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:22.402283      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:23.403874      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:24.403573      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:25.404433      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:26.405386      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:27.406042      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:28.406475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:29.406838      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:30.407397      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:31.407899      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:32.407879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:33.408440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:34.408601      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:35.408815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:36.408939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:37.409335      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:38.409473      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:39.410150      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:40.410648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:41.410767      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:42.410727      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:43.411220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:44.411339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:45.411440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:46.412625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:47.412837      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:48.412913      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:49.413083      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:50.413705      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:51.414284      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:52.415130      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:53.415826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:54.416731      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:55.416924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:25:56.090441 16 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/02/25 08:25:56.1
  I0902 08:25:56.100765 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/02/25 08:25:56.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:25:56.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:25:56.144
  STEP: Finding an available node @ 09/02/25 08:25:56.15
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/25 08:25:56.151
  E0902 08:25:56.417712      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:57.418169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/25 08:25:58.202
  I0902 08:25:58.256578 16 preemption.go:709] found a healthy node: noo9iech3thi-3
  STEP: Adding a custom resource @ 09/02/25 08:25:58.269
  E0902 08:25:58.418688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:25:59.418825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:00.420868      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:01.420416      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:02.420999      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:03.421204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:04.421650      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:04.440623 16 preemption.go:828] pods created so far: [1 1 1]
  I0902 08:26:04.440697 16 preemption.go:829] length of pods created so far: 3
  E0902 08:26:05.422922      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:06.422958      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:06.476254 16 preemption.go:846] pods created so far: [2 2 1]
  E0902 08:26:07.423363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:08.423321      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:09.423790      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:10.424004      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:11.424405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:12.424853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:13.425393      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/02/25 08:26:13.478
  STEP: Removing a custom resource @ 09/02/25 08:26:13.609
  STEP: Removing a custom resource @ 09/02/25 08:26:13.632
  STEP: Removing a custom resource @ 09/02/25 08:26:13.657
  I0902 08:26:13.680166 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7341" for this suite. @ 09/02/25 08:26:13.691
  I0902 08:26:13.708402 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-959" for this suite. @ 09/02/25 08:26:13.794
• [77.802 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/02/25 08:26:13.813
  I0902 08:26:13.813181 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename podtemplate @ 09/02/25 08:26:13.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:13.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:13.854
  STEP: Create set of pod templates @ 09/02/25 08:26:13.892
  I0902 08:26:13.907110 16 podtemplates.go:143] created test-podtemplate-1
  I0902 08:26:13.919661 16 podtemplates.go:143] created test-podtemplate-2
  I0902 08:26:13.931725 16 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/02/25 08:26:13.932
  STEP: delete collection of pod templates @ 09/02/25 08:26:13.939
  I0902 08:26:13.940660 16 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/02/25 08:26:13.975
  I0902 08:26:13.975212 16 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0902 08:26:13.983152 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4228" for this suite. @ 09/02/25 08:26:13.992
• [0.197 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/02/25 08:26:14.009
  I0902 08:26:14.009973 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 08:26:14.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:14.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:14.072
  STEP: creating a policy with variables @ 09/02/25 08:26:14.095
  STEP: waiting until the marker is denied @ 09/02/25 08:26:14.16
  E0902 08:26:14.426467      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/02/25 08:26:14.898
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/02/25 08:26:14.95
  I0902 08:26:15.177606 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2496" for this suite. @ 09/02/25 08:26:15.225
• [1.247 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/02/25 08:26:15.258
  I0902 08:26:15.259155 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:26:15.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:15.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:15.383
  E0902 08:26:15.426659      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:15.462665 16 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/02/25 08:26:15.475
  I0902 08:26:15.484649 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:15.484741 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/02/25 08:26:15.484
  I0902 08:26:15.606514 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:15.608307 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:26:16.438880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:16.588947 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:16.589024 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:26:17.436381      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:17.588734 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:26:17.588833 16 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/02/25 08:26:17.594
  I0902 08:26:17.648239 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:26:17.669154 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0902 08:26:18.436812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:18.636336 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:18.636409 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/02/25 08:26:18.636
  I0902 08:26:18.740115 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:18.740184 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:26:19.438546      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:19.678115 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:19.678230 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:26:20.439040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:20.677151 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:26:20.677221 16 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:26:20.69
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9310, will wait for the garbage collector to delete the pods @ 09/02/25 08:26:20.69
  I0902 08:26:20.762257 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.612217ms
  I0902 08:26:21.163044 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 400.729739ms
  E0902 08:26:21.440469      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:22.069749 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:26:22.070247 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:26:22.079006 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23413"},"items":null}

  I0902 08:26:22.085400 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23413"},"items":null}

  I0902 08:26:22.147493 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9310" for this suite. @ 09/02/25 08:26:22.159
• [6.915 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/02/25 08:26:22.175
  I0902 08:26:22.175618 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename proxy @ 09/02/25 08:26:22.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:22.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:22.375
  I0902 08:26:22.384018 16 proxy.go:387] Creating pod...
  E0902 08:26:22.441095      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:23.441060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:24.441222      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:25.441458      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:26.441965      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:26.462607 16 proxy.go:411] Creating service...
  I0902 08:26:26.490820 16 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=DELETE
  I0902 08:26:26.507073 16 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 08:26:26.507158 16 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=OPTIONS
  I0902 08:26:26.516320 16 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 08:26:26.516387 16 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=PATCH
  I0902 08:26:26.524024 16 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 08:26:26.524671 16 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=POST
  I0902 08:26:26.534634 16 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 08:26:26.536641 16 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=PUT
  I0902 08:26:26.547876 16 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 08:26:26.548106 16 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=DELETE
  I0902 08:26:26.558837 16 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0902 08:26:26.559399 16 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0902 08:26:26.575188 16 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0902 08:26:26.575309 16 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=PATCH
  I0902 08:26:26.595143 16 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0902 08:26:26.595644 16 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=POST
  I0902 08:26:26.604263 16 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0902 08:26:26.604403 16 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=PUT
  I0902 08:26:26.619412 16 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0902 08:26:26.619835 16 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=GET
  I0902 08:26:26.624784 16 proxy.go:487] http.Client request:GET StatusCode:301
  I0902 08:26:26.625139 16 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=GET
  I0902 08:26:26.636425 16 proxy.go:487] http.Client request:GET StatusCode:301
  I0902 08:26:26.636751 16 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/pods/agnhost/proxy?method=HEAD
  I0902 08:26:26.642304 16 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0902 08:26:26.642555 16 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7293/services/e2e-proxy-test-service/proxy?method=HEAD
  I0902 08:26:26.652040 16 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0902 08:26:26.652823 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7293" for this suite. @ 09/02/25 08:26:26.66
• [4.501 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/02/25 08:26:26.675
  I0902 08:26:26.675132 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:26:26.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:26.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:26.873
  STEP: Creating a test externalName service @ 09/02/25 08:26:26.878
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3471.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3471.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:26:26.891
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3471.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3471.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:26:26.891
  STEP: creating a pod to probe DNS @ 09/02/25 08:26:26.891
  STEP: submitting the pod to kubernetes @ 09/02/25 08:26:26.891
  E0902 08:26:27.441750      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:28.442263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:29.442479      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:30.442907      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:26:30.957
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:26:30.967
  I0902 08:26:31.016121 16 dns_common.go:571] DNS probes using dns-test-a5a6bc67-39af-4f98-9b25-f7cbc1a5a257 succeeded

  STEP: changing the externalName to bar.example.com @ 09/02/25 08:26:31.016
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3471.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3471.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:26:31.039
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3471.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3471.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:26:31.039
  STEP: creating a second pod to probe DNS @ 09/02/25 08:26:31.039
  STEP: submitting the pod to kubernetes @ 09/02/25 08:26:31.039
  E0902 08:26:31.442828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:32.443825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:33.443330      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:34.443724      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:26:35.088
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:26:35.097
  I0902 08:26:35.120939 16 dns_common.go:571] DNS probes using dns-test-a5bb977e-13bb-47e5-b1ea-27ca9d21e7da succeeded

  STEP: changing the service to type=ClusterIP @ 09/02/25 08:26:35.121
  W0902 08:26:35.152290      16 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3471.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3471.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:26:35.153
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3471.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3471.svc.cluster.local; sleep 1; done
   @ 09/02/25 08:26:35.153
  STEP: creating a third pod to probe DNS @ 09/02/25 08:26:35.153
  STEP: submitting the pod to kubernetes @ 09/02/25 08:26:35.167
  E0902 08:26:35.444259      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:36.444485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 08:26:37.237
  STEP: looking for the results for each expected name from probers @ 09/02/25 08:26:37.247
  I0902 08:26:37.278439 16 dns_common.go:571] DNS probes using dns-test-921f362b-df51-4acd-8ad4-7eae3155f1f4 succeeded

  STEP: deleting the pod @ 09/02/25 08:26:37.278
  STEP: deleting the pod @ 09/02/25 08:26:37.313
  STEP: deleting the pod @ 09/02/25 08:26:37.346
  STEP: deleting the test externalName service @ 09/02/25 08:26:37.41
  E0902 08:26:37.445976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:37.465808 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3471" for this suite. @ 09/02/25 08:26:37.482
• [10.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/02/25 08:26:37.51
  I0902 08:26:37.510666 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:26:37.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:37.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:37.551
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/02/25 08:26:37.565
  E0902 08:26:38.446978      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:39.446988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:40.447215      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:41.448250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:26:41.624
  I0902 08:26:41.632358 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-21827d0f-f287-4f83-abe7-2292c271566c container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:26:41.668
  I0902 08:26:41.698788 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-125" for this suite. @ 09/02/25 08:26:41.708
• [4.212 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/02/25 08:26:41.722
  I0902 08:26:41.722597 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename csi-storageclass @ 09/02/25 08:26:41.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:41.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:41.756
  STEP: Creating a StorageClass @ 09/02/25 08:26:41.762
  STEP: Get StorageClass "e2e-sjtwp" @ 09/02/25 08:26:41.776
  STEP: Patching the StorageClass "e2e-sjtwp" @ 09/02/25 08:26:41.783
  STEP: Delete StorageClass "e2e-sjtwp" @ 09/02/25 08:26:41.795
  STEP: Confirm deletion of StorageClass "e2e-sjtwp" @ 09/02/25 08:26:41.815
  STEP: Create a replacement StorageClass @ 09/02/25 08:26:41.821
  STEP: Updating StorageClass "e2e-v2-pkp4b" @ 09/02/25 08:26:41.831
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-pkp4b=updated" @ 09/02/25 08:26:41.845
  STEP: Deleting StorageClass "e2e-v2-pkp4b" via DeleteCollection @ 09/02/25 08:26:41.851
  STEP: Confirm deletion of StorageClass "e2e-v2-pkp4b" @ 09/02/25 08:26:41.868
  I0902 08:26:41.874443 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7694" for this suite. @ 09/02/25 08:26:41.883
• [0.176 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/02/25 08:26:41.899
  I0902 08:26:41.899240 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename security-context @ 09/02/25 08:26:41.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:41.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:41.927
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/02/25 08:26:41.932
  E0902 08:26:42.448996      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:43.449309      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:44.450497      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:45.449815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:26:45.982
  I0902 08:26:45.990760 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod security-context-7cacd86e-61da-4af3-b6b0-a92873607619 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:26:46.007
  I0902 08:26:46.041332 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7770" for this suite. @ 09/02/25 08:26:46.052
• [4.166 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/02/25 08:26:46.065
  I0902 08:26:46.065138 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 08:26:46.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:46.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:46.101
  E0902 08:26:46.450855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:47.451467      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:48.453313      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:49.452921      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:50.153781 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8119" for this suite. @ 09/02/25 08:26:50.164
• [4.113 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/02/25 08:26:50.178
  I0902 08:26:50.178455 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:26:50.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:26:50.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:26:50.221
  STEP: Setting up server cert @ 09/02/25 08:26:50.264
  E0902 08:26:50.453879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:26:51.285
  STEP: Deploying the webhook pod @ 09/02/25 08:26:51.295
  STEP: Wait for the deployment to be ready @ 09/02/25 08:26:51.34
  I0902 08:26:51.386710 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:26:51.454746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:52.454821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:53.413570 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 26, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 26, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 26, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 26, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:26:53.455723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:54.455861      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:26:55.422
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:26:55.447
  E0902 08:26:55.455932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:56.448226 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0902 08:26:56.456235      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:56.464906 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/02/25 08:26:56.982
  STEP: Creating a custom resource that should be denied by the webhook @ 09/02/25 08:26:57.016
  E0902 08:26:57.456490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:26:58.456902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/02/25 08:26:59.142
  STEP: Updating the custom resource with disallowed data should be denied @ 09/02/25 08:26:59.161
  STEP: Deleting the custom resource should be denied @ 09/02/25 08:26:59.187
  STEP: Remove the offending key and value from the custom resource data @ 09/02/25 08:26:59.209
  STEP: Deleting the updated custom resource should be successful @ 09/02/25 08:26:59.234
  E0902 08:26:59.457590      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:26:59.944804 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8982" for this suite. @ 09/02/25 08:26:59.955
  STEP: Destroying namespace "webhook-markers-5191" for this suite. @ 09/02/25 08:26:59.971
• [9.806 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/02/25 08:26:59.984
  I0902 08:26:59.984897 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:26:59.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:27:00.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:27:00.022
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-bf52d46e-db6f-4f6e-9e56-62335434d03d @ 09/02/25 08:27:00.055
  STEP: Creating the pod @ 09/02/25 08:27:00.065
  E0902 08:27:00.458911      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:01.459055      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-bf52d46e-db6f-4f6e-9e56-62335434d03d @ 09/02/25 08:27:02.127
  STEP: waiting to observe update in volume @ 09/02/25 08:27:02.138
  E0902 08:27:02.459271      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:03.459377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:04.460765      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:05.461686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:06.462364      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:07.462410      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:08.462321      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:09.462936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:10.463749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:11.464223      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:12.464805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:13.465413      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:14.466232      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:15.466688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:16.467447      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:17.468103      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:18.468832      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:19.469263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:20.469787      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:21.470091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:22.471244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:23.471381      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:24.472194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:25.472369      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:26.472818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:27.473163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:28.473994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:29.474635      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:30.475842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:31.475765      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:32.476239      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:33.476663      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:34.477083      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:35.477082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:36.477856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:37.478122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:38.479509      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:39.479663      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:40.479624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:41.480669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:42.481286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:43.481676      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:44.482321      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:45.482614      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:46.483202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:47.483375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:48.483597      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:49.484603      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:50.484772      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:51.486198      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:52.486475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:53.486900      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:54.487421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:55.488580      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:56.488971      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:57.489400      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:58.490247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:27:59.490485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:00.491202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:01.491759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:02.492505      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:03.493237      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:04.493210      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:05.493090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:06.493739      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:07.494510      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:08.494490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:09.495006      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:10.495449      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:11.495432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:12.495796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:13.495976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:14.496090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:15.497068      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:16.497330      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:17.499288      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:18.498914      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:19.500028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:20.500644      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:21.060352 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5221" for this suite. @ 09/02/25 08:28:21.076
• [81.109 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/02/25 08:28:21.096
  I0902 08:28:21.096663 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 08:28:21.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:21.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:21.144
  E0902 08:28:21.500950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:22.501591      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:23.227327 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2173" for this suite. @ 09/02/25 08:28:23.238
• [2.158 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/02/25 08:28:23.253
  I0902 08:28:23.253428 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename proxy @ 09/02/25 08:28:23.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:23.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:23.302
  STEP: starting an echo server on multiple ports @ 09/02/25 08:28:23.339
  STEP: creating replication controller proxy-service-4kgqr in namespace proxy-89 @ 09/02/25 08:28:23.34
  I0902 08:28:23.364088      16 runners.go:193] Created replication controller with name: proxy-service-4kgqr, namespace: proxy-89, replica count: 1
  E0902 08:28:23.501982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:24.415934      16 runners.go:193] proxy-service-4kgqr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 08:28:24.502125      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:25.418505      16 runners.go:193] proxy-service-4kgqr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0902 08:28:25.502490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:26.418856      16 runners.go:193] proxy-service-4kgqr Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 08:28:26.426764 16 proxy.go:230] setup took 3.116241225s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/02/25 08:28:26.427
  I0902 08:28:26.450145 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 21.790478ms)
  I0902 08:28:26.453666 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 24.663642ms)
  I0902 08:28:26.454629 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 25.794253ms)
  I0902 08:28:26.456273 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 28.208861ms)
  I0902 08:28:26.456367 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 27.641869ms)
  I0902 08:28:26.456410 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 27.4734ms)
  I0902 08:28:26.471898 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 42.129989ms)
  I0902 08:28:26.477700 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 49.087704ms)
  I0902 08:28:26.487012 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 57.949044ms)
  I0902 08:28:26.489825 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 58.215011ms)
  I0902 08:28:26.490441 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 58.737587ms)
  I0902 08:28:26.491443 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 61.618844ms)
  I0902 08:28:26.497709 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 66.809631ms)
  I0902 08:28:26.499052 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 67.278011ms)
  I0902 08:28:26.499677 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 69.775751ms)
  I0902 08:28:26.501496 16 proxy.go:558] (0) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 72.126069ms)
  E0902 08:28:26.502445      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:26.528859 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 25.274764ms)
  I0902 08:28:26.533437 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 28.424861ms)
  I0902 08:28:26.537701 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 30.556455ms)
  I0902 08:28:26.540090 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 34.87582ms)
  I0902 08:28:26.543659 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 39.861429ms)
  I0902 08:28:26.543761 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 38.33727ms)
  I0902 08:28:26.543818 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 36.337913ms)
  I0902 08:28:26.543939 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 39.214178ms)
  I0902 08:28:26.543863 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 39.406017ms)
  I0902 08:28:26.544506 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 38.709477ms)
  I0902 08:28:26.547476 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 39.35626ms)
  I0902 08:28:26.549011 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 46.847023ms)
  I0902 08:28:26.549006 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 40.749949ms)
  I0902 08:28:26.552852 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 44.440422ms)
  I0902 08:28:26.552920 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 44.281133ms)
  I0902 08:28:26.557982 16 proxy.go:558] (1) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 49.271452ms)
  I0902 08:28:26.579395 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 19.477213ms)
  I0902 08:28:26.583790 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 23.759ms)
  I0902 08:28:26.585093 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 25.268685ms)
  I0902 08:28:26.584920 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 25.715373ms)
  I0902 08:28:26.587250 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 24.600021ms)
  I0902 08:28:26.587285 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 25.990085ms)
  I0902 08:28:26.593189 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 32.040716ms)
  I0902 08:28:26.601734 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 40.756226ms)
  I0902 08:28:26.602994 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 42.479428ms)
  I0902 08:28:26.608880 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 50.229891ms)
  I0902 08:28:26.614285 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 55.125055ms)
  I0902 08:28:26.614588 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 55.117022ms)
  I0902 08:28:26.615035 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 54.789764ms)
  I0902 08:28:26.616921 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 58.074187ms)
  I0902 08:28:26.616941 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 57.898885ms)
  I0902 08:28:26.617025 16 proxy.go:558] (2) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 55.535983ms)
  I0902 08:28:26.636669 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 19.540723ms)
  I0902 08:28:26.644413 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 25.668367ms)
  I0902 08:28:26.645549 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 28.007809ms)
  I0902 08:28:26.652388 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 34.566717ms)
  I0902 08:28:26.658823 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 41.70108ms)
  I0902 08:28:26.658978 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 40.209291ms)
  I0902 08:28:26.659067 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 40.190911ms)
  I0902 08:28:26.663859 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 45.710003ms)
  I0902 08:28:26.663996 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 46.097582ms)
  I0902 08:28:26.664289 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 46.653083ms)
  I0902 08:28:26.664887 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 46.85437ms)
  I0902 08:28:26.665612 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 46.102094ms)
  I0902 08:28:26.669973 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 52.528694ms)
  I0902 08:28:26.668234 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 50.244722ms)
  I0902 08:28:26.672365 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 54.652299ms)
  I0902 08:28:26.672411 16 proxy.go:558] (3) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 53.567038ms)
  I0902 08:28:26.689304 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 16.244453ms)
  I0902 08:28:26.691186 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 17.832367ms)
  I0902 08:28:26.697047 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 23.244129ms)
  I0902 08:28:26.699463 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 25.33355ms)
  I0902 08:28:26.700705 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 27.509514ms)
  I0902 08:28:26.702440 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 28.709081ms)
  I0902 08:28:26.703604 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 30.019044ms)
  I0902 08:28:26.703707 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 29.7429ms)
  I0902 08:28:26.706443 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 33.629101ms)
  I0902 08:28:26.706788 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 33.516379ms)
  I0902 08:28:26.706967 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 34.284965ms)
  I0902 08:28:26.706587 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 32.93781ms)
  I0902 08:28:26.707861 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 34.744952ms)
  I0902 08:28:26.708398 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 34.896709ms)
  I0902 08:28:26.708510 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 34.465832ms)
  I0902 08:28:26.708922 16 proxy.go:558] (4) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 35.007359ms)
  I0902 08:28:26.728105 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 17.465032ms)
  I0902 08:28:26.730507 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 20.04994ms)
  I0902 08:28:26.729020 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 18.432326ms)
  I0902 08:28:26.729793 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 20.735291ms)
  I0902 08:28:26.731469 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 21.309085ms)
  I0902 08:28:26.735584 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 25.297467ms)
  I0902 08:28:26.738064 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 27.786785ms)
  I0902 08:28:26.738415 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 28.326558ms)
  I0902 08:28:26.740851 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 30.882135ms)
  I0902 08:28:26.742293 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 30.649451ms)
  I0902 08:28:26.742377 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 30.488632ms)
  I0902 08:28:26.742599 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 32.565992ms)
  I0902 08:28:26.746024 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 34.049575ms)
  I0902 08:28:26.751260 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 39.550501ms)
  I0902 08:28:26.751749 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 42.303474ms)
  I0902 08:28:26.751797 16 proxy.go:558] (5) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 40.026491ms)
  I0902 08:28:26.766729 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 14.802678ms)
  I0902 08:28:26.773897 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 21.738933ms)
  I0902 08:28:26.778095 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 25.649033ms)
  I0902 08:28:26.778165 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 25.665033ms)
  I0902 08:28:26.778218 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 25.472436ms)
  I0902 08:28:26.778272 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 26.25315ms)
  I0902 08:28:26.778304 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 26.131591ms)
  I0902 08:28:26.780124 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 27.430242ms)
  I0902 08:28:26.781879 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 29.575221ms)
  I0902 08:28:26.783448 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 31.47692ms)
  I0902 08:28:26.786081 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 33.27129ms)
  I0902 08:28:26.787232 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 34.973368ms)
  I0902 08:28:26.789029 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 36.056096ms)
  I0902 08:28:26.789103 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 36.735934ms)
  I0902 08:28:26.790798 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 37.94753ms)
  I0902 08:28:26.790951 16 proxy.go:558] (6) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 38.029497ms)
  I0902 08:28:26.826418 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 35.336033ms)
  I0902 08:28:26.830872 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 39.086227ms)
  I0902 08:28:26.830851 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 38.451928ms)
  I0902 08:28:26.832428 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 41.165307ms)
  I0902 08:28:26.835218 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 43.281561ms)
  I0902 08:28:26.838487 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 46.011534ms)
  I0902 08:28:26.838764 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 46.426264ms)
  I0902 08:28:26.839236 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 47.383728ms)
  I0902 08:28:26.839554 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 47.405479ms)
  I0902 08:28:26.840093 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 49.02703ms)
  I0902 08:28:26.840363 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 47.716156ms)
  I0902 08:28:26.840452 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 48.328124ms)
  I0902 08:28:26.840496 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 48.782432ms)
  I0902 08:28:26.840644 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 48.487413ms)
  I0902 08:28:26.840767 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 48.598626ms)
  I0902 08:28:26.841659 16 proxy.go:558] (7) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 50.241371ms)
  I0902 08:28:26.863926 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 20.09657ms)
  I0902 08:28:26.866960 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 23.11684ms)
  I0902 08:28:26.873429 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 28.354878ms)
  I0902 08:28:26.874721 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 30.642892ms)
  I0902 08:28:26.874767 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 30.748174ms)
  I0902 08:28:26.875260 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 30.81952ms)
  I0902 08:28:26.875366 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 31.220661ms)
  I0902 08:28:26.875413 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 31.060535ms)
  I0902 08:28:26.891653 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 47.375076ms)
  I0902 08:28:26.891708 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 47.4851ms)
  I0902 08:28:26.891753 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 47.27605ms)
  I0902 08:28:26.894060 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 49.06167ms)
  I0902 08:28:26.913230 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 68.401087ms)
  I0902 08:28:26.914213 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 69.655562ms)
  I0902 08:28:26.914263 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 69.641721ms)
  I0902 08:28:26.914388 16 proxy.go:558] (8) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 69.720718ms)
  I0902 08:28:26.944468 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 29.736198ms)
  I0902 08:28:26.946871 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 32.293343ms)
  I0902 08:28:26.947064 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 32.565376ms)
  I0902 08:28:26.948394 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 33.519306ms)
  I0902 08:28:26.949695 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 34.766147ms)
  I0902 08:28:26.949800 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 34.705471ms)
  I0902 08:28:26.950894 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 36.111362ms)
  I0902 08:28:26.959551 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 44.160996ms)
  I0902 08:28:26.963716 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 48.97936ms)
  I0902 08:28:26.963973 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 48.807121ms)
  I0902 08:28:26.964418 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 49.047644ms)
  I0902 08:28:26.992368 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 76.87697ms)
  I0902 08:28:26.993082 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 78.034635ms)
  I0902 08:28:26.993150 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 78.261997ms)
  I0902 08:28:26.994658 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 78.438166ms)
  I0902 08:28:26.994944 16 proxy.go:558] (9) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 79.979273ms)
  I0902 08:28:27.017653 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 20.427383ms)
  I0902 08:28:27.020594 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 22.592335ms)
  I0902 08:28:27.026935 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 27.386734ms)
  I0902 08:28:27.026986 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 28.896536ms)
  I0902 08:28:27.031182 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 32.935461ms)
  I0902 08:28:27.031670 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 35.229342ms)
  I0902 08:28:27.031708 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 33.358923ms)
  I0902 08:28:27.033137 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 37.376914ms)
  I0902 08:28:27.034226 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 34.652448ms)
  I0902 08:28:27.048211 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 51.552006ms)
  I0902 08:28:27.051101 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 54.534104ms)
  I0902 08:28:27.055080 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 57.447123ms)
  I0902 08:28:27.055116 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 57.951178ms)
  I0902 08:28:27.067503 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 70.799286ms)
  I0902 08:28:27.067665 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 69.775842ms)
  I0902 08:28:27.072827 16 proxy.go:558] (10) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 75.049564ms)
  I0902 08:28:27.096455 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 21.519875ms)
  I0902 08:28:27.100163 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 25.018228ms)
  I0902 08:28:27.100241 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 23.263748ms)
  I0902 08:28:27.122262 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 46.985913ms)
  I0902 08:28:27.134445 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 61.500715ms)
  I0902 08:28:27.140209 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 64.67339ms)
  I0902 08:28:27.140704 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 63.804023ms)
  I0902 08:28:27.140922 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 64.104814ms)
  I0902 08:28:27.142001 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 62.971645ms)
  I0902 08:28:27.142056 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 67.049845ms)
  I0902 08:28:27.142341 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 65.291424ms)
  I0902 08:28:27.142382 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 64.312862ms)
  I0902 08:28:27.142781 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 66.699198ms)
  I0902 08:28:27.142659 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 64.505423ms)
  I0902 08:28:27.142932 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 64.954863ms)
  I0902 08:28:27.143042 16 proxy.go:558] (11) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 66.590935ms)
  I0902 08:28:27.163391 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 18.158075ms)
  I0902 08:28:27.163579 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 19.694191ms)
  I0902 08:28:27.184442 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 38.606985ms)
  I0902 08:28:27.184613 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 39.194159ms)
  I0902 08:28:27.184680 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 38.595471ms)
  I0902 08:28:27.184743 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 39.714769ms)
  I0902 08:28:27.184777 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 40.649976ms)
  I0902 08:28:27.184847 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 40.498652ms)
  I0902 08:28:27.184936 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 40.079252ms)
  I0902 08:28:27.184889 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 38.698477ms)
  I0902 08:28:27.188658 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 42.785045ms)
  I0902 08:28:27.189015 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 44.331501ms)
  I0902 08:28:27.189605 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 43.495907ms)
  I0902 08:28:27.189978 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 44.046896ms)
  I0902 08:28:27.191038 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 45.402284ms)
  I0902 08:28:27.191686 16 proxy.go:558] (12) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 45.968639ms)
  I0902 08:28:27.210796 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 18.717423ms)
  I0902 08:28:27.215474 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 23.669909ms)
  I0902 08:28:27.219138 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 25.031818ms)
  I0902 08:28:27.231589 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 38.892586ms)
  I0902 08:28:27.243771 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 51.980466ms)
  I0902 08:28:27.243911 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 48.654301ms)
  I0902 08:28:27.243996 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 51.054235ms)
  I0902 08:28:27.244044 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 47.646005ms)
  I0902 08:28:27.245121 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 48.804112ms)
  I0902 08:28:27.245570 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 53.283654ms)
  I0902 08:28:27.246050 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 53.315941ms)
  I0902 08:28:27.246144 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 50.732301ms)
  I0902 08:28:27.246123 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 50.800414ms)
  I0902 08:28:27.246221 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 53.801188ms)
  I0902 08:28:27.246372 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 52.951823ms)
  I0902 08:28:27.250821 16 proxy.go:558] (13) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 54.61295ms)
  I0902 08:28:27.272255 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 21.073976ms)
  I0902 08:28:27.272439 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 21.528987ms)
  I0902 08:28:27.272509 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 21.366125ms)
  I0902 08:28:27.273857 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 22.3963ms)
  I0902 08:28:27.274837 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 23.057195ms)
  I0902 08:28:27.275155 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 23.632392ms)
  I0902 08:28:27.275180 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 23.118708ms)
  I0902 08:28:27.275388 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 23.016926ms)
  I0902 08:28:27.278272 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 25.929628ms)
  I0902 08:28:27.278632 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 26.427423ms)
  I0902 08:28:27.279802 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 27.816794ms)
  I0902 08:28:27.283020 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 31.765787ms)
  I0902 08:28:27.285570 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 33.888768ms)
  I0902 08:28:27.286879 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 35.479651ms)
  I0902 08:28:27.290489 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 39.171023ms)
  I0902 08:28:27.291083 16 proxy.go:558] (14) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 39.124765ms)
  I0902 08:28:27.323856 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 32.664888ms)
  I0902 08:28:27.345425 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 53.304086ms)
  I0902 08:28:27.346763 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 55.137739ms)
  I0902 08:28:27.355595 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 62.226671ms)
  I0902 08:28:27.363837 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 71.899954ms)
  I0902 08:28:27.365845 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 73.663446ms)
  I0902 08:28:27.366414 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 74.726799ms)
  I0902 08:28:27.367308 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 75.505221ms)
  I0902 08:28:27.367408 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 76.082418ms)
  I0902 08:28:27.367491 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 75.623919ms)
  I0902 08:28:27.377821 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 86.622759ms)
  I0902 08:28:27.382718 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 90.641578ms)
  I0902 08:28:27.385493 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 91.930696ms)
  I0902 08:28:27.386903 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 94.893258ms)
  I0902 08:28:27.386969 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 95.564293ms)
  I0902 08:28:27.416099 16 proxy.go:558] (15) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 124.585858ms)
  I0902 08:28:27.443676 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 27.449153ms)
  I0902 08:28:27.445103 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 24.495924ms)
  I0902 08:28:27.447010 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 29.841392ms)
  I0902 08:28:27.447077 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 28.371416ms)
  I0902 08:28:27.449384 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 31.519222ms)
  I0902 08:28:27.453588 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 36.074666ms)
  I0902 08:28:27.453224 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 34.733233ms)
  I0902 08:28:27.453705 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 35.451943ms)
  I0902 08:28:27.453743 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 33.800712ms)
  I0902 08:28:27.453971 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 34.930098ms)
  I0902 08:28:27.454060 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 36.434349ms)
  I0902 08:28:27.454200 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 37.69859ms)
  I0902 08:28:27.455168 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 37.854169ms)
  I0902 08:28:27.455407 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 38.487256ms)
  I0902 08:28:27.455843 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 37.76963ms)
  I0902 08:28:27.457350 16 proxy.go:558] (16) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 40.658724ms)
  I0902 08:28:27.479706 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 21.98507ms)
  I0902 08:28:27.480076 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 22.642528ms)
  I0902 08:28:27.482362 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 22.608406ms)
  I0902 08:28:27.482818 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 22.917981ms)
  I0902 08:28:27.483584 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 24.520102ms)
  I0902 08:28:27.483985 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 26.076331ms)
  I0902 08:28:27.484209 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 25.958949ms)
  I0902 08:28:27.497900 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 38.998514ms)
  I0902 08:28:27.498051 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 38.299799ms)
  I0902 08:28:27.498980 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 40.521057ms)
  E0902 08:28:27.504613      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:27.505593 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 47.506285ms)
  I0902 08:28:27.510478 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 51.052798ms)
  I0902 08:28:27.515751 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 55.898708ms)
  I0902 08:28:27.518826 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 59.03376ms)
  I0902 08:28:27.518867 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 59.296656ms)
  I0902 08:28:27.518925 16 proxy.go:558] (17) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 60.215229ms)
  I0902 08:28:27.580207 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 60.644909ms)
  I0902 08:28:27.580399 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 61.338935ms)
  I0902 08:28:27.580492 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 61.19182ms)
  I0902 08:28:27.580689 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 61.707167ms)
  I0902 08:28:27.580921 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 61.432042ms)
  I0902 08:28:27.581959 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 62.75158ms)
  I0902 08:28:27.586568 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 66.939673ms)
  I0902 08:28:27.586640 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 66.970242ms)
  I0902 08:28:27.604469 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 84.542475ms)
  I0902 08:28:27.613262 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 93.445531ms)
  I0902 08:28:27.621426 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 101.559679ms)
  I0902 08:28:27.621510 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 101.655501ms)
  I0902 08:28:27.622153 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 102.404353ms)
  I0902 08:28:27.625402 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 105.401154ms)
  I0902 08:28:27.625487 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 105.799093ms)
  I0902 08:28:27.625756 16 proxy.go:558] (18) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 105.788413ms)
  I0902 08:28:27.645432 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:443/proxy/tlsrewriteme"... (200; 19.578902ms)
  I0902 08:28:27.649009 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:462/proxy/: tls qux (200; 22.65328ms)
  I0902 08:28:27.653258 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname1/proxy/: foo (200; 26.58337ms)
  I0902 08:28:27.655836 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname1/proxy/: foo (200; 29.752192ms)
  I0902 08:28:27.657308 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/services/http:proxy-service-4kgqr:portname2/proxy/: bar (200; 30.354817ms)
  I0902 08:28:27.679932 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz/proxy/rewriteme">test</a> (200; 52.186511ms)
  I0902 08:28:27.686057 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 58.412304ms)
  I0902 08:28:27.686932 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 58.74084ms)
  I0902 08:28:27.687035 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">te... (200; 59.204428ms)
  I0902 08:28:27.694893 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/: <a href="/api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:1080/proxy/rewriteme">test</a... (200; 67.71219ms)
  I0902 08:28:27.695015 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/proxy-service-4kgqr-m47hz:162/proxy/: bar (200; 67.239981ms)
  I0902 08:28:27.695057 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/http:proxy-service-4kgqr-m47hz:160/proxy/: foo (200; 66.925418ms)
  I0902 08:28:27.695093 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname1/proxy/: tls baz (200; 67.136518ms)
  I0902 08:28:27.695180 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/services/https:proxy-service-4kgqr:tlsportname2/proxy/: tls qux (200; 67.169895ms)
  I0902 08:28:27.695214 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/pods/https:proxy-service-4kgqr-m47hz:460/proxy/: tls baz (200; 67.126449ms)
  I0902 08:28:27.696829 16 proxy.go:558] (19) /api/v1/namespaces/proxy-89/services/proxy-service-4kgqr:portname2/proxy/: bar (200; 68.926559ms)
  STEP: deleting ReplicationController proxy-service-4kgqr in namespace proxy-89, will wait for the garbage collector to delete the pods @ 09/02/25 08:28:27.697
  I0902 08:28:27.772785 16 resources.go:139] Deleting ReplicationController proxy-service-4kgqr took: 14.799097ms
  I0902 08:28:27.873451 16 resources.go:163] Terminating ReplicationController proxy-service-4kgqr pods took: 100.64294ms
  E0902 08:28:28.505632      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:28.975729 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-89" for this suite. @ 09/02/25 08:28:28.991
• [5.754 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/02/25 08:28:29.008
  I0902 08:28:29.008998 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:28:29.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:29.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:29.054
  E0902 08:28:29.506000      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:30.506424      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/02/25 08:28:31.136
  I0902 08:28:31.137211 16 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3048 pod-service-account-ebdc768b-36d1-4bad-9cc3-5cbdaed94d72 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/02/25 08:28:31.478
  I0902 08:28:31.479840 16 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3048 pod-service-account-ebdc768b-36d1-4bad-9cc3-5cbdaed94d72 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0902 08:28:31.507220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/02/25 08:28:31.752
  I0902 08:28:31.753845 16 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3048 pod-service-account-ebdc768b-36d1-4bad-9cc3-5cbdaed94d72 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0902 08:28:32.053060 16 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-3048"
  I0902 08:28:32.061306 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3048" for this suite. @ 09/02/25 08:28:32.077
• [3.086 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/02/25 08:28:32.094
  I0902 08:28:32.094705 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 08:28:32.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:32.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:32.129
  I0902 08:28:32.134854 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:28:32.507767      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:33.508598      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:34.509639      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:35.322107 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1151" for this suite. @ 09/02/25 08:28:35.334
• [3.284 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/02/25 08:28:35.383
  I0902 08:28:35.383323 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:28:35.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:35.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:35.425
  STEP: creating service in namespace services-9670 @ 09/02/25 08:28:35.43
  STEP: creating service affinity-clusterip in namespace services-9670 @ 09/02/25 08:28:35.43
  STEP: creating replication controller affinity-clusterip in namespace services-9670 @ 09/02/25 08:28:35.454
  I0902 08:28:35.471346      16 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-9670, replica count: 3
  E0902 08:28:35.514879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:36.514321      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:37.514894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:38.515496      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:38.523626      16 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 08:28:38.548838 16 resource.go:361] Creating new exec pod
  E0902 08:28:39.516212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:40.516620      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:41.516818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:41.607614 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-9670 exec execpod-affinitycpffh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0902 08:28:41.943743 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.13.218) 80 port [tcp/http] succeeded!\n"
  I0902 08:28:41.943890 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:28:41.944292 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-9670 exec execpod-affinitycpffh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.218 80'
  I0902 08:28:42.201213 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.218 80\nConnection to 10.233.13.218 80 port [tcp/http] succeeded!\n"
  I0902 08:28:42.201383 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:28:42.202006 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-9670 exec execpod-affinitycpffh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.13.218:80/ ; done'
  E0902 08:28:42.517786      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:42.736787 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.218:80/\n"
  I0902 08:28:42.736976 16 builder.go:147] stdout: "\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn\naffinity-clusterip-6wfgn"
  I0902 08:28:42.737173 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737214 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737252 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737270 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737296 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737313 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737329 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737345 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737361 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737377 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737392 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737431 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737448 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737463 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737479 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.737745 16 service.go:242] Received response from host: affinity-clusterip-6wfgn
  I0902 08:28:42.738386 16 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9670, will wait for the garbage collector to delete the pods @ 09/02/25 08:28:42.771
  I0902 08:28:42.843346 16 resources.go:139] Deleting ReplicationController affinity-clusterip took: 13.944523ms
  I0902 08:28:42.945761 16 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 102.018466ms
  E0902 08:28:43.517880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:44.518825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:45.519909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:46.187903 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9670" for this suite. @ 09/02/25 08:28:46.203
• [10.835 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/02/25 08:28:46.218
  I0902 08:28:46.218472 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:28:46.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:28:46.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:28:46.252
  STEP: Setting up server cert @ 09/02/25 08:28:46.294
  E0902 08:28:46.521730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:28:46.858
  STEP: Deploying the webhook pod @ 09/02/25 08:28:46.873
  STEP: Wait for the deployment to be ready @ 09/02/25 08:28:46.913
  I0902 08:28:46.934225 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0902 08:28:47.521936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:48.522031      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:48.960950 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 28, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 28, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 28, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 28, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:28:49.523079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:50.523301      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:28:50.974
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:28:51.033
  E0902 08:28:51.524711      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:28:52.037185 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/02/25 08:28:52.054
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:28:52.054
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/02/25 08:28:52.098
  E0902 08:28:52.525111      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/02/25 08:28:53.121
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:28:53.121
  E0902 08:28:53.526131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/02/25 08:28:54.204
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:28:54.204
  E0902 08:28:54.526770      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:55.526975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:56.527928      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:57.528649      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:28:58.528877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/02/25 08:28:59.279
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/25 08:28:59.28
  E0902 08:28:59.529689      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:00.530256      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:01.530400      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:02.531114      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:03.531342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:04.478143 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7466" for this suite. @ 09/02/25 08:29:04.488
  STEP: Destroying namespace "webhook-markers-9975" for this suite. @ 09/02/25 08:29:04.506
• [18.309 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/02/25 08:29:04.528
  I0902 08:29:04.528062 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:29:04.532031      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:29:04.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:04.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:04.619
  I0902 08:29:04.655923 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3920" for this suite. @ 09/02/25 08:29:04.668
• [0.157 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/02/25 08:29:04.685
  I0902 08:29:04.685275 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:29:04.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:04.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:04.744
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:29:04.751
  E0902 08:29:05.532812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:06.532200      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:07.532644      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:08.532824      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:29:08.804
  I0902 08:29:08.818901 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-b7cbab36-9b08-4b86-ba74-a82c6965764e container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:29:08.837
  I0902 08:29:08.869717 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9547" for this suite. @ 09/02/25 08:29:08.879
• [4.207 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/02/25 08:29:08.892
  I0902 08:29:08.892337 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename init-container @ 09/02/25 08:29:08.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:08.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:08.923
  STEP: creating the pod @ 09/02/25 08:29:08.928
  I0902 08:29:08.928265 16 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0902 08:29:09.534616      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:10.535374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:11.535885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:12.349723 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4643" for this suite. @ 09/02/25 08:29:12.362
• [3.483 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/02/25 08:29:12.377
  I0902 08:29:12.377036 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:29:12.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:12.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:12.413
  STEP: set up a multi version CRD @ 09/02/25 08:29:12.419
  I0902 08:29:12.421347 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:29:12.536352      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:13.536803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:14.537846      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:15.538329      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:16.539475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:17.539283      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/02/25 08:29:18.091
  STEP: check the new version name is served @ 09/02/25 08:29:18.131
  E0902 08:29:18.539387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:19.540651      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/02/25 08:29:19.922
  E0902 08:29:20.540935      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/02/25 08:29:20.936
  E0902 08:29:21.541077      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:22.541896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:23.541723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:24.541957      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:25.416285 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-907" for this suite. @ 09/02/25 08:29:25.436
• [13.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/02/25 08:29:25.452
  I0902 08:29:25.452270 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:29:25.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:25.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:25.487
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/02/25 08:29:25.492
  E0902 08:29:25.542318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:26.542766      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:27.543823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:28.544607      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:29:29.542
  E0902 08:29:29.544913      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:29.548112 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-abb5d753-13a3-45d3-8e53-e5242a531c8d container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:29:29.586
  I0902 08:29:29.627125 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4846" for this suite. @ 09/02/25 08:29:29.638
• [4.201 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/02/25 08:29:29.653
  I0902 08:29:29.653827 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:29:29.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:29.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:29.686
  STEP: Setting up server cert @ 09/02/25 08:29:29.726
  E0902 08:29:30.545807      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:29:30.602
  STEP: Deploying the webhook pod @ 09/02/25 08:29:30.615
  STEP: Wait for the deployment to be ready @ 09/02/25 08:29:30.655
  I0902 08:29:30.691397 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:29:31.546821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:32.546418      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:29:32.715
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:29:32.736
  E0902 08:29:33.547126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:33.737487 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/02/25 08:29:33.869
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 08:29:33.947
  STEP: Deleting the collection of validation webhooks @ 09/02/25 08:29:34.006
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 08:29:34.104
  I0902 08:29:34.222937 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1551" for this suite. @ 09/02/25 08:29:34.236
  STEP: Destroying namespace "webhook-markers-3647" for this suite. @ 09/02/25 08:29:34.252
• [4.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/02/25 08:29:34.274
  I0902 08:29:34.274763 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:29:34.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:34.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:34.332
  E0902 08:29:34.548364      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:35.549329      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:36.380230 16 delete.go:62] Deleting pod "var-expansion-19c67d48-f28d-4906-ae8d-e6ee0a0e6212" in namespace "var-expansion-3617"
  I0902 08:29:36.393050 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-19c67d48-f28d-4906-ae8d-e6ee0a0e6212" to be fully deleted
  E0902 08:29:36.549644      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:37.549840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:38.408025 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3617" for this suite. @ 09/02/25 08:29:38.416
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/02/25 08:29:38.428
  I0902 08:29:38.428319 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:29:38.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:38.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:38.465
  STEP: Creating a ResourceQuota with terminating scope @ 09/02/25 08:29:38.472
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 08:29:38.483
  E0902 08:29:38.550711      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:39.551025      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/02/25 08:29:40.491
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 08:29:40.506
  E0902 08:29:40.551409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:41.551652      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/02/25 08:29:42.515
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/02/25 08:29:42.541
  E0902 08:29:42.552156      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:43.552357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/02/25 08:29:44.55
  E0902 08:29:44.553296      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:45.553636      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:46.554154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 08:29:46.559
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 08:29:46.578
  E0902 08:29:47.554855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:48.555881      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/02/25 08:29:48.587
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/02/25 08:29:48.608
  E0902 08:29:49.556150      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:50.556250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/02/25 08:29:50.619
  E0902 08:29:51.557308      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:52.558112      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 08:29:52.628
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 08:29:52.657
  E0902 08:29:53.558290      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:54.559242      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:29:54.667168 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-947" for this suite. @ 09/02/25 08:29:54.678
• [16.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/02/25 08:29:54.695
  I0902 08:29:54.695688 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename taint-single-pod @ 09/02/25 08:29:54.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:29:54.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:29:54.737
  I0902 08:29:54.744134 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:29:55.560251      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:56.560962      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:57.561095      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:58.561842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:29:59.562657      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:00.562857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:01.563198      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:02.563892      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:03.563955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:04.564669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:05.565286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:06.565654      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:07.565794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:08.566004      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:09.567082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:10.567958      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:11.568561      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:12.568791      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:13.569209      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:14.569784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:15.570110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:16.571183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:17.571425      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:18.571968      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:19.572468      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:20.572700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:21.572977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:22.574133      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:23.574748      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:24.574625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:25.575285      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:26.576052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:27.576588      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:28.576921      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:29.577914      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:30.578798      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:31.579204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:32.579508      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:33.579710      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:34.579838      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:35.580135      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:36.582464      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:37.582252      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:38.582500      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:39.582993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:40.583740      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:41.583980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:42.584299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:43.584917      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:44.585059      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:45.584948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:46.585250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:47.586558      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:48.586554      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:49.587020      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:50.587300      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:51.587713      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:52.587949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:53.588052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:54.588440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:30:54.745012 16 util.go:396] Waiting for terminating namespaces to be deleted...
  I0902 08:30:54.754284 16 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/02/25 08:30:54.754
  I0902 08:30:54.989871 16 taints.go:294] Pod is running on noo9iech3thi-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/02/25 08:30:54.99
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:30:55.023
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/02/25 08:30:55.032
  I0902 08:30:55.032313 16 taints.go:313] Pod wasn't evicted. Proceeding
  I0902 08:30:55.032469 16 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:30:55.057
  STEP: Waiting some time to make sure that toleration time passed. @ 09/02/25 08:30:55.067
  E0902 08:30:55.588770      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:56.589258      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:57.589858      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:58.591103      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:30:59.590856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:00.591074      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:01.592203      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:02.592880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:03.593227      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:04.594197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:05.595102      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:06.595212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:07.595289      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:08.595909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:09.596391      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:10.596452      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:11.596877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:12.598128      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:13.598792      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:14.600171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:15.600650      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:16.600856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:17.601045      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:18.601622      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:19.602762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:20.603284      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:21.603476      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:22.603889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:23.604146      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:24.604666      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:25.604886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:26.605084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:27.605346      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:28.605481      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:29.605691      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:30.606262      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:31.607012      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:32.606894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:33.607075      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:34.607658      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:35.608235      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:36.608596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:37.609060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:38.609209      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:39.609755      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:40.610222      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:41.610331      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:42.610793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:43.611797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:44.611928      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:45.612110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:46.612189      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:47.612467      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:48.613088      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:49.613884      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:50.613959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:51.614138      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:52.614957      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:53.615425      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:54.616089      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:55.616385      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:56.616654      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:57.617162      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:58.617797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:31:59.617860      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:00.618356      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:01.618824      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:02.619503      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:03.619728      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:04.620170      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:05.620506      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:06.621311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:07.621584      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:08.621884      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:09.622400      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:10.067925 16 taints.go:329] Pod wasn't evicted. Test successful
  I0902 08:32:10.069018 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2792" for this suite. @ 09/02/25 08:32:10.083
• [135.405 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/02/25 08:32:10.103
  I0902 08:32:10.103675 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:32:10.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:10.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:10.156
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/25 08:32:10.249
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:32:10.261
  I0902 08:32:10.345170 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:32:10.345328 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:32:10.623890      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:11.290826 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:32:11.290902 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:32:11.624432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:12.281565 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:32:12.281791 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/02/25 08:32:12.289
  I0902 08:32:12.381586 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:32:12.381669 16 fixtures.go:131] Node noo9iech3thi-2 is running 0 daemon pod, expected 1
  E0902 08:32:12.624540      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:13.337808 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:32:13.338416 16 fixtures.go:131] Node noo9iech3thi-2 is running 0 daemon pod, expected 1
  E0902 08:32:13.624718      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:14.335260 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:32:14.335339 16 fixtures.go:131] Node noo9iech3thi-2 is running 0 daemon pod, expected 1
  E0902 08:32:14.625872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:15.338104 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:32:15.338172 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:32:15.347
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5309, will wait for the garbage collector to delete the pods @ 09/02/25 08:32:15.347
  I0902 08:32:15.427734 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.130636ms
  I0902 08:32:15.527959 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.215008ms
  E0902 08:32:15.626910      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:16.627462      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:17.341004 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:32:17.341080 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:32:17.348027 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25309"},"items":null}

  I0902 08:32:17.354714 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25309"},"items":null}

  I0902 08:32:17.390472 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5309" for this suite. @ 09/02/25 08:32:17.464
• [7.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/02/25 08:32:17.484
  I0902 08:32:17.484418 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 08:32:17.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:17.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:17.52
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/02/25 08:32:17.525
  I0902 08:32:17.544248 16 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2836  24e0332c-e2fd-4e51-bcde-a32b29bc0196 25315 0 2025-09-02 08:32:17 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-02 08:32:17 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hcvhb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hcvhb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0902 08:32:17.628564      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:18.628716      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/02/25 08:32:19.564
  I0902 08:32:19.564946 16 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2836 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:32:19.565161 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:32:19.565350 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2836/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  E0902 08:32:19.629425      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS server is configured on pod... @ 09/02/25 08:32:19.716
  I0902 08:32:19.716446 16 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2836 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:32:19.716485 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:32:19.716896 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2836/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0902 08:32:19.876632 16 dns.go:450] Deleting pod test-dns-nameservers...
  I0902 08:32:19.948068 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2836" for this suite. @ 09/02/25 08:32:19.967
• [2.506 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 09/02/25 08:32:19.991
  I0902 08:32:19.991091 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:32:19.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:20.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:20.024
  I0902 08:32:20.061202 16 service_accounts.go:647] created pod
  E0902 08:32:20.629936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:21.630624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:22.631258      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:23.631612      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:32:24.091
  E0902 08:32:24.631883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:25.632038      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:26.632295      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:27.632841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:28.633065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:29.634057      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:30.634571      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:31.634506      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:32.634974      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:33.635332      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:34.636106      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:35.636496      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:36.637105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:37.637672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:38.637801      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:39.638986      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:40.639325      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:41.639385      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:42.639547      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:43.640230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:44.640746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:45.641090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:46.641156      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:47.641607      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:48.641654      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:49.641934      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:50.642252      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:51.643024      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:52.643395      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:53.643939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:32:54.091650 16 service_accounts.go:653] polling logs
  I0902 08:32:54.127681 16 service_accounts.go:663] Pod logs: 
  I0902 08:32:21.022200       1 log.go:245] OK: Got token
  I0902 08:32:21.024441       1 log.go:245] validating with in-cluster discovery
  I0902 08:32:21.026354       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0902 08:32:21.026431       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1949:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012490), NotBefore:(*jwt.NumericDate)(0xc0000126b0), IssuedAt:(*jwt.NumericDate)(0xc0000124a0), ID:"d42129c9-9fe9-4d69-b1f2-bad8ac124bf0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1949", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"866d069e-969c-4398-aa3e-ae493fd062b4"}}}
  I0902 08:32:21.057054       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0902 08:32:21.089431       1 log.go:245] OK: Validated signature on JWT
  I0902 08:32:21.090052       1 log.go:245] OK: Got valid claims from token!
  I0902 08:32:21.090595       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1949:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004b0830), NotBefore:(*jwt.NumericDate)(0xc0004b0858), IssuedAt:(*jwt.NumericDate)(0xc0004b0838), ID:"d42129c9-9fe9-4d69-b1f2-bad8ac124bf0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1949", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"866d069e-969c-4398-aa3e-ae493fd062b4"}}}

  I0902 08:32:54.127845 16 service_accounts.go:667] completed pod
  I0902 08:32:54.140834 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1949" for this suite. @ 09/02/25 08:32:54.152
• [34.177 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/02/25 08:32:54.169
  I0902 08:32:54.170020 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 08:32:54.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:54.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:32:54.211
  STEP: Creating a test namespace @ 09/02/25 08:32:54.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:32:54.287
  STEP: Creating a service in the namespace @ 09/02/25 08:32:54.291
  STEP: Deleting the namespace @ 09/02/25 08:32:54.318
  STEP: Waiting for the namespace to be removed. @ 09/02/25 08:32:54.361
  E0902 08:32:54.644860      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:55.645428      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:56.645858      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:57.647206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:58.647115      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:32:59.647658      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:00.648788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/02/25 08:33:01.371
  STEP: Verifying there is no service in the namespace @ 09/02/25 08:33:01.407
  I0902 08:33:01.416251 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-68" for this suite. @ 09/02/25 08:33:01.426
  STEP: Destroying namespace "nsdeletetest-8521" for this suite. @ 09/02/25 08:33:01.439
  I0902 08:33:01.446034 16 framework.go:370] Namespace nsdeletetest-8521 was already deleted
  STEP: Destroying namespace "nsdeletetest-9914" for this suite. @ 09/02/25 08:33:01.446
• [7.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/02/25 08:33:01.464
  I0902 08:33:01.464604 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:33:01.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:33:01.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:33:01.5
  STEP: Creating resourceQuota "e2e-rq-status-kvmjx" @ 09/02/25 08:33:01.515
  I0902 08:33:01.537731 16 resource_quota.go:1102] Resource quota "e2e-rq-status-kvmjx" reports spec: hard cpu limit of 500m
  I0902 08:33:01.537842 16 resource_quota.go:1104] Resource quota "e2e-rq-status-kvmjx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kvmjx" /status @ 09/02/25 08:33:01.537
  STEP: Confirm /status for "e2e-rq-status-kvmjx" resourceQuota via watch @ 09/02/25 08:33:01.554
  I0902 08:33:01.556715 16 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-kvmjx" in namespace "resourcequota-1853" with hard status: v1.ResourceList(nil)
  I0902 08:33:01.557267 16 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-kvmjx" in namespace "resourcequota-1853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0902 08:33:01.557398 16 resource_quota.go:1141] ResourceQuota "e2e-rq-status-kvmjx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/02/25 08:33:01.564
  I0902 08:33:01.577859 16 resource_quota.go:1152] Resource quota "e2e-rq-status-kvmjx" reports spec: hard cpu limit of 1
  I0902 08:33:01.577927 16 resource_quota.go:1153] Resource quota "e2e-rq-status-kvmjx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kvmjx" /status @ 09/02/25 08:33:01.577
  STEP: Confirm /status for "e2e-rq-status-kvmjx" resourceQuota via watch @ 09/02/25 08:33:01.591
  I0902 08:33:01.594458 16 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-kvmjx" in namespace "resourcequota-1853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0902 08:33:01.594589 16 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-kvmjx" in namespace "resourcequota-1853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0902 08:33:01.594657 16 resource_quota.go:1185] ResourceQuota "e2e-rq-status-kvmjx" /status was patched
  STEP: Get "e2e-rq-status-kvmjx" /status @ 09/02/25 08:33:01.594
  I0902 08:33:01.603778 16 resource_quota.go:1196] Resourcequota "e2e-rq-status-kvmjx" reports status: hard cpu of 1
  I0902 08:33:01.603871 16 resource_quota.go:1198] Resourcequota "e2e-rq-status-kvmjx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kvmjx" /status before checking Spec is unchanged @ 09/02/25 08:33:01.61
  I0902 08:33:01.620188 16 resource_quota.go:1218] Resourcequota "e2e-rq-status-kvmjx" reports status: hard cpu of 2
  I0902 08:33:01.620641 16 resource_quota.go:1220] Resourcequota "e2e-rq-status-kvmjx" reports status: hard memory of 2Gi
  I0902 08:33:01.623585 16 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-kvmjx" in namespace "resourcequota-1853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0902 08:33:01.630462 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f350), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:01.649598      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:02.650677      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:03.650890      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:04.651892      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:05.652370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:06.633278 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f4b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f4e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f530), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:06.653227      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:07.654015      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:08.654173      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:09.655157      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:10.655416      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:11.631139 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b126a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b126f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:11.656029      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:12.656378      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:13.656562      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:14.656807      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:15.657505      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:16.632140 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f680), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f6b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f6e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:16.658254      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:17.659183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:18.659305      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:19.659770      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:20.660077      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:21.631684 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b128b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:21.660896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:22.660958      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:23.661247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:24.661806      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:25.664002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:26.630160 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:26.663290      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:27.663838      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:28.664065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:29.664758      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:30.665204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:31.633582 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f950), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3f9b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:31.665423      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:32.665960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:33.666450      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:34.666759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:35.666886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:36.632793 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12c48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:36.666949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:37.667118      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:38.667342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:39.668084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:40.668887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:41.632055 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3fb30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3fb78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f3fba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:41.669188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:42.669377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:43.669778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:44.670374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:45.670641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:46.633264 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12df8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12e58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:46.671294      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:47.671432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:48.671788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:49.672682      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:50.672806      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:51.632062 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12f90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:51.673881      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:52.674065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:53.674327      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:54.674399      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:55.674715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:33:56.631817 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b131a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:33:56.674728      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:57.675055      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:58.675718      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:33:59.675405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:00.675790      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:01.632131 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b132f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:01.676393      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:02.677136      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:03.677306      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:04.677790      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:05.678047      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:06.633016 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b134a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b134d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13518), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:06.678083      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:07.678241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:08.678947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:09.678960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:10.679365      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:11.634510 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c018), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:11.680073      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:12.679963      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:13.680186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:14.680763      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:15.681334      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:16.632334 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:16.682327      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:17.682753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:18.683292      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:19.684344      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:20.685993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:21.631082 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:21.686205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:22.686361      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:23.686948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:24.686837      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:25.687079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:26.632921 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:26.687969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:27.688181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:28.689229      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:29.689894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:30.690648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:31.646138 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b120c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b120f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:31.691437      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:32.692237      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:33.692482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:34.692999      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:35.693202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:36.631162 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:36.693199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:37.694193      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:38.694835      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:39.695849      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:40.696274      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:41.632228 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:41.697285      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:42.697869      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:43.698115      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:44.698746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:45.699012      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:46.635792 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c8a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061c990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061ca20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:46.699591      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:47.699762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:48.700417      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:49.700733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:50.701594      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:51.633876 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b124b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:51.702147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:52.702849      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:53.705836      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:54.705268      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:55.705666      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:34:56.634740 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:34:56.706393      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:57.707686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:58.734853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:34:59.718981      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:00.723031      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:01.646300 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:01.720848      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:02.721579      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:03.721887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:04.722227      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:05.722672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:06.639732 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061ccf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061cd20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061cd68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:06.723339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:07.725119      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:08.724480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:09.724795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:10.725206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:11.635999 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061cfa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:11.725184      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:12.725308      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:13.725580      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:14.725836      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:15.726445      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:16.637256 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:16.727195      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:17.727085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:18.727334      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:19.727904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:20.728366      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:21.631560 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:21.728815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:22.730017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:23.730733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:24.731059      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:25.731213      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:26.634418 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12d98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12dc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12df8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:26.731411      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:27.731261      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:28.731673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:29.731843      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:30.731931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:31.635147 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12ee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b12f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:31.732457      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:32.733041      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:33.733571      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:34.734058      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:35.734857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:36.634143 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d758), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d788), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d7b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:36.735429      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:37.735937      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:38.736121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:39.736935      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:40.737372      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:41.632684 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d968), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061d998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:41.738068      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:42.738934      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:43.739477      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:44.739686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:45.739772      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:46.637773 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061dba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061dbd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061dc08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:46.740492      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:47.740763      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:48.740821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:49.741063      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:50.741305      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:51.631774 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061dd40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061dd70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00061dda0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:51.742048      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:52.742767      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:53.742890      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:54.743050      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:55.743253      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:35:56.632743 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b13170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b131a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b131d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:35:56.743384      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:57.743710      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:58.743893      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:35:59.744947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:00.745662      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:01.634305 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dc0000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dc0048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dc0078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:36:01.745808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:02.745967      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:03.746604      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:04.747181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:05.747363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:06.633294 16 resource_quota.go:1263] ResourceQuota "e2e-rq-status-kvmjx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvmjx", GenerateName:"", Namespace:"resourcequota-1853", SelfLink:"", UID:"7f3a4e09-6537-4efe-b734-7e6cbd9701c8", ResourceVersion:"25521", Generation:0, CreationTimestamp:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvmjx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dc0228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dc0258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 2, 8, 33, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dc02a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0902 08:36:06.747513      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:07.748489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:08.749233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:09.749829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:10.750009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:11.634134 16 resource_quota.go:1260] ResourceQuota "e2e-rq-status-kvmjx" Spec was unchanged and /status reset
  I0902 08:36:11.635732 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1853" for this suite. @ 09/02/25 08:36:11.667
• [190.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 09/02/25 08:36:11.698
  I0902 08:36:11.698689 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 08:36:11.705
  E0902 08:36:11.749904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:11.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:11.756
  STEP: Creating a job @ 09/02/25 08:36:11.763
  STEP: Ensuring active pods == parallelism @ 09/02/25 08:36:11.78
  E0902 08:36:12.754634      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:13.750977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/02/25 08:36:13.815
  I0902 08:36:14.377118 16 pod_client.go:173] Successfully updated pod "adopt-release-tbpkr"
  STEP: Checking that the Job readopts the Pod @ 09/02/25 08:36:14.377
  E0902 08:36:14.750832      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:15.751360      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/02/25 08:36:16.421
  E0902 08:36:16.751801      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:16.950795 16 pod_client.go:173] Successfully updated pod "adopt-release-tbpkr"
  STEP: Checking that the Job releases the Pod @ 09/02/25 08:36:16.951
  E0902 08:36:17.752720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:18.752593      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:18.973974 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8137" for this suite. @ 09/02/25 08:36:18.997
• [7.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/02/25 08:36:19.022
  I0902 08:36:19.022986 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename limitrange @ 09/02/25 08:36:19.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:19.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:19.082
  STEP: Creating LimitRange "e2e-limitrange-p5ss8" in namespace "limitrange-7915" @ 09/02/25 08:36:19.091
  STEP: Creating another limitRange in another namespace @ 09/02/25 08:36:19.107
  I0902 08:36:19.138392 16 limit_range.go:299] Namespace "e2e-limitrange-p5ss8-8504" created
  I0902 08:36:19.138462 16 limit_range.go:300] Creating LimitRange "e2e-limitrange-p5ss8" in namespace "e2e-limitrange-p5ss8-8504"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-p5ss8" @ 09/02/25 08:36:19.147
  I0902 08:36:19.155458 16 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-p5ss8" in "limitrange-7915" namespace @ 09/02/25 08:36:19.155
  I0902 08:36:19.174154 16 limit_range.go:335] LimitRange "e2e-limitrange-p5ss8" has been patched
  STEP: Delete LimitRange "e2e-limitrange-p5ss8" by Collection with labelSelector: "e2e-limitrange-p5ss8=patched" @ 09/02/25 08:36:19.174
  STEP: Confirm that the limitRange "e2e-limitrange-p5ss8" has been deleted @ 09/02/25 08:36:19.194
  I0902 08:36:19.194363 16 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0902 08:36:19.200315 16 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-p5ss8=patched"
  I0902 08:36:19.200406 16 limit_range.go:344] LimitRange "e2e-limitrange-p5ss8" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-p5ss8" @ 09/02/25 08:36:19.2
  I0902 08:36:19.208141 16 limit_range.go:350] Found 1 limitRange
  I0902 08:36:19.209385 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7915" for this suite. @ 09/02/25 08:36:19.229
  STEP: Destroying namespace "e2e-limitrange-p5ss8-8504" for this suite. @ 09/02/25 08:36:19.244
• [0.233 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 09/02/25 08:36:19.256
  I0902 08:36:19.257069 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:36:19.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:19.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:19.295
  STEP: creating an Endpoint @ 09/02/25 08:36:19.315
  STEP: waiting for available Endpoint @ 09/02/25 08:36:19.329
  STEP: listing all Endpoints @ 09/02/25 08:36:19.336
  STEP: updating the Endpoint @ 09/02/25 08:36:19.348
  STEP: fetching the Endpoint @ 09/02/25 08:36:19.361
  STEP: patching the Endpoint @ 09/02/25 08:36:19.37
  STEP: fetching the Endpoint @ 09/02/25 08:36:19.391
  STEP: deleting the Endpoint by Collection @ 09/02/25 08:36:19.397
  STEP: waiting for Endpoint deletion @ 09/02/25 08:36:19.412
  STEP: fetching the Endpoint @ 09/02/25 08:36:19.415
  I0902 08:36:19.423064 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5814" for this suite. @ 09/02/25 08:36:19.43
• [0.188 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/02/25 08:36:19.445
  I0902 08:36:19.445797 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:36:19.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:19.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:19.487
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/02/25 08:36:19.496
  E0902 08:36:19.753048      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:20.756784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:21.754363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:22.755240      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:36:23.556
  I0902 08:36:23.565695 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-8cc698ac-fee5-443c-be0d-42884f57e64c container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:36:23.639
  I0902 08:36:23.698843 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8176" for this suite. @ 09/02/25 08:36:23.726
• [4.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 09/02/25 08:36:23.75
  I0902 08:36:23.750853 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:36:23.755
  E0902 08:36:23.755806      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:23.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:23.786
  I0902 08:36:23.798911 16 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-6012"
  I0902 08:36:23.821825 16 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-6012"
  STEP: waiting for a new root ca configmap created @ 09/02/25 08:36:24.323
  I0902 08:36:24.350092 16 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-6012"
  I0902 08:36:24.364802 16 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-6012"
  E0902 08:36:24.756924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 09/02/25 08:36:24.865
  I0902 08:36:24.873019 16 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-6012"
  I0902 08:36:24.873241 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6012" for this suite. @ 09/02/25 08:36:24.882
• [1.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 09/02/25 08:36:24.902
  I0902 08:36:24.902799 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:36:24.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:24.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:25.016
  I0902 08:36:25.032309 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 create -f -'
  I0902 08:36:25.696015 16 builder.go:146] stderr: ""
  I0902 08:36:25.696107 16 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0902 08:36:25.696644 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 create -f -'
  E0902 08:36:25.758294      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:26.159928 16 builder.go:146] stderr: ""
  I0902 08:36:26.160012 16 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/25 08:36:26.16
  E0902 08:36:26.759319      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:27.175284 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:36:27.175390 16 framework.go:733] Found 0 / 1
  E0902 08:36:27.759013      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:28.171779 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:36:28.172149 16 framework.go:733] Found 1 / 1
  I0902 08:36:28.172806 16 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0902 08:36:28.182791 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 08:36:28.183010 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 08:36:28.183462 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 describe pod agnhost-primary-wpgt7'
  I0902 08:36:28.410290 16 builder.go:146] stderr: ""
  I0902 08:36:28.410474 16 builder.go:147] stdout: "Name:             agnhost-primary-wpgt7\nNamespace:        kubectl-7494\nPriority:         0\nService Account:  default\nNode:             noo9iech3thi-3/192.168.121.152\nStart Time:       Tue, 02 Sep 2025 08:36:25 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.105\nIPs:\n  IP:           10.233.66.105\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://d5ed0f1f33fca77fc9d98ca64fe357d6972ad600c05ebaacb9c87276179f90ed\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 02 Sep 2025 08:36:26 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ccf6c (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-ccf6c:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7494/agnhost-primary-wpgt7 to noo9iech3thi-3\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0902 08:36:28.410884 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 describe rc agnhost-primary'
  I0902 08:36:28.617204 16 builder.go:146] stderr: ""
  I0902 08:36:28.617316 16 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7494\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-wpgt7\n"
  I0902 08:36:28.618096 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 describe service agnhost-primary'
  E0902 08:36:28.759461      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:28.834110 16 builder.go:146] stderr: ""
  I0902 08:36:28.834245 16 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7494\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.2.179\nIPs:                      10.233.2.179\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.66.105:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0902 08:36:28.859774 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 describe node noo9iech3thi-1'
  I0902 08:36:29.144984 16 builder.go:146] stderr: ""
  I0902 08:36:29.145253 16 builder.go:147] stdout: "Name:               noo9iech3thi-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=noo9iech3thi-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 02 Sep 2025 06:43:18 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  noo9iech3thi-1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 02 Sep 2025 08:36:26 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 02 Sep 2025 06:55:48 +0000   Tue, 02 Sep 2025 06:55:48 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Tue, 02 Sep 2025 08:31:37 +0000   Tue, 02 Sep 2025 06:59:31 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 02 Sep 2025 08:31:37 +0000   Tue, 02 Sep 2025 06:59:31 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 02 Sep 2025 08:31:37 +0000   Tue, 02 Sep 2025 06:59:31 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 02 Sep 2025 08:31:37 +0000   Tue, 02 Sep 2025 06:59:31 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.121.5\n  Hostname:    noo9iech3thi-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8133132Ki\n  pods:               256\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283468Ki\n  pods:               256\nSystem Info:\n  Machine ID:                 df37dfdc15804437b0b694128ad112ae\n  System UUID:                df37dfdc-1580-4437-b0b6-94128ad112ae\n  Boot ID:                    3d39c439-c205-4dd5-9d07-34cbc2460e0d\n  Kernel Version:             6.14.0-29-generic\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.32.8\n  Kubelet Version:            v1.32.8\n  Kube-Proxy Version:         v1.32.8\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-nj7vw                                               100m (6%)     0 (0%)      10Mi (0%)        0 (0%)         101m\n  kube-system                 cilium-node-init-hgzhs                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         101m\n  kube-system                 coredns-668d6bf9bc-pmh8x                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     90m\n  kube-system                 kube-apiserver-noo9iech3thi-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         113m\n  kube-system                 kube-controller-manager-noo9iech3thi-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         113m\n  kube-system                 kube-proxy-9w4sn                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         113m\n  kube-system                 kube-scheduler-noo9iech3thi-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         113m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-rzhk6    0 (0%)        0 (0%)      0 (0%)           0 (0%)         66m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (53%)  0 (0%)\n  memory             180Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0902 08:36:29.145987 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7494 describe namespace kubectl-7494'
  I0902 08:36:29.358907 16 builder.go:146] stderr: ""
  I0902 08:36:29.359016 16 builder.go:147] stdout: "Name:         kubectl-7494\nLabels:       e2e-framework=kubectl\n              e2e-run=98d3bfa0-79c6-4655-86d0-63d46ea81efd\n              kubernetes.io/metadata.name=kubectl-7494\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0902 08:36:29.359216 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7494" for this suite. @ 09/02/25 08:36:29.37
• [4.487 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/02/25 08:36:29.39
  I0902 08:36:29.390132 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:36:29.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:29.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:29.435
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2419 @ 09/02/25 08:36:29.441
  STEP: changing the ExternalName service to type=ClusterIP @ 09/02/25 08:36:29.453
  STEP: creating replication controller externalname-service in namespace services-2419 @ 09/02/25 08:36:29.488
  I0902 08:36:29.538848      16 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2419, replica count: 2
  E0902 08:36:29.760422      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:30.760485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:31.761247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:32.590785      16 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 08:36:32.590913 16 resource.go:361] Creating new exec pod
  E0902 08:36:32.760930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:33.761712      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:34.761942      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:35.633161 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-2419 exec execpoddg6gn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0902 08:36:35.762299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:35.996152 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.48.155) 80 port [tcp/http] succeeded!\n"
  I0902 08:36:35.996275 16 builder.go:147] stdout: "externalname-service-xjhjl"
  I0902 08:36:35.996982 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-2419 exec execpoddg6gn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.48.155 80'
  I0902 08:36:36.264815 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.48.155 80\nConnection to 10.233.48.155 80 port [tcp/http] succeeded!\n"
  I0902 08:36:36.264936 16 builder.go:147] stdout: "externalname-service-xjhjl"
  I0902 08:36:36.265441 16 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0902 08:36:36.335473 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2419" for this suite. @ 09/02/25 08:36:36.353
• [6.980 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/02/25 08:36:36.37
  I0902 08:36:36.370798 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 08:36:36.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:36:36.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:36:36.47
  STEP: Creating pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260 @ 09/02/25 08:36:36.48
  E0902 08:36:36.762987      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:37.763183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 08:36:38.523
  I0902 08:36:38.530476 16 container_probe.go:1749] Initial restart count of pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b is 0
  I0902 08:36:38.537593 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:38.763805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:39.764580      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:40.551473 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:40.764826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:41.764951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:42.561351 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:42.766142      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:43.766816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:44.577097 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:44.767299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:45.767506      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:46.589286 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:46.768574      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:47.768928      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:48.596115 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:48.769505      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:49.769986      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:50.606202 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:50.770316      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:51.771099      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:52.616941 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:52.771641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:53.772427      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:54.631805 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:54.773156      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:55.773387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:56.642441 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:56.773802      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:57.774395      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:36:58.651609 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:36:58.774826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:36:59.774998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:00.662605 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:00.775808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:01.776497      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:02.672843 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:02.777931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:03.777738      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:04.681069 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:04.778437      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:05.778717      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:06.689592 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:06.778805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:07.779710      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:08.698496 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:08.780919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:09.781219      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:10.708277 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:10.781703      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:11.782311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:12.715333 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:12.782791      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:13.783409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:14.725461 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:14.783611      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:15.784639      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:16.734975 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:16.785341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:17.786055      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:18.742828 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:18.786185      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:19.786995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:20.752319 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:20.788069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:21.788280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:22.761068 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:22.789266      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:23.789945      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:24.768253 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:24.790478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:25.790753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:26.780992 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:26.791134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:27.791611      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:28.792387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:28.792875 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:29.793262      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:30.793335      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:30.802900 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:31.793794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:32.793780      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:32.814735 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:33.794184      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:34.794504      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:34.823385 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:35.795324      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:36.795578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:36.836043 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:37.795799      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:38.796336      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:38.844262 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:39.796871      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:40.797489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:40.861910 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:41.797915      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:42.798497      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:42.871502 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:43.798974      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:44.799896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:44.881293 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:45.800912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:46.801145      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:46.893486 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:47.801750      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:48.802392      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:48.903050 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:49.802762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:50.802811      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:50.912668 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:51.803695      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:52.804480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:52.922052 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:53.804672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:54.805080      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:54.932082 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:55.806023      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:56.806582      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:56.943748 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:57.807122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:37:58.807852      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:37:58.958977 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:37:59.808370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:00.808993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:00.970259 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:01.809596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:02.810243      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:02.979368 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:03.810193      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:04.811040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:04.987955 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:05.811630      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:06.811430      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:07.014649 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:07.811924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:08.812374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:09.023265 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:09.812941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:10.813108      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:11.032873 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:11.813405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:12.814001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:13.046482 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:13.814225      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:14.815351      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:15.056230 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:15.816084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:16.816076      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:17.067277 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:17.816245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:18.816730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:19.078632 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:19.817065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:20.817951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:21.093486 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:21.818286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:22.818037      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:23.101857 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:23.818275      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:24.818560      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:25.113420 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:25.818982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:26.819169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:27.125989 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:27.819379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:28.819905      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:29.136216 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:29.819938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:30.820716      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:31.147255 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:31.820611      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:32.820821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:33.158175 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:33.821997      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:34.822438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:35.170077 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:35.823682      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:36.823720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:37.181059 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:37.824327      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:38.824622      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:39.189177 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:39.824892      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:40.825200      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:41.198212 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:41.825938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:42.826564      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:43.207368 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:43.826895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:44.827253      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:45.216030 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:45.828082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:46.828275      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:47.226500 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:47.828549      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:48.828949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:49.237655 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:49.829572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:50.829793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:51.245714 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:51.830596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:52.830788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:53.255141 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:53.831060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:54.830965      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:55.264178 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:55.831062      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:56.831569      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:57.272060 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:57.832086      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:38:58.832890      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:38:59.282148 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:38:59.833015      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:00.833432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:01.291499 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:01.834120      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:02.834344      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:03.299919 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:03.834830      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:04.835849      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:05.308347 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:05.837177      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:06.837379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:07.317337 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:07.838008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:08.838185      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:09.331359 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:09.839179      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:10.839446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:11.346596 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:11.840588      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:12.840213      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:13.357636 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:13.841033      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:14.841735      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:15.365720 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:15.841787      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:16.842143      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:17.379034 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:17.842373      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:18.843134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:19.387173 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:19.844079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:20.844853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:21.397699 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:21.845235      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:22.846152      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:23.411392 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:23.847041      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:24.848174      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:25.420109 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:25.849616      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:26.849383      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:27.430951 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:27.849623      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:28.849669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:29.443351 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:29.849853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:30.850267      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:31.454561 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:31.851256      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:32.852053      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:33.462351 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:33.852967      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:34.853239      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:35.471354 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:35.853887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:36.855002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:37.490812 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:37.855181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:38.855647      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:39.504277 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:39.856028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:40.856733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:41.514878 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:41.857460      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:42.858298      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:43.524695 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:43.859291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:44.860660      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:45.533323 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:45.860648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:46.861106      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:47.546661 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:47.861919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:48.862675      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:49.557074 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:49.862631      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:50.862960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:51.567920 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:51.863383      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:52.863575      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:53.577975 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:53.864451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:54.865587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:55.595924 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:55.866769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:56.866918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:57.604916 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:57.867129      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:39:58.867319      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:39:59.615792 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:39:59.868064      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:00.868369      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:01.627447 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:01.868881      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:02.869608      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:03.639618 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:03.869857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:04.869877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:05.651928 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:05.870076      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:06.870208      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:07.661436 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:07.870357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:08.870796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:09.681511 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:09.871152      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:10.871712      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:11.692346 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:11.871851      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:12.872623      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:13.702373 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:13.873864      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:14.874578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:15.711143 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:15.875320      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:16.876113      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:17.721694 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:17.876986      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:18.877705      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:19.732120 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:19.878428      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:20.878950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:21.750052 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:21.879126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:22.879354      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:23.758554 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:23.879620      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:24.879808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:25.766717 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:25.879901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:26.880036      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:27.792802 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:27.882541      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:28.881421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:29.800403 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:29.881489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:30.881877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:31.823811 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:31.882896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:32.883034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:33.837769 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:33.884467      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:34.884841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:35.880284 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:35.885325      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:36.886101      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:37.885994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:37.888234 16 container_probe.go:1759] Get pod busybox-41edb8d4-809c-4f81-9e31-5d173d871d9b in namespace container-probe-4260
  E0902 08:40:38.886968      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:39.887144      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/02/25 08:40:39.889
  I0902 08:40:39.955165 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4260" for this suite. @ 09/02/25 08:40:39.973
• [243.625 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/02/25 08:40:39.996
  I0902 08:40:39.996217 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/02/25 08:40:40.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:40:40.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:40:40.056
  STEP: mirroring a new custom Endpoint @ 09/02/25 08:40:40.096
  I0902 08:40:40.138405 16 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0902 08:40:40.887421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:41.887771      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/02/25 08:40:42.148
  STEP: mirroring deletion of a custom Endpoint @ 09/02/25 08:40:42.178
  I0902 08:40:42.233261 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6259" for this suite. @ 09/02/25 08:40:42.25
• [2.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/02/25 08:40:42.274
  I0902 08:40:42.274182 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 08:40:42.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:40:42.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:40:42.325
  STEP: getting /apis @ 09/02/25 08:40:42.334
  STEP: getting /apis/discovery.k8s.io @ 09/02/25 08:40:42.342
  STEP: getting /apis/discovery.k8s.iov1 @ 09/02/25 08:40:42.345
  STEP: creating @ 09/02/25 08:40:42.347
  STEP: getting @ 09/02/25 08:40:42.383
  STEP: listing @ 09/02/25 08:40:42.391
  STEP: watching @ 09/02/25 08:40:42.4
  I0902 08:40:42.400304 16 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/02/25 08:40:42.404
  STEP: cluster-wide watching @ 09/02/25 08:40:42.411
  I0902 08:40:42.411426 16 endpointslice.go:459] starting watch
  STEP: patching @ 09/02/25 08:40:42.414
  STEP: updating @ 09/02/25 08:40:42.433
  I0902 08:40:42.455742 16 endpointslice.go:482] waiting for watch events with expected annotations
  I0902 08:40:42.456008 16 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/02/25 08:40:42.456
  STEP: deleting a collection @ 09/02/25 08:40:42.488
  I0902 08:40:42.558421 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9663" for this suite. @ 09/02/25 08:40:42.571
• [0.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/02/25 08:40:42.596
  I0902 08:40:42.596573 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 08:40:42.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:40:42.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:40:42.636
  STEP: creating a Namespace @ 09/02/25 08:40:42.643
  STEP: patching the Namespace @ 09/02/25 08:40:42.682
  STEP: get the Namespace and ensuring it has the label @ 09/02/25 08:40:42.7
  I0902 08:40:42.713891 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1769" for this suite. @ 09/02/25 08:40:42.726
  STEP: Destroying namespace "nspatchtest-3242254e-7148-4dba-85a5-525dc6993289-3413" for this suite. @ 09/02/25 08:40:42.742
• [0.159 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/02/25 08:40:42.756
  I0902 08:40:42.756903 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:40:42.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:40:42.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:40:42.805
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:40:42.812
  E0902 08:40:42.888752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:43.888980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:44.890188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:45.890459      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:40:46.872
  I0902 08:40:46.882102 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-35d355ec-113e-4e0d-ac56-e265f7231d7e container client-container: <nil>
  E0902 08:40:46.891294      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/02/25 08:40:46.923
  I0902 08:40:46.997796 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5074" for this suite. @ 09/02/25 08:40:47.01
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/02/25 08:40:47.03
  I0902 08:40:47.030081 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:40:47.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:40:47.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:40:47.082
  STEP: Creating a pod to test env composition @ 09/02/25 08:40:47.087
  E0902 08:40:47.892905      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:48.893224      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:49.893715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:40:50.894065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:40:51.146
  I0902 08:40:51.152880 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod var-expansion-a992d516-96a6-441b-86c9-b1dc6b253084 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:40:51.173
  I0902 08:40:51.217587 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5936" for this suite. @ 09/02/25 08:40:51.228
• [4.216 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/02/25 08:40:51.248
  I0902 08:40:51.248110 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:40:51.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:40:51.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:40:51.331
  I0902 08:40:51.433142 16 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:40:51.444
  I0902 08:40:51.550455 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:40:51.550611 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:40:51.894446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:52.476396 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:40:52.476499 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:40:52.894901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:53.468714 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:40:53.468828 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:40:53.895984      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:54.464769 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:40:54.464896 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/02/25 08:40:54.494
  STEP: Check that daemon pods images are updated. @ 09/02/25 08:40:54.56
  I0902 08:40:54.569498 16 daemon_set.go:1193] Wrong image for pod: daemon-set-gr7n2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:40:54.569694 16 daemon_set.go:1193] Wrong image for pod: daemon-set-rxpzd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0902 08:40:54.897084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:55.581749 16 daemon_set.go:1193] Wrong image for pod: daemon-set-gr7n2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:40:55.581960 16 daemon_set.go:1193] Wrong image for pod: daemon-set-rxpzd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:40:55.582250 16 daemon_set.go:1198] Pod daemon-set-tnvn5 is not available
  E0902 08:40:55.897279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:56.583617 16 daemon_set.go:1193] Wrong image for pod: daemon-set-gr7n2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0902 08:40:56.897440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:57.585197 16 daemon_set.go:1193] Wrong image for pod: daemon-set-gr7n2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:40:57.585309 16 daemon_set.go:1198] Pod daemon-set-rx6ws is not available
  E0902 08:40:57.897705      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:58.573368 16 daemon_set.go:1193] Wrong image for pod: daemon-set-gr7n2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0902 08:40:58.573439 16 daemon_set.go:1198] Pod daemon-set-rx6ws is not available
  E0902 08:40:58.898085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:40:59.596865 16 daemon_set.go:1198] Pod daemon-set-d97nn is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/02/25 08:40:59.624
  I0902 08:40:59.736608 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:40:59.736687 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:40:59.902787      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:41:00.651285 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0902 08:41:00.651379 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:41:00.899561      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:41:01.645738 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:41:01.645811 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/25 08:41:01.688
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-495, will wait for the garbage collector to delete the pods @ 09/02/25 08:41:01.688
  I0902 08:41:01.763633 16 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 17.963117ms
  I0902 08:41:01.865594 16 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.943672ms
  E0902 08:41:01.900006      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:02.900633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:41:03.276728 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:41:03.276827 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0902 08:41:03.290579 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27169"},"items":null}

  I0902 08:41:03.297704 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27169"},"items":null}

  I0902 08:41:03.338961 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-495" for this suite. @ 09/02/25 08:41:03.348
• [12.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/02/25 08:41:03.373
  I0902 08:41:03.373185 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename discovery @ 09/02/25 08:41:03.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:41:03.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:41:03.433
  STEP: Setting up server cert @ 09/02/25 08:41:03.442
  E0902 08:41:03.900776      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 09/02/25 08:41:04.497
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/02/25 08:41:04.501
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/02/25 08:41:04.503
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/02/25 08:41:04.506
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/02/25 08:41:04.507
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/02/25 08:41:04.51
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/02/25 08:41:04.512
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/02/25 08:41:04.514
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/02/25 08:41:04.516
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/02/25 08:41:04.519
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/02/25 08:41:04.521
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/02/25 08:41:04.523
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/02/25 08:41:04.526
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/02/25 08:41:04.528
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/02/25 08:41:04.531
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/02/25 08:41:04.533
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/02/25 08:41:04.535
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/02/25 08:41:04.537
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/02/25 08:41:04.539
  I0902 08:41:04.542858 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9294" for this suite. @ 09/02/25 08:41:04.553
• [1.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/02/25 08:41:04.568
  I0902 08:41:04.568088 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-watch @ 09/02/25 08:41:04.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:41:04.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:41:04.595
  I0902 08:41:04.644452 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:41:04.901588      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:05.901762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:06.902241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/02/25 08:41:07.298
  I0902 08:41:07.325681 16 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:41:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:41:07Z]] name:name1 resourceVersion:27194 uid:3af2adca-c955-4f29-99af-0d2bed5ce478] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:41:07.902263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:08.903225      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:09.904887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:10.904448      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:11.904711      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:12.904801      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:13.905049      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:14.905143      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:15.905695      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:16.905930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/02/25 08:41:17.326
  I0902 08:41:17.342790 16 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:41:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:41:17Z]] name:name2 resourceVersion:27263 uid:2c26db2d-bf33-4ed7-9f8b-2fa8cf796fe0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:41:17.910380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:18.907742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:19.908115      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:20.908786      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:21.911220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:22.931703      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:23.917399      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:24.919383      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:25.921044      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:26.919250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/02/25 08:41:27.343
  I0902 08:41:27.361225 16 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:41:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:41:27Z]] name:name1 resourceVersion:27287 uid:3af2adca-c955-4f29-99af-0d2bed5ce478] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:41:27.920270      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:28.920919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:29.921736      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:30.922781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:31.923311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:32.924793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:33.924772      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:34.924868      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:35.925719      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:36.925833      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/02/25 08:41:37.364
  I0902 08:41:37.380686 16 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:41:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:41:37Z]] name:name2 resourceVersion:27310 uid:2c26db2d-bf33-4ed7-9f8b-2fa8cf796fe0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:41:37.926315      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:38.926835      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:39.926948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:40.927163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:41.927850      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:42.927878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:43.928379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:44.929024      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:45.929153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:46.929434      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/02/25 08:41:47.381
  I0902 08:41:47.401902 16 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:41:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:41:27Z]] name:name1 resourceVersion:27333 uid:3af2adca-c955-4f29-99af-0d2bed5ce478] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:41:47.929825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:48.930463      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:49.931489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:50.932038      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:51.931939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:52.932342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:53.932484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:54.933011      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:55.933575      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:56.933560      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/02/25 08:41:57.403
  I0902 08:41:57.422795 16 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-02T08:41:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-02T08:41:37Z]] name:name2 resourceVersion:27357 uid:2c26db2d-bf33-4ed7-9f8b-2fa8cf796fe0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 08:41:57.933895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:58.934482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:41:59.935217      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:00.935170      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:01.935668      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:02.936094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:03.937069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:04.937816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:05.938029      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:06.938481      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:07.938773      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:07.953910 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1645" for this suite. @ 09/02/25 08:42:07.967
• [63.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/02/25 08:42:07.992
  I0902 08:42:07.992681 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 08:42:07.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:08.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:08.027
  STEP: getting /apis @ 09/02/25 08:42:08.045
  STEP: getting /apis/admissionregistration.k8s.io @ 09/02/25 08:42:08.059
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/02/25 08:42:08.062
  STEP: creating @ 09/02/25 08:42:08.064
  STEP: getting @ 09/02/25 08:42:08.093
  STEP: listing @ 09/02/25 08:42:08.099
  STEP: watching @ 09/02/25 08:42:08.107
  I0902 08:42:08.107794 16 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/02/25 08:42:08.11
  STEP: updating @ 09/02/25 08:42:08.126
  I0902 08:42:08.142684 16 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/02/25 08:42:08.143
  STEP: deleting a collection @ 09/02/25 08:42:08.172
  I0902 08:42:08.209374 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2853" for this suite. @ 09/02/25 08:42:08.221
• [0.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/02/25 08:42:08.236
  I0902 08:42:08.236674 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:42:08.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:08.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:08.27
  STEP: creating a Pod with a static label @ 09/02/25 08:42:08.288
  STEP: watching for Pod to be ready @ 09/02/25 08:42:08.313
  I0902 08:42:08.317426 16 pods.go:945] observed Pod pod-test in namespace pods-2298 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0902 08:42:08.325873 16 pods.go:945] observed Pod pod-test in namespace pods-2298 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC  }]
  I0902 08:42:08.364094 16 pods.go:945] observed Pod pod-test in namespace pods-2298 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC  }]
  E0902 08:42:08.938910      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:09.940014      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:10.028964 16 pods.go:948] Found Pod pod-test in namespace pods-2298 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:09 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:09 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-02 08:42:08 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/02/25 08:42:10.035
  STEP: getting the Pod and ensuring that it's patched @ 09/02/25 08:42:10.056
  STEP: replacing the Pod's status Ready condition to False @ 09/02/25 08:42:10.063
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/02/25 08:42:10.091
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/02/25 08:42:10.091
  STEP: watching for the Pod to be deleted @ 09/02/25 08:42:10.117
  I0902 08:42:10.120581 16 pods.go:1058] observed event type MODIFIED
  E0902 08:42:10.942112      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:11.940451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:12.055753 16 pods.go:1058] observed event type MODIFIED
  I0902 08:42:12.242143 16 pods.go:1058] observed event type MODIFIED
  E0902 08:42:12.940459      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:13.110173 16 pods.go:1058] observed event type MODIFIED
  I0902 08:42:13.120671 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2298" for this suite. @ 09/02/25 08:42:13.129
• [4.908 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/02/25 08:42:13.145
  I0902 08:42:13.145581 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:42:13.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:13.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:13.193
  STEP: Creating configMap with name configmap-projected-all-test-volume-a6a23a72-e4a1-4ea7-81bf-187e367bd084 @ 09/02/25 08:42:13.201
  STEP: Creating secret with name secret-projected-all-test-volume-582ec91e-73eb-48af-82ff-46babdadcd21 @ 09/02/25 08:42:13.213
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/02/25 08:42:13.223
  W0902 08:42:13.243736      16 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0902 08:42:13.940936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:14.941038      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:15.941629      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:16.941789      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:42:17.277
  I0902 08:42:17.283071 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod projected-volume-e18270c0-f69e-4451-b8cf-08ce1bd90cb4 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:42:17.304
  I0902 08:42:17.340704 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9603" for this suite. @ 09/02/25 08:42:17.353
• [4.225 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/02/25 08:42:17.371
  I0902 08:42:17.371857 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename tables @ 09/02/25 08:42:17.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:17.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:17.418
  I0902 08:42:17.432143 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4213" for this suite. @ 09/02/25 08:42:17.453
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 09/02/25 08:42:17.476
  I0902 08:42:17.476349 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 08:42:17.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:17.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:17.558
  STEP: Creating service test in namespace statefulset-7931 @ 09/02/25 08:42:17.563
  STEP: Creating statefulset ss in namespace statefulset-7931 @ 09/02/25 08:42:17.573
  I0902 08:42:17.604184 16 wait.go:40] Found 0 stateful pods, waiting for 1
  E0902 08:42:17.942895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:18.943099      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:19.943121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:20.943432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:21.943504      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:22.943805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:23.944193      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:24.945028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:25.945430      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:26.945840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:27.610415 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/02/25 08:42:27.632
  STEP: updating a scale subresource @ 09/02/25 08:42:27.642
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/02/25 08:42:27.664
  STEP: Patch a scale subresource @ 09/02/25 08:42:27.674
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/02/25 08:42:27.699
  I0902 08:42:27.712384 16 statefulset.go:138] Deleting all statefulset in ns statefulset-7931
  I0902 08:42:27.734474 16 rest.go:152] Scaling statefulset ss to 0
  E0902 08:42:27.946727      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:28.947116      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:29.947370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:30.947886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:31.948243      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:32.948317      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:33.948720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:34.948823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:35.949228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:36.949281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:37.798256 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 08:42:37.805700 16 rest.go:90] Deleting statefulset ss
  I0902 08:42:37.838437 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7931" for this suite. @ 09/02/25 08:42:37.849
• [20.391 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/02/25 08:42:37.868
  I0902 08:42:37.868329 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 08:42:37.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:37.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:37.913
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 08:42:37.949
  E0902 08:42:37.950098      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:38.950287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:39.950960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 08:42:39.992
  E0902 08:42:40.952286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:41.952416      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/02/25 08:42:42.03
  STEP: delete the pod with lifecycle hook @ 09/02/25 08:42:42.044
  E0902 08:42:42.953568      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:43.953913      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:42:44.076322 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3002" for this suite. @ 09/02/25 08:42:44.086
• [6.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/02/25 08:42:44.103
  I0902 08:42:44.103639 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:42:44.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:42:44.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:42:44.147
  STEP: create the rc1 @ 09/02/25 08:42:44.192
  STEP: create the rc2 @ 09/02/25 08:42:44.206
  E0902 08:42:44.955044      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:45.991670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:46.960279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:47.997727      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:49.010167      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:50.011757      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/02/25 08:42:50.422
  E0902 08:42:51.158883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:52.193760      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:53.196927      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:54.228754      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:55.228869      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:56.229221      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/02/25 08:42:56.402
  STEP: wait for the rc to be deleted @ 09/02/25 08:42:56.429
  E0902 08:42:57.229916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:58.230379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:42:59.230483      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:00.230640      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:01.231441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:01.619350 16 garbage_collector.go:762] 83 pods remaining
  I0902 08:43:01.619449 16 garbage_collector.go:769] 68 pods has nil DeletionTimestamp
  I0902 08:43:01.619469 16 garbage_collector.go:770] 
  E0902 08:43:02.231345      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:03.231633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:04.232159      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:05.232792      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:06.233021      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:06.459576 16 garbage_collector.go:762] 64 pods remaining
  I0902 08:43:06.459651 16 garbage_collector.go:769] 50 pods has nil DeletionTimestamp
  I0902 08:43:06.459686 16 garbage_collector.go:770] 
  E0902 08:43:07.233908      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:08.234229      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:09.234327      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:10.234482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:11.243980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 08:43:11.507
  I0902 08:43:11.844695 16 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:43:11.844883 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-496hj" in namespace "gc-8443"
  I0902 08:43:11.893813 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4bk78" in namespace "gc-8443"
  I0902 08:43:11.921804 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4fpf7" in namespace "gc-8443"
  I0902 08:43:11.950935 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pg9r" in namespace "gc-8443"
  I0902 08:43:11.982337 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4qfll" in namespace "gc-8443"
  I0902 08:43:12.018222 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tm5f" in namespace "gc-8443"
  I0902 08:43:12.045894 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-52nvt" in namespace "gc-8443"
  I0902 08:43:12.068169 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jqs9" in namespace "gc-8443"
  I0902 08:43:12.108960 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5lflh" in namespace "gc-8443"
  I0902 08:43:12.185499 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ph48" in namespace "gc-8443"
  E0902 08:43:12.278147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:12.292085 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pr5n" in namespace "gc-8443"
  I0902 08:43:12.328479 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rv5j" in namespace "gc-8443"
  I0902 08:43:12.403498 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5sjc5" in namespace "gc-8443"
  I0902 08:43:12.429695 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-722j6" in namespace "gc-8443"
  I0902 08:43:12.530130 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7f66r" in namespace "gc-8443"
  I0902 08:43:12.571155 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7j6nw" in namespace "gc-8443"
  I0902 08:43:12.680762 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lhkj" in namespace "gc-8443"
  I0902 08:43:12.737660 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8kkx2" in namespace "gc-8443"
  I0902 08:43:12.831647 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rqmq" in namespace "gc-8443"
  I0902 08:43:12.914168 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bj5q" in namespace "gc-8443"
  I0902 08:43:13.065869 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9j7fh" in namespace "gc-8443"
  I0902 08:43:13.120772 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9p4sz" in namespace "gc-8443"
  E0902 08:43:13.457380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:13.469921 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pnbc" in namespace "gc-8443"
  I0902 08:43:13.588227 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9x7zp" in namespace "gc-8443"
  I0902 08:43:13.680352 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8ngg" in namespace "gc-8443"
  I0902 08:43:13.823455 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bf94l" in namespace "gc-8443"
  I0902 08:43:13.908451 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnxzd" in namespace "gc-8443"
  I0902 08:43:14.006353 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c59cc" in namespace "gc-8443"
  I0902 08:43:14.077976 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbxlk" in namespace "gc-8443"
  I0902 08:43:14.255419 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdhh8" in namespace "gc-8443"
  I0902 08:43:14.337738 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cfz69" in namespace "gc-8443"
  E0902 08:43:14.478195      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:14.620854 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctkl5" in namespace "gc-8443"
  I0902 08:43:14.883423 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dc5rk" in namespace "gc-8443"
  I0902 08:43:15.105968 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djsz6" in namespace "gc-8443"
  I0902 08:43:15.381447 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtfkb" in namespace "gc-8443"
  E0902 08:43:15.478889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:15.607143 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4dxt" in namespace "gc-8443"
  I0902 08:43:15.841944 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fhnq7" in namespace "gc-8443"
  I0902 08:43:15.993419 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fk9pb" in namespace "gc-8443"
  I0902 08:43:16.250459 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-frzbj" in namespace "gc-8443"
  I0902 08:43:16.339818 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fv9dr" in namespace "gc-8443"
  E0902 08:43:16.516071      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:16.559031 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fw2fb" in namespace "gc-8443"
  I0902 08:43:16.719230 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggcfj" in namespace "gc-8443"
  I0902 08:43:16.906826 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpq57" in namespace "gc-8443"
  I0902 08:43:17.223846 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqz57" in namespace "gc-8443"
  I0902 08:43:17.403162 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h4kk2" in namespace "gc-8443"
  E0902 08:43:17.533793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:17.584416 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hf97d" in namespace "gc-8443"
  I0902 08:43:17.818335 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmwtc" in namespace "gc-8443"
  I0902 08:43:17.992424 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hsf7c" in namespace "gc-8443"
  I0902 08:43:18.230955 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j5jhd" in namespace "gc-8443"
  I0902 08:43:18.324710 16 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j8lx8" in namespace "gc-8443"
  E0902 08:43:18.534208      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:43:18.734020 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8443" for this suite. @ 09/02/25 08:43:19.103
• [35.024 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/02/25 08:43:19.218
  I0902 08:43:19.218405 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:43:19.231
  E0902 08:43:19.686744      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:43:20.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:43:20.084
  STEP: Creating configMap with name configmap-test-upd-44d87961-9fb3-4ea7-b929-f2d9159e1df5 @ 09/02/25 08:43:20.11
  STEP: Creating the pod @ 09/02/25 08:43:20.12
  E0902 08:43:20.688189      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:21.688177      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-44d87961-9fb3-4ea7-b929-f2d9159e1df5 @ 09/02/25 08:43:22.209
  STEP: waiting to observe update in volume @ 09/02/25 08:43:22.234
  E0902 08:43:22.688721      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:23.689216      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:24.690282      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:25.690834      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:26.691653      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:27.692013      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:28.692179      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:29.693201      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:30.694465      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:31.694781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:32.695504      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:33.696131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:34.696803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:35.697742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:36.698602      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:37.699377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:38.699889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:39.700198      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:40.700230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:41.700640      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:42.700767      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:43.701171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:44.701496      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:45.702001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:46.702478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:47.702746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:48.702878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:49.703787      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:50.703991      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:51.704911      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:52.705376      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:53.706726      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:54.708152      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:55.708434      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:56.708976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:57.709203      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:58.709828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:43:59.710772      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:00.710867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:01.710925      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:02.711626      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:03.712142      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:04.712335      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:05.712746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:06.713205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:07.714670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:08.714599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:09.714953      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:10.715735      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:11.715949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:12.717061      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:13.717287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:14.717374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:15.717832      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:16.719485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:17.719287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:18.719305      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:19.720126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:20.720814      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:21.722068      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:22.724361      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:23.724035      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:24.724384      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:25.725377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:26.725657      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:27.726715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:28.726263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:29.726753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:30.726875      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:31.727742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:32.728288      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:33.728793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:34.728760      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:35.729684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:36.730046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:37.730659      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:38.731279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:39.731899      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:40.732145      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:41.732499      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:42.732674      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:43.732628      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:44.732800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:45.733472      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:46.733437      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:47.734334      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:48.734616      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:44:49.473969 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8170" for this suite. @ 09/02/25 08:44:49.484
• [90.293 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 09/02/25 08:44:49.51
  I0902 08:44:49.510846 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:44:49.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:44:49.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:44:49.56
  STEP: creating service multiprotocol-test in namespace services-185 @ 09/02/25 08:44:49.567
  STEP: creating pod pod1 in namespace services-185 @ 09/02/25 08:44:49.589
  STEP: Creating pod pod1 in namespace services-185 @ 09/02/25 08:44:49.589
  E0902 08:44:49.735170      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:50.735975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-185 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/02/25 08:44:51.697
  I0902 08:44:51.722778 16 service.go:4553] successfully validated that service multiprotocol-test in namespace services-185 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/02/25 08:44:51.722
  I0902 08:44:51.722991 16 resource.go:361] Creating new exec pod
  E0902 08:44:51.736278      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:52.736507      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:53.736744      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:44:53.774627 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80'
  I0902 08:44:54.127206 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.198 80\nConnection to 10.233.35.198 80 port [tcp/http] succeeded!\n"
  I0902 08:44:54.127394 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:44:54.128423 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.198 80'
  E0902 08:44:54.737066      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:55.737753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:44:56.423459 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.198 80\n"
  I0902 08:44:56.423566 16 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/02/25 08:44:56.423
  I0902 08:44:56.466216 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80'
  E0902 08:44:56.738854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:44:56.761163 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.198 80\nConnection to 10.233.35.198 80 port [tcp/http] succeeded!\n"
  I0902 08:44:56.761501 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 08:44:56.762165 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.198 80'
  E0902 08:44:57.739583      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:44:58.740402      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:44:59.012883 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.198 80\n"
  I0902 08:44:59.012996 16 builder.go:147] stdout: ""
  I0902 08:44:59.013232 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.198 80'
  E0902 08:44:59.740779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:00.741212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:45:01.289795 16 builder.go:146] stderr: "+ + nc -v -u -w 2 10.233.35.198 80\necho hostName\n"
  I0902 08:45:01.289907 16 builder.go:147] stdout: ""
  I0902 08:45:01.290513 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.198 80'
  E0902 08:45:01.742259      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:02.742946      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:45:03.570369 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.198 80\n"
  I0902 08:45:03.570596 16 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/02/25 08:45:03.571
  I0902 08:45:03.591220 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.198 80'
  E0902 08:45:03.743326      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:04.744304      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:05.745172      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:45:05.910228 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.198 80\n"
  I0902 08:45:05.910310 16 builder.go:147] stdout: "pod1"
  I0902 08:45:05.910730 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80'
  E0902 08:45:06.745147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:07.745440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:45:08.161268 16 builder.go:135] rc: 1
  I0902 08:45:08.161438 16 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.35.198 80
  nc: connect to 10.233.35.198 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0902 08:45:08.162317 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80'
  E0902 08:45:08.746318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:09.746587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:45:10.415962 16 builder.go:135] rc: 1
  I0902 08:45:10.416086 16 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.233.35.198 80
  echo hostName
  nc: connect to 10.233.35.198 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0902 08:45:10.416850 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80'
  E0902 08:45:10.747380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:11.747501      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:45:12.685611 16 builder.go:135] rc: 1
  I0902 08:45:12.685766 16 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-185 exec execpodsl96n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.198 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.35.198 80
  nc: connect to 10.233.35.198 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0902 08:45:12.686400 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-185" for this suite. @ 09/02/25 08:45:12.702
• [23.212 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/02/25 08:45:12.724
  I0902 08:45:12.725002 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:45:12.73
  E0902 08:45:12.747436      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:45:12.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:45:12.769
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/02/25 08:45:12.775
  E0902 08:45:13.747805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:14.748853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:15.750107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:16.749688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:45:16.825
  I0902 08:45:16.833974 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-de68d9a5-c5e5-4d7d-bca4-4a17ff7a7a81 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:45:16.849
  I0902 08:45:16.886615 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7308" for this suite. @ 09/02/25 08:45:16.897
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 09/02/25 08:45:16.914
  I0902 08:45:16.914604 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 08:45:16.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:45:16.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:45:16.952
  I0902 08:45:16.989132 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:45:17.749673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:18.750380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:19.751441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:20.751970      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:21.752834      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:22.753089      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:23.753491      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:24.753696      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:25.754775      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:26.755147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:27.755434      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:28.755671      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:29.756819      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:30.757384      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:31.757688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:32.757842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:33.758975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:34.759191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:35.759275      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:36.760338      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:37.761001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:38.761347      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:39.762084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:40.762759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:41.763829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:42.764009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:43.764727      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:44.765029      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:45.765689      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:46.765967      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:47.766660      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:48.767826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:49.768733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:50.768919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:51.769072      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:52.769453      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:53.770204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:54.770330      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:55.770437      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:56.771211      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:57.771444      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:58.771797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:45:59.772748      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:00.773218      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:01.773610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:02.773781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:03.774260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:04.774429      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:05.774478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:06.774880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:07.775000      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:08.775158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:09.776294      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:10.776741      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:11.777014      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:12.777196      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:13.777409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:14.777980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:15.778436      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:16.779242      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:46:17.006785 16 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/02/25 08:46:17.016
  STEP: Adding a custom resource @ 09/02/25 08:46:17.016
  I0902 08:46:17.066993 16 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0902 08:46:17.089310 16 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/02/25 08:46:17.089
  I0902 08:46:17.242206 16 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0902 08:46:17.290197 16 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/02/25 08:46:17.29
  I0902 08:46:17.399933 16 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0902 08:46:17.497007 16 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/02/25 08:46:17.497
  E0902 08:46:17.779332      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:18.779992      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/02/25 08:46:19.746
  E0902 08:46:19.780558      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:20.780569      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:21.780860      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:22.781072      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:23.781373      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/02/25 08:46:23.99
  STEP: Removing a custom resource @ 09/02/25 08:46:24.022
  STEP: Removing a custom resource @ 09/02/25 08:46:24.059
  I0902 08:46:24.085671 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6911" for this suite. @ 09/02/25 08:46:24.097
• [67.200 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/02/25 08:46:24.115
  I0902 08:46:24.115743 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 08:46:24.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:24.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:24.162
  STEP: Creating a pod to test substitution in container's command @ 09/02/25 08:46:24.171
  E0902 08:46:24.787795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:25.788018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:26.788322      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:27.789009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:46:28.235
  I0902 08:46:28.242050 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod var-expansion-fd9b3f97-98fd-4db3-aef4-a72cb106562c container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 08:46:28.255
  I0902 08:46:28.292483 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8665" for this suite. @ 09/02/25 08:46:28.305
• [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/02/25 08:46:28.33
  I0902 08:46:28.330611 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/02/25 08:46:28.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:46:28.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:46:28.379
  I0902 08:46:28.388053 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 08:46:28.789199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:29.789951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:30.790017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:31.790275      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:32.791199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:33.792016      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:34.792949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:35.793154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:36.794080      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:37.795005      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:38.795999      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:39.796692      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:40.796908      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:41.797349      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:42.797684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:43.797927      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:44.798603      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:45.798831      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:46.799842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:47.799952      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:48.800815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:49.801105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:50.802237      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:51.802495      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:52.802803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:53.802938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:54.803452      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:55.804234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:56.804969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:57.805572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:58.806783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:46:59.806893      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:00.807174      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:01.807271      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:02.808585      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:03.808587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:04.809475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:05.810282      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:06.810555      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:07.810742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:08.811370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:09.811810      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:10.812902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:11.813873      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:12.814079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:13.814260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:14.814686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:15.815087      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:16.815672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:17.816341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:18.816554      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:19.816714      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:20.816930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:21.817027      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:22.817191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:23.817399      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:24.818003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:25.818199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:26.818888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:27.819112      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:47:28.388600 16 util.go:396] Waiting for terminating namespaces to be deleted...
  I0902 08:47:28.399779 16 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/02/25 08:47:28.399
  I0902 08:47:28.634984 16 taints.go:463] Pod1 is running on noo9iech3thi-3. Tainting Node
  E0902 08:47:28.819826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:29.820264      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:30.821118      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:47:30.881832 16 taints.go:471] Pod2 is running on noo9iech3thi-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/02/25 08:47:30.881
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:47:30.906
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/02/25 08:47:30.914
  E0902 08:47:31.821475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:32.822298      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:33.823107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:34.822941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:35.823289      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:36.823995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:47:37.223701 16 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0902 08:47:37.824696      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:38.824801      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:39.824864      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:40.825250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:41.825955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:42.826334      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:43.826875      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:44.827869      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:45.828405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:46.828622      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:47.829295      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:48.829675      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:49.829763      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:50.830095      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:51.830241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:52.830472      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:53.830981      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:54.831199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:55.831375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:56.832609      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:47:57.360659 16 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/25 08:47:57.453
  I0902 08:47:57.478017 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5146" for this suite. @ 09/02/25 08:47:57.5
• [89.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 09/02/25 08:47:57.522
  I0902 08:47:57.522955 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/25 08:47:57.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:57.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:57.572
  STEP: creating a ServiceAccount @ 09/02/25 08:47:57.578
  STEP: watching for the ServiceAccount to be added @ 09/02/25 08:47:57.617
  STEP: patching the ServiceAccount @ 09/02/25 08:47:57.631
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/02/25 08:47:57.649
  STEP: deleting the ServiceAccount @ 09/02/25 08:47:57.656
  I0902 08:47:57.690682 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-450" for this suite. @ 09/02/25 08:47:57.7
• [0.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/02/25 08:47:57.714
  I0902 08:47:57.714311 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename watch @ 09/02/25 08:47:57.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:47:57.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:47:57.75
  STEP: getting a starting resourceVersion @ 09/02/25 08:47:57.755
  STEP: starting a background goroutine to produce watch events @ 09/02/25 08:47:57.762
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/02/25 08:47:57.763
  E0902 08:47:57.832693      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:58.832785      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:47:59.833642      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:48:00.533093 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7133" for this suite. @ 09/02/25 08:48:00.58
• [2.922 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/02/25 08:48:00.637
  I0902 08:48:00.637206 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 08:48:00.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:00.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:00.682
  I0902 08:48:00.688930 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:48:00.834068      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:48:01.740498 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6353" for this suite. @ 09/02/25 08:48:01.753
• [1.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/02/25 08:48:01.772
  I0902 08:48:01.773035 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:48:01.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:01.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:01.823
  STEP: getting /apis @ 09/02/25 08:48:01.831
  E0902 08:48:01.834339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis/node.k8s.io @ 09/02/25 08:48:01.85
  STEP: getting /apis/node.k8s.io/v1 @ 09/02/25 08:48:01.854
  STEP: creating @ 09/02/25 08:48:01.856
  STEP: watching @ 09/02/25 08:48:01.899
  I0902 08:48:01.899206 16 runtimeclass.go:275] starting watch
  STEP: getting @ 09/02/25 08:48:01.916
  STEP: listing @ 09/02/25 08:48:01.924
  STEP: patching @ 09/02/25 08:48:01.931
  STEP: updating @ 09/02/25 08:48:01.944
  I0902 08:48:01.956373 16 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/02/25 08:48:01.956
  STEP: deleting a collection @ 09/02/25 08:48:01.984
  I0902 08:48:02.021969 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5463" for this suite. @ 09/02/25 08:48:02.031
• [0.274 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/02/25 08:48:02.048
  I0902 08:48:02.048460 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 08:48:02.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:02.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:02.084
  E0902 08:48:02.877693      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:03.877800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:04.879126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:05.880090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/02/25 08:48:06.323
  STEP: referencing matching pods with named port @ 09/02/25 08:48:06.352
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/02/25 08:48:06.444
  STEP: recreating EndpointSlices after they've been deleted @ 09/02/25 08:48:06.458
  I0902 08:48:06.511390 16 endpointslice.go:938] EndpointSlice for Service endpointslice-695/example-named-port not found
  E0902 08:48:06.881583      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:07.884156      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:48:08.517834 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-695" for this suite. @ 09/02/25 08:48:08.528
• [6.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/02/25 08:48:08.546
  I0902 08:48:08.547031 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename csinodes @ 09/02/25 08:48:08.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:08.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:08.605
  STEP: Creating initial csiNode "e2e-csinode-g6q8s" @ 09/02/25 08:48:08.612
  STEP: Getting initial csiNode "e2e-csinode-g6q8s" @ 09/02/25 08:48:08.623
  STEP: Patching initial csiNode: "e2e-csinode-g6q8s" @ 09/02/25 08:48:08.631
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-g6q8s=patched" @ 09/02/25 08:48:08.644
  STEP: Delete initial csiNode: "e2e-csinode-g6q8s" @ 09/02/25 08:48:08.65
  STEP: Confirm deletion of csiNode "e2e-csinode-g6q8s" @ 09/02/25 08:48:08.669
  STEP: Creating replacement csiNode "e2e-csinode-gqvt8" @ 09/02/25 08:48:08.676
  STEP: Getting replacement csiNode "e2e-csinode-gqvt8" @ 09/02/25 08:48:08.688
  STEP: Updating replacement csiNode "e2e-csinode-gqvt8" @ 09/02/25 08:48:08.694
  STEP: DeleteCollection of CSINodes with "e2e-csinode-gqvt8=updated" label @ 09/02/25 08:48:08.711
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-gqvt8=updated" @ 09/02/25 08:48:08.728
  I0902 08:48:08.735904 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-2103" for this suite. @ 09/02/25 08:48:08.745
• [0.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/02/25 08:48:08.764
  I0902 08:48:08.764062 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/02/25 08:48:08.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:08.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:08.799
  STEP: creating a target pod @ 09/02/25 08:48:08.805
  E0902 08:48:08.884149      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:09.884982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/02/25 08:48:10.85
  E0902 08:48:10.884429      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:11.885085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:12.886299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/02/25 08:48:12.906
  I0902 08:48:12.906594 16 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5165 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:48:12.906941 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:48:12.907675 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-5165/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0902 08:48:13.015131 16 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/02/25 08:48:13.06
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/02/25 08:48:13.072
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/02/25 08:48:13.1
  I0902 08:48:13.115784 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5165" for this suite. @ 09/02/25 08:48:13.128
• [4.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/02/25 08:48:13.15
  I0902 08:48:13.151215 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:48:13.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:13.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:13.203
  STEP: Setting up server cert @ 09/02/25 08:48:13.261
  E0902 08:48:13.887670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:14.885814      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:48:15.385
  STEP: Deploying the webhook pod @ 09/02/25 08:48:15.403
  STEP: Wait for the deployment to be ready @ 09/02/25 08:48:15.435
  I0902 08:48:15.458142 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:48:15.886032      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:16.886235      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:48:17.483025 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 8, 48, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 48, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 8, 48, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 8, 48, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 08:48:17.886717      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:18.886888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:48:19.492
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:48:19.516
  E0902 08:48:19.887569      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:48:20.516729 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/02/25 08:48:20.533
  STEP: create a pod that should be denied by the webhook @ 09/02/25 08:48:20.578
  STEP: create a pod that causes the webhook to hang @ 09/02/25 08:48:20.602
  E0902 08:48:20.887832      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:21.888379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:22.888381      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:23.888870      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:24.889589      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:25.889946      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:26.890609      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:27.890823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:28.891573      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:29.891728      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/02/25 08:48:30.615
  STEP: create a configmap that should be admitted by the webhook @ 09/02/25 08:48:30.672
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/02/25 08:48:30.693
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/02/25 08:48:30.709
  STEP: create a namespace that bypass the webhook @ 09/02/25 08:48:30.719
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/02/25 08:48:30.744
  I0902 08:48:30.884925 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 08:48:30.893189      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9689" for this suite. @ 09/02/25 08:48:30.921
  STEP: Destroying namespace "webhook-markers-4778" for this suite. @ 09/02/25 08:48:30.957
  STEP: Destroying namespace "exempted-namespace-8793" for this suite. @ 09/02/25 08:48:30.979
• [17.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/02/25 08:48:31.014
  I0902 08:48:31.015032 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 08:48:31.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:48:31.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:48:31.069
  I0902 08:48:31.078814 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 08:48:31.107638 16 util.go:396] Waiting for terminating namespaces to be deleted...
  I0902 08:48:31.116734 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-1 before test
  I0902 08:48:31.133452 16 predicates.go:957] cilium-nj7vw from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133550 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 08:48:31.133575 16 predicates.go:957] cilium-node-init-hgzhs from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133592 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:48:31.133610 16 predicates.go:957] coredns-668d6bf9bc-pmh8x from kube-system started at 2025-09-02 07:05:54 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133625 16 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0902 08:48:31.133641 16 predicates.go:957] kube-apiserver-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133680 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 08:48:31.133698 16 predicates.go:957] kube-controller-manager-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133724 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:48:31.133741 16 predicates.go:957] kube-proxy-9w4sn from kube-system started at 2025-09-02 06:43:28 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133755 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:48:31.133771 16 predicates.go:957] kube-scheduler-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.133785 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 08:48:31.133817 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-rzhk6 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:48:31.133835 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:48:31.133849 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:48:31.133864 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-2 before test
  I0902 08:48:31.151239 16 predicates.go:957] cilium-c4w69 from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151324 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 08:48:31.151386 16 predicates.go:957] cilium-node-init-5mfbq from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151435 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:48:31.151458 16 predicates.go:957] cilium-operator-b676844bf-xs2kw from kube-system started at 2025-09-02 07:07:12 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151473 16 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0902 08:48:31.151489 16 predicates.go:957] coredns-668d6bf9bc-94wcm from kube-system started at 2025-09-02 06:55:39 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151505 16 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0902 08:48:31.151550 16 predicates.go:957] kube-apiserver-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151568 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 08:48:31.151594 16 predicates.go:957] kube-controller-manager-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151619 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:48:31.151637 16 predicates.go:957] kube-proxy-5rgj5 from kube-system started at 2025-09-02 06:53:43 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151652 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:48:31.151668 16 predicates.go:957] kube-scheduler-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.151696 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 08:48:31.151712 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-99jz9 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:48:31.151726 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:48:31.151740 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:48:31.151755 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-3 before test
  I0902 08:48:31.173474 16 predicates.go:957] ephemeral-containers-target-pod from ephemeral-containers-test-5165 started at 2025-09-02 08:48:08 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.174479 16 predicates.go:959] 	Container test-container-1 ready: true, restart count 0
  I0902 08:48:31.174830 16 predicates.go:957] cilium-node-init-ll5nc from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.175122 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:48:31.175591 16 predicates.go:957] cilium-wbqzn from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.175673 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 4
  I0902 08:48:31.175991 16 predicates.go:957] kube-proxy-98k2m from kube-system started at 2025-09-02 06:54:14 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.176282 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:48:31.176892 16 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-02 07:29:54 +0000 UTC (1 container statuses recorded)
  I0902 08:48:31.176928 16 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 08:48:31.176952 16 predicates.go:957] sonobuoy-e2e-job-0b6c70a640004788 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:48:31.178160 16 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0902 08:48:31.178205 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:48:31.178244 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-7knzw from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:48:31.178290 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:48:31.178325 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/25 08:48:31.179
  E0902 08:48:31.893912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:32.894265      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/25 08:48:33.241
  STEP: Trying to apply a random label on the found node. @ 09/02/25 08:48:33.298
  STEP: verifying the node has the label kubernetes.io/e2e-4c199349-de37-4692-940c-aafaa2bbf04a 95 @ 09/02/25 08:48:33.331
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/02/25 08:48:33.35
  E0902 08:48:33.894446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:34.894287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.152 on the node which pod4 resides and expect not scheduled @ 09/02/25 08:48:35.387
  E0902 08:48:35.894460      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:36.894924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:37.895269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:38.896032      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:39.897006      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:40.897212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:41.898341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:42.898996      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:43.899719      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:44.899950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:45.900446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:46.901137      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:47.901412      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:48.901388      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:49.901791      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:50.902230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:51.902432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:52.902946      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:53.903181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:54.903359      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:55.903950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:56.904644      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:57.905672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:58.905941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:48:59.906063      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:00.907091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:01.907988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:02.909155      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:03.909893      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:04.909937      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:05.910432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:06.910781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:07.910959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:08.911332      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:09.912269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:10.912778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:11.913029      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:12.913792      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:13.914709      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:14.914918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:15.915210      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:16.915575      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:17.916493      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:18.917153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:19.918344      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:20.918292      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:21.918743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:22.919340      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:23.920362      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:24.920180      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:25.921228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:26.921687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:27.921579      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:28.922129      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:29.922567      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:30.923281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:31.923673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:32.924221      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:33.924328      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:34.924821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:35.925788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:36.926040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:37.926383      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:38.928085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:39.928157      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:40.928407      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:41.929508      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:42.929734      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:43.929873      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:44.929886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:45.930669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:46.931177      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:47.932131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:48.932878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:49.932859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:50.933376      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:51.935897      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:52.934991      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:53.936753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:54.937355      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:55.937281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:56.937805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:57.938227      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:58.938780      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:49:59.939390      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:00.940303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:01.940814      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:02.941891      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:03.942206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:04.942338      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:05.943350      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:06.944028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:07.944980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:08.945706      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:09.945817      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:10.946904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:11.947149      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:12.947813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:13.948279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:14.949808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:15.950231      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:16.950880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:17.950763      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:18.950962      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:19.951063      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:20.951574      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:21.952324      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:22.953713      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:23.952967      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:24.953793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:25.953667      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:26.953872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:27.954003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:28.954283      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:29.954752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:30.955463      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:31.956315      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:32.956565      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:33.956994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:34.958680      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:35.958693      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:36.958961      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:37.960354      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:38.959932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:39.960154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:40.961112      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:41.961898      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:42.961766      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:43.962099      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:44.962311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:45.962827      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:46.963898      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:47.964928      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:48.965783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:49.966000      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:50.966064      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:51.966426      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:52.967280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:53.967365      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:54.968155      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:55.968349      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:56.968929      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:57.969806      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:58.970895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:50:59.971287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:00.971930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:01.972312      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:02.973946      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:03.973736      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:04.974269      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:05.974744      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:06.975760      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:07.975756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:08.976158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:09.976830      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:10.977231      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:11.977867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:12.978064      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:13.978286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:14.978948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:15.979206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:16.980726      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:17.980839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:18.980775      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:19.980894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:20.981343      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:21.981628      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:22.981743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:23.982159      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:24.983315      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:25.982762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:26.983134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:27.983484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:28.984396      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:29.985389      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:30.986182      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:31.986708      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:32.987002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:33.987022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:34.987924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:35.988646      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:36.989360      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:37.989385      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:38.990248      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:39.990823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:40.991739      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:41.992625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:42.993040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:43.993237      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:44.993972      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:45.993813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:46.994571      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:47.994843      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:48.995364      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:49.996704      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:50.996423      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:51.996891      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:52.997257      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:53.997438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:54.997916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:55.998081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:56.999199      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:58.000121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:51:59.001568      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:00.000605      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:01.001687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:02.002204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:03.002649      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:04.003214      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:05.003366      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:06.003888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:07.004843      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:08.004981      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:09.005694      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:10.006038      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:11.006870      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:12.007113      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:13.007959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:14.008650      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:15.009229      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:16.009840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:17.010067      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:18.010395      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:19.010581      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:20.010641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:21.012447      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:22.012224      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:23.013450      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:24.014316      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:25.016056      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:26.015707      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:27.015838      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:28.016242      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:29.017002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:30.017639      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:31.017873      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:32.018015      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:33.018213      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:34.018380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:35.018582      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:36.018730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:37.019737      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:38.019907      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:39.019803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:40.020302      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:41.020872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:42.021437      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:43.022277      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:44.022625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:45.023157      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:46.027019      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:47.023883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:48.024334      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:49.025040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:50.025394      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:51.026179      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:52.026627      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:53.027392      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:54.028492      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:55.030278      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:56.030920      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:57.030852      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:58.031652      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:52:59.031761      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:00.032171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:01.033679      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:02.033185      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:03.034140      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:04.033909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:05.034052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:06.034362      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:07.034684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:08.035331      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:09.035792      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:10.036252      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:11.036226      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:12.036645      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:13.036730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:14.037861      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:15.038232      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:16.038567      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:17.038954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:18.039471      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:19.039875      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:20.040900      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:21.041184      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:22.041238      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:23.041682      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:24.042103      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:25.042403      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:26.042779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:27.042831      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:28.043288      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:29.043786      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:30.044100      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:31.044257      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:32.044706      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:33.045228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:34.046135      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:35.046738      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4c199349-de37-4692-940c-aafaa2bbf04a off the node noo9iech3thi-3 @ 09/02/25 08:53:35.408
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4c199349-de37-4692-940c-aafaa2bbf04a @ 09/02/25 08:53:35.44
  I0902 08:53:35.456659 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8568" for this suite. @ 09/02/25 08:53:35.476
• [304.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/02/25 08:53:35.501
  I0902 08:53:35.501385 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:53:35.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:35.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:35.542
  STEP: Creating configMap with name configmap-test-volume-map-20a0fbef-a98e-4fc5-9474-4617039a5585 @ 09/02/25 08:53:35.55
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:53:35.561
  E0902 08:53:36.046868      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:37.047259      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:38.048604      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:39.048645      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:53:39.61
  I0902 08:53:39.617086 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-b81c773c-1391-4a6b-9a68-42b0e684b7fc container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:53:39.652
  I0902 08:53:39.695322 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6336" for this suite. @ 09/02/25 08:53:39.705
• [4.227 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/02/25 08:53:39.728
  I0902 08:53:39.728145 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:53:39.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:39.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:39.77
  I0902 08:53:39.787280 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: creating the pod @ 09/02/25 08:53:39.791
  STEP: submitting the pod to kubernetes @ 09/02/25 08:53:39.792
  E0902 08:53:40.048664      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:41.049357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:53:41.928808 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5665" for this suite. @ 09/02/25 08:53:41.939
• [2.224 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/02/25 08:53:41.953
  I0902 08:53:41.953125 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 08:53:41.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:41.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:41.988
  STEP: Performing setup for networking test in namespace pod-network-test-8160 @ 09/02/25 08:53:41.994
  STEP: creating a selector @ 09/02/25 08:53:41.994
  STEP: Creating the service pods in kubernetes @ 09/02/25 08:53:41.994
  I0902 08:53:41.995070 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0902 08:53:42.049174      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:43.049438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:44.049854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:45.050022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:46.050796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:47.051318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:48.051882      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:49.052298      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:50.052372      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:51.052581      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:52.052730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:53.052788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:54.053403      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:55.053618      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:56.053993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/02/25 08:53:56.241
  E0902 08:53:57.054689      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:53:58.055400      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:53:58.297718 16 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0902 08:53:58.297825 16 networking.go:42] Breadth first check of 10.233.65.112 on host 192.168.121.5...
  I0902 08:53:58.310873 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.56:9080/dial?request=hostname&protocol=http&host=10.233.65.112&port=8083&tries=1'] Namespace:pod-network-test-8160 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:53:58.310989 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:53:58.311196 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8160/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.56%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.112%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 08:53:58.520378 16 utils.go:356] Waiting for responses: map[]
  I0902 08:53:58.520688 16 utils.go:360] reached 10.233.65.112 after 0/1 tries
  I0902 08:53:58.520720 16 networking.go:42] Breadth first check of 10.233.64.126 on host 192.168.121.22...
  I0902 08:53:58.531940 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.56:9080/dial?request=hostname&protocol=http&host=10.233.64.126&port=8083&tries=1'] Namespace:pod-network-test-8160 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:53:58.532019 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:53:58.532241 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8160/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.56%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.126%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 08:53:58.684321 16 utils.go:356] Waiting for responses: map[]
  I0902 08:53:58.684461 16 utils.go:360] reached 10.233.64.126 after 0/1 tries
  I0902 08:53:58.684824 16 networking.go:42] Breadth first check of 10.233.66.6 on host 192.168.121.152...
  I0902 08:53:58.695253 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.56:9080/dial?request=hostname&protocol=http&host=10.233.66.6&port=8083&tries=1'] Namespace:pod-network-test-8160 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:53:58.695313 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:53:58.695401 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8160/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.56%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.6%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 08:53:58.820650 16 utils.go:356] Waiting for responses: map[]
  I0902 08:53:58.820724 16 utils.go:360] reached 10.233.66.6 after 0/1 tries
  I0902 08:53:58.820747 16 networking.go:53] Going to retry 0 out of 3 pods....
  I0902 08:53:58.821791 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8160" for this suite. @ 09/02/25 08:53:58.834
• [16.899 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/02/25 08:53:58.852
  I0902 08:53:58.852442 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:53:58.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:53:58.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:53:58.91
  STEP: Creating configMap with name projected-configmap-test-volume-8c7b3e8d-1be0-431c-bc08-7fa8fc79d68d @ 09/02/25 08:53:58.915
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:53:58.926
  E0902 08:53:59.056034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:00.056086      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:01.056324      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:02.057310      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:54:03.016
  I0902 08:54:03.030795 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-78bcd835-28be-4757-bddd-a1da30fb4118 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:54:03.045
  E0902 08:54:03.059088      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:03.076922 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3293" for this suite. @ 09/02/25 08:54:03.086
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/02/25 08:54:03.109
  I0902 08:54:03.109326 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:54:03.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:03.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:03.143
  STEP: Creating configMap with name configmap-test-volume-14b7a563-57cd-42b5-b81d-c5db72493ebd @ 09/02/25 08:54:03.149
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:54:03.158
  E0902 08:54:04.058730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:05.058874      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:06.059755      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:07.060451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:54:07.218
  I0902 08:54:07.226208 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-f7bb9961-e25e-45ee-876e-70e551918764 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:54:07.241
  I0902 08:54:07.282719 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5247" for this suite. @ 09/02/25 08:54:07.293
• [4.231 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/02/25 08:54:07.344
  I0902 08:54:07.344133 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:54:07.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:07.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:07.413
  STEP: Creating secret with name secret-test-map-20366bf2-67a3-4da9-b9ff-375717dfe54e @ 09/02/25 08:54:07.418
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:54:07.431
  E0902 08:54:08.060794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:09.062054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:10.062076      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:11.063134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:54:11.496
  I0902 08:54:11.506691 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-48c92d6a-54ce-4baa-b659-11666bccac58 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:54:11.532
  I0902 08:54:11.574388 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5858" for this suite. @ 09/02/25 08:54:11.582
• [4.252 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/02/25 08:54:11.6
  I0902 08:54:11.600342 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-runtime @ 09/02/25 08:54:11.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:11.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:11.653
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/02/25 08:54:11.691
  E0902 08:54:12.062715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:13.063114      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:14.063612      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:15.064399      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:16.065589      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:17.065740      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:18.067030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:19.067289      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:20.067194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:21.067624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:22.069009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:23.069446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:24.070808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:25.071624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:26.071794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:27.072968      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/02/25 08:54:27.896
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/02/25 08:54:27.903
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/02/25 08:54:27.921
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/02/25 08:54:27.921
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/02/25 08:54:27.978
  E0902 08:54:28.073457      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:29.073616      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:30.074598      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/02/25 08:54:31.017
  E0902 08:54:31.075401      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/02/25 08:54:32.043
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/02/25 08:54:32.071
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/02/25 08:54:32.071
  E0902 08:54:32.076281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/02/25 08:54:32.133
  E0902 08:54:33.077200      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/02/25 08:54:33.173
  E0902 08:54:34.076874      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:35.077164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/02/25 08:54:35.208
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/02/25 08:54:35.233
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/02/25 08:54:35.233
  I0902 08:54:35.332953 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9262" for this suite. @ 09/02/25 08:54:35.347
• [23.762 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/02/25 08:54:35.361
  I0902 08:54:35.361833 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:54:35.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:35.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:35.411
  I0902 08:54:35.484787 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6360" for this suite. @ 09/02/25 08:54:35.497
• [0.148 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/02/25 08:54:35.51
  I0902 08:54:35.510172 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename controllerrevisions @ 09/02/25 08:54:35.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:35.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:35.541
  STEP: Creating DaemonSet "e2e-2dpkt-daemon-set" @ 09/02/25 08:54:35.623
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:54:35.635
  I0902 08:54:35.788093 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2dpkt-daemon-set: 0
  I0902 08:54:35.788224 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:54:36.077380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:36.663982 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2dpkt-daemon-set: 0
  I0902 08:54:36.664056 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:54:37.077994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:37.661902 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2dpkt-daemon-set: 2
  I0902 08:54:37.662101 16 fixtures.go:131] Node noo9iech3thi-3 is running 0 daemon pod, expected 1
  E0902 08:54:38.078221      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:38.651861 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2dpkt-daemon-set: 3
  I0902 08:54:38.651949 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-2dpkt-daemon-set
  STEP: Confirm DaemonSet "e2e-2dpkt-daemon-set" successfully created with "daemonset-name=e2e-2dpkt-daemon-set" label @ 09/02/25 08:54:38.658
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2dpkt-daemon-set" @ 09/02/25 08:54:38.671
  I0902 08:54:38.679256 16 controller_revision.go:162] Located ControllerRevision: "e2e-2dpkt-daemon-set-c5dc445ff"
  STEP: Patching ControllerRevision "e2e-2dpkt-daemon-set-c5dc445ff" @ 09/02/25 08:54:38.686
  I0902 08:54:38.705480 16 controller_revision.go:173] e2e-2dpkt-daemon-set-c5dc445ff has been patched
  STEP: Create a new ControllerRevision @ 09/02/25 08:54:38.705
  I0902 08:54:38.717156 16 controller_revision.go:191] Created ControllerRevision: e2e-2dpkt-daemon-set-778bfdf8dc
  STEP: Confirm that there are two ControllerRevisions @ 09/02/25 08:54:38.717
  I0902 08:54:38.718140 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:54:38.724654 16 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2dpkt-daemon-set-c5dc445ff" @ 09/02/25 08:54:38.724
  STEP: Confirm that there is only one ControllerRevision @ 09/02/25 08:54:38.742
  I0902 08:54:38.742157 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:54:38.748733 16 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2dpkt-daemon-set-778bfdf8dc" @ 09/02/25 08:54:38.755
  I0902 08:54:38.775348 16 controller_revision.go:220] e2e-2dpkt-daemon-set-778bfdf8dc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/02/25 08:54:38.775
  W0902 08:54:38.793761      16 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/02/25 08:54:38.793
  I0902 08:54:38.794029 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0902 08:54:39.078814      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:39.794722 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:54:39.811083 16 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2dpkt-daemon-set-778bfdf8dc=updated" @ 09/02/25 08:54:39.811
  STEP: Confirm that there is only one ControllerRevision @ 09/02/25 08:54:39.832
  I0902 08:54:39.832796 16 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0902 08:54:39.841041 16 controller_revision.go:265] Found 1 ControllerRevisions
  I0902 08:54:39.885635 16 controller_revision.go:246] ControllerRevision "e2e-2dpkt-daemon-set-6fd94d96f8" has revision 3
  STEP: Deleting DaemonSet "e2e-2dpkt-daemon-set" @ 09/02/25 08:54:39.895
  STEP: deleting DaemonSet.extensions e2e-2dpkt-daemon-set in namespace controllerrevisions-727, will wait for the garbage collector to delete the pods @ 09/02/25 08:54:39.895
  I0902 08:54:39.967192 16 resources.go:139] Deleting DaemonSet.extensions e2e-2dpkt-daemon-set took: 14.392226ms
  I0902 08:54:40.067959 16 resources.go:163] Terminating DaemonSet.extensions e2e-2dpkt-daemon-set pods took: 100.695611ms
  E0902 08:54:40.079054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:41.080093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:42.080924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:43.081160      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:43.385322 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2dpkt-daemon-set: 0
  I0902 08:54:43.385602 16 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2dpkt-daemon-set
  I0902 08:54:43.397374 16 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32293"},"items":null}

  I0902 08:54:43.403363 16 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32293"},"items":null}

  I0902 08:54:43.438441 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-727" for this suite. @ 09/02/25 08:54:43.447
• [7.953 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/02/25 08:54:43.463
  I0902 08:54:43.464003 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:54:43.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:43.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:43.503
  STEP: Creating configMap with name projected-configmap-test-volume-5b5da3f8-9b17-4601-acd1-3634b5f2620f @ 09/02/25 08:54:43.508
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:54:43.521
  E0902 08:54:44.081730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:45.081896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:46.082839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:47.085684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:54:47.583
  I0902 08:54:47.594117 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-bf41ca67-0492-4b6e-ab6a-5c5420ba8f43 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:54:47.614
  I0902 08:54:47.673896 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8198" for this suite. @ 09/02/25 08:54:47.685
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/02/25 08:54:47.699
  I0902 08:54:47.699209 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename daemonsets @ 09/02/25 08:54:47.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:47.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:47.747
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/25 08:54:47.885
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/25 08:54:47.897
  I0902 08:54:47.920936 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:54:47.921019 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:54:48.083860      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:48.928086 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0902 08:54:48.928214 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:54:49.084489      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:49.927330 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0902 08:54:49.927408 16 fixtures.go:131] Node noo9iech3thi-1 is running 0 daemon pod, expected 1
  E0902 08:54:50.085858      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:50.918578 16 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0902 08:54:50.918658 16 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/02/25 08:54:50.926
  STEP: DeleteCollection of the DaemonSets @ 09/02/25 08:54:50.936
  STEP: Verify that ReplicaSets have been deleted @ 09/02/25 08:54:50.971
  I0902 08:54:51.036813 16 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32402"},"items":null}

  I0902 08:54:51.052710 16 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32403"},"items":[{"metadata":{"name":"daemon-set-k5wzm","generateName":"daemon-set-","namespace":"daemonsets-1831","uid":"8315d82c-79a4-462f-9bb9-f2df1410f37f","resourceVersion":"32403","creationTimestamp":"2025-09-02T08:54:47Z","deletionTimestamp":"2025-09-02T08:55:21Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"001ff9ff-7c2d-4efe-a5aa-3b97ef8f2d99","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:54:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"001ff9ff-7c2d-4efe-a5aa-3b97ef8f2d99\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:54:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.75\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lclnt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lclnt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"noo9iech3thi-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["noo9iech3thi-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:50Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:47Z"}],"hostIP":"192.168.121.152","hostIPs":[{"ip":"192.168.121.152"}],"podIP":"10.233.66.75","podIPs":[{"ip":"10.233.66.75"}],"startTime":"2025-09-02T08:54:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-02T08:54:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://c31cb900587e54f2cdde014fd44e3beb6c6c30a6db1fc972e0303210db6d55d7","started":true,"volumeMounts":[{"name":"kube-api-access-lclnt","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nzbpp","generateName":"daemon-set-","namespace":"daemonsets-1831","uid":"af2f42a8-be76-41ac-afaf-ef521afd6492","resourceVersion":"32401","creationTimestamp":"2025-09-02T08:54:47Z","deletionTimestamp":"2025-09-02T08:55:20Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"001ff9ff-7c2d-4efe-a5aa-3b97ef8f2d99","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:54:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"001ff9ff-7c2d-4efe-a5aa-3b97ef8f2d99\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:54:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.227\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jk2mj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jk2mj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"noo9iech3thi-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["noo9iech3thi-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:50Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:47Z"}],"hostIP":"192.168.121.5","hostIPs":[{"ip":"192.168.121.5"}],"podIP":"10.233.65.227","podIPs":[{"ip":"10.233.65.227"}],"startTime":"2025-09-02T08:54:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-02T08:54:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://12b435a9a6f994909458cec4a4cd155f63c4e6c0caf9586bd5d9ed30b873d9f1","started":true,"volumeMounts":[{"name":"kube-api-access-jk2mj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wnhmg","generateName":"daemon-set-","namespace":"daemonsets-1831","uid":"7cedf455-522c-4f00-8b0c-3e59d0e6b86a","resourceVersion":"32384","creationTimestamp":"2025-09-02T08:54:47Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"001ff9ff-7c2d-4efe-a5aa-3b97ef8f2d99","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:54:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"001ff9ff-7c2d-4efe-a5aa-3b97ef8f2d99\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-02T08:54:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.251\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-blkvg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-blkvg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"noo9iech3thi-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["noo9iech3thi-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:49Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-02T08:54:47Z"}],"hostIP":"192.168.121.22","hostIPs":[{"ip":"192.168.121.22"}],"podIP":"10.233.64.251","podIPs":[{"ip":"10.233.64.251"}],"startTime":"2025-09-02T08:54:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-02T08:54:48Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://45f5fa2bf7ed998da65610ba8331c76f514ac6cc7e332415301803c7c51a8645","started":true,"volumeMounts":[{"name":"kube-api-access-blkvg","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  E0902 08:54:51.086662      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:51.087295 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1831" for this suite. @ 09/02/25 08:54:51.094
• [3.405 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/02/25 08:54:51.104
  I0902 08:54:51.104783 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename server-version @ 09/02/25 08:54:51.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:51.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:51.138
  STEP: Request ServerVersion @ 09/02/25 08:54:51.144
  STEP: Confirm major version @ 09/02/25 08:54:51.145
  I0902 08:54:51.146047 16 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/02/25 08:54:51.146
  I0902 08:54:51.146126 16 server_version.go:58] cleanMinorVersion: 32
  I0902 08:54:51.146306 16 server_version.go:62] Minor version: 32
  I0902 08:54:51.146766 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5776" for this suite. @ 09/02/25 08:54:51.165
• [0.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/02/25 08:54:51.178
  I0902 08:54:51.178751 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:54:51.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:51.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:51.214
  STEP: Creating configMap with name projected-configmap-test-volume-map-3751a8f6-72bc-4ac4-baeb-bcb3e6a09d6f @ 09/02/25 08:54:51.22
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:54:51.227
  E0902 08:54:52.086303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:53.087215      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:54.087292      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:55.087685      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:54:55.285
  I0902 08:54:55.290980 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-e35b1479-76be-46d2-abeb-154602c8f2ec container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:54:55.306
  I0902 08:54:55.364460 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9941" for this suite. @ 09/02/25 08:54:55.371
• [4.216 seconds]
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/02/25 08:54:55.394
  I0902 08:54:55.394741 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 08:54:55.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:54:55.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:54:55.431
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4062 @ 09/02/25 08:54:55.438
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/02/25 08:54:55.468
  STEP: creating service externalsvc in namespace services-4062 @ 09/02/25 08:54:55.469
  STEP: creating replication controller externalsvc in namespace services-4062 @ 09/02/25 08:54:55.506
  I0902 08:54:55.518641      16 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4062, replica count: 2
  E0902 08:54:56.087910      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:57.088917      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:54:58.089223      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:54:58.571041      16 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/02/25 08:54:58.589
  I0902 08:54:58.659943 16 resource.go:361] Creating new exec pod
  E0902 08:54:59.089345      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:00.089570      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:00.693337 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-4062 exec execpodshvws -- /bin/sh -x -c nslookup nodeport-service.services-4062.svc.cluster.local'
  E0902 08:55:01.090378      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:01.166858 16 builder.go:146] stderr: "+ nslookup nodeport-service.services-4062.svc.cluster.local\n"
  I0902 08:55:01.166950 16 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-4062.svc.cluster.local\tcanonical name = externalsvc.services-4062.svc.cluster.local.\nName:\texternalsvc.services-4062.svc.cluster.local\nAddress: 10.233.63.92\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4062, will wait for the garbage collector to delete the pods @ 09/02/25 08:55:01.167
  I0902 08:55:01.243479 16 resources.go:139] Deleting ReplicationController externalsvc took: 16.903259ms
  I0902 08:55:01.344709 16 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.225488ms
  E0902 08:55:02.090860      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:03.091789      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:04.092951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:04.593785 16 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0902 08:55:04.634417 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4062" for this suite. @ 09/02/25 08:55:04.655
• [9.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/02/25 08:55:04.672
  I0902 08:55:04.672431 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename apf @ 09/02/25 08:55:04.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:04.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:04.712
  STEP: getting /apis @ 09/02/25 08:55:04.718
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/02/25 08:55:04.727
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/02/25 08:55:04.73
  STEP: creating @ 09/02/25 08:55:04.733
  STEP: getting @ 09/02/25 08:55:04.767
  STEP: listing @ 09/02/25 08:55:04.779
  STEP: watching @ 09/02/25 08:55:04.79
  I0902 08:55:04.790757 16 flowcontrol.go:394] starting watch
  STEP: patching @ 09/02/25 08:55:04.794
  STEP: updating @ 09/02/25 08:55:04.807
  I0902 08:55:04.827652 16 flowcontrol.go:422] waiting for watch events with expected annotations
  I0902 08:55:04.827747 16 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/02/25 08:55:04.827
  STEP: patching /status @ 09/02/25 08:55:04.835
  STEP: updating /status @ 09/02/25 08:55:04.846
  STEP: deleting @ 09/02/25 08:55:04.951
  STEP: deleting a collection @ 09/02/25 08:55:04.985
  I0902 08:55:05.042767 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6106" for this suite. @ 09/02/25 08:55:05.075
  E0902 08:55:05.093382      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [0.428 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/02/25 08:55:05.101
  I0902 08:55:05.101869 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 08:55:05.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:05.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:05.161
  STEP: Performing setup for networking test in namespace pod-network-test-9489 @ 09/02/25 08:55:05.168
  STEP: creating a selector @ 09/02/25 08:55:05.168
  STEP: Creating the service pods in kubernetes @ 09/02/25 08:55:05.168
  I0902 08:55:05.168170 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0902 08:55:06.095510      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:07.094425      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:08.094501      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:09.094763      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:10.094880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:11.095631      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:12.095821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:13.095857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:14.095977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:15.096646      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:16.097178      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:17.097922      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:18.099078      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:19.099653      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/02/25 08:55:19.479
  E0902 08:55:20.100333      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:21.125670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:21.564030 16 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0902 08:55:21.564168 16 utils.go:496] Going to poll 10.233.65.161 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0902 08:55:21.568985 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.161:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9489 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:55:21.569135 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:55:21.569257 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9489/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.161%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 08:55:21.724746 16 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0902 08:55:21.724967 16 utils.go:496] Going to poll 10.233.64.45 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0902 08:55:21.734850 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.45:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9489 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:55:21.734923 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:55:21.735017 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9489/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.45%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 08:55:21.844968 16 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0902 08:55:21.845362 16 utils.go:496] Going to poll 10.233.66.9 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0902 08:55:21.856385 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.9:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9489 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:55:21.857084 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:55:21.857736 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9489/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.9%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0902 08:55:21.974365 16 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0902 08:55:21.975510 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9489" for this suite. @ 09/02/25 08:55:21.989
• [16.906 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/02/25 08:55:22.008
  I0902 08:55:22.008413 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 08:55:22.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:22.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:22.054
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/02/25 08:55:22.062
  E0902 08:55:22.125277      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:23.125620      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:24.125173      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:25.126142      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:26.126449      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:55:26.137
  I0902 08:55:26.152457 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-19d22d3a-fbcf-42f4-8d18-fe75a1596c2d container test-container: <nil>
  STEP: delete the pod @ 09/02/25 08:55:26.177
  I0902 08:55:26.213911 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2295" for this suite. @ 09/02/25 08:55:26.225
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/02/25 08:55:26.24
  I0902 08:55:26.240937 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:55:26.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:26.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:26.276
  STEP: Creating configMap with name projected-configmap-test-volume-map-2accba61-09e3-4970-8688-82e00dff0c89 @ 09/02/25 08:55:26.284
  STEP: Creating a pod to test consume configMaps @ 09/02/25 08:55:26.294
  E0902 08:55:27.127405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:28.128803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:29.129273      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:30.129748      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:55:30.359
  I0902 08:55:30.370711 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-configmaps-05c2c67d-916c-4192-8703-830b8cf69160 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:55:30.393
  I0902 08:55:30.434399 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1515" for this suite. @ 09/02/25 08:55:30.445
• [4.221 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/02/25 08:55:30.463
  I0902 08:55:30.463935 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:55:30.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:30.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:30.499
  I0902 08:55:30.505920 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:55:31.131679      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:32.133942      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:33.135195      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/25 08:55:33.149
  I0902 08:55:33.150675 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-9567 --namespace=crd-publish-openapi-9567 create -f -'
  I0902 08:55:33.457360 16 builder.go:146] stderr: ""
  I0902 08:55:33.457647 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0902 08:55:33.459031 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-9567 --namespace=crd-publish-openapi-9567 delete e2e-test-crd-publish-openapi-3244-crds test-cr'
  I0902 08:55:33.749118 16 builder.go:146] stderr: ""
  I0902 08:55:33.749483 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0902 08:55:33.749960 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-9567 --namespace=crd-publish-openapi-9567 apply -f -'
  I0902 08:55:33.957907 16 builder.go:146] stderr: ""
  I0902 08:55:33.958229 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0902 08:55:33.958692 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-9567 --namespace=crd-publish-openapi-9567 delete e2e-test-crd-publish-openapi-3244-crds test-cr'
  I0902 08:55:34.132250 16 builder.go:146] stderr: ""
  I0902 08:55:34.132584 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/02/25 08:55:34.132
  I0902 08:55:34.133239 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-9567 explain e2e-test-crd-publish-openapi-3244-crds'
  E0902 08:55:34.136262      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:34.305763 16 builder.go:146] stderr: ""
  I0902 08:55:34.306310 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3244-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0902 08:55:35.136943      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:36.137485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:36.783500 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9567" for this suite. @ 09/02/25 08:55:36.807
• [6.363 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/02/25 08:55:36.826
  I0902 08:55:36.826749 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:55:36.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:36.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:36.883
  STEP: Create a Replicaset @ 09/02/25 08:55:36.903
  STEP: Verify that the required pods have come up. @ 09/02/25 08:55:36.926
  I0902 08:55:36.989729 16 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 08:55:36.99
  E0902 08:55:37.138380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:38.138932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/02/25 08:55:39.011
  I0902 08:55:39.025314 16 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/02/25 08:55:39.025
  I0902 08:55:39.046706 16 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/02/25 08:55:39.046
  I0902 08:55:39.050942 16 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0902 08:55:39.051318 16 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.051720 16 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.052150 16 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.052554 16 replica_set.go:682] Found replicaset test-rs in namespace replicaset-3155 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 08:55:39.052659 16 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/02/25 08:55:39.052
  I0902 08:55:39.052772 16 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0902 08:55:39.069406 16 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/02/25 08:55:39.069
  I0902 08:55:39.073072 16 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0902 08:55:39.073811 16 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.074086 16 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.075617 16 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.075818 16 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-3155 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 08:55:39.076590 16 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0902 08:55:39.076721 16 replica_set.go:718] Found replicaset test-rs in namespace replicaset-3155 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0902 08:55:39.076831 16 replica_set.go:729] Replicaset test-rs has a patched status
  I0902 08:55:39.077328 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3155" for this suite. @ 09/02/25 08:55:39.086
• [2.275 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/02/25 08:55:39.101
  I0902 08:55:39.102005 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename containers @ 09/02/25 08:55:39.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:39.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:39.136
  E0902 08:55:39.141026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a pod to test override arguments @ 09/02/25 08:55:39.142
  E0902 08:55:40.141496      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:41.142247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:42.142677      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:43.142965      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:55:43.195
  I0902 08:55:43.202692 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod client-containers-1a613781-945a-4ff7-b154-54c1f40d359f container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 08:55:43.214
  I0902 08:55:43.247161 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1467" for this suite. @ 09/02/25 08:55:43.258
• [4.170 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/02/25 08:55:43.272
  I0902 08:55:43.272725 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:55:43.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:43.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:43.313
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:55:43.321
  E0902 08:55:44.144667      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:45.143719      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:46.144829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:47.145899      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:55:47.374
  I0902 08:55:47.384500 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-63b523a5-6b76-4903-9c2e-31d09a1d20c9 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:55:47.403
  I0902 08:55:47.439999 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2972" for this suite. @ 09/02/25 08:55:47.452
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/02/25 08:55:47.473
  I0902 08:55:47.473124 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:55:47.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:47.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:47.517
  STEP: Creating secret with name secret-test-f41443c8-d322-4fff-9058-f6ba5f7031ed @ 09/02/25 08:55:47.574
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:55:47.597
  E0902 08:55:48.150756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:49.152099      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:50.152226      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:51.152584      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:55:51.665
  I0902 08:55:51.672140 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-f2ea7ad2-23eb-4a4f-a76d-7cb55c074dc2 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:55:51.686
  I0902 08:55:51.724986 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9699" for this suite. @ 09/02/25 08:55:51.736
  STEP: Destroying namespace "secret-namespace-7431" for this suite. @ 09/02/25 08:55:51.751
• [4.298 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/02/25 08:55:51.771
  I0902 08:55:51.771590 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:55:51.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:51.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:51.822
  I0902 08:55:51.838044 16 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0902 08:55:51.899908 16 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0902 08:55:51.933591 16 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0902 08:55:52.152909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:53.153087      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:53.951008 16 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0902 08:55:53.962252 16 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0902 08:55:53.998526 16 deployment.go:314] Updating deployment test-recreate-deployment
  I0902 08:55:53.999487 16 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0902 08:55:54.153432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:55:54.249033 16 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3265",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cbbd808-5e3a-4a1a-b46c-566eda537aa8",
      ResourceVersion: (string) (len=5) "33080",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:55:54.261555 16 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3265",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec6fd5a2-646c-461d-b32e-60fd842ddaa8",
      ResourceVersion: (string) (len=5) "33079",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4cbbd808-5e3a-4a1a-b46c-566eda537aa8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 63 62 62 64 38  30 38 2d 35 65 33 61 2d  |\"4cbbd808-5e3a-|
              00000120  34 61 31 61 2d 62 34 36  63 2d 35 36 36 65 64 61  |4a1a-b46c-566eda|
              00000130  35 33 37 61 61 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |537aa8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:55:54.265307 16 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0902 08:55:54.265826 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3265",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b55dfb6-1a21-4aee-8310-df579e84f8f3",
      ResourceVersion: (string) (len=5) "33067",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4cbbd808-5e3a-4a1a-b46c-566eda537aa8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 63 62 62 64 38  30 38 2d 35 65 33 61 2d  |\"4cbbd808-5e3a-|
              00000120  34 61 31 61 2d 62 34 36  63 2d 35 36 36 65 64 61  |4a1a-b46c-566eda|
              00000130  35 33 37 61 61 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |537aa8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:55:54.291297 16 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-5cdkg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-5cdkg",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-3265",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9776bf0f-d91d-4f9e-977d-b4b17cf719f9",
      ResourceVersion: (string) (len=5) "33077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "ec6fd5a2-646c-461d-b32e-60fd842ddaa8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 63  36 66 64 35 61 32 2d 36  |d\":\"ec6fd5a2-6|
              00000090  34 36 63 2d 34 36 31 64  2d 62 33 32 65 2d 36 30  |46c-461d-b32e-60|
              000000a0  66 64 38 34 32 64 64 61  61 38 5c 22 7d 22 3a 7b  |fd842ddaa8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vwkcs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vwkcs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vwkcs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:55:54.297180 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3265" for this suite. @ 09/02/25 08:55:54.319
• [2.572 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/02/25 08:55:54.344
  I0902 08:55:54.344131 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 08:55:54.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:54.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:54.389
  STEP: Creating secret with name secret-test-85ba4f83-2dfd-4f6d-818d-f4604b703997 @ 09/02/25 08:55:54.395
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:55:54.408
  E0902 08:55:55.153945      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:56.154119      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:57.154912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:55:58.155611      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:55:58.498
  I0902 08:55:58.517919 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-d36f3d0b-e22c-4359-93f4-211e785b426f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:55:58.555
  I0902 08:55:58.606108 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2410" for this suite. @ 09/02/25 08:55:58.619
• [4.294 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/02/25 08:55:58.638
  I0902 08:55:58.638298 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/25 08:55:58.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:55:58.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:55:58.672
  STEP: Performing setup for networking test in namespace pod-network-test-523 @ 09/02/25 08:55:58.678
  STEP: creating a selector @ 09/02/25 08:55:58.678
  STEP: Creating the service pods in kubernetes @ 09/02/25 08:55:58.678
  I0902 08:55:58.678297 16 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0902 08:55:59.155605      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:00.156423      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:01.157150      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:02.158068      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:03.158895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:04.160031      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:05.160119      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:06.160417      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:07.161143      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:08.162297      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:09.162329      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:10.163751      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:11.163816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:12.163940      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/02/25 08:56:12.986
  E0902 08:56:13.166041      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:14.166323      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:15.032885 16 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0902 08:56:15.032966 16 networking.go:42] Breadth first check of 10.233.65.27 on host 192.168.121.5...
  I0902 08:56:15.049750 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.6:9080/dial?request=hostname&protocol=udp&host=10.233.65.27&port=8081&tries=1'] Namespace:pod-network-test-523 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:56:15.049852 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:56:15.049940 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-523/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.27%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0902 08:56:15.166810      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:15.191459 16 utils.go:356] Waiting for responses: map[]
  I0902 08:56:15.192079 16 utils.go:360] reached 10.233.65.27 after 0/1 tries
  I0902 08:56:15.192281 16 networking.go:42] Breadth first check of 10.233.64.198 on host 192.168.121.22...
  I0902 08:56:15.199820 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.6:9080/dial?request=hostname&protocol=udp&host=10.233.64.198&port=8081&tries=1'] Namespace:pod-network-test-523 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:56:15.199874 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:56:15.199951 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-523/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.198%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 08:56:15.300692 16 utils.go:356] Waiting for responses: map[]
  I0902 08:56:15.300812 16 utils.go:360] reached 10.233.64.198 after 0/1 tries
  I0902 08:56:15.300887 16 networking.go:42] Breadth first check of 10.233.66.146 on host 192.168.121.152...
  I0902 08:56:15.308944 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.6:9080/dial?request=hostname&protocol=udp&host=10.233.66.146&port=8081&tries=1'] Namespace:pod-network-test-523 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 08:56:15.309008 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 08:56:15.309130 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-523/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.146%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0902 08:56:15.449495 16 utils.go:356] Waiting for responses: map[]
  I0902 08:56:15.450008 16 utils.go:360] reached 10.233.66.146 after 0/1 tries
  I0902 08:56:15.450040 16 networking.go:53] Going to retry 0 out of 3 pods....
  I0902 08:56:15.451030 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-523" for this suite. @ 09/02/25 08:56:15.464
• [16.840 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/02/25 08:56:15.479
  I0902 08:56:15.479894 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:56:15.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:56:15.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:56:15.514
  STEP: Setting up server cert @ 09/02/25 08:56:15.56
  E0902 08:56:16.167070      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:56:16.315
  STEP: Deploying the webhook pod @ 09/02/25 08:56:16.326
  STEP: Wait for the deployment to be ready @ 09/02/25 08:56:16.353
  I0902 08:56:16.378492 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:56:17.167945      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:18.168733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:56:18.427
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:56:18.463
  E0902 08:56:19.169956      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:19.464277 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/02/25 08:56:19.484
  STEP: verifying the mutating webhook match conditions @ 09/02/25 08:56:19.505
  STEP: updating the mutating webhook match conditions @ 09/02/25 08:56:19.513
  STEP: verifying the mutating webhook match conditions @ 09/02/25 08:56:19.531
  I0902 08:56:19.652764 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7260" for this suite. @ 09/02/25 08:56:19.664
  STEP: Destroying namespace "webhook-markers-8663" for this suite. @ 09/02/25 08:56:19.689
• [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/02/25 08:56:19.714
  I0902 08:56:19.714733 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/25 08:56:19.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:56:19.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:56:19.754
  E0902 08:56:20.170244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:21.170956      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:21.850503 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2377" for this suite. @ 09/02/25 08:56:21.89
• [2.203 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/02/25 08:56:21.917
  I0902 08:56:21.917955 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/02/25 08:56:21.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:56:21.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:56:21.968
  STEP: Creating 50 configmaps @ 09/02/25 08:56:21.98
  E0902 08:56:22.172092      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/25 08:56:22.545
  I0902 08:56:22.578440 16 resource.go:87] Pod name wrapped-volume-race-0280ae8c-908e-41b1-b631-89ab109bae64: Found 0 pods out of 5
  E0902 08:56:23.171898      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:24.171951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:25.172345      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:26.173678      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:27.174043      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:27.598209 16 resource.go:87] Pod name wrapped-volume-race-0280ae8c-908e-41b1-b631-89ab109bae64: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/25 08:56:27.598
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/25 08:56:27.673
  I0902 08:56:27.703024 16 resource.go:87] Pod name wrapped-volume-race-5c68dfaf-965b-465e-bd7a-17ce2846e517: Found 0 pods out of 5
  E0902 08:56:28.174740      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:29.174830      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:30.175155      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:31.175796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:32.176094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:32.716146 16 resource.go:87] Pod name wrapped-volume-race-5c68dfaf-965b-465e-bd7a-17ce2846e517: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/25 08:56:32.716
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/25 08:56:32.782
  I0902 08:56:32.809944 16 resource.go:87] Pod name wrapped-volume-race-3891b934-778b-4431-8014-99eca92224ed: Found 0 pods out of 5
  E0902 08:56:33.176988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:34.177678      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:35.177944      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:36.178831      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:37.179280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:37.823291 16 resource.go:87] Pod name wrapped-volume-race-3891b934-778b-4431-8014-99eca92224ed: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/25 08:56:37.823
  E0902 08:56:38.179405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:39.180102      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3891b934-778b-4431-8014-99eca92224ed in namespace emptydir-wrapper-860, will wait for the garbage collector to delete the pods @ 09/02/25 08:56:39.955
  I0902 08:56:40.035211 16 resources.go:139] Deleting ReplicationController wrapped-volume-race-3891b934-778b-4431-8014-99eca92224ed took: 18.53215ms
  E0902 08:56:40.180212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:40.236311 16 resources.go:163] Terminating ReplicationController wrapped-volume-race-3891b934-778b-4431-8014-99eca92224ed pods took: 201.078665ms
  E0902 08:56:41.181062      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-5c68dfaf-965b-465e-bd7a-17ce2846e517 in namespace emptydir-wrapper-860, will wait for the garbage collector to delete the pods @ 09/02/25 08:56:42.136
  E0902 08:56:42.182178      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:56:42.222732 16 resources.go:139] Deleting ReplicationController wrapped-volume-race-5c68dfaf-965b-465e-bd7a-17ce2846e517 took: 25.585204ms
  I0902 08:56:42.323063 16 resources.go:163] Terminating ReplicationController wrapped-volume-race-5c68dfaf-965b-465e-bd7a-17ce2846e517 pods took: 100.324347ms
  E0902 08:56:43.182512      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:44.183150      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-0280ae8c-908e-41b1-b631-89ab109bae64 in namespace emptydir-wrapper-860, will wait for the garbage collector to delete the pods @ 09/02/25 08:56:44.224
  I0902 08:56:44.311806 16 resources.go:139] Deleting ReplicationController wrapped-volume-race-0280ae8c-908e-41b1-b631-89ab109bae64 took: 23.70719ms
  I0902 08:56:44.512767 16 resources.go:163] Terminating ReplicationController wrapped-volume-race-0280ae8c-908e-41b1-b631-89ab109bae64 pods took: 200.962513ms
  E0902 08:56:45.186676      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:46.187186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/02/25 08:56:46.313
  I0902 08:56:46.957092 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-860" for this suite. @ 09/02/25 08:56:46.976
• [25.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/02/25 08:56:47.003
  I0902 08:56:47.003403 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:56:47.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:56:47.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:56:47.048
  STEP: Counting existing ResourceQuota @ 09/02/25 08:56:47.084
  E0902 08:56:47.188196      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:48.188458      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:49.188744      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:50.189456      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:51.190236      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 08:56:52.096
  STEP: Ensuring resource quota status is calculated @ 09/02/25 08:56:52.118
  E0902 08:56:52.190612      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:53.191478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/02/25 08:56:54.13
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/02/25 08:56:54.181
  E0902 08:56:54.192287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:55.192741      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/02/25 08:56:56.191
  E0902 08:56:56.193300      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/02/25 08:56:56.195
  STEP: Ensuring a pod cannot update its resource requirements @ 09/02/25 08:56:56.202
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/02/25 08:56:56.213
  E0902 08:56:57.193892      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:56:58.195049      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 08:56:58.233
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 08:56:58.264
  E0902 08:56:59.195692      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:00.195638      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:57:00.273912 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-451" for this suite. @ 09/02/25 08:57:00.283
• [13.298 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/02/25 08:57:00.301
  I0902 08:57:00.301861 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename events @ 09/02/25 08:57:00.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:00.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:00.342
  STEP: Create set of events @ 09/02/25 08:57:00.347
  STEP: get a list of Events with a label in the current namespace @ 09/02/25 08:57:00.38
  STEP: delete a list of events @ 09/02/25 08:57:00.39
  I0902 08:57:00.391028 16 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/02/25 08:57:00.437
  I0902 08:57:00.443137 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6741" for this suite. @ 09/02/25 08:57:00.45
• [0.166 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/02/25 08:57:00.467
  I0902 08:57:00.467753 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 08:57:00.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:00.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:00.519
  STEP: Creating projection with secret that has name projected-secret-test-dfaa6edb-6af5-488a-aa17-91bfff47a5d8 @ 09/02/25 08:57:00.534
  STEP: Creating a pod to test consume secrets @ 09/02/25 08:57:00.547
  E0902 08:57:01.195938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:02.196123      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:03.197177      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:04.197397      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:57:04.599
  I0902 08:57:04.610861 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-secrets-5985b17b-a81a-4c3e-b686-a200ee36aef9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 08:57:04.631
  I0902 08:57:04.664701 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2886" for this suite. @ 09/02/25 08:57:04.679
• [4.227 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/02/25 08:57:04.695
  I0902 08:57:04.695172 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 08:57:04.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:04.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:04.734
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/02/25 08:57:04.741
  E0902 08:57:05.197641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:06.198274      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/02/25 08:57:06.791
  STEP: Then the orphan pod is adopted @ 09/02/25 08:57:06.808
  E0902 08:57:07.198287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/02/25 08:57:07.833
  I0902 08:57:07.892762 16 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/02/25 08:57:07.933
  E0902 08:57:08.200697      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:57:08.948854 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4837" for this suite. @ 09/02/25 08:57:08.961
• [4.285 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/02/25 08:57:08.98
  I0902 08:57:08.980904 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 08:57:08.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:09.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:09.023
  I0902 08:57:09.090132 16 endpointslice.go:1045] Endpoints addresses: [192.168.121.22 192.168.121.5] , ports: [6443]
  I0902 08:57:09.090302 16 endpointslice.go:1075] EndpointSlices addresses: [192.168.121.22 192.168.121.5] , ports: [6443]
  I0902 08:57:09.090766 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6677" for this suite. @ 09/02/25 08:57:09.103
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/02/25 08:57:09.126
  I0902 08:57:09.126461 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:57:09.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:57:09.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:57:09.171
  E0902 08:57:09.201042      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating configMap with name cm-test-opt-del-15c55432-4105-4521-ad2f-23073a9a5ac2 @ 09/02/25 08:57:09.215
  STEP: Creating configMap with name cm-test-opt-upd-e55e0191-92a9-4d85-b12d-664a30169fef @ 09/02/25 08:57:09.231
  STEP: Creating the pod @ 09/02/25 08:57:09.241
  E0902 08:57:10.201739      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:11.202887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:12.203054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:13.203241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-15c55432-4105-4521-ad2f-23073a9a5ac2 @ 09/02/25 08:57:13.374
  STEP: Updating configmap cm-test-opt-upd-e55e0191-92a9-4d85-b12d-664a30169fef @ 09/02/25 08:57:13.391
  STEP: Creating configMap with name cm-test-opt-create-c2a7efed-217d-43aa-9930-3a863ec3c4fa @ 09/02/25 08:57:13.406
  STEP: waiting to observe update in volume @ 09/02/25 08:57:13.43
  E0902 08:57:14.203866      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:15.204599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:16.204220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:17.204370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:18.204724      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:19.205674      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:20.206012      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:21.206209      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:22.207916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:23.207601      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:24.208274      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:25.208705      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:26.208746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:27.209082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:28.209633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:29.210963      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:30.210207      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:31.211342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:32.212244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:33.213197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:34.213789      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:35.213829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:36.215136      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:37.215160      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:38.216001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:39.216484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:40.216815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:41.216992      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:42.217069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:43.217813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:44.217807      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:45.218263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:46.218491      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:47.218797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:48.219960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:49.219625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:50.219902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:51.220003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:52.220599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:53.221194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:54.221731      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:55.222187      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:56.223511      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:57.223694      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:58.224823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:57:59.225734      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:00.226574      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:01.226893      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:02.227429      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:03.227696      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:04.227762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:05.228233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:06.228719      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:07.228802      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:08.229938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:09.230135      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:10.231094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:11.231096      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:12.231904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:13.232184      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:14.232737      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:15.233314      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:16.233996      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:17.233902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:18.234209      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:19.234508      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:20.234734      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:21.234973      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:22.235184      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:23.235688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:24.235786      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:25.235872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:26.236251      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:27.236609      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:28.236993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:29.237490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:30.238662      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:31.238327      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:32.238632      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:33.238608      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:34.238932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:35.238867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:36.239110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:37.239624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:38.240380      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:39.240451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:40.240730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:58:40.668392 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-215" for this suite. @ 09/02/25 08:58:40.684
• [91.578 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/02/25 08:58:40.705
  I0902 08:58:40.705991 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 08:58:40.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:40.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:40.766
  I0902 08:58:40.773813 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  W0902 08:58:40.776158      16 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000dbe5a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0902 08:58:41.241610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:42.241712      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:43.242378      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0902 08:58:43.533432      16 warnings.go:70] unknown field "alpha"
  W0902 08:58:43.533484      16 warnings.go:70] unknown field "beta"
  W0902 08:58:43.533496      16 warnings.go:70] unknown field "delta"
  W0902 08:58:43.533506      16 warnings.go:70] unknown field "epsilon"
  W0902 08:58:43.533600      16 warnings.go:70] unknown field "gamma"
  I0902 08:58:44.134413 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9700" for this suite. @ 09/02/25 08:58:44.143
• [3.452 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/02/25 08:58:44.161
  I0902 08:58:44.161988 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/25 08:58:44.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:44.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:44.201
  E0902 08:58:44.242593      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:45.242784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:46.243046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:58:46.279395 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3368" for this suite. @ 09/02/25 08:58:46.292
• [2.144 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/02/25 08:58:46.313
  I0902 08:58:46.313575 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 08:58:46.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:46.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:46.366
  I0902 08:58:46.500029 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3740" for this suite. @ 09/02/25 08:58:46.516
• [0.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/02/25 08:58:46.536
  I0902 08:58:46.536822 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:58:46.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:46.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:46.578
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:58:46.594
  E0902 08:58:47.246721      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:48.244728      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:49.245866      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:50.246273      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:58:50.675
  I0902 08:58:50.683726 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-1e0824f8-9ac0-41c7-b9c3-fe102fe8ad20 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:58:50.705
  I0902 08:58:50.750783 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2790" for this suite. @ 09/02/25 08:58:50.765
• [4.247 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/02/25 08:58:50.784
  I0902 08:58:50.784254 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 08:58:50.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:50.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:50.826
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 08:58:50.832
  E0902 08:58:51.247432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:52.247485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:53.247884      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:54.248599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 08:58:54.903
  I0902 08:58:54.920129 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-4b29effa-fb52-49e3-9c74-094156b57543 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 08:58:54.95
  I0902 08:58:54.991426 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6917" for this suite. @ 09/02/25 08:58:55
• [4.273 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/02/25 08:58:55.059
  I0902 08:58:55.059168 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:58:55.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:58:55.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:58:55.104
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/02/25 08:58:55.11
  I0902 08:58:55.111832 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:58:55.248219      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:56.248930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:57.249375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:58:57.724409 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:58:58.249617      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:58:59.250685      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:00.250807      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:01.251700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:02.251976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:03.252148      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:04.252385      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:05.252885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:06.253247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:07.068142 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1615" for this suite. @ 09/02/25 08:59:07.09
• [12.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 09/02/25 08:59:07.106
  I0902 08:59:07.106769 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 08:59:07.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:07.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:07.144
  STEP: validating cluster-info @ 09/02/25 08:59:07.151
  I0902 08:59:07.152032 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-3366 cluster-info'
  E0902 08:59:07.253751      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:07.389744 16 builder.go:146] stderr: ""
  I0902 08:59:07.390605 16 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0902 08:59:07.390815 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3366" for this suite. @ 09/02/25 08:59:07.402
• [0.308 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/02/25 08:59:07.415
  I0902 08:59:07.415209 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 08:59:07.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:07.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:07.45
  I0902 08:59:07.477141 16 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0902 08:59:08.254470      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:09.254904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:10.254939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:11.255643      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:12.256357      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:12.488752 16 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 08:59:12.488
  I0902 08:59:12.488973 16 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/02/25 08:59:12.515
  I0902 08:59:12.545648 16 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "199d7bb6-2d7c-4281-a107-74f883ed186c",
      ResourceVersion: (string) (len=5) "34600",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400352,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 08:59:12.559592 16 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0902 08:59:12.559940 16 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0902 08:59:12.561347 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60a19b7a-ba6f-4e3b-b0a4-48ba1ded8548",
      ResourceVersion: (string) (len=5) "34601",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "199d7bb6-2d7c-4281-a107-74f883ed186c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 39 39 64 37 62 62  |"uid\":\"199d7bb|
              00000040  36 2d 32 64 37 63 2d 34  32 38 31 2d 61 31 30 37  |6-2d7c-4281-a107|
              00000050  2d 37 34 66 38 38 33 65  64 31 38 36 63 5c 22 7d  |-74f883ed186c\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 08:59:12.597619 16 deployment.go:68] Pod "test-cleanup-controller-fwgf9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-fwgf9",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd107f90-6e15-4e63-8d8e-be57383a6850",
      ResourceVersion: (string) (len=5) "34588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "60a19b7a-ba6f-4e3b-b0a4-48ba1ded8548",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 30 61 31 39 62 37 61  |uid\":\"60a19b7a|
              00000080  2d 62 61 36 66 2d 34 65  33 62 2d 62 30 61 34 2d  |-ba6f-4e3b-b0a4-|
              00000090  34 38 62 61 31 64 65 64  38 35 34 38 5c 22 7d 22  |48ba1ded8548\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 39 5c 22 7d 22 3a  |.233.66.199\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2fsls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2fsls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=13) "10.233.66.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892400348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://5abcf22ef39ccbc7894c64795b93d8599c6610e8d87dd9a4540c8a77386171e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2fsls",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 08:59:12.601851 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4056" for this suite. @ 09/02/25 08:59:12.622
• [5.238 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/02/25 08:59:12.654
  I0902 08:59:12.654875 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 08:59:12.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:12.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:12.725
  I0902 08:59:12.730740 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 08:59:12.748412 16 util.go:396] Waiting for terminating namespaces to be deleted...
  I0902 08:59:12.757285 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-1 before test
  I0902 08:59:12.768033 16 predicates.go:957] cilium-nj7vw from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768109 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 08:59:12.768136 16 predicates.go:957] cilium-node-init-hgzhs from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768153 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:59:12.768306 16 predicates.go:957] coredns-668d6bf9bc-pmh8x from kube-system started at 2025-09-02 07:05:54 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768383 16 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0902 08:59:12.768403 16 predicates.go:957] kube-apiserver-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768474 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 08:59:12.768496 16 predicates.go:957] kube-controller-manager-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768575 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:59:12.768682 16 predicates.go:957] kube-proxy-9w4sn from kube-system started at 2025-09-02 06:43:28 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768703 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:59:12.768767 16 predicates.go:957] kube-scheduler-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.768792 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 08:59:12.768810 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-rzhk6 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:59:12.768872 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:59:12.768891 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:59:12.768906 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-2 before test
  I0902 08:59:12.783291 16 predicates.go:957] cilium-c4w69 from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.783686 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 08:59:12.783737 16 predicates.go:957] cilium-node-init-5mfbq from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.783773 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:59:12.783812 16 predicates.go:957] cilium-operator-b676844bf-xs2kw from kube-system started at 2025-09-02 07:07:12 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.783845 16 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0902 08:59:12.783880 16 predicates.go:957] coredns-668d6bf9bc-94wcm from kube-system started at 2025-09-02 06:55:39 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.783914 16 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0902 08:59:12.783950 16 predicates.go:957] kube-apiserver-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.783979 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 08:59:12.784013 16 predicates.go:957] kube-controller-manager-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.784042 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 08:59:12.784071 16 predicates.go:957] kube-proxy-5rgj5 from kube-system started at 2025-09-02 06:53:43 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.784095 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:59:12.784112 16 predicates.go:957] kube-scheduler-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.784126 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 08:59:12.784899 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-99jz9 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:59:12.785248 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:59:12.785271 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 08:59:12.785292 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-3 before test
  I0902 08:59:12.805963 16 predicates.go:957] test-cleanup-controller-fwgf9 from deployment-4056 started at 2025-09-02 08:59:07 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.806065 16 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0902 08:59:12.806128 16 predicates.go:957] test-cleanup-deployment-69b989f764-gfsnj from deployment-4056 started at 2025-09-02 08:59:12 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.806147 16 predicates.go:959] 	Container agnhost ready: false, restart count 0
  I0902 08:59:12.806265 16 predicates.go:957] cilium-node-init-ll5nc from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.806312 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 08:59:12.806331 16 predicates.go:957] cilium-wbqzn from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.806346 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 4
  I0902 08:59:12.806362 16 predicates.go:957] kube-proxy-98k2m from kube-system started at 2025-09-02 06:54:14 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.806377 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 08:59:12.806393 16 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-02 07:29:54 +0000 UTC (1 container statuses recorded)
  I0902 08:59:12.806407 16 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 08:59:12.806423 16 predicates.go:957] sonobuoy-e2e-job-0b6c70a640004788 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:59:12.806439 16 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0902 08:59:12.806454 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:59:12.806471 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-7knzw from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 08:59:12.806487 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 08:59:12.806502 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/25 08:59:12.806
  E0902 08:59:13.257291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:14.257867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/25 08:59:14.858
  STEP: Trying to apply a random label on the found node. @ 09/02/25 08:59:14.88
  STEP: verifying the node has the label kubernetes.io/e2e-e648bfc3-6836-4e72-bc60-258ada25b56c 42 @ 09/02/25 08:59:14.907
  STEP: Trying to relaunch the pod, now with labels. @ 09/02/25 08:59:14.917
  E0902 08:59:15.258944      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:16.258994      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e648bfc3-6836-4e72-bc60-258ada25b56c off the node noo9iech3thi-3 @ 09/02/25 08:59:16.964
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e648bfc3-6836-4e72-bc60-258ada25b56c @ 09/02/25 08:59:16.996
  I0902 08:59:17.008312 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3044" for this suite. @ 09/02/25 08:59:17.029
• [4.389 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/02/25 08:59:17.044
  I0902 08:59:17.044954 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 08:59:17.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:17.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:17.085
  STEP: Setting up server cert @ 09/02/25 08:59:17.135
  E0902 08:59:17.259803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:18.260673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 08:59:18.352
  STEP: Deploying the webhook pod @ 09/02/25 08:59:18.365
  STEP: Wait for the deployment to be ready @ 09/02/25 08:59:18.391
  I0902 08:59:18.411661 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 08:59:19.261751      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:20.262258      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 08:59:20.435
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 08:59:20.458
  E0902 08:59:21.262917      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:21.459240 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/02/25 08:59:21.476
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/02/25 08:59:21.524
  I0902 08:59:21.524500 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  I0902 08:59:21.698757 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-93" for this suite. @ 09/02/25 08:59:21.712
  STEP: Destroying namespace "webhook-markers-1625" for this suite. @ 09/02/25 08:59:21.737
• [4.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/02/25 08:59:21.768
  I0902 08:59:21.768678 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 08:59:21.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:21.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:21.817
  STEP: creating the pod @ 09/02/25 08:59:21.822
  STEP: submitting the pod to kubernetes @ 09/02/25 08:59:21.823
  STEP: verifying QOS class is set on the pod @ 09/02/25 08:59:21.851
  I0902 08:59:21.868771 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4973" for this suite. @ 09/02/25 08:59:21.896
• [0.146 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/02/25 08:59:21.914
  I0902 08:59:21.914549 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:59:21.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:21.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:21.953
  I0902 08:59:21.960741 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:59:22.264365      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:23.264579      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:24.266268      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/25 08:59:24.345
  I0902 08:59:24.346045 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-7959 --namespace=crd-publish-openapi-7959 create -f -'
  I0902 08:59:24.658214 16 builder.go:146] stderr: ""
  I0902 08:59:24.658458 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1156-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0902 08:59:24.658886 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-7959 --namespace=crd-publish-openapi-7959 delete e2e-test-crd-publish-openapi-1156-crds test-cr'
  I0902 08:59:24.853197 16 builder.go:146] stderr: ""
  I0902 08:59:24.853408 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1156-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0902 08:59:24.853939 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-7959 --namespace=crd-publish-openapi-7959 apply -f -'
  I0902 08:59:25.060939 16 builder.go:146] stderr: ""
  I0902 08:59:25.061068 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1156-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0902 08:59:25.062702 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-7959 --namespace=crd-publish-openapi-7959 delete e2e-test-crd-publish-openapi-1156-crds test-cr'
  E0902 08:59:25.266954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:25.289440 16 builder.go:146] stderr: ""
  I0902 08:59:25.289642 16 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1156-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/02/25 08:59:25.289
  I0902 08:59:25.291420 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=crd-publish-openapi-7959 explain e2e-test-crd-publish-openapi-1156-crds'
  I0902 08:59:25.472966 16 builder.go:146] stderr: ""
  I0902 08:59:25.473066 16 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1156-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0902 08:59:26.267207      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:27.267965      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:27.708632 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7959" for this suite. @ 09/02/25 08:59:27.737
• [5.852 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/02/25 08:59:27.766
  I0902 08:59:27.766710 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 08:59:27.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:27.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:27.812
  STEP: create the rc @ 09/02/25 08:59:27.817
  W0902 08:59:27.864880      16 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0902 08:59:28.268601      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:29.269080      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:30.269890      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:31.270093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:32.270872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/02/25 08:59:32.887
  STEP: wait for all pods to be garbage collected @ 09/02/25 08:59:32.902
  E0902 08:59:33.271549      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:34.272409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:35.272947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:36.273916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:37.274795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 08:59:37.919
  I0902 08:59:38.103803 16 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 08:59:38.104139 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9422" for this suite. @ 09/02/25 08:59:38.117
• [10.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/02/25 08:59:38.133
  I0902 08:59:38.133204 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/25 08:59:38.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:38.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:38.179
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/02/25 08:59:38.186
  I0902 08:59:38.187393 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:59:38.274973      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:39.275899      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:40.276702      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:41.279097      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:42.279238      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:43.280261      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:44.280887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:45.280998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:46.281732      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/02/25 08:59:47.063
  I0902 08:59:47.064433 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:59:47.282373      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:48.282506      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:49.200782 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 08:59:49.283229      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:50.284081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:51.284743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:52.286179      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:53.287215      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:54.287918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:55.288238      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:56.288643      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:57.288999      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 08:59:58.289824      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 08:59:58.412778 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3992" for this suite. @ 09/02/25 08:59:58.433
• [20.315 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/02/25 08:59:58.448
  I0902 08:59:58.448498 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 08:59:58.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 08:59:58.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 08:59:58.481
  STEP: Creating a ResourceQuota with best effort scope @ 09/02/25 08:59:58.487
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 08:59:58.499
  E0902 08:59:59.290393      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:00.290594      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/02/25 09:00:00.506
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/25 09:00:00.515
  E0902 09:00:01.291471      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:02.292406      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/02/25 09:00:02.527
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/02/25 09:00:02.558
  E0902 09:00:03.292799      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:04.293220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/02/25 09:00:04.567
  E0902 09:00:05.293906      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:06.294224      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 09:00:06.576
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 09:00:06.598
  E0902 09:00:07.294384      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:08.294761      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/02/25 09:00:08.606
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/02/25 09:00:08.623
  E0902 09:00:09.296392      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:10.296262      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/02/25 09:00:10.632
  E0902 09:00:11.296238      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:12.297256      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/25 09:00:12.645
  STEP: Ensuring resource quota status released the pod usage @ 09/02/25 09:00:12.668
  E0902 09:00:13.297752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:14.298853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:14.679384 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3681" for this suite. @ 09/02/25 09:00:14.688
• [16.256 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/02/25 09:00:14.705
  I0902 09:00:14.705174 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/02/25 09:00:14.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:14.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:14.741
  STEP: creating a target pod @ 09/02/25 09:00:14.748
  E0902 09:00:15.301346      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:16.302091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/02/25 09:00:16.791
  E0902 09:00:17.303244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:18.304126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/02/25 09:00:18.834
  I0902 09:00:18.834766 16 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-662 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:00:18.834815 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:00:18.834889 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-662/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0902 09:00:18.943714 16 exec_util.go:108] Exec stderr: ""
  I0902 09:00:18.982836 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-662" for this suite. @ 09/02/25 09:00:18.993
• [4.331 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/02/25 09:00:19.036
  I0902 09:00:19.036269 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:00:19.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:19.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:19.069
  STEP: Setting up server cert @ 09/02/25 09:00:19.12
  E0902 09:00:19.304083      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:00:19.733
  STEP: Deploying the webhook pod @ 09/02/25 09:00:19.751
  STEP: Wait for the deployment to be ready @ 09/02/25 09:00:19.782
  I0902 09:00:19.805954 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:00:20.305339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:21.305945      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:00:21.833
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:00:21.859
  E0902 09:00:22.306734      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:22.862029 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/02/25 09:00:22.88
  I0902 09:00:23.053872 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6062" for this suite. @ 09/02/25 09:00:23.063
  STEP: Destroying namespace "webhook-markers-5621" for this suite. @ 09/02/25 09:00:23.078
• [4.060 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/02/25 09:00:23.096
  I0902 09:00:23.096384 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:00:23.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:23.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:23.141
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:00:23.146
  E0902 09:00:23.307347      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:24.307610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:25.308875      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:26.309290      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:00:27.202
  I0902 09:00:27.215915 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-c00b07f2-a0ef-4a1e-ae25-40afef52c2ef container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:00:27.237
  I0902 09:00:27.291666 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5384" for this suite. @ 09/02/25 09:00:27.305
  E0902 09:00:27.310410      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.228 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/02/25 09:00:27.324
  I0902 09:00:27.325028 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 09:00:27.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:27.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:27.378
  STEP: Creating Indexed job @ 09/02/25 09:00:27.385
  STEP: Ensuring job reaches completions @ 09/02/25 09:00:27.405
  E0902 09:00:28.311783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:29.314119      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:30.313812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:31.313132      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:32.324189      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:33.324824      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:34.325581      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:35.325664      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:36.325936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:37.326312      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/02/25 09:00:37.479
  I0902 09:00:37.493845 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6370" for this suite. @ 09/02/25 09:00:37.508
• [10.199 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 09/02/25 09:00:37.53
  I0902 09:00:37.530438 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 09:00:37.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:37.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:37.581
  STEP: creating a Service @ 09/02/25 09:00:37.605
  STEP: watching for the Service to be added @ 09/02/25 09:00:37.64
  I0902 09:00:37.659369 16 service.go:3425] Found Service test-service-txqhw in namespace services-6309 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32241}]
  I0902 09:00:37.659508 16 service.go:3432] Service test-service-txqhw created
  STEP: Getting /status @ 09/02/25 09:00:37.659
  I0902 09:00:37.690218 16 service.go:3443] Service test-service-txqhw has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/02/25 09:00:37.69
  STEP: watching for the Service to be patched @ 09/02/25 09:00:37.706
  I0902 09:00:37.713194 16 service.go:3466] observed Service test-service-txqhw in namespace services-6309 with annotations: map[] & LoadBalancer: {[]}
  I0902 09:00:37.713396 16 service.go:3469] Found Service test-service-txqhw in namespace services-6309 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0044c7d00 []}]}
  I0902 09:00:37.713437 16 service.go:3476] Service test-service-txqhw has service status patched
  STEP: updating the ServiceStatus @ 09/02/25 09:00:37.713
  I0902 09:00:37.740033 16 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/02/25 09:00:37.742
  I0902 09:00:37.748621 16 service.go:3507] Observed Service test-service-txqhw in namespace services-6309 with annotations: map[] & Conditions: []
  I0902 09:00:37.749001 16 service.go:3518] Observed Service test-service-txqhw in namespace services-6309 with annotations: map[patchedstatus:true] & Conditions: []
  I0902 09:00:37.749110 16 service.go:3514] Found Service test-service-txqhw in namespace services-6309 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0902 09:00:37.749140 16 service.go:3525] Service test-service-txqhw has service status updated
  STEP: patching the service @ 09/02/25 09:00:37.749
  STEP: watching for the Service to be patched @ 09/02/25 09:00:37.777
  I0902 09:00:37.780667 16 service.go:3548] observed Service test-service-txqhw in namespace services-6309 with labels: map[test-service-static:true]
  I0902 09:00:37.780730 16 service.go:3548] observed Service test-service-txqhw in namespace services-6309 with labels: map[test-service-static:true]
  I0902 09:00:37.780883 16 service.go:3548] observed Service test-service-txqhw in namespace services-6309 with labels: map[test-service-static:true]
  I0902 09:00:37.780955 16 service.go:3551] Found Service test-service-txqhw in namespace services-6309 with labels: map[test-service:patched test-service-static:true]
  I0902 09:00:37.780981 16 service.go:3558] Service test-service-txqhw patched
  STEP: deleting the service @ 09/02/25 09:00:37.781
  STEP: watching for the Service to be deleted @ 09/02/25 09:00:37.811
  I0902 09:00:37.817244 16 service.go:3582] Observed event: ADDED
  I0902 09:00:37.817945 16 service.go:3582] Observed event: MODIFIED
  I0902 09:00:37.817996 16 service.go:3582] Observed event: MODIFIED
  I0902 09:00:37.818342 16 service.go:3582] Observed event: MODIFIED
  I0902 09:00:37.818651 16 service.go:3578] Found Service test-service-txqhw in namespace services-6309 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0902 09:00:37.818689 16 service.go:3587] Service test-service-txqhw deleted
  I0902 09:00:37.818844 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6309" for this suite. @ 09/02/25 09:00:37.83
• [0.320 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/02/25 09:00:37.848
  I0902 09:00:37.849082 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl-logs @ 09/02/25 09:00:37.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:37.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:37.891
  STEP: creating a pod @ 09/02/25 09:00:37.896
  I0902 09:00:37.897456 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0902 09:00:38.150075 16 builder.go:146] stderr: ""
  I0902 09:00:38.150153 16 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/02/25 09:00:38.15
  I0902 09:00:38.150386 16 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0902 09:00:38.327394      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:39.327505      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:40.170182 16 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/02/25 09:00:40.17
  I0902 09:00:40.170590 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 logs logs-generator logs-generator'
  E0902 09:00:40.328433      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:40.371117 16 builder.go:146] stderr: ""
  I0902 09:00:40.371308 16 builder.go:147] stdout: "I0902 09:00:39.200840       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/8gcc 286\nI0902 09:00:39.401383       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/9ctf 200\nI0902 09:00:39.601204       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/6chf 574\nI0902 09:00:39.801706       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/j982 498\nI0902 09:00:40.001145       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/rbx 597\nI0902 09:00:40.201751       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/gh7 412\n"
  STEP: limiting log lines @ 09/02/25 09:00:40.371
  I0902 09:00:40.372443 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 logs logs-generator logs-generator --tail=1'
  I0902 09:00:40.564154 16 builder.go:146] stderr: ""
  I0902 09:00:40.564234 16 builder.go:147] stdout: "I0902 09:00:40.401312       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/x6l6 333\n"
  I0902 09:00:40.564260 16 logs.go:180] got output "I0902 09:00:40.401312       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/x6l6 333\n"
  STEP: limiting log bytes @ 09/02/25 09:00:40.564
  I0902 09:00:40.564642 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 logs logs-generator logs-generator --limit-bytes=1'
  I0902 09:00:40.771708 16 builder.go:146] stderr: ""
  I0902 09:00:40.771939 16 builder.go:147] stdout: "I"
  I0902 09:00:40.772293 16 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/02/25 09:00:40.772
  I0902 09:00:40.773325 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 logs logs-generator logs-generator --tail=1 --timestamps'
  I0902 09:00:41.009211 16 builder.go:146] stderr: ""
  I0902 09:00:41.009345 16 builder.go:147] stdout: "2025-09-02T09:00:40.801917718Z I0902 09:00:40.801832       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/rmm7 255\n"
  I0902 09:00:41.009384 16 logs.go:192] got output "2025-09-02T09:00:40.801917718Z I0902 09:00:40.801832       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/rmm7 255\n"
  STEP: restricting to a time range @ 09/02/25 09:00:41.009
  E0902 09:00:41.328854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:42.329778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:43.330144      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:43.511498 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 logs logs-generator logs-generator --since=1s'
  I0902 09:00:43.761435 16 builder.go:146] stderr: ""
  I0902 09:00:43.761606 16 builder.go:147] stdout: "I0902 09:00:42.801552       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/b48f 244\nI0902 09:00:43.001227       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/vk5x 293\nI0902 09:00:43.201832       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/vnnw 489\nI0902 09:00:43.401208       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/flpd 524\nI0902 09:00:43.601885       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/9bhz 409\n"
  I0902 09:00:43.762620 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 logs logs-generator logs-generator --since=24h'
  I0902 09:00:44.032897 16 builder.go:146] stderr: ""
  I0902 09:00:44.033095 16 builder.go:147] stdout: "I0902 09:00:39.200840       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/8gcc 286\nI0902 09:00:39.401383       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/9ctf 200\nI0902 09:00:39.601204       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/6chf 574\nI0902 09:00:39.801706       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/j982 498\nI0902 09:00:40.001145       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/rbx 597\nI0902 09:00:40.201751       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/gh7 412\nI0902 09:00:40.401312       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/x6l6 333\nI0902 09:00:40.601204       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/5jg6 471\nI0902 09:00:40.801832       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/rmm7 255\nI0902 09:00:41.001484       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/mj6 380\nI0902 09:00:41.201869       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/8bwv 268\nI0902 09:00:41.401705       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/qbkf 313\nI0902 09:00:41.600960       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/jr6 332\nI0902 09:00:41.801663       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/wfs 428\nI0902 09:00:42.001143       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/2blh 399\nI0902 09:00:42.201739       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/tt6 382\nI0902 09:00:42.401653       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/kc8v 455\nI0902 09:00:42.601184       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/sjl 407\nI0902 09:00:42.801552       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/b48f 244\nI0902 09:00:43.001227       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/vk5x 293\nI0902 09:00:43.201832       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/vnnw 489\nI0902 09:00:43.401208       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/flpd 524\nI0902 09:00:43.601885       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/9bhz 409\nI0902 09:00:43.801621       1 logs_generator.go:76] 23 GET /api/v1/namespaces/ns/pods/xm7j 521\nI0902 09:00:44.002709       1 logs_generator.go:76] 24 GET /api/v1/namespaces/kube-system/pods/s2zt 330\n"
  I0902 09:00:44.033760 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-logs-1031 delete pod logs-generator'
  E0902 09:00:44.330640      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:45.025098 16 builder.go:146] stderr: ""
  I0902 09:00:45.025686 16 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0902 09:00:45.026254 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1031" for this suite. @ 09/02/25 09:00:45.037
• [7.206 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/02/25 09:00:45.058
  I0902 09:00:45.059463 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/02/25 09:00:45.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:45.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:45.096
  STEP: creating the policy @ 09/02/25 09:00:45.122
  STEP: waiting until the marker is denied @ 09/02/25 09:00:45.159
  E0902 09:00:45.331060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/02/25 09:00:45.504
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/02/25 09:00:45.537
  I0902 09:00:45.642478 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3103" for this suite. @ 09/02/25 09:00:45.652
• [0.619 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/02/25 09:00:45.684
  I0902 09:00:45.684610 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:00:45.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:45.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:45.87
  STEP: Creating the pod @ 09/02/25 09:00:45.88
  E0902 09:00:46.331842      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:47.332745      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:48.333201      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:49.334649      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:50.334030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:50.576134 16 pod_client.go:173] Successfully updated pod "annotationupdate882cbd71-7653-48d4-bb99-37e4ae605118"
  E0902 09:00:51.334203      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:52.334464      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:52.620088 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4234" for this suite. @ 09/02/25 09:00:52.633
• [6.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 09/02/25 09:00:52.654
  I0902 09:00:52.654774 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:00:52.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:52.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:52.69
  STEP: create deployment with httpd image @ 09/02/25 09:00:52.701
  I0902 09:00:52.701692 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-8701 create -f -'
  I0902 09:00:52.998761 16 builder.go:146] stderr: ""
  I0902 09:00:52.999102 16 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/02/25 09:00:52.999
  I0902 09:00:52.999698 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-8701 diff -f -'
  E0902 09:00:53.334984      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:53.372904 16 builder.go:135] rc: 1
  I0902 09:00:53.375501 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-8701 delete -f -'
  I0902 09:00:53.693777 16 builder.go:146] stderr: ""
  I0902 09:00:53.693855 16 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0902 09:00:53.694142 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8701" for this suite. @ 09/02/25 09:00:53.714
• [1.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/02/25 09:00:53.745
  I0902 09:00:53.745364 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 09:00:53.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:53.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:53.784
  I0902 09:00:53.793170 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:00:54.336240      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:55.336511      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:56.337078      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:00:57.058229 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1326" for this suite. @ 09/02/25 09:00:57.081
• [3.359 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/02/25 09:00:57.104
  I0902 09:00:57.105046 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:00:57.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:00:57.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:00:57.148
  STEP: Creating pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337 @ 09/02/25 09:00:57.155
  E0902 09:00:57.338281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:00:58.338819      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:00:59.2
  I0902 09:00:59.207038 16 container_probe.go:1749] Initial restart count of pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 is 0
  I0902 09:00:59.213054 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:00:59.339778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:00.340588      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:01.227593 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:01.340689      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:02.340859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:03.237266 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:03.341480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:04.341825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:05.244625 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:05.343204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:06.344181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:07.256805 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:07.344112      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:08.345022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:09.269429 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:09.346110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:10.346379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:11.282249 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:11.347188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:12.347137      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:13.292956 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:13.348618      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:14.349409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:15.301293 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:15.351784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:16.350131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:17.314665 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:17.350603      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:18.351827      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:19.330786 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:19.353835      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:20.352461      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:21.340334 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:21.352583      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:22.353018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:23.351098 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:23.353575      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:24.354108      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:25.355078      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:25.367686 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:26.354921      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:27.355045      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:27.377298 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:28.356073      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:29.357239      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:29.385777 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:30.358081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:31.358197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:31.396600 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:32.359088      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:33.358906      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:33.405267 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:34.359093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:35.360008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:35.416836 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:36.360434      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:37.360939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:37.427990 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:38.362840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:39.362006      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:39.441000 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:40.363040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:41.363902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:41.458243 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:42.364418      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:43.365648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:43.466615 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:44.365141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:45.365344      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:45.487007 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:46.366104      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:47.367490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:47.498237 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:48.368159      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:49.368313      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:49.506596 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:50.368603      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:51.368919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:51.515433 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:52.369145      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:53.369687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:53.530849 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:54.370002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:55.370290      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:55.540330 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:56.370651      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:57.371239      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:57.550746 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:01:58.372205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:01:59.371827      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:01:59.567765 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:00.372163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:01.372175      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:01.579146 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:02.372729      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:03.373114      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:03.598271 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:04.374084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:05.374295      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:05.606796 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:06.374583      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:07.375318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:07.615738 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:08.375665      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:09.375895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:09.624359 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:10.376028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:11.376707      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:11.644657 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:12.376725      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:13.377332      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:13.652712 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:14.378024      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:15.378440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:15.663457 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:16.379724      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:17.379922      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:17.673129 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:18.379975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:19.380504      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:19.682073 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:20.380586      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:21.381410      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:21.693813 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:22.381765      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:23.381872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:23.705002 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:24.382107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:25.382777      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:25.715191 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:26.383056      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:27.383164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:27.725762 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:28.384071      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:29.384964      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:29.735393 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:30.385169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:31.385241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:31.745074 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:32.385458      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:33.385687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:33.758670 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:34.386331      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:35.387072      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:35.769085 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:36.387983      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:37.388728      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:37.785022 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:38.390107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:39.390107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:39.795979 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:40.391723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:41.391969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:41.807194 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:42.393067      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:43.393565      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:43.821618 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:44.394768      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:45.395657      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:45.831723 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:46.396325      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:47.396596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:47.871172 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:48.396816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:49.397094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:49.879628 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:50.397448      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:51.398183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:51.893341 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:52.399018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:53.398985      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:53.904444 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:54.399225      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:55.399564      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:55.912893 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:56.400276      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:57.400457      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:57.924441 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:02:58.400668      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:02:59.401379      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:02:59.933685 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:00.401626      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:01.401758      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:01.946983 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:02.402728      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:03.403676      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:03.957310 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:04.403743      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:05.404378      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:05.965309 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:06.404780      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:07.405351      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:07.972986 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:08.405888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:09.405878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:09.981697 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:10.406460      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:11.406910      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:11.993114 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:12.408162      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:13.408657      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:14.001407 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:14.409792      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:15.410194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:16.008414 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:16.410878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:17.411504      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:18.017447 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:18.411904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:19.413189      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:20.025098 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:20.413896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:21.414092      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:22.036372 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:22.415099      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:23.415262      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:24.050926 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:24.416420      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:25.417078      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:26.059888 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:26.416900      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:27.417649      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:28.071045 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:28.418356      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:29.419073      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:30.082458 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:30.419186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:31.419370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:32.092565 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:32.419942      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:33.420361      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:34.100875 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:34.421081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:35.421462      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:36.114604 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:36.422303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:37.422845      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:38.122497 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:38.422862      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:39.423069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:40.131806 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:40.424413      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:41.425084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:42.140635 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:42.426157      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:43.426192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:44.149208 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:44.426496      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:45.427060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:46.157718 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:46.428009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:47.428134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:48.166442 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:48.429202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:49.429858      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:50.173513 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:50.431054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:51.432070      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:52.182952 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:52.432600      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:53.433126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:54.192158 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:54.433895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:55.434141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:56.201013 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:56.434419      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:57.435097      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:03:58.210034 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:03:58.435235      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:03:59.435587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:00.217166 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:00.435823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:01.435938      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:02.228013 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:02.436422      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:03.436595      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:04.237101 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:04.437291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:05.437624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:06.245134 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:06.438716      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:07.439161      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:08.254038 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:08.439409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:09.439774      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:10.264171 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:10.440280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:11.440895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:12.274926 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:12.441482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:13.441951      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:14.284661 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:14.442590      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:15.443333      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:16.294142 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:16.443255      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:17.443703      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:18.303191 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:18.444829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:19.445480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:20.312442 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:20.445855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:21.446639      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:22.324469 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:22.447217      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:23.447392      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:24.337267 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:24.447932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:25.448932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:26.345706 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:26.449993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:27.450752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:28.355287 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:28.451408      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:29.451498      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:30.367372 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:30.452884      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:31.452870      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:32.375498 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:32.453690      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:33.454343      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:34.384445 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:34.454745      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:35.455085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:36.394099 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:36.455949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:37.456300      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:38.413257 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:38.456375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:39.457599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:40.422613 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:40.457792      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:41.457983      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:42.434366 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:42.458484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:43.459234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:44.444165 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:44.459271      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:45.459461      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:46.452479 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:46.460582      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:47.461686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:48.461486 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:48.461775      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:49.462908      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:50.463194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:50.470728 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:51.463657      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:52.464154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:52.481345 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:53.465066      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:54.465209      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:54.489786 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:55.465434      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:56.465703      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:56.500417 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:57.465941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:04:58.466886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:04:58.509579 16 container_probe.go:1759] Get pod test-webserver-4ea4b6fa-68ab-4cc2-8c5f-3e6ad3537dc8 in namespace container-probe-6337
  E0902 09:04:59.468135      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:00.468412      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/02/25 09:05:00.511
  I0902 09:05:00.552064 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6337" for this suite. @ 09/02/25 09:05:00.573
• [243.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/02/25 09:05:00.606
  I0902 09:05:00.606701 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 09:05:00.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:00.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:00.657
  STEP: Looking for a node to schedule job pod @ 09/02/25 09:05:00.662
  STEP: Creating a job @ 09/02/25 09:05:00.672
  STEP: Ensuring job fails @ 09/02/25 09:05:00.694
  E0902 09:05:01.469402      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:02.469845      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:03.470191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:04.470330      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:04.722367 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5023" for this suite. @ 09/02/25 09:05:04.731
• [4.138 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/02/25 09:05:04.745
  I0902 09:05:04.745268 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 09:05:04.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:04.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:04.783
  STEP: creating service nodeport-test with type=NodePort in namespace services-3270 @ 09/02/25 09:05:04.789
  STEP: creating replication controller nodeport-test in namespace services-3270 @ 09/02/25 09:05:04.824
  I0902 09:05:04.851800      16 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3270, replica count: 2
  E0902 09:05:05.470841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:06.471312      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:07.471765      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:07.904162      16 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 09:05:07.904240 16 resource.go:361] Creating new exec pod
  E0902 09:05:08.473257      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:09.474005      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:10.474419      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:10.970217 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0902 09:05:11.263856 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.35.32) 80 port [tcp/http] succeeded!\n"
  I0902 09:05:11.263982 16 builder.go:147] stdout: "nodeport-test-55xtk"
  I0902 09:05:11.264616 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.32 80'
  E0902 09:05:11.476934      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:11.529653 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.32 80\nConnection to 10.233.35.32 80 port [tcp/http] succeeded!\n"
  I0902 09:05:11.529730 16 builder.go:147] stdout: ""
  I0902 09:05:12.265052 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.32 80'
  E0902 09:05:12.477365      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:12.605125 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.32 80\nConnection to 10.233.35.32 80 port [tcp/http] succeeded!\n"
  I0902 09:05:12.605228 16 builder.go:147] stdout: "nodeport-test-55xtk"
  I0902 09:05:12.605997 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.22 30917'
  I0902 09:05:12.898427 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.22 30917\nConnection to 192.168.121.22 30917 port [tcp/*] succeeded!\n"
  I0902 09:05:12.898551 16 builder.go:147] stdout: "nodeport-test-6wgcw"
  I0902 09:05:12.899121 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.5 30917'
  I0902 09:05:13.188945 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.5 30917\nConnection to 192.168.121.5 30917 port [tcp/*] succeeded!\n"
  I0902 09:05:13.189024 16 builder.go:147] stdout: ""
  E0902 09:05:13.477578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:13.899775 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.5 30917'
  I0902 09:05:14.190855 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.5 30917\nConnection to 192.168.121.5 30917 port [tcp/*] succeeded!\n"
  I0902 09:05:14.190968 16 builder.go:147] stdout: ""
  E0902 09:05:14.478635      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:14.899833 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-3270 exec execpodswwl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.5 30917'
  I0902 09:05:15.164259 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.5 30917\nConnection to 192.168.121.5 30917 port [tcp/*] succeeded!\n"
  I0902 09:05:15.164339 16 builder.go:147] stdout: "nodeport-test-55xtk"
  I0902 09:05:15.165038 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3270" for this suite. @ 09/02/25 09:05:15.175
• [10.443 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/02/25 09:05:15.189
  I0902 09:05:15.189779 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 09:05:15.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:15.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:15.224
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/02/25 09:05:15.231
  E0902 09:05:15.479022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:16.479445      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/02/25 09:05:17.273
  STEP: Then the orphan pod is adopted @ 09/02/25 09:05:17.286
  E0902 09:05:17.480439      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:18.304195 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5485" for this suite. @ 09/02/25 09:05:18.314
• [3.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 09/02/25 09:05:18.329
  I0902 09:05:18.330213 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 09:05:18.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:18.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:18.363
  STEP: Creating a job @ 09/02/25 09:05:18.369
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/02/25 09:05:18.382
  E0902 09:05:18.482167      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:19.485453      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/02/25 09:05:20.4
  STEP: updating /status @ 09/02/25 09:05:20.42
  STEP: get /status @ 09/02/25 09:05:20.437
  I0902 09:05:20.451103 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9551" for this suite. @ 09/02/25 09:05:20.462
• [2.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/02/25 09:05:20.476
  I0902 09:05:20.476952 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 09:05:20.481
  E0902 09:05:20.485959      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:20.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:20.516
  STEP: fetching the /apis discovery document @ 09/02/25 09:05:20.521
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/02/25 09:05:20.525
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/02/25 09:05:20.525
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/02/25 09:05:20.525
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/02/25 09:05:20.529
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/02/25 09:05:20.529
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/02/25 09:05:20.531
  I0902 09:05:20.532659 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-69" for this suite. @ 09/02/25 09:05:20.565
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/02/25 09:05:20.578
  I0902 09:05:20.578319 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename volumeattachment @ 09/02/25 09:05:20.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:20.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:20.628
  STEP: Create VolumeAttachment "va-e2e-j4mrp" on node "noo9iech3thi-3" @ 09/02/25 09:05:20.662
  STEP: Patch VolumeAttachment "va-e2e-j4mrp" on node "noo9iech3thi-3" @ 09/02/25 09:05:20.673
  STEP: Reading "va-e2e-j4mrp" Status @ 09/02/25 09:05:20.686
  STEP: Patching "va-e2e-j4mrp" Status @ 09/02/25 09:05:20.698
  I0902 09:05:20.717394 16 volume_attachment.go:224] "va-e2e-j4mrp" Status.Attached: true
  STEP: Updating "va-e2e-j4mrp" Status @ 09/02/25 09:05:20.717
  I0902 09:05:20.743068 16 volume_attachment.go:240] "va-e2e-j4mrp" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-j4mrp" on node "noo9iech3thi-3" @ 09/02/25 09:05:20.743
  STEP: Confirm deletion of VolumeAttachment "va-e2e-j4mrp" on node "noo9iech3thi-3" @ 09/02/25 09:05:20.761
  I0902 09:05:20.768133 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9041" for this suite. @ 09/02/25 09:05:20.776
• [0.211 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/02/25 09:05:20.789
  I0902 09:05:20.789215 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 09:05:20.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:20.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:20.842
  I0902 09:05:20.849097 16 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0902 09:05:21.486440      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/02/25 09:05:21.883
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/02/25 09:05:21.897
  E0902 09:05:22.487218      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/02/25 09:05:22.93
  I0902 09:05:22.994650 16 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/02/25 09:05:22.994
  I0902 09:05:23.044261 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9849" for this suite. @ 09/02/25 09:05:23.056
• [2.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/02/25 09:05:23.073
  I0902 09:05:23.074042 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:05:23.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:23.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:23.126
  STEP: Creating secret with name secret-test-map-c4ebbf3c-bc3f-46f5-8e58-9df3e43450ac @ 09/02/25 09:05:23.132
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:05:23.159
  E0902 09:05:23.487480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:24.487809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:25.488391      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:26.488839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:05:27.213
  I0902 09:05:27.222567 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-a97ce9c9-8b02-4000-a032-7a2a5847b633 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:05:27.266
  I0902 09:05:27.306374 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-402" for this suite. @ 09/02/25 09:05:27.324
• [4.264 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/02/25 09:05:27.375
  I0902 09:05:27.375785 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:05:27.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:27.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:27.462
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:05:27.474
  E0902 09:05:27.491635      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:28.492566      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:29.492987      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:30.493944      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:31.494656      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:05:31.537
  I0902 09:05:31.548367 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-f3df8a00-fcee-4cc9-8ca4-078906682d16 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:05:31.577
  I0902 09:05:31.637495 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2319" for this suite. @ 09/02/25 09:05:31.651
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 09/02/25 09:05:31.669
  I0902 09:05:31.669417 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 09:05:31.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:31.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:31.714
  STEP: fetching services @ 09/02/25 09:05:31.721
  I0902 09:05:31.735723 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4271" for this suite. @ 09/02/25 09:05:31.75
• [0.100 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/02/25 09:05:31.769
  I0902 09:05:31.769684 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:05:31.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:31.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:31.81
  STEP: Setting up server cert @ 09/02/25 09:05:31.879
  E0902 09:05:32.494917      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:05:33.485
  E0902 09:05:33.495058      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 09/02/25 09:05:33.504
  STEP: Wait for the deployment to be ready @ 09/02/25 09:05:33.537
  I0902 09:05:33.563173 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:05:34.495228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:35.495825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:05:35.588
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:05:35.613
  E0902 09:05:36.496375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:36.614206 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/02/25 09:05:36.631
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/02/25 09:05:36.634
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/02/25 09:05:36.635
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/02/25 09:05:36.635
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/02/25 09:05:36.637
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/02/25 09:05:36.637
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/02/25 09:05:36.639
  I0902 09:05:36.731167 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-605" for this suite. @ 09/02/25 09:05:36.74
  STEP: Destroying namespace "webhook-markers-7511" for this suite. @ 09/02/25 09:05:36.762
• [5.014 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/02/25 09:05:36.784
  I0902 09:05:36.784410 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 09:05:36.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:36.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:36.827
  I0902 09:05:36.837236 16 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0902 09:05:36.862159 16 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0902 09:05:37.498375      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:38.499391      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:39.500795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:40.501467      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:41.501954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:41.874982 16 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/25 09:05:41.875
  I0902 09:05:41.875113 16 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0902 09:05:41.890222 16 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0902 09:05:41.912244 16 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0902 09:05:42.502149      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:43.502341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:43.933759 16 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0902 09:05:43.939258 16 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0902 09:05:43.971030 16 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3867",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba2893c5-8363-4374-ab0a-5c67be341554",
      ResourceVersion: (string) (len=5) "36756",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 09:05:43.987481 16 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3867",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3742d30c-40b8-4e27-8c2a-fc3f2f29daa0",
      ResourceVersion: (string) (len=5) "36745",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ba2893c5-8363-4374-ab0a-5c67be341554",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 61 32 38 39 33  63 35 2d 38 33 36 33 2d  |\"ba2893c5-8363-|
              00000120  34 33 37 34 2d 61 62 30  61 2d 35 63 36 37 62 65  |4374-ab0a-5c67be|
              00000130  33 34 31 35 35 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |341554\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 09:05:44.001581 16 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0902 09:05:44.002844 16 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3867",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d917de0-c939-4e92-b9be-5d210dd2f252",
      ResourceVersion: (string) (len=5) "36755",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ba2893c5-8363-4374-ab0a-5c67be341554",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 61 32 38 39 33 63  |"uid\":\"ba2893c|
              000000b0  35 2d 38 33 36 33 2d 34  33 37 34 2d 61 62 30 61  |5-8363-4374-ab0a|
              000000c0  2d 35 63 36 37 62 65 33  34 31 35 35 34 5c 22 7d  |-5c67be341554\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 09:05:44.018772 16 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-82tfk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-82tfk",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-3867",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc884e66-64b6-4d79-8504-c11bf5d5ebc0",
      ResourceVersion: (string) (len=5) "36744",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "3742d30c-40b8-4e27-8c2a-fc3f2f29daa0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  34 32 64 33 30 63 2d 34  |d\":\"3742d30c-4|
              00000090  30 62 38 2d 34 65 32 37  2d 38 63 32 61 2d 66 63  |0b8-4e27-8c2a-fc|
              000000a0  33 66 32 66 32 39 64 61  61 30 5c 22 7d 22 3a 7b  |3f2f29daa0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  34 35 5c 22 7d 22 3a 7b  |.233.66.45\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lpqvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lpqvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892400741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=12) "10.233.66.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892400742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892400742,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://c38ed9376ee2590db386951aaf72d70cd9a59bb6109cbdc341d83e0f8a1a7019",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lpqvz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 09:05:44.029819 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3867" for this suite. @ 09/02/25 09:05:44.04
• [7.272 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/02/25 09:05:44.057
  I0902 09:05:44.057105 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/02/25 09:05:44.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:44.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:44.119
  STEP: Setting up the test @ 09/02/25 09:05:44.127
  STEP: Creating hostNetwork=false pod @ 09/02/25 09:05:44.128
  E0902 09:05:44.503233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:45.503505      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/02/25 09:05:46.189
  E0902 09:05:46.504672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:47.505668      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/02/25 09:05:48.23
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/02/25 09:05:48.23
  I0902 09:05:48.230798 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.230852 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.230953 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0902 09:05:48.340955 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:48.341872 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.341927 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.342037 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0902 09:05:48.471382 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:48.471859 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.471892 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.472080 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  E0902 09:05:48.505759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:48.581660 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:48.581796 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.581823 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.581958 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0902 09:05:48.697498 16 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/02/25 09:05:48.698
  I0902 09:05:48.698137 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.698207 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.698344 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0902 09:05:48.806656 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:48.806956 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.807175 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.807498 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0902 09:05:48.901217 16 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/02/25 09:05:48.901
  I0902 09:05:48.901390 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:48.901438 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:48.901588 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0902 09:05:49.008696 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:49.008981 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:49.009019 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:49.009190 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0902 09:05:49.100472 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:49.100679 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:49.100754 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:49.100898 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0902 09:05:49.244500 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:49.246427 16 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1466 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:05:49.246504 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:05:49.247703 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1466/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0902 09:05:49.429726 16 exec_util.go:108] Exec stderr: ""
  I0902 09:05:49.430054 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1466" for this suite. @ 09/02/25 09:05:49.44
• [5.429 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/02/25 09:05:49.486
  I0902 09:05:49.486484 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:05:49.49
  E0902 09:05:49.513015      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:49.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:49.521
  STEP: Setting up server cert @ 09/02/25 09:05:49.623
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:05:50.34
  STEP: Deploying the webhook pod @ 09/02/25 09:05:50.354
  STEP: Wait for the deployment to be ready @ 09/02/25 09:05:50.383
  I0902 09:05:50.400565 16 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0902 09:05:50.513957      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:51.514079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:05:52.423
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:05:52.446
  E0902 09:05:52.515268      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:53.447029 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 09:05:53.463186 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:05:53.515889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9755-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/25 09:05:53.989
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/02/25 09:05:54.021
  E0902 09:05:54.516950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:55.517603      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:56.518430      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:05:56.882231 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9558" for this suite. @ 09/02/25 09:05:56.897
  STEP: Destroying namespace "webhook-markers-6688" for this suite. @ 09/02/25 09:05:56.912
• [7.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/02/25 09:05:56.97
  I0902 09:05:56.970704 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:05:56.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:05:57.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:05:57.032
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:05:57.038
  E0902 09:05:57.519089      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:58.519980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:05:59.520272      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:00.521201      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:06:01.082
  I0902 09:06:01.089999 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-63dc5f91-ddb5-45a0-928f-23283f89e49f container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:06:01.108
  I0902 09:06:01.142682 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3561" for this suite. @ 09/02/25 09:06:01.152
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/02/25 09:06:01.166
  I0902 09:06:01.166717 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:06:01.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:06:01.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:06:01.24
  STEP: creating a replication controller @ 09/02/25 09:06:01.247
  I0902 09:06:01.248116 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 create -f -'
  E0902 09:06:01.521889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:01.621455 16 builder.go:146] stderr: ""
  I0902 09:06:01.621631 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 09:06:01.621
  I0902 09:06:01.622335 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:01.836400 16 builder.go:146] stderr: ""
  I0902 09:06:01.836507 16 builder.go:147] stdout: "update-demo-nautilus-bnqjm update-demo-nautilus-qrfzg "
  I0902 09:06:01.837735 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:02.089315 16 builder.go:146] stderr: ""
  I0902 09:06:02.089414 16 builder.go:147] stdout: ""
  I0902 09:06:02.089437 16 kubectl.go:2509] update-demo-nautilus-bnqjm is created but not running
  E0902 09:06:02.522932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:03.523442      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:04.523859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:05.524131      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:06.524032      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:07.090766 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:07.496737 16 builder.go:146] stderr: ""
  I0902 09:06:07.496898 16 builder.go:147] stdout: "update-demo-nautilus-bnqjm update-demo-nautilus-qrfzg "
  I0902 09:06:07.497402 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0902 09:06:07.524260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:07.739835 16 builder.go:146] stderr: ""
  I0902 09:06:07.739957 16 builder.go:147] stdout: ""
  I0902 09:06:07.740017 16 kubectl.go:2509] update-demo-nautilus-bnqjm is created but not running
  E0902 09:06:08.525279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:09.526483      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:10.525933      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:11.526405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:12.526991      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:12.741016 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:12.975801 16 builder.go:146] stderr: ""
  I0902 09:06:12.975875 16 builder.go:147] stdout: "update-demo-nautilus-bnqjm update-demo-nautilus-qrfzg "
  I0902 09:06:12.976469 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:13.193901 16 builder.go:146] stderr: ""
  I0902 09:06:13.194233 16 builder.go:147] stdout: ""
  I0902 09:06:13.194272 16 kubectl.go:2509] update-demo-nautilus-bnqjm is created but not running
  E0902 09:06:13.527194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:14.528373      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:15.528650      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:16.528858      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:17.529091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:18.195373 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:18.378101 16 builder.go:146] stderr: ""
  I0902 09:06:18.378185 16 builder.go:147] stdout: "update-demo-nautilus-bnqjm update-demo-nautilus-qrfzg "
  I0902 09:06:18.378620 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0902 09:06:18.529503      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:18.532265 16 builder.go:146] stderr: ""
  I0902 09:06:18.532374 16 builder.go:147] stdout: ""
  I0902 09:06:18.532415 16 kubectl.go:2509] update-demo-nautilus-bnqjm is created but not running
  E0902 09:06:19.530149      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:20.530227      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:21.531028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:22.531924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:23.532305      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:23.533061 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:23.710117 16 builder.go:146] stderr: ""
  I0902 09:06:23.710412 16 builder.go:147] stdout: "update-demo-nautilus-bnqjm update-demo-nautilus-qrfzg "
  I0902 09:06:23.710925 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:23.898835 16 builder.go:146] stderr: ""
  I0902 09:06:23.899403 16 builder.go:147] stdout: ""
  I0902 09:06:23.899433 16 kubectl.go:2509] update-demo-nautilus-bnqjm is created but not running
  E0902 09:06:24.532647      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:25.532797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:26.533478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:27.533927      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:28.534681      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:28.900102 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:29.077627 16 builder.go:146] stderr: ""
  I0902 09:06:29.077946 16 builder.go:147] stdout: "update-demo-nautilus-bnqjm update-demo-nautilus-qrfzg "
  I0902 09:06:29.078383 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:29.239855 16 builder.go:146] stderr: ""
  I0902 09:06:29.240482 16 builder.go:147] stdout: "true"
  I0902 09:06:29.240986 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-bnqjm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 09:06:29.415378 16 builder.go:146] stderr: ""
  I0902 09:06:29.415459 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:06:29.415502 16 kubectl.go:2400] validating pod update-demo-nautilus-bnqjm
  I0902 09:06:29.436972 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:06:29.437541 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:06:29.437582 16 kubectl.go:2527] update-demo-nautilus-bnqjm is verified up and running
  I0902 09:06:29.437976 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-qrfzg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0902 09:06:29.534861      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:29.602858 16 builder.go:146] stderr: ""
  I0902 09:06:29.602966 16 builder.go:147] stdout: "true"
  I0902 09:06:29.603458 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-qrfzg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 09:06:29.785856 16 builder.go:146] stderr: ""
  I0902 09:06:29.786043 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:06:29.786075 16 kubectl.go:2400] validating pod update-demo-nautilus-qrfzg
  I0902 09:06:29.805797 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:06:29.806272 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:06:29.806303 16 kubectl.go:2527] update-demo-nautilus-qrfzg is verified up and running
  STEP: scaling down the replication controller @ 09/02/25 09:06:29.806
  I0902 09:06:29.827620 16 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0902 09:06:29.828484 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0902 09:06:30.534937      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:31.080680 16 builder.go:146] stderr: ""
  I0902 09:06:31.080779 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 09:06:31.08
  I0902 09:06:31.081296 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:31.248966 16 builder.go:146] stderr: ""
  I0902 09:06:31.249059 16 builder.go:147] stdout: "update-demo-nautilus-qrfzg "
  I0902 09:06:31.249921 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-qrfzg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:31.457691 16 builder.go:146] stderr: ""
  I0902 09:06:31.457784 16 builder.go:147] stdout: "true"
  I0902 09:06:31.458122 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-qrfzg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0902 09:06:31.535030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:31.621913 16 builder.go:146] stderr: ""
  I0902 09:06:31.622048 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:06:31.622076 16 kubectl.go:2400] validating pod update-demo-nautilus-qrfzg
  I0902 09:06:31.631252 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:06:31.631389 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:06:31.631424 16 kubectl.go:2527] update-demo-nautilus-qrfzg is verified up and running
  STEP: scaling up the replication controller @ 09/02/25 09:06:31.631
  I0902 09:06:31.645437 16 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0902 09:06:31.645648 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0902 09:06:32.535362      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:32.846181 16 builder.go:146] stderr: ""
  I0902 09:06:32.846439 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 09:06:32.846
  I0902 09:06:32.847605 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:33.026734 16 builder.go:146] stderr: ""
  I0902 09:06:33.026817 16 builder.go:147] stdout: "update-demo-nautilus-gwj4p update-demo-nautilus-qrfzg "
  I0902 09:06:33.027094 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-gwj4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:33.199413 16 builder.go:146] stderr: ""
  I0902 09:06:33.199511 16 builder.go:147] stdout: ""
  I0902 09:06:33.199843 16 kubectl.go:2509] update-demo-nautilus-gwj4p is created but not running
  E0902 09:06:33.536194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:34.536425      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:35.536723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:36.537124      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:37.537631      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:38.200749 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:06:38.412400 16 builder.go:146] stderr: ""
  I0902 09:06:38.412476 16 builder.go:147] stdout: "update-demo-nautilus-gwj4p update-demo-nautilus-qrfzg "
  I0902 09:06:38.413116 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-gwj4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0902 09:06:38.538238      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:38.575043 16 builder.go:146] stderr: ""
  I0902 09:06:38.575155 16 builder.go:147] stdout: "true"
  I0902 09:06:38.575429 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-gwj4p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 09:06:38.737549 16 builder.go:146] stderr: ""
  I0902 09:06:38.737647 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:06:38.737690 16 kubectl.go:2400] validating pod update-demo-nautilus-gwj4p
  I0902 09:06:38.755982 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:06:38.756131 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:06:38.756178 16 kubectl.go:2527] update-demo-nautilus-gwj4p is verified up and running
  I0902 09:06:38.757022 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-qrfzg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:06:38.927506 16 builder.go:146] stderr: ""
  I0902 09:06:38.928004 16 builder.go:147] stdout: "true"
  I0902 09:06:38.928612 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods update-demo-nautilus-qrfzg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 09:06:39.087631 16 builder.go:146] stderr: ""
  I0902 09:06:39.087709 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:06:39.087736 16 kubectl.go:2400] validating pod update-demo-nautilus-qrfzg
  I0902 09:06:39.097501 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:06:39.097641 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:06:39.097668 16 kubectl.go:2527] update-demo-nautilus-qrfzg is verified up and running
  STEP: using delete to clean up resources @ 09/02/25 09:06:39.097
  I0902 09:06:39.097968 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 delete --grace-period=0 --force -f -'
  I0902 09:06:39.251883 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:06:39.251991 16 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0902 09:06:39.252509 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get rc,svc -l name=update-demo --no-headers'
  E0902 09:06:39.539053      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:39.584315 16 builder.go:146] stderr: "No resources found in kubectl-7201 namespace.\n"
  I0902 09:06:39.584396 16 builder.go:147] stdout: ""
  I0902 09:06:39.584925 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-7201 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0902 09:06:39.918419 16 builder.go:146] stderr: ""
  I0902 09:06:39.918497 16 builder.go:147] stdout: ""
  I0902 09:06:39.919938 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7201" for this suite. @ 09/02/25 09:06:39.931
• [38.783 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/02/25 09:06:39.951
  I0902 09:06:39.951892 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:06:39.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:06:40.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:06:40.068
  STEP: Creating pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184 @ 09/02/25 09:06:40.088
  E0902 09:06:40.539247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:41.539374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:06:42.149
  I0902 09:06:42.166563 16 container_probe.go:1749] Initial restart count of pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e is 0
  I0902 09:06:42.174402 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:42.539874      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:43.540586      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:44.186125 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:44.540722      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:45.541246      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:46.195738 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:46.541143      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:47.541849      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:48.204591 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:48.542017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:49.542361      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:50.214721 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:50.543110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:51.543316      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:52.226126 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:52.543363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:53.543444      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:54.236313 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:54.543902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:55.544909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:56.253340 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:56.545906      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:57.546151      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:06:58.266943 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:06:58.547122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:06:59.547797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:00.275277 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:00.547679      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:01.548669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:02.291268 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:02.549030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:03.549397      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:04.299781 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:04.550491      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:05.551303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:06.310415 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:06.551977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:07.552587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:08.322822 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:08.553167      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:09.554040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:10.332971 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:10.554479      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:11.554800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:12.343336 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:12.555987      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:13.556280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:14.358064 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:14.557163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:15.557817      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:16.370662 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:16.558456      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:17.559026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:18.382698 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:18.560120      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:19.560778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:20.392094 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:20.561493      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:21.562223      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:22.401382 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:22.562883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:23.563714      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:24.413945 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:24.564825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:25.565017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:26.425419 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:26.565642      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:27.566452      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:28.434469 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:28.566658      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:29.567809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:30.444837 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:30.568441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:31.568830      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:32.453876 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:32.569005      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:33.569234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:34.462444 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:34.569809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:35.570340      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:36.472702 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:36.570209      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:37.570422      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:38.485188 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:38.571749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:39.571920      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:40.494650 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:40.572758      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:41.573342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:42.507403 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:42.573569      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:43.574328      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:44.520484 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:44.574953      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:45.575614      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:46.528647 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:46.575880      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:47.575803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:48.536914 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:48.576572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:49.577919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:50.548025 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:50.579309      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:51.580101      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:52.558020 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:52.580248      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:53.581237      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:54.567558 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  E0902 09:07:54.581720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:55.582136      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:56.575998 16 container_probe.go:1759] Get pod test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e in namespace container-probe-3184
  I0902 09:07:56.576120 16 container_probe.go:1763] Restart count of pod container-probe-3184/test-grpc-ac30ce7e-c0aa-4f26-9d17-e934b72a4c7e is now 1 (1m14.409468247s elapsed)
  STEP: deleting the pod @ 09/02/25 09:07:56.576
  E0902 09:07:56.583140      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:07:56.615999 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3184" for this suite. @ 09/02/25 09:07:56.626
• [76.690 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/02/25 09:07:56.642
  I0902 09:07:56.642622 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:07:56.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:07:56.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:07:56.679
  STEP: Counting existing ResourceQuota @ 09/02/25 09:07:56.684
  E0902 09:07:57.583851      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:58.584022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:07:59.584948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:00.585158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:01.585501      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 09:08:01.7
  STEP: Ensuring resource quota status is calculated @ 09/02/25 09:08:01.712
  E0902 09:08:02.585878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:03.586057      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/02/25 09:08:03.721
  STEP: Ensuring resource quota status captures replicaset creation @ 09/02/25 09:08:03.746
  E0902 09:08:04.586454      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:05.586415      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/02/25 09:08:05.755
  STEP: Ensuring resource quota status released usage @ 09/02/25 09:08:05.768
  E0902 09:08:06.586928      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:07.587614      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:07.788667 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8997" for this suite. @ 09/02/25 09:08:07.815
• [11.190 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/02/25 09:08:07.832
  I0902 09:08:07.832493 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename chunking @ 09/02/25 09:08:07.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:07.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:07.89
  STEP: creating a large number of resources @ 09/02/25 09:08:07.896
  E0902 09:08:08.587768      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:09.587797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:10.588412      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:11.589591      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:12.590714      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:13.591387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:14.591977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:15.592624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:16.593629      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:17.593415      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:18.594741      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:19.594784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:20.595577      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:21.595884      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:22.599621      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:23.599203      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:24.599894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/02/25 09:08:25.548
  I0902 09:08:25.600161 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  E0902 09:08:25.600652      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:25.645558 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0902 09:08:25.696064 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0902 09:08:25.744911 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0902 09:08:25.794154 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0902 09:08:25.844564 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0902 09:08:25.894656 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0902 09:08:25.945698 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0902 09:08:25.997209 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0902 09:08:26.047122 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0902 09:08:26.100469 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0902 09:08:26.147376 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0902 09:08:26.196192 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0902 09:08:26.246069 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0902 09:08:26.294200 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0902 09:08:26.347080 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0902 09:08:26.395179 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0902 09:08:26.446239 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0902 09:08:26.494852 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0902 09:08:26.544374 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0902 09:08:26.598919 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0902 09:08:26.600720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:26.644275 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0902 09:08:26.693588 16 chunking.go:98] Retrieved 17/17 results with rv 37919 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0902 09:08:26.744840 16 chunking.go:98] Retrieved 9/17 results with rv 37919 and continue 
  I0902 09:08:26.795245 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0902 09:08:26.844660 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0902 09:08:26.894727 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0902 09:08:26.947225 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0902 09:08:27.005389 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0902 09:08:27.046057 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0902 09:08:27.095880 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0902 09:08:27.143047 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0902 09:08:27.195403 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0902 09:08:27.245635 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0902 09:08:27.296356 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0902 09:08:27.347863 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0902 09:08:27.395669 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0902 09:08:27.445262 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0902 09:08:27.497071 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0902 09:08:27.548660 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  E0902 09:08:27.601139      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:27.609628 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0902 09:08:27.643395 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0902 09:08:27.694849 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0902 09:08:27.745744 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0902 09:08:27.796983 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0902 09:08:27.862363 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0902 09:08:27.893819 16 chunking.go:98] Retrieved 17/17 results with rv 37921 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0902 09:08:27.944733 16 chunking.go:98] Retrieved 9/17 results with rv 37921 and continue 
  I0902 09:08:27.996238 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0902 09:08:28.043593 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0902 09:08:28.096307 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0902 09:08:28.147377 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0902 09:08:28.195910 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0902 09:08:28.246968 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0902 09:08:28.294711 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0902 09:08:28.344658 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0902 09:08:28.395974 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0902 09:08:28.444129 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0902 09:08:28.494883 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0902 09:08:28.544804 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0902 09:08:28.597590 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  E0902 09:08:28.601231      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:28.647358 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0902 09:08:28.697231 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0902 09:08:28.746442 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0902 09:08:28.794926 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0902 09:08:28.848807 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0902 09:08:28.901129 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0902 09:08:28.945984 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0902 09:08:28.996409 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0902 09:08:29.044703 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0902 09:08:29.095079 16 chunking.go:98] Retrieved 17/17 results with rv 37924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0902 09:08:29.143809 16 chunking.go:98] Retrieved 9/17 results with rv 37924 and continue 
  STEP: retrieving those results all at once @ 09/02/25 09:08:29.143
  I0902 09:08:29.209265 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5589" for this suite. @ 09/02/25 09:08:29.248
• [21.471 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 09/02/25 09:08:29.304
  I0902 09:08:29.304102 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:08:29.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:29.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:29.359
  STEP: starting the proxy server @ 09/02/25 09:08:29.367
  I0902 09:08:29.368081 16 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6669 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/02/25 09:08:29.482
  I0902 09:08:29.508170 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0902 09:08:29.511820 16 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:46231

  I0902 09:08:29.512059 16 kubectl.go:2236] kubectl proxy stderr: W0902 09:08:29.481439     991 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-6669" for this suite. @ 09/02/25 09:08:29.517
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/02/25 09:08:29.533
  I0902 09:08:29.533968 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 09:08:29.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:29.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:29.575
  I0902 09:08:29.581484 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:08:29.602210      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:30.603794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:31.603477      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:32.604656      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:33.005722 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6272" for this suite. @ 09/02/25 09:08:33.018
• [3.499 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/02/25 09:08:33.033
  I0902 09:08:33.033681 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-webhook @ 09/02/25 09:08:33.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:33.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:33.066
  STEP: Setting up server cert @ 09/02/25 09:08:33.072
  E0902 09:08:33.605598      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/25 09:08:33.648
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/25 09:08:33.66
  STEP: Wait for the deployment to be ready @ 09/02/25 09:08:33.686
  I0902 09:08:33.703140 16 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0902 09:08:34.606819      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:35.608079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:08:35.735
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:08:35.764
  E0902 09:08:36.609620      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:08:36.767287 16 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0902 09:08:36.790341 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:08:37.608408      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:38.609090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:39.611985      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/02/25 09:08:39.689
  STEP: v2 custom resource should be converted @ 09/02/25 09:08:39.704
  I0902 09:08:40.341388 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7181" for this suite. @ 09/02/25 09:08:40.365
• [7.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/02/25 09:08:40.387
  I0902 09:08:40.387750 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename disruption @ 09/02/25 09:08:40.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:40.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:40.484
  STEP: Creating a kubernetes client @ 09/02/25 09:08:40.503
  I0902 09:08:40.503913 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename disruption-2 @ 09/02/25 09:08:40.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:40.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:40.547
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:08:40.571
  E0902 09:08:40.611037      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:41.611863      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:08:42.599
  E0902 09:08:42.612299      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:43.612599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:44.612742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:08:44.626
  E0902 09:08:45.613578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:46.613824      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/02/25 09:08:46.637
  STEP: listing a collection of PDBs in namespace disruption-6649 @ 09/02/25 09:08:46.647
  STEP: deleting a collection of PDBs @ 09/02/25 09:08:46.654
  STEP: Waiting for the PDB collection to be deleted @ 09/02/25 09:08:46.682
  I0902 09:08:46.688789 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1530" for this suite. @ 09/02/25 09:08:46.7
  I0902 09:08:46.715692 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6649" for this suite. @ 09/02/25 09:08:46.801
• [6.437 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/02/25 09:08:46.825
  I0902 09:08:46.825346 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename disruption @ 09/02/25 09:08:46.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:46.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:46.863
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:08:46.88
  E0902 09:08:47.614776      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:48.614932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/02/25 09:08:48.889
  STEP: Waiting for all pods to be running @ 09/02/25 09:08:48.913
  I0902 09:08:48.921325 16 disruption.go:691] running pods: 0 < 1
  E0902 09:08:49.615009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:50.615470      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/02/25 09:08:50.924
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:08:50.959
  STEP: Patching PodDisruptionBudget status @ 09/02/25 09:08:50.973
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:08:51.011
  I0902 09:08:51.026154 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2246" for this suite. @ 09/02/25 09:08:51.035
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/02/25 09:08:51.051
  I0902 09:08:51.051193 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 09:08:51.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:08:51.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:08:51.089
  STEP: Creating a ReplaceConcurrent cronjob @ 09/02/25 09:08:51.094
  STEP: Ensuring a job is scheduled @ 09/02/25 09:08:51.113
  E0902 09:08:51.616067      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:52.616226      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:53.616363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:54.616757      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:55.617401      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:56.618005      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:57.618064      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:58.618319      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:08:59.618600      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:00.620263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/02/25 09:09:01.127
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/02/25 09:09:01.133
  STEP: Ensuring the job is replaced with a new one @ 09/02/25 09:09:01.142
  E0902 09:09:01.619797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:02.619921      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:03.620785      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:04.621127      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:05.621214      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:06.621606      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:07.621739      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:08.622017      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:09.622821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:10.622885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:11.623811      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:12.624401      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:13.624756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:14.625742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:15.625947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:16.626599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:17.626807      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:18.626920      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:19.627148      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:20.628121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:21.628390      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:22.629001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:23.629163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:24.630184      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:25.630856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:26.631446      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:27.632428      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:28.633074      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:29.634016      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:30.634650      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:31.634808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:32.635087      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:33.635412      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:34.636051      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:35.637242      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:36.636912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:37.638107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:38.637415      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:39.637602      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:40.638035      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:41.638129      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:42.638722      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:43.638916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:44.639669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:45.640327      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:46.641421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:47.641923      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:48.642663      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:49.643481      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:50.645941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:51.644197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:52.644280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:53.645302      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:54.646608      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:55.646481      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:56.648610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:57.648462      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:58.648697      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:09:59.649491      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:00.650008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/02/25 09:10:01.154
  I0902 09:10:01.174810 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-685" for this suite. @ 09/02/25 09:10:01.185
• [70.159 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/02/25 09:10:01.21
  I0902 09:10:01.211028 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 09:10:01.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:01.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:01.266
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 09:10:01.291
  E0902 09:10:01.650887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:02.651695      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 09:10:03.382
  E0902 09:10:03.652256      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:04.652798      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/02/25 09:10:05.419
  E0902 09:10:05.653576      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:06.654172      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/02/25 09:10:07.451
  I0902 09:10:07.490378 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2258" for this suite. @ 09/02/25 09:10:07.502
• [6.308 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/02/25 09:10:07.52
  I0902 09:10:07.520265 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:10:07.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:07.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:07.558
  STEP: creating the pod @ 09/02/25 09:10:07.564
  STEP: submitting the pod to kubernetes @ 09/02/25 09:10:07.564
  W0902 09:10:07.586798      16 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0902 09:10:07.654635      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:08.654841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/02/25 09:10:09.619
  STEP: updating the pod @ 09/02/25 09:10:09.625
  E0902 09:10:09.654919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:10:10.152504 16 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-3bc3aed2-f716-4048-b065-85e0b9cecaec"
  E0902 09:10:10.656090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:11.656706      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:12.656801      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:13.657052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:10:14.178923 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5914" for this suite. @ 09/02/25 09:10:14.19
• [6.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/02/25 09:10:14.206
  I0902 09:10:14.206036 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename subpath @ 09/02/25 09:10:14.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:14.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:14.242
  STEP: Setting up data @ 09/02/25 09:10:14.248
  STEP: Creating pod pod-subpath-test-configmap-4rfw @ 09/02/25 09:10:14.271
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 09:10:14.271
  E0902 09:10:14.658717      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:15.658688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:16.659373      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:17.659941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:18.660769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:19.661291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:20.662033      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:21.662280      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:22.662755      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:23.663036      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:24.663664      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:25.664196      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:26.665063      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:27.665248      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:28.665887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:29.666778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:30.666885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:31.667098      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:32.668404      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:33.668219      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:34.669432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:35.669812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:36.670313      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:37.670816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:10:38.411
  I0902 09:10:38.419716 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-subpath-test-configmap-4rfw container test-container-subpath-configmap-4rfw: <nil>
  STEP: delete the pod @ 09/02/25 09:10:38.46
  STEP: Deleting pod pod-subpath-test-configmap-4rfw @ 09/02/25 09:10:38.494
  I0902 09:10:38.494274 16 delete.go:62] Deleting pod "pod-subpath-test-configmap-4rfw" in namespace "subpath-7398"
  I0902 09:10:38.502072 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7398" for this suite. @ 09/02/25 09:10:38.512
• [24.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 09/02/25 09:10:38.532
  I0902 09:10:38.532749 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 09:10:38.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:38.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:38.57
  STEP: Creating service test in namespace statefulset-1837 @ 09/02/25 09:10:38.577
  STEP: Creating statefulset ss in namespace statefulset-1837 @ 09/02/25 09:10:38.61
  I0902 09:10:38.634599 16 wait.go:40] Found 0 stateful pods, waiting for 1
  E0902 09:10:38.672002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:39.672012      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:40.673883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:41.673424      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:42.673694      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:43.673775      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:44.674236      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:45.674623      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:46.675622      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:47.674969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:10:48.635946 16 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/02/25 09:10:48.649
  E0902 09:10:48.675945      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/02/25 09:10:48.677
  I0902 09:10:48.688469 16 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/02/25 09:10:48.688
  I0902 09:10:48.710908 16 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/02/25 09:10:48.71
  I0902 09:10:48.715112 16 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0902 09:10:48.715192 16 statefulset.go:1114] Found Statefulset ss in namespace statefulset-1837 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 09:10:48.715221 16 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/02/25 09:10:48.715
  I0902 09:10:48.715310 16 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0902 09:10:48.730847 16 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/02/25 09:10:48.73
  I0902 09:10:48.735499 16 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0902 09:10:48.735774 16 statefulset.go:138] Deleting all statefulset in ns statefulset-1837
  I0902 09:10:48.741413 16 rest.go:152] Scaling statefulset ss to 0
  E0902 09:10:49.676962      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:50.676981      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:51.677429      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:52.678019      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:53.678206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:54.679158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:55.679988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:56.680164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:57.680599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:10:58.680749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:10:58.771443 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 09:10:58.780172 16 rest.go:90] Deleting statefulset ss
  I0902 09:10:58.815691 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1837" for this suite. @ 09/02/25 09:10:58.827
• [20.311 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/02/25 09:10:58.844
  I0902 09:10:58.844215 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename endpointslice @ 09/02/25 09:10:58.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:10:58.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:10:58.884
  E0902 09:10:59.681793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:00.681941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:00.989139 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8043" for this suite. @ 09/02/25 09:11:01.003
• [2.174 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/02/25 09:11:01.018
  I0902 09:11:01.018801 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:11:01.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:01.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:01.053
  STEP: Creating projection with secret that has name projected-secret-test-29058188-812e-4fc4-8289-55ea2bdad816 @ 09/02/25 09:11:01.062
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:11:01.075
  E0902 09:11:01.683618      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:02.683913      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:03.684081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:04.685809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:11:05.126
  I0902 09:11:05.133600 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-secrets-bb3eb4e3-402f-48fe-9d88-f744f709533a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:11:05.152
  I0902 09:11:05.182482 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7331" for this suite. @ 09/02/25 09:11:05.192
• [4.186 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/02/25 09:11:05.206
  I0902 09:11:05.206210 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/02/25 09:11:05.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:05.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:05.243
  STEP: getting /apis @ 09/02/25 09:11:05.25
  STEP: getting /apis/storage.k8s.io @ 09/02/25 09:11:05.261
  STEP: getting /apis/storage.k8s.io/v1 @ 09/02/25 09:11:05.263
  STEP: creating @ 09/02/25 09:11:05.267
  STEP: watching @ 09/02/25 09:11:05.299
  I0902 09:11:05.299446 16 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/02/25 09:11:05.32
  STEP: listing in namespace @ 09/02/25 09:11:05.326
  STEP: listing across namespaces @ 09/02/25 09:11:05.333
  STEP: patching @ 09/02/25 09:11:05.339
  STEP: updating @ 09/02/25 09:11:05.348
  I0902 09:11:05.358733 16 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0902 09:11:05.358992 16 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/02/25 09:11:05.359
  STEP: deleting a collection @ 09/02/25 09:11:05.383
  I0902 09:11:05.413446 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4379" for this suite. @ 09/02/25 09:11:05.424
• [0.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/02/25 09:11:05.444
  I0902 09:11:05.444664 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename security-context @ 09/02/25 09:11:05.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:05.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:05.473
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/02/25 09:11:05.48
  E0902 09:11:05.686007      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:06.686313      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:07.686585      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:08.687003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:11:09.524
  I0902 09:11:09.531001 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod security-context-a413e05e-59ae-4c5c-801c-f93869c6d9c5 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:11:09.546
  I0902 09:11:09.586833 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7323" for this suite. @ 09/02/25 09:11:09.597
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/02/25 09:11:09.618
  I0902 09:11:09.618779 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:11:09.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:09.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:09.655
  STEP: creating a replication controller @ 09/02/25 09:11:09.662
  I0902 09:11:09.663130 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 create -f -'
  E0902 09:11:09.687163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:10.057386 16 builder.go:146] stderr: ""
  I0902 09:11:10.058928 16 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/25 09:11:10.059
  I0902 09:11:10.059479 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0902 09:11:10.302096 16 builder.go:146] stderr: ""
  I0902 09:11:10.302223 16 builder.go:147] stdout: "update-demo-nautilus-n9q4z update-demo-nautilus-q2vht "
  I0902 09:11:10.302422 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods update-demo-nautilus-n9q4z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:11:10.544486 16 builder.go:146] stderr: ""
  I0902 09:11:10.544629 16 builder.go:147] stdout: ""
  I0902 09:11:10.544657 16 kubectl.go:2509] update-demo-nautilus-n9q4z is created but not running
  E0902 09:11:10.687386      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:11.687666      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:12.688075      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:13.688761      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:14.689372      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:15.545355 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0902 09:11:15.690687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:15.712279 16 builder.go:146] stderr: ""
  I0902 09:11:15.712372 16 builder.go:147] stdout: "update-demo-nautilus-n9q4z update-demo-nautilus-q2vht "
  I0902 09:11:15.712910 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods update-demo-nautilus-n9q4z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:11:15.903311 16 builder.go:146] stderr: ""
  I0902 09:11:15.903706 16 builder.go:147] stdout: "true"
  I0902 09:11:15.904647 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods update-demo-nautilus-n9q4z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 09:11:16.083661 16 builder.go:146] stderr: ""
  I0902 09:11:16.083754 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:11:16.083782 16 kubectl.go:2400] validating pod update-demo-nautilus-n9q4z
  I0902 09:11:16.107171 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:11:16.107564 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:11:16.107649 16 kubectl.go:2527] update-demo-nautilus-n9q4z is verified up and running
  I0902 09:11:16.107932 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods update-demo-nautilus-q2vht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0902 09:11:16.300232 16 builder.go:146] stderr: ""
  I0902 09:11:16.300335 16 builder.go:147] stdout: "true"
  I0902 09:11:16.300566 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods update-demo-nautilus-q2vht -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0902 09:11:16.475295 16 builder.go:146] stderr: ""
  I0902 09:11:16.475407 16 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0902 09:11:16.475459 16 kubectl.go:2400] validating pod update-demo-nautilus-q2vht
  I0902 09:11:16.495695 16 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0902 09:11:16.496202 16 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0902 09:11:16.496234 16 kubectl.go:2527] update-demo-nautilus-q2vht is verified up and running
  STEP: using delete to clean up resources @ 09/02/25 09:11:16.496
  I0902 09:11:16.496703 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 delete --grace-period=0 --force -f -'
  I0902 09:11:16.683975 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:11:16.684075 16 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0902 09:11:16.684319 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get rc,svc -l name=update-demo --no-headers'
  E0902 09:11:16.691198      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:16.959852 16 builder.go:146] stderr: "No resources found in kubectl-2217 namespace.\n"
  I0902 09:11:16.959938 16 builder.go:147] stdout: ""
  I0902 09:11:16.960633 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-2217 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0902 09:11:17.212047 16 builder.go:146] stderr: ""
  I0902 09:11:17.212131 16 builder.go:147] stdout: ""
  I0902 09:11:17.212551 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2217" for this suite. @ 09/02/25 09:11:17.226
• [7.633 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/02/25 09:11:17.27
  I0902 09:11:17.270545 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:11:17.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:17.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:17.306
  STEP: Counting existing ResourceQuota @ 09/02/25 09:11:17.312
  E0902 09:11:17.691556      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:18.692047      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:19.691977      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:20.692183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:21.692947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 09:11:22.323
  STEP: Ensuring resource quota status is calculated @ 09/02/25 09:11:22.337
  E0902 09:11:22.694411      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:23.694708      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/02/25 09:11:24.36
  STEP: Ensuring resource quota status captures replication controller creation @ 09/02/25 09:11:24.42
  E0902 09:11:24.695872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:25.695913      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/02/25 09:11:26.438
  STEP: Ensuring resource quota status released usage @ 09/02/25 09:11:26.455
  E0902 09:11:26.697481      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:27.697353      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:28.470905 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7537" for this suite. @ 09/02/25 09:11:28.495
• [11.264 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/02/25 09:11:28.519
  I0902 09:11:28.519300 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:11:28.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:28.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:28.551
  STEP: Creating projection with secret that has name secret-emptykey-test-bbc48656-9e5f-46aa-9ba4-aab275b67793 @ 09/02/25 09:11:28.558
  I0902 09:11:28.562626 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-263" for this suite. @ 09/02/25 09:11:28.596
• [0.093 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/02/25 09:11:28.614
  I0902 09:11:28.614700 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename watch @ 09/02/25 09:11:28.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:28.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:28.658
  STEP: creating a watch on configmaps with label A @ 09/02/25 09:11:28.665
  STEP: creating a watch on configmaps with label B @ 09/02/25 09:11:28.672
  STEP: creating a watch on configmaps with label A or B @ 09/02/25 09:11:28.682
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/02/25 09:11:28.688
  E0902 09:11:28.697784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:28.700740 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39313 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 09:11:28.701236 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39313 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/02/25 09:11:28.701
  I0902 09:11:28.722440 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39314 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 09:11:28.722854 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39314 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/02/25 09:11:28.723
  I0902 09:11:28.743896 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39315 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 09:11:28.744126 16 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39315 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/02/25 09:11:28.744
  I0902 09:11:28.761758 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39316 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 09:11:28.762340 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9574  023356af-4d29-460d-8329-2e00149b85ef 39316 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/02/25 09:11:28.762
  I0902 09:11:28.772900 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9574  bd797480-40d6-4486-8fba-080c6db90b8b 39317 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 09:11:28.773375 16 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9574  bd797480-40d6-4486-8fba-080c6db90b8b 39317 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0902 09:11:29.698829      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:30.699233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:31.700168      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:32.700164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:33.700232      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:34.700887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:35.701823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:36.702276      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:37.702795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:38.703214      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/02/25 09:11:38.774
  I0902 09:11:38.789213 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9574  bd797480-40d6-4486-8fba-080c6db90b8b 39349 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0902 09:11:38.789325 16 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9574  bd797480-40d6-4486-8fba-080c6db90b8b 39349 0 2025-09-02 09:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-02 09:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0902 09:11:39.703879      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:40.704367      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:41.704341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:42.704955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:43.704957      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:44.705225      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:45.705673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:46.706634      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:47.706837      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:48.706770      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:48.790456 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9574" for this suite. @ 09/02/25 09:11:48.805
• [20.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/02/25 09:11:48.827
  I0902 09:11:48.827854 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename limitrange @ 09/02/25 09:11:48.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:48.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:48.862
  STEP: Creating a LimitRange @ 09/02/25 09:11:48.869
  STEP: Setting up watch @ 09/02/25 09:11:48.869
  STEP: Submitting a LimitRange @ 09/02/25 09:11:48.979
  STEP: Verifying LimitRange creation was observed @ 09/02/25 09:11:48.996
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/02/25 09:11:48.996
  I0902 09:11:49.003859 16 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0902 09:11:49.004123 16 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/02/25 09:11:49.004
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/02/25 09:11:49.014
  I0902 09:11:49.025973 16 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0902 09:11:49.026070 16 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/02/25 09:11:49.026
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/02/25 09:11:49.041
  I0902 09:11:49.046990 16 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0902 09:11:49.047116 16 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/02/25 09:11:49.047
  STEP: Failing to create a Pod with more than max resources @ 09/02/25 09:11:49.052
  STEP: Updating a LimitRange @ 09/02/25 09:11:49.059
  STEP: Verifying LimitRange updating is effective @ 09/02/25 09:11:49.072
  E0902 09:11:49.707910      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:50.707963      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/02/25 09:11:51.088
  STEP: Failing to create a Pod with more than max resources @ 09/02/25 09:11:51.106
  STEP: Deleting a LimitRange @ 09/02/25 09:11:51.117
  STEP: Verifying the LimitRange was deleted @ 09/02/25 09:11:51.137
  E0902 09:11:51.710034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:52.708937      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:53.709220      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:54.710033      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:55.710991      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:11:56.153688 16 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/02/25 09:11:56.154
  I0902 09:11:56.186417 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9914" for this suite. @ 09/02/25 09:11:56.207
• [7.405 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/02/25 09:11:56.233
  I0902 09:11:56.234009 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:11:56.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:11:56.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:11:56.279
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:11:56.287
  E0902 09:11:56.711287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:57.712154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:58.713290      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:11:59.714071      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:12:00.372
  I0902 09:12:00.379568 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-dcdd1e1c-b2e1-4d19-a8d1-b3efebe567be container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:12:00.394
  I0902 09:12:00.435451 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5102" for this suite. @ 09/02/25 09:12:00.444
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/02/25 09:12:00.46
  I0902 09:12:00.460162 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:12:00.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:12:00.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:12:00.49
  STEP: Creating the pod @ 09/02/25 09:12:00.498
  E0902 09:12:00.714252      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:01.714363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:02.715401      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:03.084387 16 pod_client.go:173] Successfully updated pod "labelsupdate7f9d0399-14da-4647-96b4-f4a29d546255"
  E0902 09:12:03.716076      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:04.716587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:05.116618 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7510" for this suite. @ 09/02/25 09:12:05.127
• [4.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/02/25 09:12:05.142
  I0902 09:12:05.142450 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 09:12:05.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:12:05.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:12:05.172
  STEP: creating a Deployment @ 09/02/25 09:12:05.187
  STEP: waiting for Deployment to be created @ 09/02/25 09:12:05.199
  STEP: waiting for all Replicas to be Ready @ 09/02/25 09:12:05.204
  I0902 09:12:05.207935 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.208020 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.230044 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.230144 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.258563 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.258856 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.329890 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0902 09:12:05.330187 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0902 09:12:05.716754      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:06.671391 16 deployment.go:246] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0902 09:12:06.671635 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0902 09:12:06.717590      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:07.718985      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:08.719451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:08.749857 16 deployment.go:248] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/02/25 09:12:08.749
  I0902 09:12:08.770680 16 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/02/25 09:12:08.77
  I0902 09:12:08.777503 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.777814 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.777865 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.777905 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.777953 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.778014 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.778558 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.778609 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 0
  I0902 09:12:08.778648 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:08.778680 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:08.778720 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.778756 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.779019 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.779407 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.802414 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.802743 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.861496 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.861782 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:08.880097 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:08.880185 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:08.918565 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:08.918638 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  E0902 09:12:09.720355      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:10.720639      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:10.863812 16 deployment.go:309] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:10.863910 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:10.900983 16 deployment.go:311] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  STEP: listing Deployments @ 09/02/25 09:12:10.901
  I0902 09:12:10.908324 16 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/02/25 09:12:10.908
  I0902 09:12:10.950501 16 deployment.go:360] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/02/25 09:12:10.955
  I0902 09:12:10.994615 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:11.000009 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:11.094990 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:11.157607 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:11.194985 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 09:12:11.743631      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:12.732885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:12.754692 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:12.800195 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:12.831830 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:12.846321 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0902 09:12:12.870049 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 09:12:13.732758      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:14.611224 16 deployment.go:389] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/02/25 09:12:14.697
  STEP: fetching the DeploymentStatus @ 09/02/25 09:12:14.715
  I0902 09:12:14.731578 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:14.731829 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:14.732126 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  E0902 09:12:14.733008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:12:14.732828 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:14.733560 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 1
  I0902 09:12:14.733656 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:14.734221 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:14.734969 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:14.735555 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:14.735652 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 2
  I0902 09:12:14.736271 16 deployment.go:449] observed Deployment test-deployment in namespace deployment-5155 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/02/25 09:12:14.737
  I0902 09:12:14.792009 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.793203 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.793275 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.794497 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.794576 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.795411 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.796826 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.797605 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.798238 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.798710 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.799619 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.800122 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.800719 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.801011 16 deployment.go:475] observed event type MODIFIED
  I0902 09:12:14.810412 16 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0902 09:12:14.828149 16 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5155",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8d8b239-326e-41fc-8062-07abff057654",
      ResourceVersion: (string) (len=5) "39604",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "871b206b-dd8a-4b36-b99f-e3f8a422822b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 37 31 62  32 30 36 62 2d 64 64 38  |":\"871b206b-dd8|
              00000130  61 2d 34 62 33 36 2d 62  39 39 66 2d 65 33 66 38  |a-4b36-b99f-e3f8|
              00000140  61 34 32 32 38 32 32 62  5c 22 7d 22 3a 7b 7d 7d  |a422822b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0902 09:12:14.850496 16 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5155",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "444d5d20-6431-4d5b-974c-cf7671063b42",
      ResourceVersion: (string) (len=5) "39683",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "871b206b-dd8a-4b36-b99f-e3f8a422822b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 37 31 62  32 30 36 62 2d 64 64 38  |":\"871b206b-dd8|
              00000130  61 2d 34 62 33 36 2d 62  39 39 66 2d 65 33 66 38  |a-4b36-b99f-e3f8|
              00000140  61 34 32 32 38 32 32 62  5c 22 7d 22 3a 7b 7d 7d  |a422822b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0902 09:12:14.894948 16 deployment.go:669] pod: "test-deployment-79899bcfcc-m2692":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-m2692",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5155",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87dbe20b-bd26-418f-98c2-0189f696292f",
      ResourceVersion: (string) (len=5) "39682",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "444d5d20-6431-4d5b-974c-cf7671063b42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 34 34 64 35 64 32 30  |uid\":\"444d5d20|
              000000a0  2d 36 34 33 31 2d 34 64  35 62 2d 39 37 34 63 2d  |-6431-4d5b-974c-|
              000000b0  63 66 37 36 37 31 30 36  33 62 34 32 5c 22 7d 22  |cf7671063b42\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 33 34 5c 22 7d 22 3a  |.233.64.234\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9r5zv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9r5zv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.22",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.22"
        }
      },
      PodIP: (string) (len=13) "10.233.64.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892401133,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://6eeb81cc726ed68dd44899a7247b9fcb0877087410d557eda322c58a6c690e0e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9r5zv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0902 09:12:14.902307 16 deployment.go:669] pod: "test-deployment-79899bcfcc-qx822":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-qx822",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5155",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6b40dcd-2c3d-4664-9e59-0f0bb10e7823",
      ResourceVersion: (string) (len=5) "39646",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "444d5d20-6431-4d5b-974c-cf7671063b42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 34 34 64 35 64 32 30  |uid\":\"444d5d20|
              000000a0  2d 36 34 33 31 2d 34 64  35 62 2d 39 37 34 63 2d  |-6431-4d5b-974c-|
              000000b0  63 66 37 36 37 31 30 36  33 62 34 32 5c 22 7d 22  |cf7671063b42\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 32 5c 22 7d 22 3a 7b  |.233.66.22\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mxhx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mxhx9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=12) "10.233.66.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892401132,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b865b9e5e87741e4d168e9d4e382b2914d57d5af3ba93919fd76f087de44ff88",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mxhx9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0902 09:12:14.909151 16 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5155",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1e9ca89-0483-4b42-9ba4-49626eedbd17",
      ResourceVersion: (string) (len=5) "39692",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401128,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "871b206b-dd8a-4b36-b99f-e3f8a422822b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 37 31 62  32 30 36 62 2d 64 64 38  |":\"871b206b-dd8|
              00000130  61 2d 34 62 33 36 2d 62  39 39 66 2d 65 33 66 38  |a-4b36-b99f-e3f8|
              00000140  61 34 32 32 38 32 32 62  5c 22 7d 22 3a 7b 7d 7d  |a422822b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0902 09:12:14.932173 16 deployment.go:669] pod: "test-deployment-f78d658f9-mq9sn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-mq9sn",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-5155",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1027df8-d2c7-4750-adb2-7f462a207bc2",
      ResourceVersion: (string) (len=5) "39686",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401128,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "b1e9ca89-0483-4b42-9ba4-49626eedbd17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 31 65 39 63 61 38 39  |uid\":\"b1e9ca89|
              000000a0  2d 30 34 38 33 2d 34 62  34 32 2d 39 62 61 34 2d  |-0483-4b42-9ba4-|
              000000b0  34 39 36 32 36 65 65 64  62 64 31 37 5c 22 7d 22  |49626eedbd17\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 38 37 5c 22 7d 22 3a  |.233.66.187\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4lqn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4lqn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=13) "10.233.66.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401128,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892401129,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7c38f24774e3cbd906d2d33c38354ccf787635581c122965132c9bd309754d4a",
          ContainerID: (string) (len=72) "cri-o://86e174555b057419380fb97b37736c55d10974b3666340badd342341293424be",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z4lqn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0902 09:12:14.938174 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5155" for this suite. @ 09/02/25 09:12:14.964
• [9.850 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/02/25 09:12:14.998
  I0902 09:12:14.998917 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename cronjob @ 09/02/25 09:12:15.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:12:15.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:12:15.055
  STEP: Creating a ForbidConcurrent cronjob @ 09/02/25 09:12:15.062
  STEP: Ensuring a job is scheduled @ 09/02/25 09:12:15.077
  E0902 09:12:15.736405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:16.736708      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:17.737001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:18.737367      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:19.737856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:20.739100      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:21.739246      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:22.739750      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:23.739806      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:24.740203      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:25.740698      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:26.741358      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:27.741872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:28.742841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:29.743103      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:30.743996      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:31.745077      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:32.745854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:33.746756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:34.748188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:35.749666      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:36.749630      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:37.749914      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:38.750909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:39.751042      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:40.751265      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:41.751605      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:42.752183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:43.753332      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:44.753858      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:45.753883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:46.754479      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:47.754696      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:48.754912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:49.755699      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:50.756484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:51.756678      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:52.757214      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:53.757396      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:54.758024      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:55.758244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:56.758739      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:57.759242      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:58.759377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:12:59.762139      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:00.762948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/02/25 09:13:01.088
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/02/25 09:13:01.095
  STEP: Ensuring no more jobs are scheduled @ 09/02/25 09:13:01.108
  STEP: Removing cronjob @ 09/02/25 09:13:01.116
  I0902 09:13:01.128235 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8118" for this suite. @ 09/02/25 09:13:01.141
• [46.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/02/25 09:13:01.163
  I0902 09:13:01.163843 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 09:13:01.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:01.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:01.231
  I0902 09:13:01.331205 16 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"9b131c29-796c-4fb5-a1ca-4531cd66c338", Controller:(*bool)(0xc0031629c6), BlockOwnerDeletion:(*bool)(0xc0031629c7)}}
  I0902 09:13:01.354242 16 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"49758631-ef2d-4533-bc28-12ef901776cf", Controller:(*bool)(0xc003162c8e), BlockOwnerDeletion:(*bool)(0xc003162c8f)}}
  I0902 09:13:01.388664 16 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"02d29dc1-70dd-4eec-8f68-45c08a96317f", Controller:(*bool)(0xc003162f46), BlockOwnerDeletion:(*bool)(0xc003162f47)}}
  E0902 09:13:01.763892      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:02.763818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:03.764026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:04.766009      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:05.766399      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:06.418778 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8440" for this suite. @ 09/02/25 09:13:06.427
• [5.279 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/02/25 09:13:06.444
  I0902 09:13:06.444496 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename apf @ 09/02/25 09:13:06.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:06.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:06.481
  STEP: getting /apis @ 09/02/25 09:13:06.487
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/02/25 09:13:06.501
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/02/25 09:13:06.504
  STEP: creating @ 09/02/25 09:13:06.506
  STEP: getting @ 09/02/25 09:13:06.538
  STEP: listing @ 09/02/25 09:13:06.545
  STEP: watching @ 09/02/25 09:13:06.552
  I0902 09:13:06.552802 16 flowcontrol.go:620] starting watch
  STEP: patching @ 09/02/25 09:13:06.557
  STEP: updating @ 09/02/25 09:13:06.569
  I0902 09:13:06.591211 16 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/02/25 09:13:06.591
  STEP: patching /status @ 09/02/25 09:13:06.602
  STEP: updating /status @ 09/02/25 09:13:06.615
  STEP: deleting @ 09/02/25 09:13:06.638
  STEP: deleting a collection @ 09/02/25 09:13:06.663
  I0902 09:13:06.703149 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7069" for this suite. @ 09/02/25 09:13:06.713
• [0.283 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/02/25 09:13:06.728
  I0902 09:13:06.728356 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sysctl @ 09/02/25 09:13:06.732
  E0902 09:13:06.767598      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:06.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:06.778
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/02/25 09:13:06.784
  STEP: Watching for error events or started pod @ 09/02/25 09:13:06.81
  E0902 09:13:07.767809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:08.768123      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/02/25 09:13:08.822
  E0902 09:13:09.768793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:10.769232      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/02/25 09:13:10.843
  STEP: Getting logs from the pod @ 09/02/25 09:13:10.843
  STEP: Checking that the sysctl is actually updated @ 09/02/25 09:13:10.857
  I0902 09:13:10.857682 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5151" for this suite. @ 09/02/25 09:13:10.87
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/02/25 09:13:10.884
  I0902 09:13:10.884182 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:13:10.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:10.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:10.917
  STEP: creating all guestbook components @ 09/02/25 09:13:10.923
  I0902 09:13:10.924121 16 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0902 09:13:10.924628 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 create -f -'
  I0902 09:13:11.336104 16 builder.go:146] stderr: ""
  I0902 09:13:11.336246 16 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0902 09:13:11.336408 16 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0902 09:13:11.337194 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 create -f -'
  E0902 09:13:11.771000      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:11.781654 16 builder.go:146] stderr: ""
  I0902 09:13:11.781820 16 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0902 09:13:11.781926 16 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0902 09:13:11.782512 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 create -f -'
  I0902 09:13:12.166986 16 builder.go:146] stderr: ""
  I0902 09:13:12.167175 16 builder.go:147] stdout: "service/frontend created\n"
  I0902 09:13:12.167796 16 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0902 09:13:12.168450 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 create -f -'
  I0902 09:13:12.482315 16 builder.go:146] stderr: ""
  I0902 09:13:12.482401 16 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0902 09:13:12.482603 16 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0902 09:13:12.483250 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 create -f -'
  E0902 09:13:12.770234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:12.820215 16 builder.go:146] stderr: ""
  I0902 09:13:12.820503 16 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0902 09:13:12.820792 16 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0902 09:13:12.821405 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 create -f -'
  I0902 09:13:13.504259 16 builder.go:146] stderr: ""
  I0902 09:13:13.504402 16 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/02/25 09:13:13.504
  I0902 09:13:13.504842 16 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0902 09:13:13.771581      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:14.771668      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:15.772457      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:16.773432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:17.773026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:18.618157 16 kubectl.go:2283] Waiting for frontend to serve content.
  I0902 09:13:18.645292 16 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0902 09:13:18.667962 16 kubectl.go:2293] Verifying that added entry can be retrieved.
  I0902 09:13:18.695854 16 kubectl.go:2306] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0902 09:13:18.773507      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:19.774172      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:20.774895      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:21.775360      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:22.775416      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 09/02/25 09:13:23.72
  I0902 09:13:23.721443 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 delete --grace-period=0 --force -f -'
  E0902 09:13:23.776626      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:23.966763 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:13:23.966852 16 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 09:13:23.966
  I0902 09:13:23.967627 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 delete --grace-period=0 --force -f -'
  I0902 09:13:24.183585 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:13:24.183770 16 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 09:13:24.183
  I0902 09:13:24.184498 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 delete --grace-period=0 --force -f -'
  I0902 09:13:24.411923 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:13:24.413137 16 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 09:13:24.413
  I0902 09:13:24.414015 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 delete --grace-period=0 --force -f -'
  I0902 09:13:24.584604 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:13:24.584729 16 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 09:13:24.584
  I0902 09:13:24.585362 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 delete --grace-period=0 --force -f -'
  E0902 09:13:24.779492      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:24.818736 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:13:24.819400 16 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/25 09:13:24.819
  I0902 09:13:24.820870 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-609 delete --grace-period=0 --force -f -'
  I0902 09:13:25.254242 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:13:25.254391 16 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0902 09:13:25.255243 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-609" for this suite. @ 09/02/25 09:13:25.271
• [14.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/02/25 09:13:25.292
  I0902 09:13:25.293012 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 09:13:25.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:25.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:25.379
  STEP: Read namespace status @ 09/02/25 09:13:25.388
  I0902 09:13:25.400470 16 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/02/25 09:13:25.4
  I0902 09:13:25.412784 16 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/02/25 09:13:25.412
  I0902 09:13:25.438409 16 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0902 09:13:25.438743 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-360" for this suite. @ 09/02/25 09:13:25.458
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/02/25 09:13:25.497
  I0902 09:13:25.497055 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:13:25.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:25.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:25.622
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/02/25 09:13:25.629
  E0902 09:13:25.777815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:26.777975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:27.778671      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:28.778969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:13:29.699
  I0902 09:13:29.706801 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-5cfa3884-5868-4a0c-bd26-bc2b6949721a container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:13:29.721
  I0902 09:13:29.758412 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2098" for this suite. @ 09/02/25 09:13:29.768
  E0902 09:13:29.779584      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/02/25 09:13:29.785
  I0902 09:13:29.785162 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:13:29.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:29.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:29.861
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:13:29.868
  E0902 09:13:30.780164      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:31.780425      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:32.780658      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:33.780841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:13:33.918
  I0902 09:13:33.926335 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-9b0be262-7367-45a2-b2c4-4b79524fcd6d container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:13:33.943
  I0902 09:13:33.979287 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1707" for this suite. @ 09/02/25 09:13:33.991
• [4.222 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/02/25 09:13:34.006
  I0902 09:13:34.006997 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:13:34.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:34.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:34.04
  STEP: Creating the pod @ 09/02/25 09:13:34.047
  E0902 09:13:34.780997      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:35.781690      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:36.638510 16 pod_client.go:173] Successfully updated pod "annotationupdate868ac7e4-13e7-4ac0-88be-59e0a8d73c3b"
  E0902 09:13:36.782716      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:37.782976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:13:38.672048 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-993" for this suite. @ 09/02/25 09:13:38.679
• [4.685 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/02/25 09:13:38.694
  I0902 09:13:38.694857 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:13:38.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:13:38.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:13:38.729
  E0902 09:13:38.782955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:39.783798      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:40.784090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:41.784600      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:42.785625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:43.785011      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:44.785782      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:45.786484      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:46.786788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:47.787723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:48.787502      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:49.788773      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:50.789040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:51.791685      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:52.791759      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:53.791878      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:54.791998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:55.793873      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:56.794649      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:57.794925      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:58.795241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:13:59.795955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:00.796216      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:01.796329      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:02.796690      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:03.796739      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:04.796894      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:05.797612      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:06.797512      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:07.797901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:08.798488      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:09.799485      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:10.799903      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:11.800168      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:12.800603      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:13.801121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:14.801321      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:15.802207      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:16.803770      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:17.804726      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:18.804828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:19.805384      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:20.806438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:21.807469      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:22.807778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:23.807855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:24.810767      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:25.808980      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:26.809212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:27.810347      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:28.810793      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:29.810738      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:30.811350      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:31.814147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:32.812278      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:33.813974      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:34.814027      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:35.815599      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:36.814936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:37.815675      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:14:38.759813 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6130" for this suite. @ 09/02/25 09:14:38.772
• [60.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/02/25 09:14:38.792
  I0902 09:14:38.792238 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:14:38.796
  E0902 09:14:38.815876      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:14:38.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:14:38.833
  STEP: Creating configMap with name configmap-test-upd-2113170b-039e-48ac-90aa-c7b382ada292 @ 09/02/25 09:14:38.871
  STEP: Creating the pod @ 09/02/25 09:14:38.881
  E0902 09:14:39.816405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:40.817250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/02/25 09:14:40.927
  STEP: Waiting for pod with binary data @ 09/02/25 09:14:40.965
  I0902 09:14:40.991908 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7157" for this suite. @ 09/02/25 09:14:41.006
• [2.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/02/25 09:14:41.033
  I0902 09:14:41.035129 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename prestop @ 09/02/25 09:14:41.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:14:41.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:14:41.09
  STEP: Creating server pod server in namespace prestop-4152 @ 09/02/25 09:14:41.1
  STEP: Waiting for pods to come up. @ 09/02/25 09:14:41.125
  E0902 09:14:41.817661      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:42.817989      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4152 @ 09/02/25 09:14:43.165
  E0902 09:14:43.819589      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:44.820406      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/02/25 09:14:45.222
  E0902 09:14:45.821469      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:46.826700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:47.822896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:48.823423      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:49.823773      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:14:50.264265 16 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/02/25 09:14:50.264
  I0902 09:14:50.300655 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4152" for this suite. @ 09/02/25 09:14:50.315
• [9.300 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/02/25 09:14:50.336
  I0902 09:14:50.336126 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:14:50.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:14:50.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:14:50.407
  STEP: Creating pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009 @ 09/02/25 09:14:50.42
  E0902 09:14:50.823998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:51.824309      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:14:52.463
  I0902 09:14:52.468964 16 container_probe.go:1749] Initial restart count of pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 is 0
  I0902 09:14:52.475629 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:14:52.824847      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:53.824672      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:14:54.483984 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:14:54.824889      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:55.825188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:14:56.492292 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:14:56.825661      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:57.825748      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:14:58.504990 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:14:58.826656      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:14:59.827030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:00.514484 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:00.827402      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:01.828272      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:02.530593 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:02.828685      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:03.828823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:04.542056 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:04.829712      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:05.830159      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:06.551776 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:06.831432      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:07.832121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:08.562950 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:08.832259      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:09.833082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:10.576903 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:10.833363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:11.847769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:12.590179 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:12.847855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:13.848927      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:14.617890 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:14.852665      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:15.853287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:16.629244 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:16.854342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:17.855768      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:18.642380 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:18.856791      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:19.858106      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:20.656363 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:20.858230      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:21.861144      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:22.668513 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:22.860034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:23.860688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:24.679840 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:24.861870      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:25.861877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:26.689434 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:26.862460      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:27.862923      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:28.703703 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:28.863455      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:29.863823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:30.715187 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:30.865255      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:31.865579      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:32.731645 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:32.866846      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:33.867399      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:34.748875 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:34.868721      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:35.868478      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:36.764442 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:36.869505      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:37.870624      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:38.780208 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:38.871939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:39.871554      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:40.792765 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:40.872107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:41.873106      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:42.806186 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:42.873366      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:43.874279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:44.823142 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:44.874635      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:45.874865      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:46.837071 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:46.875902      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:47.875950      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:48.858293 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:48.876742      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:49.877695      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:50.874640 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:50.878602      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:51.888100      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:52.888155      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:52.888183 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:53.888310      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:54.889165      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:54.905335 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:55.889786      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:56.889821      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:56.918237 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:57.890020      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:15:58.890825      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:15:58.933456 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:15:59.892045      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:00.892930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:00.947996 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:01.893287      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:02.894071      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:02.956476 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:03.894465      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:04.895359      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:04.968460 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:05.895623      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:06.895924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:07.016665 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:07.896459      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:08.896749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:09.028971 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:09.896976      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:10.897673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:11.039398 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:11.898097      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:12.898856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:13.054222 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:13.899260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:14.899783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:15.063558 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:15.900612      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:16.901204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:17.076233 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:17.902141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:18.902207      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:19.085484 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:19.903023      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:20.904020      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:21.101419 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:21.904082      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:22.904912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:23.108623 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:23.905258      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:24.905486      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:25.123067 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:25.905583      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:26.905808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:27.132896 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:27.906684      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:28.907214      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:29.145726 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:29.907711      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:30.908342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:31.154753 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:31.909212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:32.909418      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:33.168599 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:33.910163      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:34.911266      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:35.178255 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:35.912303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:36.913322      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:37.193238 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:37.913310      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:38.913900      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:39.202634 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:39.913839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:40.915117      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:41.218119 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:41.915125      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:42.915796      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:43.227356 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:43.915931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:44.916167      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:45.240805 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:45.916153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:46.916304      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:47.250611 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:47.917333      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:48.917831      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:49.261191 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:49.918627      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:50.919304      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:51.269046 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:51.919921      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:52.920074      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:53.282915 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:53.920241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:54.920507      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:55.295994 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:55.921615      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:56.922385      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:57.309898 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:57.923139      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:16:58.923961      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:16:59.318025 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:16:59.924918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:00.925222      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:01.336149 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:01.925352      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:02.925472      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:03.351500 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:03.925837      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:04.925949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:05.359022 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:05.926210      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:06.926274      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:07.377193 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:07.926875      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:08.927687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:09.398951 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:09.928122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:10.928422      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:11.408979 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:11.928813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:12.929511      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:13.418224 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:13.929918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:14.929949      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:15.427748 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:15.931018      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:16.931276      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:17.440281 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:17.931707      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:18.932085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:19.450366 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:19.932216      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:20.932910      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:21.464707 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:21.933486      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:22.933931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:23.473437 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:23.934828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:24.934756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:25.485397 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:25.934877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:26.935045      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:27.494723 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:27.936151      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:28.935780      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:29.514782 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:29.936073      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:30.936341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:31.524463 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:31.937417      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:32.937816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:33.543519 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:33.939909      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:34.940169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:35.554178 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:35.940800      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:36.940804      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:37.582931 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:37.941854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:38.942094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:39.595895 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:39.942360      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:40.943151      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:41.607869 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:41.943461      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:42.944205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:43.621131 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:43.944708      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:44.945194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:45.632981 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:45.946154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:46.947025      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:47.643275 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:47.947924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:48.948488      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:49.660030 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:49.949476      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:50.949670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:51.670059 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:51.950503      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:52.951480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:53.684714 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:53.951125      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:54.951633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:55.695105 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:55.952021      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:56.952926      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:57.707431 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:57.953339      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:17:58.953286      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:17:59.719134 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:17:59.954455      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:00.956028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:01.733259 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:01.956053      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:02.956773      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:03.743776 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:03.957212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:04.957706      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:05.757189 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:05.957598      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:06.958197      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:07.766240 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:07.958418      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:08.958997      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:09.782952 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:09.960231      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:10.961070      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:11.808601 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:11.961898      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:12.962171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:13.824647 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:13.963785      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:14.964263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:15.881562 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:15.964637      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:16.964960      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:17.901194 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:17.965572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:18.966129      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:19.915023 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:19.966709      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:20.967190      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:21.928402 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:21.967668      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:22.968162      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:23.942229 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:23.968996      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:24.969264      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:25.958105 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:25.970809      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:26.970971      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:27.969997 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:27.970936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:28.971350      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:29.971738      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:29.985396 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:30.972137      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:31.972886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:31.994773 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:32.973314      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:33.973771      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:34.007797 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:34.974979      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:35.975351      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:36.021224 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:36.975670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:37.976270      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:38.030029 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:38.976352      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:39.976695      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:40.039374 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:40.976929      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:41.977188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:42.053136 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:42.977370      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:43.978638      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:44.070085 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:44.978861      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:45.979157      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:46.084334 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:46.980808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:47.981175      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:48.098296 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:48.981277      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:49.981803      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:50.114654 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:50.981993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:51.982907      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:52.127667 16 container_probe.go:1759] Get pod test-grpc-502e86d1-d88a-40b3-b467-ae8fbeae70d4 in namespace container-probe-3009
  E0902 09:18:52.983254      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:53.984158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/02/25 09:18:54.129
  I0902 09:18:54.197095 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3009" for this suite. @ 09/02/25 09:18:54.215
• [243.894 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/02/25 09:18:54.231
  I0902 09:18:54.231611 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename events @ 09/02/25 09:18:54.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:18:54.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:18:54.268
  STEP: creating a test event @ 09/02/25 09:18:54.277
  STEP: listing events in all namespaces @ 09/02/25 09:18:54.297
  STEP: listing events in test namespace @ 09/02/25 09:18:54.306
  STEP: listing events with field selection filtering on source @ 09/02/25 09:18:54.325
  STEP: listing events with field selection filtering on reportingController @ 09/02/25 09:18:54.334
  STEP: getting the test event @ 09/02/25 09:18:54.341
  STEP: patching the test event @ 09/02/25 09:18:54.35
  STEP: getting the test event @ 09/02/25 09:18:54.375
  STEP: updating the test event @ 09/02/25 09:18:54.384
  STEP: getting the test event @ 09/02/25 09:18:54.397
  STEP: deleting the test event @ 09/02/25 09:18:54.404
  STEP: listing events in all namespaces @ 09/02/25 09:18:54.42
  STEP: listing events in test namespace @ 09/02/25 09:18:54.428
  I0902 09:18:54.438704 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-899" for this suite. @ 09/02/25 09:18:54.451
• [0.234 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 09/02/25 09:18:54.465
  I0902 09:18:54.465998 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:18:54.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:18:54.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:18:54.508
  STEP: creating Agnhost RC @ 09/02/25 09:18:54.514
  I0902 09:18:54.514166 16 kubectl.go:1544] namespace kubectl-6794
  I0902 09:18:54.514844 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6794 create -f -'
  I0902 09:18:54.977121 16 builder.go:146] stderr: ""
  I0902 09:18:54.977225 16 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/25 09:18:54.977
  E0902 09:18:54.984472      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:55.985071      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:55.988840 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 09:18:55.988936 16 framework.go:733] Found 0 / 1
  E0902 09:18:56.985188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:18:56.992145 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 09:18:56.992254 16 framework.go:733] Found 1 / 1
  I0902 09:18:56.992387 16 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0902 09:18:57.001815 16 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0902 09:18:57.001927 16 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0902 09:18:57.001957 16 kubectl.go:1551] wait on agnhost-primary startup in kubectl-6794 
  I0902 09:18:57.002676 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6794 logs agnhost-primary-rhdmb agnhost-primary'
  I0902 09:18:57.279056 16 builder.go:146] stderr: ""
  I0902 09:18:57.279218 16 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/02/25 09:18:57.279
  I0902 09:18:57.279906 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6794 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0902 09:18:57.531495 16 builder.go:146] stderr: ""
  I0902 09:18:57.531642 16 builder.go:147] stdout: "service/rm2 exposed\n"
  I0902 09:18:57.543726 16 utils.go:1203] Service rm2 in namespace kubectl-6794 found.
  E0902 09:18:57.985396      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:18:58.986876      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/02/25 09:18:59.56
  I0902 09:18:59.560669 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-6794 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0902 09:18:59.804740 16 builder.go:146] stderr: ""
  I0902 09:18:59.804813 16 builder.go:147] stdout: "service/rm3 exposed\n"
  I0902 09:18:59.818261 16 utils.go:1203] Service rm3 in namespace kubectl-6794 found.
  E0902 09:18:59.988282      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:00.988188      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:01.841720 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6794" for this suite. @ 09/02/25 09:19:01.855
• [7.407 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/02/25 09:19:01.873
  I0902 09:19:01.873229 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:19:01.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:01.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:01.921
  STEP: Creating a pod to test downward api env vars @ 09/02/25 09:19:01.931
  E0902 09:19:01.990565      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:02.988916      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:03.989336      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:04.990114      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:19:05.986
  E0902 09:19:05.991122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:05.994137 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downward-api-e54dfbe0-67d8-415a-804e-d991bc05d3c3 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 09:19:06.017
  I0902 09:19:06.052983 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-478" for this suite. @ 09/02/25 09:19:06.066
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/02/25 09:19:06.082
  I0902 09:19:06.083064 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:19:06.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:06.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:06.125
  STEP: Creating a pod to test downward API volume plugin @ 09/02/25 09:19:06.133
  E0902 09:19:06.992112      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:07.992041      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:08.992318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:09.993852      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:19:10.191
  I0902 09:19:10.203383 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downwardapi-volume-8591ea72-d847-4221-a3c7-e1f8df9c5186 container client-container: <nil>
  STEP: delete the pod @ 09/02/25 09:19:10.224
  I0902 09:19:10.276877 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7927" for this suite. @ 09/02/25 09:19:10.288
• [4.221 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/02/25 09:19:10.304
  I0902 09:19:10.304464 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:19:10.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:10.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:10.346
  STEP: Creating configMap configmap-1041/configmap-test-b7e9708d-f16c-4270-ac2c-755f8038ca4a @ 09/02/25 09:19:10.352
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:19:10.363
  E0902 09:19:10.993816      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:11.994133      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:12.994291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:13.995815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:19:14.419
  I0902 09:19:14.430882 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-1e9e1ea6-f6a8-443f-814d-7bc81340c954 container env-test: <nil>
  STEP: delete the pod @ 09/02/25 09:19:14.464
  I0902 09:19:14.508293 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1041" for this suite. @ 09/02/25 09:19:14.526
• [4.246 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/02/25 09:19:14.552
  I0902 09:19:14.553077 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 09:19:14.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:14.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:14.599
  STEP: Create a ReplicaSet @ 09/02/25 09:19:14.604
  STEP: Verify that the required pods have come up @ 09/02/25 09:19:14.618
  I0902 09:19:14.626869 16 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0902 09:19:14.995502      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:15.996261      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:16.997602      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:17.997092      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:18.997464      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:19.644949 16 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/02/25 09:19:19.645
  I0902 09:19:19.654769 16 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/02/25 09:19:19.654
  STEP: DeleteCollection of the ReplicaSets @ 09/02/25 09:19:19.667
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/02/25 09:19:19.691
  I0902 09:19:19.769715 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1085" for this suite. @ 09/02/25 09:19:19.791
• [5.260 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 09/02/25 09:19:19.814
  I0902 09:19:19.815226 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:19:19.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:19.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:19.911
  I0902 09:19:19.922669 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-3504 version'
  E0902 09:19:19.997899      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:20.155162 16 builder.go:146] stderr: ""
  I0902 09:19:20.155597 16 builder.go:147] stdout: "Client Version: v1.32.8\nKustomize Version: v5.5.0\nServer Version: v1.32.8\n"
  I0902 09:19:20.156209 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3504" for this suite. @ 09/02/25 09:19:20.178
• [0.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/02/25 09:19:20.221
  I0902 09:19:20.221562 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:19:20.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:20.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:20.27
  STEP: Setting up server cert @ 09/02/25 09:19:20.347
  E0902 09:19:20.998905      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:19:21.122
  STEP: Deploying the webhook pod @ 09/02/25 09:19:21.157
  STEP: Wait for the deployment to be ready @ 09/02/25 09:19:21.204
  I0902 09:19:21.227852 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:19:22.001750      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:23.000922      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:23.257365 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 19, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:19:24.001026      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:25.001311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:19:25.267
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:19:25.294
  E0902 09:19:26.001462      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:26.295127 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/02/25 09:19:26.321
  I0902 09:19:26.446673 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1057" for this suite. @ 09/02/25 09:19:26.459
  STEP: Destroying namespace "webhook-markers-3013" for this suite. @ 09/02/25 09:19:26.483
• [6.282 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/02/25 09:19:26.507
  I0902 09:19:26.507669 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:19:26.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:26.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:26.545
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/02/25 09:19:26.551
  E0902 09:19:27.001781      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:28.002121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:29.002371      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:30.002632      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:19:30.604
  I0902 09:19:30.615166 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-8fc981a7-7782-4cd6-b5f4-3ef522e8344e container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:19:30.639
  I0902 09:19:30.694102 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7811" for this suite. @ 09/02/25 09:19:30.707
• [4.221 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 09/02/25 09:19:30.739
  I0902 09:19:30.740206 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 09:19:30.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:30.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:30.79
  STEP: Creating a job @ 09/02/25 09:19:30.798
  STEP: Ensuring active pods == parallelism @ 09/02/25 09:19:30.816
  E0902 09:19:31.003454      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:32.004234      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/02/25 09:19:32.834
  STEP: deleting Job.batch foo in namespace job-2489, will wait for the garbage collector to delete the pods @ 09/02/25 09:19:32.834
  I0902 09:19:32.904974 16 resources.go:139] Deleting Job.batch foo took: 12.357212ms
  E0902 09:19:33.004172      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:33.006202 16 resources.go:163] Terminating Job.batch foo pods took: 101.213385ms
  E0902 09:19:34.005120      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/02/25 09:19:34.707
  I0902 09:19:34.721855 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2489" for this suite. @ 09/02/25 09:19:34.742
• [4.029 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/02/25 09:19:34.769
  I0902 09:19:34.769312 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:19:34.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:34.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:34.821
  STEP: Discovering how many secrets are in namespace by default @ 09/02/25 09:19:34.83
  E0902 09:19:35.005815      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:36.005995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:37.006559      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:38.007721      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:39.007778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/02/25 09:19:39.869
  E0902 09:19:40.008340      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:41.009062      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:42.009896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:43.010768      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:44.010856      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 09:19:44.886
  STEP: Ensuring resource quota status is calculated @ 09/02/25 09:19:44.899
  E0902 09:19:45.011746      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:46.013022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/02/25 09:19:46.909
  STEP: Ensuring resource quota status captures secret creation @ 09/02/25 09:19:46.939
  E0902 09:19:47.013605      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:48.014769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/02/25 09:19:48.951
  STEP: Ensuring resource quota status released usage @ 09/02/25 09:19:48.971
  E0902 09:19:49.015354      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:50.016001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:50.985765 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8860" for this suite. @ 09/02/25 09:19:51.007
  E0902 09:19:51.016260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [16.263 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/02/25 09:19:51.032
  I0902 09:19:51.032939 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:19:51.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:51.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:51.086
  STEP: Setting up server cert @ 09/02/25 09:19:51.129
  E0902 09:19:52.017700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:19:52.424
  STEP: Deploying the webhook pod @ 09/02/25 09:19:52.438
  STEP: Wait for the deployment to be ready @ 09/02/25 09:19:52.471
  I0902 09:19:52.495267 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:19:53.025141      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:54.018912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:19:54.542
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:19:54.573
  E0902 09:19:55.018926      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:19:55.573412 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/02/25 09:19:55.62
  STEP: create a namespace for the webhook @ 09/02/25 09:19:55.675
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/02/25 09:19:55.714
  I0902 09:19:55.967742 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-635" for this suite. @ 09/02/25 09:19:55.984
  STEP: Destroying namespace "webhook-markers-2450" for this suite. @ 09/02/25 09:19:56
  STEP: Destroying namespace "fail-closed-namespace-1040" for this suite. @ 09/02/25 09:19:56.015
  E0902 09:19:56.019253      16 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/02/25 09:19:56.031
  I0902 09:19:56.031504 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/25 09:19:56.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:56.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:56.087
  I0902 09:19:56.092853 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  I0902 09:19:56.704678 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7942" for this suite. @ 09/02/25 09:19:56.716
• [0.697 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/02/25 09:19:56.735
  I0902 09:19:56.735456 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:19:56.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:19:56.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:19:56.798
  STEP: Creating configMap with name cm-test-opt-del-e86ee044-e7f8-4207-9494-c44d3056e9a1 @ 09/02/25 09:19:56.816
  STEP: Creating configMap with name cm-test-opt-upd-6d1d3cd3-951f-49d8-9944-1e93c28b9ca3 @ 09/02/25 09:19:56.828
  STEP: Creating the pod @ 09/02/25 09:19:56.84
  E0902 09:19:57.020498      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:19:58.023285      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-e86ee044-e7f8-4207-9494-c44d3056e9a1 @ 09/02/25 09:19:58.932
  STEP: Updating configmap cm-test-opt-upd-6d1d3cd3-951f-49d8-9944-1e93c28b9ca3 @ 09/02/25 09:19:58.965
  STEP: Creating configMap with name cm-test-opt-create-00e902ce-540b-4ae0-aae8-f8e2d3364af4 @ 09/02/25 09:19:58.975
  STEP: waiting to observe update in volume @ 09/02/25 09:19:59.017
  E0902 09:19:59.024229      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:00.025235      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:01.025919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:01.098880 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9368" for this suite. @ 09/02/25 09:20:01.111
• [4.394 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/02/25 09:20:01.128
  I0902 09:20:01.128637 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 09:20:01.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:20:01.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:20:01.169
  STEP: Creating replication controller my-hostname-basic-e7d6fd52-afb9-4787-b95c-d108416d9c22 @ 09/02/25 09:20:01.179
  I0902 09:20:01.202590 16 resource.go:87] Pod name my-hostname-basic-e7d6fd52-afb9-4787-b95c-d108416d9c22: Found 0 pods out of 1
  E0902 09:20:02.026992      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:03.027192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:04.028153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:05.028929      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:06.029260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:06.222883 16 resource.go:87] Pod name my-hostname-basic-e7d6fd52-afb9-4787-b95c-d108416d9c22: Found 1 pods out of 1
  I0902 09:20:06.223027 16 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-e7d6fd52-afb9-4787-b95c-d108416d9c22" are running
  I0902 09:20:06.233342 16 rc.go:523] Pod "my-hostname-basic-e7d6fd52-afb9-4787-b95c-d108416d9c22-hvnw2" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:02 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:01 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:01 +0000 UTC Reason: Message:}])
  I0902 09:20:06.233455 16 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/02/25 09:20:06.238
  I0902 09:20:06.271084 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8366" for this suite. @ 09/02/25 09:20:06.284
• [5.171 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/02/25 09:20:06.3
  I0902 09:20:06.300081 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename var-expansion @ 09/02/25 09:20:06.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:20:06.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:20:06.333
  E0902 09:20:07.029205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:08.029931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:08.384197 16 delete.go:62] Deleting pod "var-expansion-1fa1a2fb-a908-4394-83f9-fe484aca01f9" in namespace "var-expansion-3548"
  I0902 09:20:08.401191 16 delete.go:70] Wait up to 5m0s for pod "var-expansion-1fa1a2fb-a908-4394-83f9-fe484aca01f9" to be fully deleted
  E0902 09:20:09.030341      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:10.031219      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:10.422401 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3548" for this suite. @ 09/02/25 09:20:10.437
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/02/25 09:20:10.475
  I0902 09:20:10.475990 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 09:20:10.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:20:10.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:20:10.529
  STEP: create the rc @ 09/02/25 09:20:10.555
  W0902 09:20:10.571921      16 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0902 09:20:11.031567      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:12.034881      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:13.061565      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:14.055975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:15.061931      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:16.090795      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:17.141303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:18.089789      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:19.328973      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:20.266183      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/02/25 09:20:20.877
  STEP: wait for the rc to be deleted @ 09/02/25 09:20:20.985
  E0902 09:20:21.238900      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:22.280510      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:22.714879 16 garbage_collector.go:670] 92 pods remaining
  I0902 09:20:22.714987 16 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0902 09:20:22.715008 16 garbage_collector.go:678] 
  E0902 09:20:23.358031      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:23.377378 16 garbage_collector.go:670] 87 pods remaining
  I0902 09:20:23.377461 16 garbage_collector.go:677] 64 pods has nil DeletionTimestamp
  I0902 09:20:23.377482 16 garbage_collector.go:678] 
  E0902 09:20:24.755818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:24.773327 16 garbage_collector.go:670] 82 pods remaining
  I0902 09:20:24.773389 16 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0902 09:20:24.773404 16 garbage_collector.go:678] 
  I0902 09:20:25.408395 16 garbage_collector.go:670] 72 pods remaining
  I0902 09:20:25.408486 16 garbage_collector.go:677] 39 pods has nil DeletionTimestamp
  I0902 09:20:25.408505 16 garbage_collector.go:678] 
  E0902 09:20:25.448617      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:26.143763 16 garbage_collector.go:670] 72 pods remaining
  I0902 09:20:26.143849 16 garbage_collector.go:677] 34 pods has nil DeletionTimestamp
  I0902 09:20:26.143868 16 garbage_collector.go:678] 
  E0902 09:20:26.447970      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:27.314733 16 garbage_collector.go:670] 57 pods remaining
  I0902 09:20:27.314791 16 garbage_collector.go:677] 17 pods has nil DeletionTimestamp
  I0902 09:20:27.314806 16 garbage_collector.go:678] 
  E0902 09:20:27.452475      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:28.117876 16 garbage_collector.go:670] 53 pods remaining
  I0902 09:20:28.117981 16 garbage_collector.go:677] 1 pods has nil DeletionTimestamp
  I0902 09:20:28.118000 16 garbage_collector.go:678] 
  E0902 09:20:28.451811      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:29.025085 16 garbage_collector.go:670] 49 pods remaining
  I0902 09:20:29.025159 16 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0902 09:20:29.025176 16 garbage_collector.go:678] 
  E0902 09:20:29.452601      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:30.007907 16 garbage_collector.go:670] 35 pods remaining
  I0902 09:20:30.007985 16 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0902 09:20:30.008004 16 garbage_collector.go:678] 
  E0902 09:20:30.453201      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:31.005545 16 garbage_collector.go:670] 28 pods remaining
  I0902 09:20:31.005637 16 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0902 09:20:31.005653 16 garbage_collector.go:678] 
  E0902 09:20:31.453567      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:32.010167 16 garbage_collector.go:670] 19 pods remaining
  I0902 09:20:32.010236 16 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0902 09:20:32.010254 16 garbage_collector.go:678] 
  E0902 09:20:32.453830      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:33.012833 16 garbage_collector.go:670] 13 pods remaining
  I0902 09:20:33.013049 16 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0902 09:20:33.013177 16 garbage_collector.go:678] 
  E0902 09:20:33.454250      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 09:20:34.01
  I0902 09:20:34.268244 16 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 09:20:34.269183 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1317" for this suite. @ 09/02/25 09:20:34.283
• [23.823 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/02/25 09:20:34.306
  I0902 09:20:34.306159 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replicaset @ 09/02/25 09:20:34.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:20:34.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:20:34.347
  I0902 09:20:34.356604 16 replica_set.go:191] Creating ReplicaSet my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4
  I0902 09:20:34.391160 16 resource.go:87] Pod name my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4: Found 0 pods out of 1
  E0902 09:20:34.454638      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:35.455321      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:36.455908      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:37.455939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:38.456445      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:20:39.422437 16 resource.go:87] Pod name my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4: Found 1 pods out of 1
  I0902 09:20:39.422630 16 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4" is running
  E0902 09:20:39.456447      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:40.456912      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:41.457218      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:42.458047      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:43.460103      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:44.460336      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:45.460955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:46.461153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:47.463749      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:48.462966      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:49.463813      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:50.463836      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:51.464390      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:52.464919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:53.464837      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:54.464850      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:55.465247      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:56.465655      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:57.465867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:58.466828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:20:59.552256      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:00.625614      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:01.629418      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:02.628971      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:03.629841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:03.753601 16 replica_set.go:220] Pod "my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4-p2r5b" is running (conditions: [{Type:PodReadyToStartContainers Status:False LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:34 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:34 +0000 UTC Reason: Message:} {Type:Ready Status:False LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:34 +0000 UTC Reason:ContainersNotReady Message:containers with unready status: [my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4]} {Type:ContainersReady Status:False LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:34 +0000 UTC Reason:ContainersNotReady Message:containers with unready status: [my-hostname-basic-8ea6cc82-930b-4fe8-9bf6-74daa63923d4]} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-02 09:20:34 +0000 UTC Reason: Message:}])
  I0902 09:21:03.753719 16 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/02/25 09:21:03.753
  I0902 09:21:03.803384 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7455" for this suite. @ 09/02/25 09:21:03.814
• [29.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/02/25 09:21:03.887
  I0902 09:21:03.887066 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 09:21:03.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:21:03.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:21:03.935
  STEP: creating service in namespace services-7459 @ 09/02/25 09:21:03.943
  STEP: creating service affinity-nodeport in namespace services-7459 @ 09/02/25 09:21:03.943
  STEP: creating replication controller affinity-nodeport in namespace services-7459 @ 09/02/25 09:21:03.975
  I0902 09:21:03.997173      16 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7459, replica count: 3
  E0902 09:21:04.630797      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:05.631716      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:06.632646      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:07.049127      16 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 09:21:07.632855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:08.633166      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:09.633173      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:10.049623      16 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 09:21:10.633487      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:11.633804      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:12.634241      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:13.050886      16 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 09:21:13.634834      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:14.635317      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:15.636052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:16.051193      16 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 09:21:16.637019      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:17.637411      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:18.637409      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:19.052041      16 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 09:21:19.075161 16 resource.go:361] Creating new exec pod
  E0902 09:21:19.639426      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:20.639922      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:21.640794      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:22.141499 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7459 exec execpod-affinityg6dpp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0902 09:21:22.537509 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.53.101) 80 port [tcp/http] succeeded!\n"
  I0902 09:21:22.537718 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:21:22.538224 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7459 exec execpod-affinityg6dpp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.101 80'
  E0902 09:21:22.641012      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:22.897371 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.101 80\nConnection to 10.233.53.101 80 port [tcp/http] succeeded!\n"
  I0902 09:21:22.897467 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:21:22.898242 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7459 exec execpod-affinityg6dpp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.5 30189'
  I0902 09:21:23.189103 16 builder.go:146] stderr: "+ + echo hostNamenc\n -v -t -w 2 192.168.121.5 30189\nConnection to 192.168.121.5 30189 port [tcp/*] succeeded!\n"
  I0902 09:21:23.189203 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:21:23.189815 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7459 exec execpod-affinityg6dpp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.22 30189'
  I0902 09:21:23.473239 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.22 30189\nConnection to 192.168.121.22 30189 port [tcp/*] succeeded!\n"
  I0902 09:21:23.473573 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:21:23.474030 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7459 exec execpod-affinityg6dpp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.5:30189/ ; done'
  E0902 09:21:23.642134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:24.109760 16 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.5:30189/\n"
  I0902 09:21:24.109982 16 builder.go:147] stdout: "\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb\naffinity-nodeport-nmzbb"
  I0902 09:21:24.110021 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110043 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110062 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110078 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110097 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110113 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110129 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110146 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110164 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110187 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110207 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110235 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110255 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110273 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110290 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110307 16 service.go:242] Received response from host: affinity-nodeport-nmzbb
  I0902 09:21:24.110732 16 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7459, will wait for the garbage collector to delete the pods @ 09/02/25 09:21:24.144
  I0902 09:21:24.226443 16 resources.go:139] Deleting ReplicationController affinity-nodeport took: 20.284249ms
  I0902 09:21:24.328741 16 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 102.297993ms
  E0902 09:21:24.642826      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:25.643597      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:26.644225      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:27.644881      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:27.803984 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7459" for this suite. @ 09/02/25 09:21:27.814
• [23.952 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/02/25 09:21:27.839
  I0902 09:21:27.839894 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/02/25 09:21:27.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:21:27.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:21:27.884
  STEP: Setting up server cert @ 09/02/25 09:21:27.89
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/25 09:21:28.332
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/25 09:21:28.348
  STEP: Wait for the deployment to be ready @ 09/02/25 09:21:28.377
  I0902 09:21:28.392925 16 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0902 09:21:28.645738      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:29.646387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:21:30.438
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:21:30.464
  E0902 09:21:30.647857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:31.465740 16 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/02/25 09:21:31.485
  I0902 09:21:31.485806 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:21:31.647616      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 09/02/25 09:21:32.017
  E0902 09:21:32.647823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:33.648318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 09/02/25 09:21:34.274
  STEP: Registering informers with field selectors @ 09/02/25 09:21:34.294
  STEP: Creating custom resources @ 09/02/25 09:21:34.294
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/02/25 09:21:34.352
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/02/25 09:21:34.358
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/02/25 09:21:34.367
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/02/25 09:21:34.377
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/02/25 09:21:34.387
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/02/25 09:21:34.393
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/02/25 09:21:34.393
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/02/25 09:21:34.393
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/02/25 09:21:34.394
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/02/25 09:21:34.394
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/02/25 09:21:34.421
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/02/25 09:21:34.453
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/02/25 09:21:34.463
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/02/25 09:21:34.47
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/02/25 09:21:34.476
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/02/25 09:21:34.477
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/02/25 09:21:34.477
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/02/25 09:21:34.477
  E0902 09:21:34.649231      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:21:35.126016 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-9125" for this suite. @ 09/02/25 09:21:35.15
• [7.350 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/02/25 09:21:35.191
  I0902 09:21:35.191867 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename dns @ 09/02/25 09:21:35.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:21:35.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:21:35.26
  STEP: Creating a test headless service @ 09/02/25 09:21:35.267
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-498.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-498.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-498.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-498.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-498.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-498.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-498.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-498.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 219.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.219_udp@PTR;check="$$(dig +tcp +noall +answer +search 219.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.219_tcp@PTR;sleep 1; done
   @ 09/02/25 09:21:35.305
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-498.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-498.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-498.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-498.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-498.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-498.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-498.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-498.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-498.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 219.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.219_udp@PTR;check="$$(dig +tcp +noall +answer +search 219.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.219_tcp@PTR;sleep 1; done
   @ 09/02/25 09:21:35.305
  STEP: creating a pod to probe DNS @ 09/02/25 09:21:35.305
  STEP: submitting the pod to kubernetes @ 09/02/25 09:21:35.305
  E0902 09:21:35.654833      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:36.654124      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:37.654407      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:38.655901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/25 09:21:39.441
  STEP: looking for the results for each expected name from probers @ 09/02/25 09:21:39.448
  I0902 09:21:39.618042 16 dns_common.go:546] DNS probes using dns-498/dns-test-b6d55566-aa66-4262-8bdd-5dc5624557ba succeeded

  STEP: deleting the pod @ 09/02/25 09:21:39.619
  E0902 09:21:39.655778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the test service @ 09/02/25 09:21:39.66
  STEP: deleting the test headless service @ 09/02/25 09:21:39.703
  I0902 09:21:39.738588 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-498" for this suite. @ 09/02/25 09:21:39.757
• [4.669 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/02/25 09:21:39.866
  I0902 09:21:39.866736 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename hostport @ 09/02/25 09:21:39.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:21:39.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:21:39.912
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/02/25 09:21:39.937
  E0902 09:21:40.655888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:41.659233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.22 on the node which pod1 resides and expect scheduled @ 09/02/25 09:21:41.989
  E0902 09:21:42.659352      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:43.659857      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:44.660159      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:45.660261      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:46.661954      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:47.661709      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:48.661941      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:49.663007      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:50.663148      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:51.663613      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:52.663911      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:53.664134      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.22 but use UDP protocol on the node which pod2 resides @ 09/02/25 09:21:54.135
  E0902 09:21:54.664823      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:55.665002      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:56.666079      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:57.667499      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/02/25 09:21:58.269
  I0902 09:21:58.269879 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.22 http://127.0.0.1:54323/hostname] Namespace:hostport-9693 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:21:58.270051 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:21:58.270211 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9693/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.22+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.22, port: 54323 @ 09/02/25 09:21:58.503
  I0902 09:21:58.503416 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.22:54323/hostname] Namespace:hostport-9693 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:21:58.503452 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:21:58.503605 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9693/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.22%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.22, port: 54323 UDP @ 09/02/25 09:21:58.633
  I0902 09:21:58.633325 16 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.22 54323] Namespace:hostport-9693 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0902 09:21:58.633378 16 exec_util.go:64] ExecWithOptions: Clientset creation
  I0902 09:21:58.633563 16 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9693/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.22+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0902 09:21:58.668307      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:21:59.669034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:00.670042      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:01.670049      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:02.670218      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:03.671191      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:03.750102 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9693" for this suite. @ 09/02/25 09:22:03.768
• [23.952 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/02/25 09:22:03.82
  I0902 09:22:03.820873 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:22:03.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:03.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:03.896
  STEP: Creating secret with name s-test-opt-del-21d260b7-820b-44ba-a90b-ef21f571ad9a @ 09/02/25 09:22:03.913
  STEP: Creating secret with name s-test-opt-upd-ef75e460-8017-4d4b-aa7f-42f0fca40237 @ 09/02/25 09:22:03.925
  STEP: Creating the pod @ 09/02/25 09:22:03.936
  E0902 09:22:04.672417      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:05.672932      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-21d260b7-820b-44ba-a90b-ef21f571ad9a @ 09/02/25 09:22:06.087
  STEP: Updating secret s-test-opt-upd-ef75e460-8017-4d4b-aa7f-42f0fca40237 @ 09/02/25 09:22:06.113
  STEP: Creating secret with name s-test-opt-create-4b3da71a-62cb-4f13-976d-df30b2e98303 @ 09/02/25 09:22:06.136
  STEP: waiting to observe update in volume @ 09/02/25 09:22:06.153
  E0902 09:22:06.673374      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:07.673460      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:08.233987 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7136" for this suite. @ 09/02/25 09:22:08.245
• [4.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/02/25 09:22:08.262
  I0902 09:22:08.262334 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:22:08.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:08.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:08.302
  STEP: Setting up server cert @ 09/02/25 09:22:08.35
  E0902 09:22:08.674196      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:22:08.892
  STEP: Deploying the webhook pod @ 09/02/25 09:22:08.955
  STEP: Wait for the deployment to be ready @ 09/02/25 09:22:09.002
  I0902 09:22:09.055846 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:22:09.674755      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:10.675149      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:22:11.08
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:22:11.107
  E0902 09:22:11.676342      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:12.109871 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0902 09:22:12.139636 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9909-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/25 09:22:12.675
  E0902 09:22:12.677961      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource while v1 is storage version @ 09/02/25 09:22:12.729
  E0902 09:22:13.677081      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:14.677424      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/02/25 09:22:14.98
  STEP: Patching the custom resource while v2 is storage version @ 09/02/25 09:22:15.04
  E0902 09:22:15.677913      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:15.714843 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2731" for this suite. @ 09/02/25 09:22:15.726
  STEP: Destroying namespace "webhook-markers-557" for this suite. @ 09/02/25 09:22:15.742
• [7.499 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 09/02/25 09:22:15.762
  I0902 09:22:15.763049 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename statefulset @ 09/02/25 09:22:15.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:15.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:15.822
  STEP: Creating service test in namespace statefulset-7673 @ 09/02/25 09:22:15.832
  STEP: Looking for a node to schedule stateful set and pod @ 09/02/25 09:22:15.872
  STEP: Creating pod with conflicting port in namespace statefulset-7673 @ 09/02/25 09:22:15.888
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7673 @ 09/02/25 09:22:15.923
  E0902 09:22:16.678047      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:17.679013      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-7673 @ 09/02/25 09:22:17.954
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7673 @ 09/02/25 09:22:17.978
  I0902 09:22:18.026631 16 statefulset.go:872] Observed stateful pod in namespace: statefulset-7673, name: ss-0, uid: 5f2b128d-f79e-4e50-805d-ceccc4dd9db3, status phase: Pending. Waiting for statefulset controller to delete.
  I0902 09:22:18.065226 16 statefulset.go:872] Observed stateful pod in namespace: statefulset-7673, name: ss-0, uid: 5f2b128d-f79e-4e50-805d-ceccc4dd9db3, status phase: Failed. Waiting for statefulset controller to delete.
  I0902 09:22:18.090983 16 statefulset.go:872] Observed stateful pod in namespace: statefulset-7673, name: ss-0, uid: 5f2b128d-f79e-4e50-805d-ceccc4dd9db3, status phase: Failed. Waiting for statefulset controller to delete.
  I0902 09:22:18.099366 16 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-7673
  STEP: Removing pod with conflicting port in namespace statefulset-7673 @ 09/02/25 09:22:18.099
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7673 and will be in running state @ 09/02/25 09:22:18.139
  E0902 09:22:18.679723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:19.680000      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:20.160082 16 statefulset.go:138] Deleting all statefulset in ns statefulset-7673
  I0902 09:22:20.168853 16 rest.go:152] Scaling statefulset ss to 0
  E0902 09:22:20.681056      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:21.681664      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:22.681850      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:23.682456      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:24.683356      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:25.683572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:26.684246      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:27.684933      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:28.685381      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:29.685676      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:30.201758 16 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0902 09:22:30.211609 16 rest.go:90] Deleting statefulset ss
  I0902 09:22:30.257586 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7673" for this suite. @ 09/02/25 09:22:30.271
• [14.528 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/02/25 09:22:30.29
  I0902 09:22:30.290302 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename replication-controller @ 09/02/25 09:22:30.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:30.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:30.328
  STEP: Given a ReplicationController is created @ 09/02/25 09:22:30.334
  STEP: When the matched label of one of its pods change @ 09/02/25 09:22:30.346
  I0902 09:22:30.354596 16 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0902 09:22:30.685986      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:31.686944      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:32.687028      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:33.687898      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:34.688725      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:35.379206 16 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/02/25 09:22:35.407
  E0902 09:22:35.689378      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:36.426478 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5598" for this suite. @ 09/02/25 09:22:36.441
• [6.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/02/25 09:22:36.458
  I0902 09:22:36.458380 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:22:36.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:36.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:36.492
  E0902 09:22:36.690670      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:37.691859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:38.692853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:39.693731      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:40.695060      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:41.695751      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:22:42.651
  I0902 09:22:42.666645 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod client-envvars-a03123d8-b3ef-4351-b344-d145ec2f6e3a container env3cont: <nil>
  STEP: delete the pod @ 09/02/25 09:22:42.695
  E0902 09:22:42.695847      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:22:42.749605 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6710" for this suite. @ 09/02/25 09:22:42.767
• [6.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/02/25 09:22:42.786
  I0902 09:22:42.786700 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 09:22:42.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:42.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:42.836
  STEP: Creating a test namespace @ 09/02/25 09:22:42.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:42.866
  STEP: Creating a pod in the namespace @ 09/02/25 09:22:42.872
  STEP: Waiting for the pod to have running status @ 09/02/25 09:22:42.896
  E0902 09:22:43.697839      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:44.699052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/02/25 09:22:44.915
  STEP: Waiting for the namespace to be removed. @ 09/02/25 09:22:44.929
  E0902 09:22:45.699464      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:46.700288      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:47.701091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:48.701906      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:49.703034      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:50.704265      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:51.704171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:52.704578      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:53.705158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:54.706171      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:55.706186      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:56.706254      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/02/25 09:22:56.941
  STEP: Verifying there are no pods in the namespace @ 09/02/25 09:22:56.983
  I0902 09:22:56.995779 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2875" for this suite. @ 09/02/25 09:22:57.016
  STEP: Destroying namespace "nsdeletetest-4601" for this suite. @ 09/02/25 09:22:57.037
  I0902 09:22:57.047919 16 framework.go:370] Namespace nsdeletetest-4601 was already deleted
  STEP: Destroying namespace "nsdeletetest-9409" for this suite. @ 09/02/25 09:22:57.048
• [14.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/02/25 09:22:57.071
  I0902 09:22:57.071312 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename emptydir @ 09/02/25 09:22:57.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:22:57.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:22:57.118
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/02/25 09:22:57.125
  E0902 09:22:57.706818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:58.707291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:22:59.707953      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:00.707939      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:23:01.185
  I0902 09:23:01.194795 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-9b6f451b-ebe1-48e0-934c-063e6fcf2b24 container test-container: <nil>
  STEP: delete the pod @ 09/02/25 09:23:01.22
  I0902 09:23:01.280585 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7896" for this suite. @ 09/02/25 09:23:01.296
• [4.246 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/02/25 09:23:01.317
  I0902 09:23:01.317589 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 09:23:01.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:01.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:01.346
  STEP: Creating namespace "e2e-ns-5xzgq" @ 09/02/25 09:23:01.351
  I0902 09:23:01.378183 16 namespace.go:412] Namespace "e2e-ns-5xzgq-606" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-5xzgq-606" @ 09/02/25 09:23:01.378
  I0902 09:23:01.396352 16 namespace.go:435] Namespace "e2e-ns-5xzgq-606" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-5xzgq-606" @ 09/02/25 09:23:01.396
  I0902 09:23:01.411605 16 namespace.go:464] Namespace "e2e-ns-5xzgq-606" has []v1.FinalizerName{"kubernetes"}
  I0902 09:23:01.412434 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8275" for this suite. @ 09/02/25 09:23:01.423
  STEP: Destroying namespace "e2e-ns-5xzgq-606" for this suite. @ 09/02/25 09:23:01.435
• [0.136 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/02/25 09:23:01.454
  I0902 09:23:01.454128 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename gc @ 09/02/25 09:23:01.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:01.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:01.483
  STEP: create the rc @ 09/02/25 09:23:01.526
  W0902 09:23:01.538970      16 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0902 09:23:01.708596      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:02.726140      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:03.858493      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:05.048244      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:06.018752      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:07.020936      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/02/25 09:23:07.814
  STEP: wait for the rc to be deleted @ 09/02/25 09:23:08.122
  E0902 09:23:08.123121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:09.123113      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:10.278281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:11.278822      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:12.396996      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/02/25 09:23:13.333
  E0902 09:23:13.422304      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:14.423054      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:15.423303      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:16.423942      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:17.424118      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:18.424228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:19.424477      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:20.424784      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:21.425279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:22.425330      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:23.425245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:24.427181      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:25.426057      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:26.426298      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:27.426788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:28.427223      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:29.428295      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:30.428441      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:31.428914      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:32.429761      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:33.430121      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:34.430669      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:35.431202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:36.431805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:37.431963      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:38.432391      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:39.432483      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:40.432851      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:41.466788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:42.438192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/25 09:23:43.41
  E0902 09:23:43.437846      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:43.652605 16 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0902 09:23:43.652786 16 delete.go:95] Deleting pod "simpletest.rc-297bc" in namespace "gc-9380"
  I0902 09:23:43.695109 16 delete.go:95] Deleting pod "simpletest.rc-2pbgv" in namespace "gc-9380"
  I0902 09:23:43.756432 16 delete.go:95] Deleting pod "simpletest.rc-2thjs" in namespace "gc-9380"
  I0902 09:23:43.809947 16 delete.go:95] Deleting pod "simpletest.rc-4lwwb" in namespace "gc-9380"
  I0902 09:23:44.004861 16 delete.go:95] Deleting pod "simpletest.rc-54jkn" in namespace "gc-9380"
  I0902 09:23:44.048452 16 delete.go:95] Deleting pod "simpletest.rc-55n58" in namespace "gc-9380"
  I0902 09:23:44.102853 16 delete.go:95] Deleting pod "simpletest.rc-564zh" in namespace "gc-9380"
  I0902 09:23:44.150792 16 delete.go:95] Deleting pod "simpletest.rc-56bnc" in namespace "gc-9380"
  I0902 09:23:44.210252 16 delete.go:95] Deleting pod "simpletest.rc-58mnr" in namespace "gc-9380"
  I0902 09:23:44.318079 16 delete.go:95] Deleting pod "simpletest.rc-5bdc6" in namespace "gc-9380"
  I0902 09:23:44.436779 16 delete.go:95] Deleting pod "simpletest.rc-5blvh" in namespace "gc-9380"
  E0902 09:23:44.447153      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:44.571543 16 delete.go:95] Deleting pod "simpletest.rc-5mhlv" in namespace "gc-9380"
  I0902 09:23:44.791906 16 delete.go:95] Deleting pod "simpletest.rc-5nxcv" in namespace "gc-9380"
  I0902 09:23:44.933030 16 delete.go:95] Deleting pod "simpletest.rc-5rvql" in namespace "gc-9380"
  I0902 09:23:45.028654 16 delete.go:95] Deleting pod "simpletest.rc-6n9j5" in namespace "gc-9380"
  I0902 09:23:45.111069 16 delete.go:95] Deleting pod "simpletest.rc-7586b" in namespace "gc-9380"
  I0902 09:23:45.265779 16 delete.go:95] Deleting pod "simpletest.rc-784n9" in namespace "gc-9380"
  I0902 09:23:45.435234 16 delete.go:95] Deleting pod "simpletest.rc-7882v" in namespace "gc-9380"
  E0902 09:23:45.448558      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:45.639032 16 delete.go:95] Deleting pod "simpletest.rc-79qh2" in namespace "gc-9380"
  I0902 09:23:45.728812 16 delete.go:95] Deleting pod "simpletest.rc-7xjbg" in namespace "gc-9380"
  I0902 09:23:45.910449 16 delete.go:95] Deleting pod "simpletest.rc-827gx" in namespace "gc-9380"
  I0902 09:23:45.967062 16 delete.go:95] Deleting pod "simpletest.rc-8692m" in namespace "gc-9380"
  I0902 09:23:46.008042 16 delete.go:95] Deleting pod "simpletest.rc-86dvp" in namespace "gc-9380"
  I0902 09:23:46.040204 16 delete.go:95] Deleting pod "simpletest.rc-8kmlx" in namespace "gc-9380"
  I0902 09:23:46.228286 16 delete.go:95] Deleting pod "simpletest.rc-9gvst" in namespace "gc-9380"
  E0902 09:23:46.448892      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:46.458284 16 delete.go:95] Deleting pod "simpletest.rc-9mjd6" in namespace "gc-9380"
  I0902 09:23:46.653024 16 delete.go:95] Deleting pod "simpletest.rc-bdwls" in namespace "gc-9380"
  I0902 09:23:46.763085 16 delete.go:95] Deleting pod "simpletest.rc-bhwvw" in namespace "gc-9380"
  I0902 09:23:46.853838 16 delete.go:95] Deleting pod "simpletest.rc-bm442" in namespace "gc-9380"
  I0902 09:23:47.043745 16 delete.go:95] Deleting pod "simpletest.rc-bp2pm" in namespace "gc-9380"
  I0902 09:23:47.133303 16 delete.go:95] Deleting pod "simpletest.rc-c4qwg" in namespace "gc-9380"
  I0902 09:23:47.196752 16 delete.go:95] Deleting pod "simpletest.rc-c9z9f" in namespace "gc-9380"
  I0902 09:23:47.264662 16 delete.go:95] Deleting pod "simpletest.rc-ckl8q" in namespace "gc-9380"
  I0902 09:23:47.335630 16 delete.go:95] Deleting pod "simpletest.rc-cktj9" in namespace "gc-9380"
  I0902 09:23:47.390207 16 delete.go:95] Deleting pod "simpletest.rc-cq9v8" in namespace "gc-9380"
  E0902 09:23:47.449628      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:47.617432 16 delete.go:95] Deleting pod "simpletest.rc-cqssp" in namespace "gc-9380"
  I0902 09:23:47.692883 16 delete.go:95] Deleting pod "simpletest.rc-cqz7h" in namespace "gc-9380"
  I0902 09:23:47.801228 16 delete.go:95] Deleting pod "simpletest.rc-ddgvn" in namespace "gc-9380"
  I0902 09:23:47.926247 16 delete.go:95] Deleting pod "simpletest.rc-dlhh9" in namespace "gc-9380"
  I0902 09:23:47.981755 16 delete.go:95] Deleting pod "simpletest.rc-dr9rz" in namespace "gc-9380"
  I0902 09:23:48.088462 16 delete.go:95] Deleting pod "simpletest.rc-fcgkd" in namespace "gc-9380"
  I0902 09:23:48.119947 16 delete.go:95] Deleting pod "simpletest.rc-fdsx6" in namespace "gc-9380"
  I0902 09:23:48.200327 16 delete.go:95] Deleting pod "simpletest.rc-fkpz8" in namespace "gc-9380"
  I0902 09:23:48.250273 16 delete.go:95] Deleting pod "simpletest.rc-fqn9s" in namespace "gc-9380"
  I0902 09:23:48.288279 16 delete.go:95] Deleting pod "simpletest.rc-fzc9n" in namespace "gc-9380"
  I0902 09:23:48.342310 16 delete.go:95] Deleting pod "simpletest.rc-g859x" in namespace "gc-9380"
  I0902 09:23:48.401132 16 delete.go:95] Deleting pod "simpletest.rc-gbdhs" in namespace "gc-9380"
  E0902 09:23:48.450190      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:48.457722 16 delete.go:95] Deleting pod "simpletest.rc-gf78g" in namespace "gc-9380"
  I0902 09:23:48.613982 16 delete.go:95] Deleting pod "simpletest.rc-h7th6" in namespace "gc-9380"
  I0902 09:23:48.780429 16 delete.go:95] Deleting pod "simpletest.rc-hgx8g" in namespace "gc-9380"
  I0902 09:23:48.837013 16 delete.go:95] Deleting pod "simpletest.rc-hm52c" in namespace "gc-9380"
  I0902 09:23:48.904149 16 delete.go:95] Deleting pod "simpletest.rc-hxqmm" in namespace "gc-9380"
  I0902 09:23:48.960202 16 delete.go:95] Deleting pod "simpletest.rc-j265v" in namespace "gc-9380"
  I0902 09:23:49.045437 16 delete.go:95] Deleting pod "simpletest.rc-jxl77" in namespace "gc-9380"
  I0902 09:23:49.166589 16 delete.go:95] Deleting pod "simpletest.rc-kcjjg" in namespace "gc-9380"
  I0902 09:23:49.256077 16 delete.go:95] Deleting pod "simpletest.rc-klmvf" in namespace "gc-9380"
  I0902 09:23:49.420850 16 delete.go:95] Deleting pod "simpletest.rc-l24sp" in namespace "gc-9380"
  E0902 09:23:49.450680      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:49.476270 16 delete.go:95] Deleting pod "simpletest.rc-l8sdw" in namespace "gc-9380"
  I0902 09:23:49.520139 16 delete.go:95] Deleting pod "simpletest.rc-lkjkv" in namespace "gc-9380"
  I0902 09:23:49.574908 16 delete.go:95] Deleting pod "simpletest.rc-lt4qt" in namespace "gc-9380"
  I0902 09:23:49.619065 16 delete.go:95] Deleting pod "simpletest.rc-m5z2z" in namespace "gc-9380"
  I0902 09:23:49.811474 16 delete.go:95] Deleting pod "simpletest.rc-m8kbj" in namespace "gc-9380"
  I0902 09:23:49.870347 16 delete.go:95] Deleting pod "simpletest.rc-mb42l" in namespace "gc-9380"
  I0902 09:23:50.050209 16 delete.go:95] Deleting pod "simpletest.rc-mfhp6" in namespace "gc-9380"
  I0902 09:23:50.175147 16 delete.go:95] Deleting pod "simpletest.rc-mv4fq" in namespace "gc-9380"
  I0902 09:23:50.286201 16 delete.go:95] Deleting pod "simpletest.rc-n6l6d" in namespace "gc-9380"
  I0902 09:23:50.406298 16 delete.go:95] Deleting pod "simpletest.rc-n99c2" in namespace "gc-9380"
  E0902 09:23:50.453602      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:50.562788 16 delete.go:95] Deleting pod "simpletest.rc-nj4q7" in namespace "gc-9380"
  I0902 09:23:50.679715 16 delete.go:95] Deleting pod "simpletest.rc-njbdj" in namespace "gc-9380"
  I0902 09:23:50.839816 16 delete.go:95] Deleting pod "simpletest.rc-nm45q" in namespace "gc-9380"
  I0902 09:23:51.299247 16 delete.go:95] Deleting pod "simpletest.rc-nmzcr" in namespace "gc-9380"
  I0902 09:23:51.403987 16 delete.go:95] Deleting pod "simpletest.rc-np9hz" in namespace "gc-9380"
  E0902 09:23:51.467657      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:51.497060 16 delete.go:95] Deleting pod "simpletest.rc-nrg5c" in namespace "gc-9380"
  I0902 09:23:51.548409 16 delete.go:95] Deleting pod "simpletest.rc-p8hbw" in namespace "gc-9380"
  I0902 09:23:51.650033 16 delete.go:95] Deleting pod "simpletest.rc-phgzh" in namespace "gc-9380"
  I0902 09:23:51.777757 16 delete.go:95] Deleting pod "simpletest.rc-pnghc" in namespace "gc-9380"
  I0902 09:23:51.854298 16 delete.go:95] Deleting pod "simpletest.rc-pv4dh" in namespace "gc-9380"
  I0902 09:23:52.067755 16 delete.go:95] Deleting pod "simpletest.rc-q2m8h" in namespace "gc-9380"
  I0902 09:23:52.158833 16 delete.go:95] Deleting pod "simpletest.rc-q8lsj" in namespace "gc-9380"
  I0902 09:23:52.264301 16 delete.go:95] Deleting pod "simpletest.rc-q9qkk" in namespace "gc-9380"
  I0902 09:23:52.308217 16 delete.go:95] Deleting pod "simpletest.rc-qj2m9" in namespace "gc-9380"
  I0902 09:23:52.424581 16 delete.go:95] Deleting pod "simpletest.rc-r7q6v" in namespace "gc-9380"
  E0902 09:23:52.463036      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:52.580226 16 delete.go:95] Deleting pod "simpletest.rc-rjlft" in namespace "gc-9380"
  I0902 09:23:52.652372 16 delete.go:95] Deleting pod "simpletest.rc-rqs5x" in namespace "gc-9380"
  I0902 09:23:52.734791 16 delete.go:95] Deleting pod "simpletest.rc-s8qxl" in namespace "gc-9380"
  I0902 09:23:52.805929 16 delete.go:95] Deleting pod "simpletest.rc-tc5vk" in namespace "gc-9380"
  I0902 09:23:53.049207 16 delete.go:95] Deleting pod "simpletest.rc-tvhbh" in namespace "gc-9380"
  I0902 09:23:53.164129 16 delete.go:95] Deleting pod "simpletest.rc-v6289" in namespace "gc-9380"
  I0902 09:23:53.237063 16 delete.go:95] Deleting pod "simpletest.rc-v9dlm" in namespace "gc-9380"
  I0902 09:23:53.299340 16 delete.go:95] Deleting pod "simpletest.rc-vht72" in namespace "gc-9380"
  I0902 09:23:53.428165 16 delete.go:95] Deleting pod "simpletest.rc-vtxvd" in namespace "gc-9380"
  E0902 09:23:53.523274      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:53.531125 16 delete.go:95] Deleting pod "simpletest.rc-w4vj9" in namespace "gc-9380"
  I0902 09:23:53.924239 16 delete.go:95] Deleting pod "simpletest.rc-wg4tv" in namespace "gc-9380"
  I0902 09:23:54.338197 16 delete.go:95] Deleting pod "simpletest.rc-wg8vz" in namespace "gc-9380"
  I0902 09:23:54.396998 16 delete.go:95] Deleting pod "simpletest.rc-wqh9g" in namespace "gc-9380"
  I0902 09:23:54.455269 16 delete.go:95] Deleting pod "simpletest.rc-wvjhn" in namespace "gc-9380"
  E0902 09:23:54.564487      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:54.583389 16 delete.go:95] Deleting pod "simpletest.rc-xc5t6" in namespace "gc-9380"
  I0902 09:23:54.678837 16 delete.go:95] Deleting pod "simpletest.rc-xcqxf" in namespace "gc-9380"
  I0902 09:23:54.717368 16 delete.go:95] Deleting pod "simpletest.rc-zv5d5" in namespace "gc-9380"
  I0902 09:23:54.827553 16 delete.go:95] Deleting pod "simpletest.rc-zzrf6" in namespace "gc-9380"
  I0902 09:23:54.958674 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9380" for this suite. @ 09/02/25 09:23:55.002
• [53.621 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 09/02/25 09:23:55.076
  I0902 09:23:55.076213 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:23:55.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:23:55.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:23:55.349
  STEP: creating the pod @ 09/02/25 09:23:55.378
  I0902 09:23:55.384718 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 create -f -'
  E0902 09:23:55.567917      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:56.568293      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:56.731093 16 builder.go:146] stderr: ""
  I0902 09:23:56.731168 16 builder.go:147] stdout: "pod/pause created\n"
  E0902 09:23:57.569096      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:23:58.569865      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/02/25 09:23:58.751
  I0902 09:23:58.752536 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 label pods pause testing-label=testing-label-value'
  I0902 09:23:58.968380 16 builder.go:146] stderr: ""
  I0902 09:23:58.968482 16 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/02/25 09:23:58.968
  I0902 09:23:58.969505 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 get pod pause -L testing-label'
  I0902 09:23:59.168775 16 builder.go:146] stderr: ""
  I0902 09:23:59.168900 16 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/02/25 09:23:59.168
  I0902 09:23:59.169585 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 label pods pause testing-label-'
  I0902 09:23:59.396444 16 builder.go:146] stderr: ""
  I0902 09:23:59.397780 16 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/02/25 09:23:59.397
  I0902 09:23:59.398753 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 get pod pause -L testing-label'
  E0902 09:23:59.570969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:23:59.733212 16 builder.go:146] stderr: ""
  I0902 09:23:59.733306 16 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/02/25 09:23:59.733
  I0902 09:23:59.733944 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 delete --grace-period=0 --force -f -'
  I0902 09:23:59.960618 16 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0902 09:23:59.960720 16 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0902 09:23:59.961453 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 get rc,svc -l name=pause --no-headers'
  I0902 09:24:00.196001 16 builder.go:146] stderr: "No resources found in kubectl-975 namespace.\n"
  I0902 09:24:00.196091 16 builder.go:147] stdout: ""
  I0902 09:24:00.196597 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-975 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0902 09:24:00.459462 16 builder.go:146] stderr: ""
  I0902 09:24:00.459616 16 builder.go:147] stdout: ""
  I0902 09:24:00.460837 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-975" for this suite. @ 09/02/25 09:24:00.472
• [5.411 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/02/25 09:24:00.488
  I0902 09:24:00.488664 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename deployment @ 09/02/25 09:24:00.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:24:00.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:24:00.523
  STEP: creating a Deployment @ 09/02/25 09:24:00.538
  I0902 09:24:00.538671 16 deployment.go:507] Creating simple deployment test-deployment-d9bjk
  I0902 09:24:00.569035 16 deployment.go:223] new replicaset for deployment "test-deployment-d9bjk" is yet to be created
  E0902 09:24:00.571686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:01.571769      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:02.571885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/02/25 09:24:02.617
  I0902 09:24:02.627585 16 deployment.go:532] Deployment test-deployment-d9bjk has Conditions: [{Available True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d9bjk-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/02/25 09:24:02.627
  I0902 09:24:02.657802 16 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 24, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 24, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 24, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 24, 0, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-d9bjk-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/02/25 09:24:02.657
  I0902 09:24:02.664218 16 deployment.go:579] Observed &Deployment event: ADDED
  I0902 09:24:02.664338 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d9bjk-6fb4c74686"}
  I0902 09:24:02.664596 16 deployment.go:579] Observed &Deployment event: MODIFIED
  I0902 09:24:02.664654 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d9bjk-6fb4c74686"}
  I0902 09:24:02.664701 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 09:24:02.664953 16 deployment.go:579] Observed &Deployment event: MODIFIED
  I0902 09:24:02.665433 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 09:24:02.665644 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-d9bjk-6fb4c74686" is progressing.}
  I0902 09:24:02.666416 16 deployment.go:579] Observed &Deployment event: MODIFIED
  I0902 09:24:02.666620 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 09:24:02.666695 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d9bjk-6fb4c74686" has successfully progressed.}
  I0902 09:24:02.667130 16 deployment.go:579] Observed &Deployment event: MODIFIED
  I0902 09:24:02.667231 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 09:24:02.667277 16 deployment.go:575] Observed Deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d9bjk-6fb4c74686" has successfully progressed.}
  I0902 09:24:02.667314 16 deployment.go:572] Found Deployment test-deployment-d9bjk in namespace deployment-6547 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 09:24:02.667349 16 deployment.go:583] Deployment test-deployment-d9bjk has an updated status
  STEP: patching the Statefulset Status @ 09/02/25 09:24:02.667
  I0902 09:24:02.667461 16 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0902 09:24:02.682622 16 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/02/25 09:24:02.682
  I0902 09:24:02.687789 16 deployment.go:616] Observed &Deployment event: ADDED
  I0902 09:24:02.687863 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d9bjk-6fb4c74686"}
  I0902 09:24:02.688190 16 deployment.go:616] Observed &Deployment event: MODIFIED
  I0902 09:24:02.688263 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d9bjk-6fb4c74686"}
  I0902 09:24:02.688291 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 09:24:02.688983 16 deployment.go:616] Observed &Deployment event: MODIFIED
  I0902 09:24:02.690044 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0902 09:24:02.690256 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:00 +0000 UTC 2025-09-02 09:24:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-d9bjk-6fb4c74686" is progressing.}
  I0902 09:24:02.692381 16 deployment.go:616] Observed &Deployment event: MODIFIED
  I0902 09:24:02.692990 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 09:24:02.694353 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d9bjk-6fb4c74686" has successfully progressed.}
  I0902 09:24:02.695189 16 deployment.go:616] Observed &Deployment event: MODIFIED
  I0902 09:24:02.695661 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0902 09:24:02.695755 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-02 09:24:02 +0000 UTC 2025-09-02 09:24:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d9bjk-6fb4c74686" has successfully progressed.}
  I0902 09:24:02.695801 16 deployment.go:612] Observed deployment test-deployment-d9bjk in namespace deployment-6547 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 09:24:02.696074 16 deployment.go:616] Observed &Deployment event: MODIFIED
  I0902 09:24:02.696161 16 deployment.go:609] Found deployment test-deployment-d9bjk in namespace deployment-6547 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0902 09:24:02.696318 16 deployment.go:620] Deployment test-deployment-d9bjk has a patched status
  I0902 09:24:02.707389 16 deployment.go:633] Deployment "test-deployment-d9bjk":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-d9bjk",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6547",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7093b61e-aae2-40c3-82c1-8fbdd2a55bef",
      ResourceVersion: (string) (len=5) "46349",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-d9bjk-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0902 09:24:02.721840 16 deployment.go:40] New ReplicaSet "test-deployment-d9bjk-6fb4c74686" of Deployment "test-deployment-d9bjk":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-d9bjk-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6547",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f159bb64-fc15-4308-a844-b5cc85a953ba",
      ResourceVersion: (string) (len=5) "46292",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-d9bjk",
          UID: (types.UID) (len=36) "7093b61e-aae2-40c3-82c1-8fbdd2a55bef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 30 39  |k:{\"uid\":\"709|
              00000120  33 62 36 31 65 2d 61 61  65 32 2d 34 30 63 33 2d  |3b61e-aae2-40c3-|
              00000130  38 32 63 31 2d 38 66 62  64 64 32 61 35 35 62 65  |82c1-8fbdd2a55be|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0902 09:24:02.739960 16 deployment.go:68] Pod "test-deployment-d9bjk-6fb4c74686-k4l4l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-d9bjk-6fb4c74686-k4l4l",
      GenerateName: (string) (len=33) "test-deployment-d9bjk-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-6547",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc2ae425-4e0d-4021-b073-06fb83b825b0",
      ResourceVersion: (string) (len=5) "46290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-d9bjk-6fb4c74686",
          UID: (types.UID) (len=36) "f159bb64-fc15-4308-a844-b5cc85a953ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 31 35 39 62 62 36  34 2d 66 63 31 35 2d 34  |"f159bb64-fc15-4|
              000000a0  33 30 38 2d 61 38 34 34  2d 62 35 63 63 38 35 61  |308-a844-b5cc85a|
              000000b0  39 35 33 62 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |953ba\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  36 32 5c 22 7d 22 3a 7b  |.233.66.62\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pv5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pv5j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "noo9iech3thi-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892401840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.152"
        }
      },
      PodIP: (string) (len=12) "10.233.66.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892401840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892401841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://1afe702a7e4509b9326d2b614830ee1b698e17f1fdf8bf3e77b23b270ff6e7bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2pv5j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0902 09:24:02.743780 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6547" for this suite. @ 09/02/25 09:24:02.757
• [2.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 09/02/25 09:24:02.776
  I0902 09:24:02.776493 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 09:24:02.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:24:02.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:24:02.874
  I0902 09:24:02.913045 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 09:24:03.572471      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:04.572919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:05.573094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:06.573703      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:07.574395      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:08.574975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:09.575844      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:10.576151      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:11.576974      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:12.578192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:13.577724      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:14.578799      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:15.578965      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:16.579189      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:17.579887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:18.580502      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:19.581003      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:20.581687      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:21.582714      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:22.583212      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:23.584279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:24.584760      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:25.584975      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:26.585158      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:27.585313      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:28.586271      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:29.587040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:30.587634      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:31.587808      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:32.588467      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:33.589403      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:34.590116      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:35.590471      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:36.590867      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:37.591076      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:38.592205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:39.593022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:40.593107      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:41.593351      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:42.593965      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:43.594609      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:44.595655      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:45.595979      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:46.596024      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:47.596427      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:48.596438      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:49.597616      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:50.598050      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:51.598730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:52.599206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:53.600610      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:54.600853      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:55.601841      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:56.602061      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:57.602345      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:58.603480      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:24:59.603810      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:00.604660      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:01.604648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:02.605686      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:25:02.924483 16 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/02/25 09:25:02.933
  I0902 09:25:02.933930 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/02/25 09:25:02.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:25:02.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:25:02.97
  I0902 09:25:03.021905 16 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0902 09:25:03.035339 16 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/02/25 09:25:03.133
  STEP: Removing a custom resource @ 09/02/25 09:25:03.156
  STEP: Removing a custom resource @ 09/02/25 09:25:03.177
  I0902 09:25:03.196272 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7417" for this suite. @ 09/02/25 09:25:03.204
  I0902 09:25:03.217717 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5695" for this suite. @ 09/02/25 09:25:03.307
• [60.547 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/02/25 09:25:03.324
  I0902 09:25:03.324385 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 09:25:03.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:25:03.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:25:03.357
  I0902 09:25:03.366762 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:25:03.606363      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:04.606924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:05.607449      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0902 09:25:06.097043      16 warnings.go:70] unknown field "alpha"
  W0902 09:25:06.097112      16 warnings.go:70] unknown field "beta"
  W0902 09:25:06.097124      16 warnings.go:70] unknown field "delta"
  W0902 09:25:06.097134      16 warnings.go:70] unknown field "epsilon"
  W0902 09:25:06.097144      16 warnings.go:70] unknown field "gamma"
  E0902 09:25:06.607674      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:25:06.683232 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3811" for this suite. @ 09/02/25 09:25:06.692
• [3.382 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 09/02/25 09:25:06.706
  I0902 09:25:06.706358 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/25 09:25:06.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:25:06.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:25:06.749
  I0902 09:25:06.786123 16 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0902 09:25:07.607828      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:08.608461      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:09.609754      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:10.609886      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:11.610706      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:12.611850      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:13.612137      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:14.612721      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:15.613085      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:16.613451      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:17.614194      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:18.614761      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:19.615628      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:20.615919      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:21.616210      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:22.616988      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:23.617801      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:24.618843      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:25.618885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:26.619043      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:27.620146      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:28.620417      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:29.621263      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:30.622122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:31.622730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:32.622896      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:33.624192      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:34.623978      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:35.624404      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:36.624584      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:37.624775      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:38.624700      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:39.625748      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:40.626094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:41.627366      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:42.627633      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:43.628122      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:44.628667      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:45.629291      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:46.629589      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:47.630757      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:48.630824      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:49.631901      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:50.632653      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:51.632987      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:52.633166      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:53.633482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:54.634238      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:55.634779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:56.635625      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:57.635854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:58.636207      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:25:59.637046      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:00.637723      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:01.637998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:02.639013      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:03.639391      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:04.640572      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:05.641001      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:06.641077      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:06.802034 16 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/02/25 09:26:06.813
  STEP: Adding a custom resource @ 09/02/25 09:26:06.814
  I0902 09:26:06.862640 16 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0902 09:26:06.879330 16 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/02/25 09:26:06.88
  I0902 09:26:06.925709 16 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0902 09:26:06.947391 16 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/02/25 09:26:06.947
  I0902 09:26:06.986787 16 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0902 09:26:07.048575 16 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/02/25 09:26:07.048
  E0902 09:26:07.641883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:08.641704      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:09.642110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:10.642614      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/02/25 09:26:11.196
  E0902 09:26:11.643788      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:12.645361      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:13.645318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:14.645720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/02/25 09:26:15.332
  STEP: Removing a custom resource @ 09/02/25 09:26:15.368
  STEP: Removing a custom resource @ 09/02/25 09:26:15.412
  I0902 09:26:15.442315 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7582" for this suite. @ 09/02/25 09:26:15.451
• [68.757 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/02/25 09:26:15.463
  I0902 09:26:15.463700 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename init-container @ 09/02/25 09:26:15.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:26:15.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:26:15.501
  STEP: creating the pod @ 09/02/25 09:26:15.508
  I0902 09:26:15.508685 16 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0902 09:26:15.645963      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:16.646316      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:17.646798      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:18.647934      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:19.648225      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:19.914319 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6861" for this suite. @ 09/02/25 09:26:19.932
• [4.490 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/02/25 09:26:19.953
  I0902 09:26:19.953908 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-probe @ 09/02/25 09:26:19.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:26:19.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:26:19.989
  STEP: Creating pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126 @ 09/02/25 09:26:19.995
  E0902 09:26:20.650256      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:21.650109      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/25 09:26:22.046
  I0902 09:26:22.055201 16 container_probe.go:1749] Initial restart count of pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 is 0
  I0902 09:26:22.062802 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:22.651377      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:23.651206      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:24.075220 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:24.652419      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:25.653140      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:26.085744 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:26.653500      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:27.654907      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:28.096225 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:28.655324      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:29.656187      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:30.110939 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:30.657320      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:31.658482      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:32.126227 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:32.658933      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:33.659258      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:34.139706 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:34.659731      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:35.660008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:36.153349 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:36.660387      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:37.661091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:38.164671 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:38.661704      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:39.662260      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:40.177159 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  E0902 09:26:40.662693      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:41.663406      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:42.191158 16 container_probe.go:1759] Get pod liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 in namespace container-probe-3126
  I0902 09:26:42.191304 16 container_probe.go:1763] Restart count of pod container-probe-3126/liveness-3983d54a-5670-4e2b-a055-48d8a2cfc486 is now 1 (20.136003443s elapsed)
  STEP: deleting the pod @ 09/02/25 09:26:42.191
  I0902 09:26:42.250679 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3126" for this suite. @ 09/02/25 09:26:42.274
• [22.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/02/25 09:26:42.291
  I0902 09:26:42.291465 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename downward-api @ 09/02/25 09:26:42.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:26:42.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:26:42.33
  STEP: Creating a pod to test downward api env vars @ 09/02/25 09:26:42.337
  E0902 09:26:42.663928      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:43.664490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:44.665594      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:45.665923      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:26:46.392
  I0902 09:26:46.398920 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod downward-api-287cecf9-5ba3-4a59-ab66-b6eab2161d3d container dapi-container: <nil>
  STEP: delete the pod @ 09/02/25 09:26:46.438
  I0902 09:26:46.466705 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7358" for this suite. @ 09/02/25 09:26:46.475
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 09/02/25 09:26:46.493
  I0902 09:26:46.493247 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:26:46.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:26:46.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:26:46.535
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/25 09:26:46.541
  I0902 09:26:46.541803 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-4522 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0902 09:26:46.666782      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:46.774323 16 builder.go:146] stderr: ""
  I0902 09:26:46.774509 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/02/25 09:26:46.774
  E0902 09:26:47.667851      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:48.669281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:49.670120      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:50.669973      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:51.670611      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/02/25 09:26:51.825
  I0902 09:26:51.825759 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-4522 get pod e2e-test-httpd-pod -o json'
  I0902 09:26:52.018659 16 builder.go:146] stderr: ""
  I0902 09:26:52.019462 16 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-02T09:26:46Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4522\",\n        \"resourceVersion\": \"47426\",\n        \"uid\": \"93316641-c702-474d-9e86-9a3d923bd3e8\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nq6gn\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"noo9iech3thi-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-nq6gn\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T09:26:47Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T09:26:46Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T09:26:47Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T09:26:47Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-02T09:26:46Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://6c8ad9451dc63bcc299d76ad77b31e6e70cdc9c6cd29e7fc4ad78d3f62c7f30a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-02T09:26:47Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nq6gn\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.121.152\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.152\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.100\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.100\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-02T09:26:46Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/02/25 09:26:52.02
  I0902 09:26:52.021557 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-4522 replace -f -'
  I0902 09:26:52.423350 16 builder.go:146] stderr: ""
  I0902 09:26:52.423709 16 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/02/25 09:26:52.424
  I0902 09:26:52.440789 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-4522 delete pods e2e-test-httpd-pod'
  E0902 09:26:52.670751      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:53.671405      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:26:54.099429 16 builder.go:146] stderr: ""
  I0902 09:26:54.099605 16 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0902 09:26:54.100322 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4522" for this suite. @ 09/02/25 09:26:54.113
• [7.636 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/02/25 09:26:54.13
  I0902 09:26:54.130904 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:26:54.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:26:54.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:26:54.166
  STEP: Creating configMap with name configmap-test-volume-c25a97e2-1266-4725-9b56-867529415558 @ 09/02/25 09:26:54.171
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:26:54.179
  E0902 09:26:54.672322      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:55.672887      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:56.673885      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:57.674039      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:26:58.237
  I0902 09:26:58.247848 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-2ffd7dc9-6386-46b4-8c13-661ae6f30772 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:26:58.265
  I0902 09:26:58.293799 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8024" for this suite. @ 09/02/25 09:26:58.302
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 09/02/25 09:26:58.315
  I0902 09:26:58.315864 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename job @ 09/02/25 09:26:58.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:26:58.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:26:58.349
  STEP: Creating a suspended job @ 09/02/25 09:26:58.364
  STEP: Patching the Job @ 09/02/25 09:26:58.377
  STEP: Watching for Job to be patched @ 09/02/25 09:26:58.404
  I0902 09:26:58.407407 16 job.go:1309] Event ADDED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9] and annotations: map[]
  I0902 09:26:58.407852 16 job.go:1312] Event MODIFIED found for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[]
  STEP: Updating the job @ 09/02/25 09:26:58.408
  STEP: Watching for Job to be updated @ 09/02/25 09:26:58.426
  I0902 09:26:58.429326 16 job.go:1312] Event MODIFIED found for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:26:58.429411 16 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/02/25 09:26:58.429
  I0902 09:26:58.439157 16 job.go:1187] Job: e2e-q58g9 as labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched]
  STEP: Waiting for job to complete @ 09/02/25 09:26:58.439
  E0902 09:26:58.674891      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:26:59.675147      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:00.675737      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:01.676126      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:02.676187      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:03.676927      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:04.678226      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:05.678233      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/02/25 09:27:06.543
  STEP: Watching for Job to be deleted @ 09/02/25 09:27:06.581
  I0902 09:27:06.593263 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.593388 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.594588 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.595883 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.595981 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.597170 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.597780 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.597897 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.598192 16 job.go:1309] Event MODIFIED observed for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  I0902 09:27:06.598269 16 job.go:1312] Event DELETED found for Job e2e-q58g9 in namespace job-2141 with labels: map[e2e-job-label:e2e-q58g9 e2e-q58g9:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/02/25 09:27:06.598
  I0902 09:27:06.609049 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2141" for this suite. @ 09/02/25 09:27:06.623
• [8.339 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/02/25 09:27:06.655
  I0902 09:27:06.656027 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename sched-pred @ 09/02/25 09:27:06.667
  E0902 09:27:06.678706      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:06.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:06.704
  I0902 09:27:06.709939 16 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0902 09:27:06.728153 16 util.go:396] Waiting for terminating namespaces to be deleted...
  I0902 09:27:06.736751 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-1 before test
  I0902 09:27:06.749215 16 predicates.go:957] cilium-nj7vw from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.749361 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 09:27:06.749388 16 predicates.go:957] cilium-node-init-hgzhs from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.749404 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 09:27:06.749422 16 predicates.go:957] coredns-668d6bf9bc-pmh8x from kube-system started at 2025-09-02 07:05:54 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.749443 16 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0902 09:27:06.749459 16 predicates.go:957] kube-apiserver-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.749473 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 09:27:06.749490 16 predicates.go:957] kube-controller-manager-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.749508 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 09:27:06.749963 16 predicates.go:957] kube-proxy-9w4sn from kube-system started at 2025-09-02 06:43:28 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.749981 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 09:27:06.749999 16 predicates.go:957] kube-scheduler-noo9iech3thi-1 from kube-system started at 2025-09-02 07:11:57 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.750014 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 09:27:06.750030 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-rzhk6 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 09:27:06.750043 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:27:06.750057 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 09:27:06.750073 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-2 before test
  I0902 09:27:06.759728 16 predicates.go:957] cilium-c4w69 from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760329 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0902 09:27:06.760549 16 predicates.go:957] cilium-node-init-5mfbq from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760771 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 09:27:06.760801 16 predicates.go:957] cilium-operator-b676844bf-xs2kw from kube-system started at 2025-09-02 07:07:12 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760818 16 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0902 09:27:06.760835 16 predicates.go:957] coredns-668d6bf9bc-94wcm from kube-system started at 2025-09-02 06:55:39 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760849 16 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0902 09:27:06.760864 16 predicates.go:957] kube-apiserver-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760878 16 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0902 09:27:06.760894 16 predicates.go:957] kube-controller-manager-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760915 16 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0902 09:27:06.760930 16 predicates.go:957] kube-proxy-5rgj5 from kube-system started at 2025-09-02 06:53:43 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760947 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 09:27:06.760963 16 predicates.go:957] kube-scheduler-noo9iech3thi-2 from kube-system started at 2025-09-02 07:12:21 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.760977 16 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0902 09:27:06.760993 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-99jz9 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 09:27:06.761007 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:27:06.761020 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0902 09:27:06.761035 16 predicates.go:119] 
  Logging pods the apiserver thinks is on node noo9iech3thi-3 before test
  I0902 09:27:06.771082 16 predicates.go:957] cilium-node-init-ll5nc from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.771140 16 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0902 09:27:06.771163 16 predicates.go:957] cilium-wbqzn from kube-system started at 2025-09-02 06:54:48 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.771178 16 predicates.go:959] 	Container cilium-agent ready: true, restart count 4
  I0902 09:27:06.771203 16 predicates.go:957] kube-proxy-98k2m from kube-system started at 2025-09-02 06:54:14 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.771218 16 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0902 09:27:06.771235 16 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-02 07:29:54 +0000 UTC (1 container statuses recorded)
  I0902 09:27:06.771249 16 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0902 09:27:06.771265 16 predicates.go:957] sonobuoy-e2e-job-0b6c70a640004788 from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 09:27:06.771280 16 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0902 09:27:06.771294 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:27:06.771310 16 predicates.go:957] sonobuoy-systemd-logs-daemon-set-78911291c2a2495f-7knzw from sonobuoy started at 2025-09-02 07:30:01 +0000 UTC (2 container statuses recorded)
  I0902 09:27:06.771325 16 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0902 09:27:06.771338 16 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/02/25 09:27:06.771
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18616d0bbc253112], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/02/25 09:27:06.832
  E0902 09:27:07.678818      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:07.845176 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7916" for this suite. @ 09/02/25 09:27:07.854
• [1.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/02/25 09:27:07.87
  I0902 09:27:07.870486 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 09:27:07.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:07.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:07.9
  STEP: creating service multi-endpoint-test in namespace services-7400 @ 09/02/25 09:27:07.905
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7400 to expose endpoints map[] @ 09/02/25 09:27:07.923
  I0902 09:27:07.936792 16 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0902 09:27:08.679421      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:08.967847 16 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-7400 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7400 @ 09/02/25 09:27:08.968
  E0902 09:27:09.679819      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:10.680606      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7400 to expose endpoints map[pod1:[100]] @ 09/02/25 09:27:11.025
  I0902 09:27:11.047739 16 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-7400 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7400 @ 09/02/25 09:27:11.047
  E0902 09:27:11.681030      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:12.681215      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7400 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/02/25 09:27:13.083
  I0902 09:27:13.116097 16 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-7400 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/02/25 09:27:13.116
  I0902 09:27:13.116254 16 resource.go:361] Creating new exec pod
  E0902 09:27:13.682875      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:14.683655      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:15.683883      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:16.146031 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7400 exec execpodd8b24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0902 09:27:16.494803 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.14.106) 80 port [tcp/http] succeeded!\n"
  I0902 09:27:16.494927 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:27:16.495228 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7400 exec execpodd8b24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.106 80'
  E0902 09:27:16.684993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:16.782445 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.106 80\nConnection to 10.233.14.106 80 port [tcp/http] succeeded!\n"
  I0902 09:27:16.782627 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:27:16.783188 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7400 exec execpodd8b24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0902 09:27:17.069851 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.14.106) 81 port [tcp/*] succeeded!\n"
  I0902 09:27:17.069935 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0902 09:27:17.070339 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7400 exec execpodd8b24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.106 81'
  I0902 09:27:17.369913 16 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.106 81\nConnection to 10.233.14.106 81 port [tcp/*] succeeded!\n"
  I0902 09:27:17.370018 16 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7400 @ 09/02/25 09:27:17.37
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7400 to expose endpoints map[pod2:[101]] @ 09/02/25 09:27:17.405
  E0902 09:27:17.685114      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:18.495986 16 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-7400 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7400 @ 09/02/25 09:27:18.497
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7400 to expose endpoints map[] @ 09/02/25 09:27:18.529
  E0902 09:27:18.685854      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:19.575779 16 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-7400 exposes endpoints map[]
  I0902 09:27:19.642102 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7400" for this suite. @ 09/02/25 09:27:19.654
• [11.806 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/02/25 09:27:19.676
  I0902 09:27:19.676493 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 09:27:19.681
  E0902 09:27:19.686311      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:19.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:19.719
  I0902 09:27:19.732257 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:27:20.687100      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:21.701565      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0902 09:27:22.521674      16 warnings.go:70] unknown field "alpha"
  W0902 09:27:22.521757      16 warnings.go:70] unknown field "beta"
  W0902 09:27:22.521769      16 warnings.go:70] unknown field "delta"
  W0902 09:27:22.521780      16 warnings.go:70] unknown field "epsilon"
  W0902 09:27:22.521791      16 warnings.go:70] unknown field "gamma"
  E0902 09:27:22.690245      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:23.156414 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7455" for this suite. @ 09/02/25 09:27:23.169
• [3.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/02/25 09:27:23.188
  I0902 09:27:23.188457 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename secrets @ 09/02/25 09:27:23.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:23.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:23.228
  STEP: Creating secret with name secret-test-64415f1a-bc28-4a9a-83c2-8053d80cc299 @ 09/02/25 09:27:23.235
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:27:23.248
  E0902 09:27:23.691641      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:24.691105      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:25.694065      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:26.693783      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:27:27.298
  I0902 09:27:27.315862 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-secrets-eb9d65a8-fcd1-4216-a1a0-f41072141bed container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:27:27.332
  I0902 09:27:27.389073 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6730" for this suite. @ 09/02/25 09:27:27.432
• [4.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/02/25 09:27:27.476
  I0902 09:27:27.477020 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename svc-latency @ 09/02/25 09:27:27.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:27.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:27.514
  I0902 09:27:27.519482 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1242 @ 09/02/25 09:27:27.521
  I0902 09:27:27.534677      16 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1242, replica count: 1
  E0902 09:27:27.693918      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:28.586359      16 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 09:27:28.694873      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:29.587135      16 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0902 09:27:29.695587      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:29.712297 16 service_latency.go:356] Created: latency-svc-gsnr4
  I0902 09:27:29.731616 16 service_latency.go:363] Got endpoints: latency-svc-gsnr4 [43.790266ms]
  I0902 09:27:29.766327 16 service_latency.go:356] Created: latency-svc-4972w
  I0902 09:27:29.784684 16 service_latency.go:363] Got endpoints: latency-svc-4972w [50.066123ms]
  I0902 09:27:29.787829 16 service_latency.go:356] Created: latency-svc-2h9ps
  I0902 09:27:29.802898 16 service_latency.go:356] Created: latency-svc-q4g75
  I0902 09:27:29.810001 16 service_latency.go:363] Got endpoints: latency-svc-q4g75 [74.720899ms]
  I0902 09:27:29.815832 16 service_latency.go:363] Got endpoints: latency-svc-2h9ps [82.826704ms]
  I0902 09:27:29.825102 16 service_latency.go:356] Created: latency-svc-4gdqb
  I0902 09:27:29.834835 16 service_latency.go:363] Got endpoints: latency-svc-4gdqb [99.410193ms]
  I0902 09:27:29.846181 16 service_latency.go:356] Created: latency-svc-jcdml
  I0902 09:27:29.855027 16 service_latency.go:363] Got endpoints: latency-svc-jcdml [119.41989ms]
  I0902 09:27:29.861090 16 service_latency.go:356] Created: latency-svc-vknlw
  I0902 09:27:29.872881 16 service_latency.go:356] Created: latency-svc-qz4cg
  I0902 09:27:29.883196 16 service_latency.go:363] Got endpoints: latency-svc-vknlw [147.262903ms]
  I0902 09:27:29.895939 16 service_latency.go:356] Created: latency-svc-sdgmf
  I0902 09:27:29.905028 16 service_latency.go:356] Created: latency-svc-zfsr8
  I0902 09:27:29.911362 16 service_latency.go:363] Got endpoints: latency-svc-qz4cg [175.217378ms]
  I0902 09:27:29.916197 16 service_latency.go:356] Created: latency-svc-78f7j
  I0902 09:27:29.933791 16 service_latency.go:356] Created: latency-svc-ddczb
  I0902 09:27:29.934702 16 service_latency.go:363] Got endpoints: latency-svc-sdgmf [198.407738ms]
  I0902 09:27:29.953056 16 service_latency.go:356] Created: latency-svc-d2vb6
  I0902 09:27:29.967401 16 service_latency.go:363] Got endpoints: latency-svc-zfsr8 [230.987057ms]
  I0902 09:27:29.978471 16 service_latency.go:363] Got endpoints: latency-svc-ddczb [242.705844ms]
  I0902 09:27:29.978807 16 service_latency.go:363] Got endpoints: latency-svc-78f7j [242.800005ms]
  I0902 09:27:29.995616 16 service_latency.go:363] Got endpoints: latency-svc-d2vb6 [258.861906ms]
  I0902 09:27:29.995644 16 service_latency.go:356] Created: latency-svc-m6v6g
  I0902 09:27:30.016174 16 service_latency.go:363] Got endpoints: latency-svc-m6v6g [279.026636ms]
  I0902 09:27:30.171754 16 service_latency.go:356] Created: latency-svc-2nbsd
  I0902 09:27:30.171998 16 service_latency.go:356] Created: latency-svc-tb557
  I0902 09:27:30.183428 16 service_latency.go:356] Created: latency-svc-8xzb8
  I0902 09:27:30.183929 16 service_latency.go:356] Created: latency-svc-5fgvr
  I0902 09:27:30.184383 16 service_latency.go:356] Created: latency-svc-hwlvj
  I0902 09:27:30.186324 16 service_latency.go:356] Created: latency-svc-2fdqj
  I0902 09:27:30.186407 16 service_latency.go:356] Created: latency-svc-hjvc6
  I0902 09:27:30.186441 16 service_latency.go:356] Created: latency-svc-nn46j
  I0902 09:27:30.186493 16 service_latency.go:356] Created: latency-svc-r9thc
  I0902 09:27:30.186503 16 service_latency.go:356] Created: latency-svc-lsghj
  I0902 09:27:30.191701 16 service_latency.go:363] Got endpoints: latency-svc-2nbsd [175.20868ms]
  I0902 09:27:30.204926 16 service_latency.go:356] Created: latency-svc-g7ghg
  I0902 09:27:30.204424 16 service_latency.go:356] Created: latency-svc-j7qkq
  I0902 09:27:30.206317 16 service_latency.go:363] Got endpoints: latency-svc-5fgvr [469.042769ms]
  I0902 09:27:30.207834 16 service_latency.go:356] Created: latency-svc-j8vvr
  I0902 09:27:30.207954 16 service_latency.go:356] Created: latency-svc-sg4xs
  I0902 09:27:30.208054 16 service_latency.go:356] Created: latency-svc-pkrcr
  I0902 09:27:30.217068 16 service_latency.go:363] Got endpoints: latency-svc-tb557 [361.922595ms]
  I0902 09:27:30.216508 16 service_latency.go:356] Created: latency-svc-cgwhh
  I0902 09:27:30.234307 16 service_latency.go:356] Created: latency-svc-45k4x
  I0902 09:27:30.237809 16 service_latency.go:363] Got endpoints: latency-svc-hwlvj [453.03486ms]
  I0902 09:27:30.251319 16 service_latency.go:356] Created: latency-svc-hgnb2
  I0902 09:27:30.262813 16 service_latency.go:356] Created: latency-svc-99wjr
  I0902 09:27:30.288741 16 service_latency.go:363] Got endpoints: latency-svc-g7ghg [552.158664ms]
  I0902 09:27:30.297078 16 service_latency.go:363] Got endpoints: latency-svc-8xzb8 [318.225283ms]
  I0902 09:27:30.297481 16 service_latency.go:363] Got endpoints: latency-svc-lsghj [487.407366ms]
  I0902 09:27:30.314353 16 service_latency.go:356] Created: latency-svc-4gpdl
  I0902 09:27:30.327324 16 service_latency.go:356] Created: latency-svc-slp7g
  I0902 09:27:30.337261 16 service_latency.go:356] Created: latency-svc-vmcrk
  I0902 09:27:30.363178 16 service_latency.go:363] Got endpoints: latency-svc-2fdqj [384.583467ms]
  I0902 09:27:30.367763 16 service_latency.go:363] Got endpoints: latency-svc-nn46j [532.870349ms]
  I0902 09:27:30.386411 16 service_latency.go:356] Created: latency-svc-phnlh
  I0902 09:27:30.394630 16 service_latency.go:356] Created: latency-svc-xsn6j
  I0902 09:27:30.426819 16 service_latency.go:363] Got endpoints: latency-svc-pkrcr [543.101004ms]
  I0902 09:27:30.429186 16 service_latency.go:363] Got endpoints: latency-svc-sg4xs [493.867242ms]
  I0902 09:27:30.429211 16 service_latency.go:363] Got endpoints: latency-svc-hjvc6 [461.704446ms]
  I0902 09:27:30.452477 16 service_latency.go:356] Created: latency-svc-s4qjw
  I0902 09:27:30.465149 16 service_latency.go:356] Created: latency-svc-nvdsd
  I0902 09:27:30.472368 16 service_latency.go:356] Created: latency-svc-nr6bh
  I0902 09:27:30.496097 16 service_latency.go:363] Got endpoints: latency-svc-j8vvr [499.933237ms]
  I0902 09:27:30.503055 16 service_latency.go:363] Got endpoints: latency-svc-r9thc [591.634616ms]
  I0902 09:27:30.509708 16 service_latency.go:363] Got endpoints: latency-svc-j7qkq [692.671635ms]
  I0902 09:27:30.527076 16 service_latency.go:356] Created: latency-svc-rq7w5
  I0902 09:27:30.550549 16 service_latency.go:363] Got endpoints: latency-svc-45k4x [344.074013ms]
  I0902 09:27:30.550575 16 service_latency.go:363] Got endpoints: latency-svc-cgwhh [358.744808ms]
  I0902 09:27:30.553576 16 service_latency.go:356] Created: latency-svc-xlssq
  I0902 09:27:30.554430 16 service_latency.go:356] Created: latency-svc-dpr7d
  I0902 09:27:30.597996 16 service_latency.go:363] Got endpoints: latency-svc-slp7g [300.806167ms]
  I0902 09:27:30.598650 16 service_latency.go:363] Got endpoints: latency-svc-99wjr [360.702696ms]
  I0902 09:27:30.599354 16 service_latency.go:363] Got endpoints: latency-svc-hgnb2 [382.227331ms]
  I0902 09:27:30.600116 16 service_latency.go:363] Got endpoints: latency-svc-4gpdl [311.288151ms]
  I0902 09:27:30.601785 16 service_latency.go:356] Created: latency-svc-jxr4x
  I0902 09:27:30.602932 16 service_latency.go:363] Got endpoints: latency-svc-vmcrk [305.34934ms]
  I0902 09:27:30.632810 16 service_latency.go:356] Created: latency-svc-k898d
  I0902 09:27:30.641751 16 service_latency.go:356] Created: latency-svc-x2bkv
  I0902 09:27:30.653297 16 service_latency.go:363] Got endpoints: latency-svc-s4qjw [226.327265ms]
  I0902 09:27:30.653545 16 service_latency.go:363] Got endpoints: latency-svc-xsn6j [285.65518ms]
  I0902 09:27:30.654036 16 service_latency.go:363] Got endpoints: latency-svc-phnlh [290.546661ms]
  I0902 09:27:30.687419 16 service_latency.go:356] Created: latency-svc-k4dpc
  I0902 09:27:30.688320 16 service_latency.go:363] Got endpoints: latency-svc-nr6bh [258.850416ms]
  I0902 09:27:30.688603 16 service_latency.go:363] Got endpoints: latency-svc-nvdsd [259.346122ms]
  E0902 09:27:30.696205      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:30.698061 16 service_latency.go:356] Created: latency-svc-gkqhv
  I0902 09:27:30.705503 16 service_latency.go:356] Created: latency-svc-kjmm6
  I0902 09:27:30.712018 16 service_latency.go:356] Created: latency-svc-5vjff
  I0902 09:27:30.730143 16 service_latency.go:356] Created: latency-svc-6r64f
  I0902 09:27:30.737662 16 service_latency.go:356] Created: latency-svc-dnjmd
  I0902 09:27:30.748765 16 service_latency.go:356] Created: latency-svc-726hx
  I0902 09:27:30.772260 16 service_latency.go:363] Got endpoints: latency-svc-dpr7d [269.13578ms]
  I0902 09:27:30.772582 16 service_latency.go:363] Got endpoints: latency-svc-xlssq [262.798983ms]
  I0902 09:27:30.772853 16 service_latency.go:363] Got endpoints: latency-svc-rq7w5 [276.67975ms]
  I0902 09:27:30.773035 16 service_latency.go:363] Got endpoints: latency-svc-jxr4x [222.210157ms]
  I0902 09:27:30.786609 16 service_latency.go:363] Got endpoints: latency-svc-k898d [235.997148ms]
  I0902 09:27:30.799076 16 service_latency.go:356] Created: latency-svc-7snbs
  I0902 09:27:30.799203 16 service_latency.go:356] Created: latency-svc-jsltt
  I0902 09:27:30.809101 16 service_latency.go:356] Created: latency-svc-5rxrz
  I0902 09:27:30.823773 16 service_latency.go:363] Got endpoints: latency-svc-x2bkv [225.674376ms]
  I0902 09:27:30.829848 16 service_latency.go:356] Created: latency-svc-spq6v
  I0902 09:27:30.843334 16 service_latency.go:356] Created: latency-svc-fjzw8
  I0902 09:27:30.845022 16 service_latency.go:363] Got endpoints: latency-svc-k4dpc [245.614205ms]
  I0902 09:27:30.847800 16 service_latency.go:363] Got endpoints: latency-svc-gkqhv [247.432976ms]
  I0902 09:27:30.860349 16 service_latency.go:356] Created: latency-svc-b4g6w
  I0902 09:27:30.877752 16 service_latency.go:363] Got endpoints: latency-svc-kjmm6 [278.913434ms]
  I0902 09:27:30.877789 16 service_latency.go:363] Got endpoints: latency-svc-5vjff [274.631825ms]
  I0902 09:27:30.885903 16 service_latency.go:356] Created: latency-svc-86g4t
  I0902 09:27:30.889605 16 service_latency.go:356] Created: latency-svc-5qsp7
  I0902 09:27:30.908154 16 service_latency.go:356] Created: latency-svc-wrk7r
  I0902 09:27:30.913093 16 service_latency.go:363] Got endpoints: latency-svc-6r64f [259.72394ms]
  I0902 09:27:30.920781 16 service_latency.go:363] Got endpoints: latency-svc-dnjmd [266.326017ms]
  I0902 09:27:30.964421 16 service_latency.go:363] Got endpoints: latency-svc-7snbs [275.750827ms]
  I0902 09:27:30.980701 16 service_latency.go:363] Got endpoints: latency-svc-jsltt [291.8695ms]
  I0902 09:27:31.032284 16 service_latency.go:363] Got endpoints: latency-svc-726hx [378.5317ms]
  I0902 09:27:31.045636 16 service_latency.go:356] Created: latency-svc-p4rlp
  I0902 09:27:31.070510 16 service_latency.go:356] Created: latency-svc-kqfxz
  I0902 09:27:31.072810 16 service_latency.go:356] Created: latency-svc-xwhvm
  I0902 09:27:31.076269 16 service_latency.go:356] Created: latency-svc-5q9bj
  I0902 09:27:31.081754 16 service_latency.go:356] Created: latency-svc-tdxtf
  I0902 09:27:31.081937 16 service_latency.go:356] Created: latency-svc-jc7qk
  I0902 09:27:31.084336 16 service_latency.go:363] Got endpoints: latency-svc-5rxrz [311.236634ms]
  I0902 09:27:31.094244 16 service_latency.go:356] Created: latency-svc-mz2hb
  I0902 09:27:31.094378 16 service_latency.go:356] Created: latency-svc-cbsnt
  I0902 09:27:31.108747 16 service_latency.go:356] Created: latency-svc-qnmqb
  I0902 09:27:31.123583 16 service_latency.go:363] Got endpoints: latency-svc-spq6v [347.603603ms]
  I0902 09:27:31.147032 16 service_latency.go:356] Created: latency-svc-glvfc
  I0902 09:27:31.178684 16 service_latency.go:363] Got endpoints: latency-svc-fjzw8 [402.340307ms]
  I0902 09:27:31.199469 16 service_latency.go:356] Created: latency-svc-lmwjw
  I0902 09:27:31.231463 16 service_latency.go:363] Got endpoints: latency-svc-b4g6w [456.752773ms]
  I0902 09:27:31.258383 16 service_latency.go:356] Created: latency-svc-dgq7v
  I0902 09:27:31.283337 16 service_latency.go:363] Got endpoints: latency-svc-86g4t [494.052697ms]
  I0902 09:27:31.321788 16 service_latency.go:356] Created: latency-svc-25twp
  I0902 09:27:31.342601 16 service_latency.go:363] Got endpoints: latency-svc-5qsp7 [518.710052ms]
  I0902 09:27:31.376796 16 service_latency.go:363] Got endpoints: latency-svc-wrk7r [531.659227ms]
  I0902 09:27:31.398850 16 service_latency.go:356] Created: latency-svc-d85z2
  I0902 09:27:31.413080 16 service_latency.go:356] Created: latency-svc-9qchr
  I0902 09:27:31.426416 16 service_latency.go:363] Got endpoints: latency-svc-p4rlp [547.564193ms]
  I0902 09:27:31.445709 16 service_latency.go:356] Created: latency-svc-dzfk5
  I0902 09:27:31.474334 16 service_latency.go:363] Got endpoints: latency-svc-xwhvm [596.42753ms]
  I0902 09:27:31.491825 16 service_latency.go:356] Created: latency-svc-59xrg
  I0902 09:27:31.525087 16 service_latency.go:363] Got endpoints: latency-svc-kqfxz [677.176561ms]
  I0902 09:27:31.545487 16 service_latency.go:356] Created: latency-svc-r46gp
  I0902 09:27:31.574496 16 service_latency.go:363] Got endpoints: latency-svc-5q9bj [661.295788ms]
  I0902 09:27:31.606259 16 service_latency.go:356] Created: latency-svc-x6ljd
  I0902 09:27:31.629366 16 service_latency.go:363] Got endpoints: latency-svc-mz2hb [707.077636ms]
  I0902 09:27:31.651487 16 service_latency.go:356] Created: latency-svc-hk44p
  I0902 09:27:31.674453 16 service_latency.go:363] Got endpoints: latency-svc-cbsnt [639.957182ms]
  I0902 09:27:31.692364 16 service_latency.go:356] Created: latency-svc-92554
  E0902 09:27:31.696778      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:31.727413 16 service_latency.go:363] Got endpoints: latency-svc-jc7qk [762.800804ms]
  I0902 09:27:31.748427 16 service_latency.go:356] Created: latency-svc-kz7mx
  I0902 09:27:31.793461 16 service_latency.go:363] Got endpoints: latency-svc-tdxtf [812.646053ms]
  I0902 09:27:31.889061 16 service_latency.go:356] Created: latency-svc-cjkfj
  I0902 09:27:31.922996 16 service_latency.go:363] Got endpoints: latency-svc-glvfc [799.329227ms]
  I0902 09:27:31.923187 16 service_latency.go:363] Got endpoints: latency-svc-qnmqb [838.126152ms]
  I0902 09:27:31.951569 16 service_latency.go:363] Got endpoints: latency-svc-lmwjw [772.703182ms]
  I0902 09:27:31.978783 16 service_latency.go:363] Got endpoints: latency-svc-dgq7v [747.169163ms]
  I0902 09:27:31.979321 16 service_latency.go:356] Created: latency-svc-pdlbn
  I0902 09:27:31.996640 16 service_latency.go:356] Created: latency-svc-hzpl6
  I0902 09:27:32.011016 16 service_latency.go:356] Created: latency-svc-jvtvh
  I0902 09:27:32.017372 16 service_latency.go:356] Created: latency-svc-v92tz
  I0902 09:27:32.030967 16 service_latency.go:363] Got endpoints: latency-svc-25twp [747.528031ms]
  I0902 09:27:32.053869 16 service_latency.go:356] Created: latency-svc-xfn49
  I0902 09:27:32.075199 16 service_latency.go:363] Got endpoints: latency-svc-d85z2 [732.175389ms]
  I0902 09:27:32.100247 16 service_latency.go:356] Created: latency-svc-m4kv6
  I0902 09:27:32.124084 16 service_latency.go:363] Got endpoints: latency-svc-9qchr [747.195828ms]
  I0902 09:27:32.142367 16 service_latency.go:356] Created: latency-svc-qnmjb
  I0902 09:27:32.176767 16 service_latency.go:363] Got endpoints: latency-svc-dzfk5 [750.215002ms]
  I0902 09:27:32.200485 16 service_latency.go:356] Created: latency-svc-ns6f9
  I0902 09:27:32.232553 16 service_latency.go:363] Got endpoints: latency-svc-59xrg [758.069994ms]
  I0902 09:27:32.253271 16 service_latency.go:356] Created: latency-svc-8jg5g
  I0902 09:27:32.283346 16 service_latency.go:363] Got endpoints: latency-svc-r46gp [757.632311ms]
  I0902 09:27:32.304081 16 service_latency.go:356] Created: latency-svc-9xjtm
  I0902 09:27:32.327259 16 service_latency.go:363] Got endpoints: latency-svc-x6ljd [752.627495ms]
  I0902 09:27:32.348478 16 service_latency.go:356] Created: latency-svc-rr6t8
  I0902 09:27:32.378368 16 service_latency.go:363] Got endpoints: latency-svc-hk44p [748.891693ms]
  I0902 09:27:32.401671 16 service_latency.go:356] Created: latency-svc-bnlxr
  I0902 09:27:32.423854 16 service_latency.go:363] Got endpoints: latency-svc-92554 [748.988962ms]
  I0902 09:27:32.444014 16 service_latency.go:356] Created: latency-svc-vwjn7
  I0902 09:27:32.476976 16 service_latency.go:363] Got endpoints: latency-svc-kz7mx [749.401073ms]
  I0902 09:27:32.508655 16 service_latency.go:356] Created: latency-svc-fsfk2
  I0902 09:27:32.531115 16 service_latency.go:363] Got endpoints: latency-svc-cjkfj [737.509038ms]
  I0902 09:27:32.553692 16 service_latency.go:356] Created: latency-svc-q87b9
  I0902 09:27:32.573859 16 service_latency.go:363] Got endpoints: latency-svc-pdlbn [650.587067ms]
  I0902 09:27:32.600575 16 service_latency.go:356] Created: latency-svc-lcbmm
  I0902 09:27:32.625905 16 service_latency.go:363] Got endpoints: latency-svc-hzpl6 [702.81245ms]
  I0902 09:27:32.650676 16 service_latency.go:356] Created: latency-svc-2mw4h
  I0902 09:27:32.676372 16 service_latency.go:363] Got endpoints: latency-svc-jvtvh [724.675253ms]
  I0902 09:27:32.696375 16 service_latency.go:356] Created: latency-svc-99x62
  E0902 09:27:32.697501      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:32.722885 16 service_latency.go:363] Got endpoints: latency-svc-v92tz [743.989128ms]
  I0902 09:27:32.745666 16 service_latency.go:356] Created: latency-svc-2lsz9
  I0902 09:27:32.781043 16 service_latency.go:363] Got endpoints: latency-svc-xfn49 [749.978161ms]
  I0902 09:27:32.804661 16 service_latency.go:356] Created: latency-svc-bdk9h
  I0902 09:27:32.831597 16 service_latency.go:363] Got endpoints: latency-svc-m4kv6 [755.986893ms]
  I0902 09:27:32.854379 16 service_latency.go:356] Created: latency-svc-wc7nw
  I0902 09:27:32.883147 16 service_latency.go:363] Got endpoints: latency-svc-qnmjb [758.87542ms]
  I0902 09:27:32.904569 16 service_latency.go:356] Created: latency-svc-ck6ft
  I0902 09:27:32.927203 16 service_latency.go:363] Got endpoints: latency-svc-ns6f9 [750.322826ms]
  I0902 09:27:32.946085 16 service_latency.go:356] Created: latency-svc-h6qpb
  I0902 09:27:32.979991 16 service_latency.go:363] Got endpoints: latency-svc-8jg5g [747.295817ms]
  I0902 09:27:33.004406 16 service_latency.go:356] Created: latency-svc-kd855
  I0902 09:27:33.024200 16 service_latency.go:363] Got endpoints: latency-svc-9xjtm [740.348656ms]
  I0902 09:27:33.049857 16 service_latency.go:356] Created: latency-svc-b6l7p
  I0902 09:27:33.073549 16 service_latency.go:363] Got endpoints: latency-svc-rr6t8 [746.183497ms]
  I0902 09:27:33.096275 16 service_latency.go:356] Created: latency-svc-rswt5
  I0902 09:27:33.126199 16 service_latency.go:363] Got endpoints: latency-svc-bnlxr [747.728129ms]
  I0902 09:27:33.151870 16 service_latency.go:356] Created: latency-svc-5xdmp
  I0902 09:27:33.175003 16 service_latency.go:363] Got endpoints: latency-svc-vwjn7 [751.03682ms]
  I0902 09:27:33.194301 16 service_latency.go:356] Created: latency-svc-6vs9k
  I0902 09:27:33.223931 16 service_latency.go:363] Got endpoints: latency-svc-fsfk2 [746.842579ms]
  I0902 09:27:33.244611 16 service_latency.go:356] Created: latency-svc-nsj99
  I0902 09:27:33.274156 16 service_latency.go:363] Got endpoints: latency-svc-q87b9 [742.469518ms]
  I0902 09:27:33.295133 16 service_latency.go:356] Created: latency-svc-dlhsx
  I0902 09:27:33.327023 16 service_latency.go:363] Got endpoints: latency-svc-lcbmm [753.056852ms]
  I0902 09:27:33.344410 16 service_latency.go:356] Created: latency-svc-gcbzv
  I0902 09:27:33.389220 16 service_latency.go:363] Got endpoints: latency-svc-2mw4h [763.174622ms]
  I0902 09:27:33.414113 16 service_latency.go:356] Created: latency-svc-mxt82
  I0902 09:27:33.428090 16 service_latency.go:363] Got endpoints: latency-svc-99x62 [751.624033ms]
  I0902 09:27:33.455481 16 service_latency.go:356] Created: latency-svc-stfj7
  I0902 09:27:33.492872 16 service_latency.go:363] Got endpoints: latency-svc-2lsz9 [769.912468ms]
  I0902 09:27:33.517562 16 service_latency.go:356] Created: latency-svc-hqpw4
  I0902 09:27:33.532837 16 service_latency.go:363] Got endpoints: latency-svc-bdk9h [751.696015ms]
  I0902 09:27:33.568631 16 service_latency.go:356] Created: latency-svc-qvjml
  I0902 09:27:33.580035 16 service_latency.go:363] Got endpoints: latency-svc-wc7nw [748.366296ms]
  I0902 09:27:33.611335 16 service_latency.go:356] Created: latency-svc-qlks6
  I0902 09:27:33.661608 16 service_latency.go:363] Got endpoints: latency-svc-ck6ft [778.374067ms]
  I0902 09:27:33.682606 16 service_latency.go:356] Created: latency-svc-8k8pv
  I0902 09:27:33.688845 16 service_latency.go:363] Got endpoints: latency-svc-h6qpb [761.545838ms]
  E0902 09:27:33.697647      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:33.709600 16 service_latency.go:356] Created: latency-svc-rvmsl
  I0902 09:27:33.738806 16 service_latency.go:363] Got endpoints: latency-svc-kd855 [758.534908ms]
  I0902 09:27:33.762234 16 service_latency.go:356] Created: latency-svc-9wmzk
  I0902 09:27:33.783785 16 service_latency.go:363] Got endpoints: latency-svc-b6l7p [759.374503ms]
  I0902 09:27:33.805225 16 service_latency.go:356] Created: latency-svc-r984h
  I0902 09:27:33.840589 16 service_latency.go:363] Got endpoints: latency-svc-rswt5 [766.977803ms]
  I0902 09:27:33.866477 16 service_latency.go:356] Created: latency-svc-qqtsb
  I0902 09:27:33.883971 16 service_latency.go:363] Got endpoints: latency-svc-5xdmp [757.677886ms]
  I0902 09:27:33.915658 16 service_latency.go:356] Created: latency-svc-hsfg5
  I0902 09:27:33.929000 16 service_latency.go:363] Got endpoints: latency-svc-6vs9k [753.875028ms]
  I0902 09:27:33.946822 16 service_latency.go:356] Created: latency-svc-qjwz2
  I0902 09:27:33.978433 16 service_latency.go:363] Got endpoints: latency-svc-nsj99 [754.350715ms]
  I0902 09:27:34.001032 16 service_latency.go:356] Created: latency-svc-xxxqr
  I0902 09:27:34.025689 16 service_latency.go:363] Got endpoints: latency-svc-dlhsx [751.443569ms]
  I0902 09:27:34.046115 16 service_latency.go:356] Created: latency-svc-6mp67
  I0902 09:27:34.074338 16 service_latency.go:363] Got endpoints: latency-svc-gcbzv [747.229474ms]
  I0902 09:27:34.101129 16 service_latency.go:356] Created: latency-svc-fgcmr
  I0902 09:27:34.125718 16 service_latency.go:363] Got endpoints: latency-svc-mxt82 [736.389187ms]
  I0902 09:27:34.147247 16 service_latency.go:356] Created: latency-svc-vpx67
  I0902 09:27:34.175734 16 service_latency.go:363] Got endpoints: latency-svc-stfj7 [747.5529ms]
  I0902 09:27:34.196997 16 service_latency.go:356] Created: latency-svc-l6pc7
  I0902 09:27:34.225876 16 service_latency.go:363] Got endpoints: latency-svc-hqpw4 [732.806763ms]
  I0902 09:27:34.249651 16 service_latency.go:356] Created: latency-svc-prb47
  I0902 09:27:34.273994 16 service_latency.go:363] Got endpoints: latency-svc-qvjml [741.094704ms]
  I0902 09:27:34.298668 16 service_latency.go:356] Created: latency-svc-rbtkz
  I0902 09:27:34.327365 16 service_latency.go:363] Got endpoints: latency-svc-qlks6 [746.966451ms]
  I0902 09:27:34.348506 16 service_latency.go:356] Created: latency-svc-l27sd
  I0902 09:27:34.381560 16 service_latency.go:363] Got endpoints: latency-svc-8k8pv [719.866321ms]
  I0902 09:27:34.402078 16 service_latency.go:356] Created: latency-svc-js9vm
  I0902 09:27:34.434313 16 service_latency.go:363] Got endpoints: latency-svc-rvmsl [745.286001ms]
  I0902 09:27:34.454698 16 service_latency.go:356] Created: latency-svc-hq9f7
  I0902 09:27:34.475099 16 service_latency.go:363] Got endpoints: latency-svc-9wmzk [736.153696ms]
  I0902 09:27:34.495222 16 service_latency.go:356] Created: latency-svc-94xwn
  I0902 09:27:34.526944 16 service_latency.go:363] Got endpoints: latency-svc-r984h [742.878086ms]
  I0902 09:27:34.550480 16 service_latency.go:356] Created: latency-svc-72dcz
  I0902 09:27:34.582506 16 service_latency.go:363] Got endpoints: latency-svc-qqtsb [741.322577ms]
  I0902 09:27:34.603455 16 service_latency.go:356] Created: latency-svc-dkr9z
  I0902 09:27:34.627182 16 service_latency.go:363] Got endpoints: latency-svc-hsfg5 [743.10663ms]
  I0902 09:27:34.668589 16 service_latency.go:356] Created: latency-svc-vr8fg
  I0902 09:27:34.677834 16 service_latency.go:363] Got endpoints: latency-svc-qjwz2 [748.416413ms]
  E0902 09:27:34.698549      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:34.705462 16 service_latency.go:356] Created: latency-svc-j85zd
  I0902 09:27:34.727272 16 service_latency.go:363] Got endpoints: latency-svc-xxxqr [748.682664ms]
  I0902 09:27:34.757683 16 service_latency.go:356] Created: latency-svc-mfcvh
  I0902 09:27:34.775290 16 service_latency.go:363] Got endpoints: latency-svc-6mp67 [749.466894ms]
  I0902 09:27:34.798370 16 service_latency.go:356] Created: latency-svc-hgtcj
  I0902 09:27:34.829228 16 service_latency.go:363] Got endpoints: latency-svc-fgcmr [754.502727ms]
  I0902 09:27:34.855306 16 service_latency.go:356] Created: latency-svc-m7vss
  I0902 09:27:34.875586 16 service_latency.go:363] Got endpoints: latency-svc-vpx67 [749.709001ms]
  I0902 09:27:34.897457 16 service_latency.go:356] Created: latency-svc-bhx8b
  I0902 09:27:34.930988 16 service_latency.go:363] Got endpoints: latency-svc-l6pc7 [755.136909ms]
  I0902 09:27:34.979116 16 service_latency.go:356] Created: latency-svc-vvxmz
  I0902 09:27:34.981804 16 service_latency.go:363] Got endpoints: latency-svc-prb47 [755.814652ms]
  I0902 09:27:34.999250 16 service_latency.go:356] Created: latency-svc-nm6sc
  I0902 09:27:35.028132 16 service_latency.go:363] Got endpoints: latency-svc-rbtkz [754.006887ms]
  I0902 09:27:35.059327 16 service_latency.go:356] Created: latency-svc-fc4sb
  I0902 09:27:35.084326 16 service_latency.go:363] Got endpoints: latency-svc-l27sd [756.113318ms]
  I0902 09:27:35.107809 16 service_latency.go:356] Created: latency-svc-fmrzw
  I0902 09:27:35.127288 16 service_latency.go:363] Got endpoints: latency-svc-js9vm [745.601962ms]
  I0902 09:27:35.149960 16 service_latency.go:356] Created: latency-svc-fbh2h
  I0902 09:27:35.175577 16 service_latency.go:363] Got endpoints: latency-svc-hq9f7 [740.589204ms]
  I0902 09:27:35.196619 16 service_latency.go:356] Created: latency-svc-ftg5w
  I0902 09:27:35.242184 16 service_latency.go:363] Got endpoints: latency-svc-94xwn [766.932098ms]
  I0902 09:27:35.264732 16 service_latency.go:356] Created: latency-svc-zc2gn
  I0902 09:27:35.279343 16 service_latency.go:363] Got endpoints: latency-svc-72dcz [752.246879ms]
  I0902 09:27:35.301485 16 service_latency.go:356] Created: latency-svc-tlrf5
  I0902 09:27:35.337481 16 service_latency.go:363] Got endpoints: latency-svc-dkr9z [754.820457ms]
  I0902 09:27:35.376505 16 service_latency.go:356] Created: latency-svc-bf796
  I0902 09:27:35.381951 16 service_latency.go:363] Got endpoints: latency-svc-vr8fg [754.672476ms]
  I0902 09:27:35.404252 16 service_latency.go:356] Created: latency-svc-4scwp
  I0902 09:27:35.428377 16 service_latency.go:363] Got endpoints: latency-svc-j85zd [749.039694ms]
  I0902 09:27:35.452425 16 service_latency.go:356] Created: latency-svc-lg8rd
  I0902 09:27:35.474120 16 service_latency.go:363] Got endpoints: latency-svc-mfcvh [746.671777ms]
  I0902 09:27:35.500477 16 service_latency.go:356] Created: latency-svc-prgfs
  I0902 09:27:35.526404 16 service_latency.go:363] Got endpoints: latency-svc-hgtcj [751.016956ms]
  I0902 09:27:35.549805 16 service_latency.go:356] Created: latency-svc-9wwfp
  I0902 09:27:35.577078 16 service_latency.go:363] Got endpoints: latency-svc-m7vss [747.709296ms]
  I0902 09:27:35.597296 16 service_latency.go:356] Created: latency-svc-sxm5w
  I0902 09:27:35.627891 16 service_latency.go:363] Got endpoints: latency-svc-bhx8b [752.081698ms]
  I0902 09:27:35.649405 16 service_latency.go:356] Created: latency-svc-dbc58
  I0902 09:27:35.674891 16 service_latency.go:363] Got endpoints: latency-svc-vvxmz [743.793116ms]
  I0902 09:27:35.693593 16 service_latency.go:356] Created: latency-svc-dw88b
  E0902 09:27:35.698955      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:35.727153 16 service_latency.go:363] Got endpoints: latency-svc-nm6sc [745.276037ms]
  I0902 09:27:35.751599 16 service_latency.go:356] Created: latency-svc-nmdq7
  I0902 09:27:35.807944 16 service_latency.go:363] Got endpoints: latency-svc-fc4sb [779.624762ms]
  I0902 09:27:35.888149 16 service_latency.go:363] Got endpoints: latency-svc-fmrzw [803.471471ms]
  I0902 09:27:35.904708 16 service_latency.go:356] Created: latency-svc-cjscx
  I0902 09:27:35.905886 16 service_latency.go:363] Got endpoints: latency-svc-fbh2h [778.470257ms]
  I0902 09:27:35.916157 16 service_latency.go:356] Created: latency-svc-hplkp
  I0902 09:27:35.928997 16 service_latency.go:363] Got endpoints: latency-svc-ftg5w [753.317155ms]
  I0902 09:27:35.928997 16 service_latency.go:356] Created: latency-svc-8rqqw
  I0902 09:27:35.950307 16 service_latency.go:356] Created: latency-svc-v8d9j
  I0902 09:27:35.977559 16 service_latency.go:363] Got endpoints: latency-svc-zc2gn [734.970137ms]
  I0902 09:27:36.012625 16 service_latency.go:356] Created: latency-svc-5ztnm
  I0902 09:27:36.026393 16 service_latency.go:363] Got endpoints: latency-svc-tlrf5 [746.943335ms]
  I0902 09:27:36.050668 16 service_latency.go:356] Created: latency-svc-22glk
  I0902 09:27:36.075880 16 service_latency.go:363] Got endpoints: latency-svc-bf796 [736.990951ms]
  I0902 09:27:36.098628 16 service_latency.go:356] Created: latency-svc-ssf8h
  I0902 09:27:36.124941 16 service_latency.go:363] Got endpoints: latency-svc-4scwp [742.92062ms]
  I0902 09:27:36.148154 16 service_latency.go:356] Created: latency-svc-j8l9m
  I0902 09:27:36.177583 16 service_latency.go:363] Got endpoints: latency-svc-lg8rd [748.101902ms]
  I0902 09:27:36.200211 16 service_latency.go:356] Created: latency-svc-jtv2q
  I0902 09:27:36.240200 16 service_latency.go:363] Got endpoints: latency-svc-prgfs [765.962698ms]
  I0902 09:27:36.271322 16 service_latency.go:356] Created: latency-svc-q8k4l
  I0902 09:27:36.279253 16 service_latency.go:363] Got endpoints: latency-svc-9wwfp [752.734854ms]
  I0902 09:27:36.300583 16 service_latency.go:356] Created: latency-svc-826w7
  I0902 09:27:36.326349 16 service_latency.go:363] Got endpoints: latency-svc-sxm5w [749.159289ms]
  I0902 09:27:36.345444 16 service_latency.go:356] Created: latency-svc-lqc49
  I0902 09:27:36.380241 16 service_latency.go:363] Got endpoints: latency-svc-dbc58 [752.234898ms]
  I0902 09:27:36.404784 16 service_latency.go:356] Created: latency-svc-hgdjq
  I0902 09:27:36.435036 16 service_latency.go:363] Got endpoints: latency-svc-dw88b [760.034687ms]
  I0902 09:27:36.457090 16 service_latency.go:356] Created: latency-svc-wlm28
  I0902 09:27:36.478850 16 service_latency.go:363] Got endpoints: latency-svc-nmdq7 [751.576908ms]
  I0902 09:27:36.499129 16 service_latency.go:356] Created: latency-svc-n9rvq
  I0902 09:27:36.530435 16 service_latency.go:363] Got endpoints: latency-svc-cjscx [722.372232ms]
  I0902 09:27:36.552686 16 service_latency.go:356] Created: latency-svc-qhld8
  I0902 09:27:36.577421 16 service_latency.go:363] Got endpoints: latency-svc-hplkp [689.077659ms]
  I0902 09:27:36.598317 16 service_latency.go:356] Created: latency-svc-h8z9b
  I0902 09:27:36.625711 16 service_latency.go:363] Got endpoints: latency-svc-8rqqw [719.650115ms]
  I0902 09:27:36.645348 16 service_latency.go:356] Created: latency-svc-nmtxq
  I0902 09:27:36.677555 16 service_latency.go:363] Got endpoints: latency-svc-v8d9j [748.432798ms]
  E0902 09:27:36.700036      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:36.702723 16 service_latency.go:356] Created: latency-svc-tnsdr
  I0902 09:27:36.726615 16 service_latency.go:363] Got endpoints: latency-svc-5ztnm [748.876111ms]
  I0902 09:27:36.749270 16 service_latency.go:356] Created: latency-svc-mltst
  I0902 09:27:36.780815 16 service_latency.go:363] Got endpoints: latency-svc-22glk [754.352797ms]
  I0902 09:27:36.808679 16 service_latency.go:356] Created: latency-svc-m8jw2
  I0902 09:27:36.828014 16 service_latency.go:363] Got endpoints: latency-svc-ssf8h [752.056019ms]
  I0902 09:27:36.850415 16 service_latency.go:356] Created: latency-svc-r8ksx
  I0902 09:27:36.876915 16 service_latency.go:363] Got endpoints: latency-svc-j8l9m [751.903572ms]
  I0902 09:27:36.895291 16 service_latency.go:356] Created: latency-svc-tpztt
  I0902 09:27:36.925382 16 service_latency.go:363] Got endpoints: latency-svc-jtv2q [747.667595ms]
  I0902 09:27:36.947017 16 service_latency.go:356] Created: latency-svc-qbv8r
  I0902 09:27:36.980033 16 service_latency.go:363] Got endpoints: latency-svc-q8k4l [739.73648ms]
  I0902 09:27:37.001554 16 service_latency.go:356] Created: latency-svc-2xnfg
  I0902 09:27:37.024699 16 service_latency.go:363] Got endpoints: latency-svc-826w7 [745.35585ms]
  I0902 09:27:37.046033 16 service_latency.go:356] Created: latency-svc-qt6nx
  I0902 09:27:37.076157 16 service_latency.go:363] Got endpoints: latency-svc-lqc49 [749.650188ms]
  I0902 09:27:37.093901 16 service_latency.go:356] Created: latency-svc-p6bsl
  I0902 09:27:37.127662 16 service_latency.go:363] Got endpoints: latency-svc-hgdjq [747.351865ms]
  I0902 09:27:37.151928 16 service_latency.go:356] Created: latency-svc-sr9qs
  I0902 09:27:37.194232 16 service_latency.go:363] Got endpoints: latency-svc-wlm28 [758.288652ms]
  I0902 09:27:37.215968 16 service_latency.go:356] Created: latency-svc-c8ggj
  I0902 09:27:37.227392 16 service_latency.go:363] Got endpoints: latency-svc-n9rvq [748.456419ms]
  I0902 09:27:37.249779 16 service_latency.go:356] Created: latency-svc-csjf6
  I0902 09:27:37.275928 16 service_latency.go:363] Got endpoints: latency-svc-qhld8 [745.106237ms]
  I0902 09:27:37.300848 16 service_latency.go:356] Created: latency-svc-wpd68
  I0902 09:27:37.327070 16 service_latency.go:363] Got endpoints: latency-svc-h8z9b [749.547582ms]
  I0902 09:27:37.349053 16 service_latency.go:356] Created: latency-svc-mgcgp
  I0902 09:27:37.377346 16 service_latency.go:363] Got endpoints: latency-svc-nmtxq [751.50597ms]
  I0902 09:27:37.396649 16 service_latency.go:356] Created: latency-svc-76ds8
  I0902 09:27:37.425194 16 service_latency.go:363] Got endpoints: latency-svc-tnsdr [747.542068ms]
  I0902 09:27:37.449942 16 service_latency.go:356] Created: latency-svc-n8d56
  I0902 09:27:37.478788 16 service_latency.go:363] Got endpoints: latency-svc-mltst [752.070891ms]
  I0902 09:27:37.502713 16 service_latency.go:356] Created: latency-svc-sdhwv
  I0902 09:27:37.522917 16 service_latency.go:363] Got endpoints: latency-svc-m8jw2 [742.023398ms]
  I0902 09:27:37.546901 16 service_latency.go:356] Created: latency-svc-2t9hr
  I0902 09:27:37.576147 16 service_latency.go:363] Got endpoints: latency-svc-r8ksx [748.034596ms]
  I0902 09:27:37.624606 16 service_latency.go:363] Got endpoints: latency-svc-tpztt [747.46122ms]
  I0902 09:27:37.677605 16 service_latency.go:363] Got endpoints: latency-svc-qbv8r [751.97163ms]
  E0902 09:27:37.700733      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:37.729430 16 service_latency.go:363] Got endpoints: latency-svc-2xnfg [749.299113ms]
  I0902 09:27:37.777080 16 service_latency.go:363] Got endpoints: latency-svc-qt6nx [752.298787ms]
  I0902 09:27:37.824773 16 service_latency.go:363] Got endpoints: latency-svc-p6bsl [748.343212ms]
  I0902 09:27:37.893149 16 service_latency.go:363] Got endpoints: latency-svc-sr9qs [765.344344ms]
  I0902 09:27:37.926952 16 service_latency.go:363] Got endpoints: latency-svc-c8ggj [732.571263ms]
  I0902 09:27:37.982377 16 service_latency.go:363] Got endpoints: latency-svc-csjf6 [754.896093ms]
  I0902 09:27:38.035309 16 service_latency.go:363] Got endpoints: latency-svc-wpd68 [759.140922ms]
  I0902 09:27:38.084733 16 service_latency.go:363] Got endpoints: latency-svc-mgcgp [757.543782ms]
  I0902 09:27:38.125977 16 service_latency.go:363] Got endpoints: latency-svc-76ds8 [748.54882ms]
  I0902 09:27:38.175036 16 service_latency.go:363] Got endpoints: latency-svc-n8d56 [749.725962ms]
  I0902 09:27:38.227700 16 service_latency.go:363] Got endpoints: latency-svc-sdhwv [748.798162ms]
  I0902 09:27:38.273702 16 service_latency.go:363] Got endpoints: latency-svc-2t9hr [750.701188ms]
  I0902 09:27:38.274251 16 service_latency.go:114] Latencies: [50.066123ms 74.720899ms 82.826704ms 99.410193ms 119.41989ms 147.262903ms 175.20868ms 175.217378ms 198.407738ms 222.210157ms 225.674376ms 226.327265ms 230.987057ms 235.997148ms 242.705844ms 242.800005ms 245.614205ms 247.432976ms 258.850416ms 258.861906ms 259.346122ms 259.72394ms 262.798983ms 266.326017ms 269.13578ms 274.631825ms 275.750827ms 276.67975ms 278.913434ms 279.026636ms 285.65518ms 290.546661ms 291.8695ms 300.806167ms 305.34934ms 311.236634ms 311.288151ms 318.225283ms 344.074013ms 347.603603ms 358.744808ms 360.702696ms 361.922595ms 378.5317ms 382.227331ms 384.583467ms 402.340307ms 453.03486ms 456.752773ms 461.704446ms 469.042769ms 487.407366ms 493.867242ms 494.052697ms 499.933237ms 518.710052ms 531.659227ms 532.870349ms 543.101004ms 547.564193ms 552.158664ms 591.634616ms 596.42753ms 639.957182ms 650.587067ms 661.295788ms 677.176561ms 689.077659ms 692.671635ms 702.81245ms 707.077636ms 719.650115ms 719.866321ms 722.372232ms 724.675253ms 732.175389ms 732.571263ms 732.806763ms 734.970137ms 736.153696ms 736.389187ms 736.990951ms 737.509038ms 739.73648ms 740.348656ms 740.589204ms 741.094704ms 741.322577ms 742.023398ms 742.469518ms 742.878086ms 742.92062ms 743.10663ms 743.793116ms 743.989128ms 745.106237ms 745.276037ms 745.286001ms 745.35585ms 745.601962ms 746.183497ms 746.671777ms 746.842579ms 746.943335ms 746.966451ms 747.169163ms 747.195828ms 747.229474ms 747.295817ms 747.351865ms 747.46122ms 747.528031ms 747.542068ms 747.5529ms 747.667595ms 747.709296ms 747.728129ms 748.034596ms 748.101902ms 748.343212ms 748.366296ms 748.416413ms 748.432798ms 748.456419ms 748.54882ms 748.682664ms 748.798162ms 748.876111ms 748.891693ms 748.988962ms 749.039694ms 749.159289ms 749.299113ms 749.401073ms 749.466894ms 749.547582ms 749.650188ms 749.709001ms 749.725962ms 749.978161ms 750.215002ms 750.322826ms 750.701188ms 751.016956ms 751.03682ms 751.443569ms 751.50597ms 751.576908ms 751.624033ms 751.696015ms 751.903572ms 751.97163ms 752.056019ms 752.070891ms 752.081698ms 752.234898ms 752.246879ms 752.298787ms 752.627495ms 752.734854ms 753.056852ms 753.317155ms 753.875028ms 754.006887ms 754.350715ms 754.352797ms 754.502727ms 754.672476ms 754.820457ms 754.896093ms 755.136909ms 755.814652ms 755.986893ms 756.113318ms 757.543782ms 757.632311ms 757.677886ms 758.069994ms 758.288652ms 758.534908ms 758.87542ms 759.140922ms 759.374503ms 760.034687ms 761.545838ms 762.800804ms 763.174622ms 765.344344ms 765.962698ms 766.932098ms 766.977803ms 769.912468ms 772.703182ms 778.374067ms 778.470257ms 779.624762ms 799.329227ms 803.471471ms 812.646053ms 838.126152ms]
  I0902 09:27:38.274315 16 service_latency.go:118] 50 %ile: 746.183497ms
  I0902 09:27:38.274337 16 service_latency.go:119] 90 %ile: 758.87542ms
  I0902 09:27:38.274354 16 service_latency.go:120] 99 %ile: 812.646053ms
  I0902 09:27:38.274370 16 service_latency.go:121] Total sample count: 200
  I0902 09:27:38.274605 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1242" for this suite. @ 09/02/25 09:27:38.287
• [10.830 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/02/25 09:27:38.306
  I0902 09:27:38.306936 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename webhook @ 09/02/25 09:27:38.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:38.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:38.341
  STEP: Setting up server cert @ 09/02/25 09:27:38.378
  E0902 09:27:38.701091      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/25 09:27:38.983
  STEP: Deploying the webhook pod @ 09/02/25 09:27:39.048
  STEP: Wait for the deployment to be ready @ 09/02/25 09:27:39.067
  I0902 09:27:39.085633 16 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 09:27:39.702047      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:40.702648      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/25 09:27:41.122
  STEP: Verifying the service has paired with the endpoint @ 09/02/25 09:27:41.155
  E0902 09:27:41.703022      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:42.156410 16 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/02/25 09:27:42.171
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 09:27:42.211
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/02/25 09:27:42.231
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 09:27:42.251
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/02/25 09:27:42.275
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/25 09:27:42.291
  I0902 09:27:42.388848 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2287" for this suite. @ 09/02/25 09:27:42.4
  STEP: Destroying namespace "webhook-markers-564" for this suite. @ 09/02/25 09:27:42.417
• [4.125 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/02/25 09:27:42.433
  I0902 09:27:42.433301 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/25 09:27:42.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:42.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:42.494
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/25 09:27:42.507
  E0902 09:27:42.703779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:43.703930      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:44.705155      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:45.705222      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/25 09:27:46.566
  E0902 09:27:46.705990      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:47.706170      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/02/25 09:27:48.614
  STEP: delete the pod with lifecycle hook @ 09/02/25 09:27:48.632
  E0902 09:27:48.708110      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:49.708057      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:50.708490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:51.708998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:52.667090 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2596" for this suite. @ 09/02/25 09:27:52.681
• [10.271 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/02/25 09:27:52.704
  I0902 09:27:52.704931 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:27:52.709581      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename namespaces @ 09/02/25 09:27:52.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:52.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:52.75
  STEP: Updating Namespace "namespaces-9775" @ 09/02/25 09:27:52.759
  I0902 09:27:52.782121 16 namespace.go:390] Namespace "namespaces-9775" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"98d3bfa0-79c6-4655-86d0-63d46ea81efd", "kubernetes.io/metadata.name":"namespaces-9775", "namespaces-9775":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0902 09:27:52.782669 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9775" for this suite. @ 09/02/25 09:27:52.802
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/02/25 09:27:52.829
  I0902 09:27:52.829441 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename aggregator @ 09/02/25 09:27:52.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:27:52.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:27:52.866
  I0902 09:27:52.873254 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Registering the sample API server. @ 09/02/25 09:27:52.877
  E0902 09:27:53.710924      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:53.921112 16 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0902 09:27:54.001812 16 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0902 09:27:54.711349      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:55.711617      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:56.111574 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:27:56.711855      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:57.711861      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:27:58.122788 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:27:58.712010      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:27:59.712309      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:00.130223 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:00.712947      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:01.713154      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:02.124043 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:02.713999      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:03.714688      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:04.124646 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:04.713872      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:05.714246      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:06.122232 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:06.714904      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:07.715093      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:08.120143 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:08.715898      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:09.716680      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:10.123360 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:10.717008      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:11.717715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:12.128263 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:12.718730      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:13.719094      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:14.122162 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:14.720779      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:15.720696      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:16.127984 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:16.720903      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:17.721217      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:18.123105 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:18.721313      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:19.721812      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:20.121266 16 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 2, 9, 27, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 2, 9, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 09:28:20.722090      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:21.722674      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:22.272502 16 aggregator.go:755] Waited 136.18484ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/02/25 09:28:22.371
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/02/25 09:28:22.377
  STEP: List APIServices @ 09/02/25 09:28:22.391
  I0902 09:28:22.407652 16 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/02/25 09:28:22.408
  I0902 09:28:22.439278 16 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/02/25 09:28:22.439
  I0902 09:28:22.458813 16 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 2, 9, 28, 22, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/02/25 09:28:22.458
  I0902 09:28:22.468102 16 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-02 09:28:22 +0000 UTC Passed all checks passed}
  I0902 09:28:22.468161 16 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 09:28:22.468195 16 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/02/25 09:28:22.468
  I0902 09:28:22.487183 16 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-245128468" @ 09/02/25 09:28:22.487
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/02/25 09:28:22.511
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/02/25 09:28:22.524
  STEP: Patch APIService Status @ 09/02/25 09:28:22.532
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/02/25 09:28:22.551
  I0902 09:28:22.558788 16 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-02 09:28:22 +0000 UTC Passed all checks passed}
  I0902 09:28:22.558984 16 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0902 09:28:22.559017 16 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0902 09:28:22.559045 16 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/02/25 09:28:22.559
  STEP: Confirm that the generated APIService has been deleted @ 09/02/25 09:28:22.578
  I0902 09:28:22.578317 16 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0902 09:28:22.586787 16 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0902 09:28:22.587011 16 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  E0902 09:28:22.741066      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:28:22.832474 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5317" for this suite. @ 09/02/25 09:28:22.845
• [30.035 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/02/25 09:28:22.868
  I0902 09:28:22.868623 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename subpath @ 09/02/25 09:28:22.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:28:22.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:28:22.906
  STEP: Setting up data @ 09/02/25 09:28:22.913
  STEP: Creating pod pod-subpath-test-projected-2d6h @ 09/02/25 09:28:22.932
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/25 09:28:22.932
  E0902 09:28:23.741877      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:24.742314      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:25.742367      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:26.743084      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:27.743575      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:28.743756      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:29.744359      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:30.744639      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:31.744805      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:32.744943      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:33.745490      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:34.746069      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:35.746982      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:36.747274      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:37.748088      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:38.748318      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:39.748673      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:40.749281      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:41.749210      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:42.749782      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:43.749995      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:44.750615      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:45.750967      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:46.751406      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:28:47.116
  I0902 09:28:47.123705 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-subpath-test-projected-2d6h container test-container-subpath-projected-2d6h: <nil>
  STEP: delete the pod @ 09/02/25 09:28:47.144
  STEP: Deleting pod pod-subpath-test-projected-2d6h @ 09/02/25 09:28:47.174
  I0902 09:28:47.174997 16 delete.go:62] Deleting pod "pod-subpath-test-projected-2d6h" in namespace "subpath-5340"
  I0902 09:28:47.181712 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5340" for this suite. @ 09/02/25 09:28:47.193
• [24.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/02/25 09:28:47.211
  I0902 09:28:47.211840 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename field-validation @ 09/02/25 09:28:47.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:28:47.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:28:47.249
  I0902 09:28:47.254396 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  E0902 09:28:47.752198      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:48.752279      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:49.753169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0902 09:28:49.999766      16 warnings.go:70] unknown field "alpha"
  W0902 09:28:49.999847      16 warnings.go:70] unknown field "beta"
  W0902 09:28:49.999874      16 warnings.go:70] unknown field "delta"
  W0902 09:28:49.999898      16 warnings.go:70] unknown field "epsilon"
  W0902 09:28:49.999952      16 warnings.go:70] unknown field "gamma"
  I0902 09:28:50.622488 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8934" for this suite. @ 09/02/25 09:28:50.632
• [3.445 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/02/25 09:28:50.656
  I0902 09:28:50.656348 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename configmap @ 09/02/25 09:28:50.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:28:50.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:28:50.695
  STEP: Creating configMap with name configmap-test-volume-ce5b592b-3263-4d9a-9fb1-63babd7470ae @ 09/02/25 09:28:50.705
  STEP: Creating a pod to test consume configMaps @ 09/02/25 09:28:50.716
  E0902 09:28:50.753627      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:51.753720      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:52.754547      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:53.754827      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:54.755454      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:28:54.774
  I0902 09:28:54.784110 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-configmaps-a79314a8-0147-40ec-b4f3-b9af2440c6bb container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/25 09:28:54.811
  I0902 09:28:54.859262 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-11" for this suite. @ 09/02/25 09:28:54.873
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/02/25 09:28:54.894
  I0902 09:28:54.894238 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename resourcequota @ 09/02/25 09:28:54.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:28:54.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:28:54.938
  STEP: Counting existing ResourceQuota @ 09/02/25 09:28:54.943
  E0902 09:28:55.755888      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:56.760548      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:57.760473      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:58.760635      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:28:59.760993      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/25 09:28:59.951
  STEP: Ensuring resource quota status is calculated @ 09/02/25 09:28:59.962
  E0902 09:29:00.761617      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:01.768170      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:01.978621 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4911" for this suite. @ 09/02/25 09:29:01.995
• [7.126 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/02/25 09:29:02.02
  I0902 09:29:02.020660 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename pods @ 09/02/25 09:29:02.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:02.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:02.077
  STEP: creating the pod @ 09/02/25 09:29:02.091
  STEP: submitting the pod to kubernetes @ 09/02/25 09:29:02.091
  E0902 09:29:02.764753      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:03.766136      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/02/25 09:29:04.166
  STEP: updating the pod @ 09/02/25 09:29:04.179
  I0902 09:29:04.716817 16 pod_client.go:173] Successfully updated pod "pod-update-88103c6d-9584-4782-ac4f-4d1bf3f1233c"
  STEP: verifying the updated pod is in kubernetes @ 09/02/25 09:29:04.735
  I0902 09:29:04.749410 16 pods.go:391] Pod update OK
  I0902 09:29:04.752752 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 09:29:04.766762      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-9878" for this suite. @ 09/02/25 09:29:04.777
• [2.780 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/02/25 09:29:04.802
  I0902 09:29:04.802505 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename services @ 09/02/25 09:29:04.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:04.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:04.839
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7767 @ 09/02/25 09:29:04.847
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/02/25 09:29:04.868
  STEP: creating service externalsvc in namespace services-7767 @ 09/02/25 09:29:04.87
  STEP: creating replication controller externalsvc in namespace services-7767 @ 09/02/25 09:29:04.898
  I0902 09:29:04.921779      16 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7767, replica count: 2
  E0902 09:29:05.771834      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:06.769169      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:07.769998      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:07.973348      16 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/02/25 09:29:07.984
  I0902 09:29:08.013282 16 resource.go:361] Creating new exec pod
  E0902 09:29:08.769991      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:09.770204      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:10.057355 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=services-7767 exec execpoddzcbp -- /bin/sh -x -c nslookup clusterip-service.services-7767.svc.cluster.local'
  I0902 09:29:10.670730 16 builder.go:146] stderr: "+ nslookup clusterip-service.services-7767.svc.cluster.local\n"
  I0902 09:29:10.670875 16 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-7767.svc.cluster.local\tcanonical name = externalsvc.services-7767.svc.cluster.local.\nName:\texternalsvc.services-7767.svc.cluster.local\nAddress: 10.233.38.22\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7767, will wait for the garbage collector to delete the pods @ 09/02/25 09:29:10.671
  I0902 09:29:10.744984 16 resources.go:139] Deleting ReplicationController externalsvc took: 14.191532ms
  E0902 09:29:10.771228      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:10.846263 16 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.262056ms
  E0902 09:29:11.772039      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:12.773052      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:13.773040      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:13.895314 16 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0902 09:29:13.920248 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7767" for this suite. @ 09/02/25 09:29:13.935
• [9.147 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/02/25 09:29:13.949
  I0902 09:29:13.949389 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename security-context-test @ 09/02/25 09:29:13.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:13.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:13.996
  E0902 09:29:14.773969      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:15.774120      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:16.774715      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:17.774870      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:18.082272 16 security_context.go:538] Got logs for pod "busybox-privileged-false-cd47fd26-04a2-4c02-9bda-5890ee1ee0b2": "ip: RTNETLINK answers: Operation not permitted\n"
  I0902 09:29:18.082710 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8020" for this suite. @ 09/02/25 09:29:18.098
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 09/02/25 09:29:18.127
  I0902 09:29:18.127655 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename kubectl @ 09/02/25 09:29:18.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:18.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:18.176
  STEP: validating api versions @ 09/02/25 09:29:18.185
  I0902 09:29:18.185450 16 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3466225341 --namespace=kubectl-1787 api-versions'
  I0902 09:29:18.376247 16 builder.go:146] stderr: ""
  I0902 09:29:18.376859 16 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0902 09:29:18.377300 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1787" for this suite. @ 09/02/25 09:29:18.394
• [0.286 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/02/25 09:29:18.415
  I0902 09:29:18.415219 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename disruption @ 09/02/25 09:29:18.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:18.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:18.462
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/02/25 09:29:18.498
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:29:18.514
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/02/25 09:29:18.536
  STEP: Waiting for all pods to be running @ 09/02/25 09:29:18.536
  I0902 09:29:18.551463 16 disruption.go:680] pods: 0 < 3
  E0902 09:29:18.775202      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:19.775623      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0902 09:29:20.557094 16 disruption.go:691] running pods: 0 < 3
  E0902 09:29:20.775626      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:21.776717      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/02/25 09:29:22.555
  STEP: Updating the pdb to allow a pod to be evicted @ 09/02/25 09:29:22.59
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:29:22.616
  E0902 09:29:22.777838      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:23.777840      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/02/25 09:29:24.627
  STEP: Waiting for all pods to be running @ 09/02/25 09:29:24.627
  STEP: Waiting for the pdb to observed all healthy pods @ 09/02/25 09:29:24.639
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/02/25 09:29:24.715
  E0902 09:29:24.778308      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/02/25 09:29:24.788
  E0902 09:29:25.779366      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:26.780270      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/02/25 09:29:26.806
  STEP: locating a running pod @ 09/02/25 09:29:26.837
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/02/25 09:29:26.862
  STEP: Waiting for the pdb to be deleted @ 09/02/25 09:29:26.875
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/02/25 09:29:26.881
  STEP: Waiting for all pods to be running @ 09/02/25 09:29:26.881
  I0902 09:29:27.037358 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-893" for this suite. @ 09/02/25 09:29:27.058
• [8.660 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/02/25 09:29:27.074
  I0902 09:29:27.074447 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename projected @ 09/02/25 09:29:27.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:27.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:27.16
  STEP: Creating secret with name projected-secret-test-fa256423-320d-4f46-bd41-16e8e24456ae @ 09/02/25 09:29:27.172
  STEP: Creating a pod to test consume secrets @ 09/02/25 09:29:27.184
  E0902 09:29:27.782859      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:28.783948      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:29.783390      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0902 09:29:30.783861      16 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/25 09:29:31.264
  I0902 09:29:31.281118 16 output.go:207] Trying to get logs from node noo9iech3thi-3 pod pod-projected-secrets-29811608-6ea2-4cb4-9e60-122bbf004fec container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/25 09:29:31.306
  I0902 09:29:31.352295 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7769" for this suite. @ 09/02/25 09:29:31.399
• [4.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/02/25 09:29:31.421
  I0902 09:29:31.421820 16 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3466225341
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/02/25 09:29:31.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/25 09:29:31.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/25 09:29:31.466
  I0902 09:29:31.493267 16 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6763" for this suite. @ 09/02/25 09:29:31.506
• [0.105 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0902 09:29:31.526230 16 suites.go:34] Running AfterSuite actions on node 1
  I0902 09:29:31.526288 16 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.162 seconds]
------------------------------

Ran 411 of 6624 Specs in 7131.548 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6213 Skipped
PASS

Ginkgo ran 1 suite in 1h58m53.84931175s
Test Suite Passed
