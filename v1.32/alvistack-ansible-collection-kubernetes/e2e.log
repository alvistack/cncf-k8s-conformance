  I0901 11:09:02.891443      15 e2e.go:109] Starting e2e run "caccd6a4-faae-45df-a9b7-9656d1f0919f" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756724941 - will randomize all specs

Will run 411 of 6624 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0901 11:09:03.319785 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  I0901 11:09:03.327856 15 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0901 11:09:03.492045 15 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0901 11:09:03.512867 15 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0901 11:09:03.513227 15 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  I0901 11:09:03.513388 15 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0901 11:09:03.513480 15 e2e.go:245] e2e test version: v1.32.8
  I0901 11:09:03.515960 15 e2e.go:254] kube-apiserver version: v1.32.8
  I0901 11:09:03.516138 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  I0901 11:09:03.539205 15 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.220 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/01/25 11:09:03.844
  I0901 11:09:03.844339 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 11:09:03.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:03.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:03.899
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5757 @ 09/01/25 11:09:03.91
  STEP: changing the ExternalName service to type=ClusterIP @ 09/01/25 11:09:03.926
  STEP: creating replication controller externalname-service in namespace services-5757 @ 09/01/25 11:09:03.968
  I0901 11:09:03.987795      15 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5757, replica count: 2
  I0901 11:09:07.040642      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:10.042937      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:13.043767      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:16.044753      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:19.047503      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:22.048106      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:25.049201      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:09:25.049472 15 resource.go:361] Creating new exec pod
  I0901 11:09:28.107352 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-5757 exec execpod9g7v5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 11:09:28.669856 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.44.72) 80 port [tcp/http] succeeded!\n"
  I0901 11:09:28.669971 15 builder.go:147] stdout: "externalname-service-f5f5p"
  I0901 11:09:28.670820 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-5757 exec execpod9g7v5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.72 80'
  I0901 11:09:28.932941 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.72 80\nConnection to 10.233.44.72 80 port [tcp/http] succeeded!\n"
  I0901 11:09:28.933043 15 builder.go:147] stdout: "externalname-service-g99ln"
  I0901 11:09:28.933919 15 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0901 11:09:28.984929 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5757" for this suite. @ 09/01/25 11:09:29.008
â€¢ [25.180 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/01/25 11:09:29.024
  I0901 11:09:29.024631 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:09:29.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:29.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:29.067
  I0901 11:09:29.074281 15 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0901 11:09:29.110361 15 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0901 11:09:34.125642 15 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 11:09:34.125
  I0901 11:09:42.245836 15 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0901 11:09:42.269839 15 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0901 11:09:42.297620 15 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0901 11:09:44.330363 15 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0901 11:09:44.341713 15 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0901 11:09:44.375605 15 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5275e74e-9cdf-4367-a3a8-c26890ca69a1",
      ResourceVersion: (string) (len=4) "4470",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:09:44.394471 15 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f0f4197-d472-4d08-995a-1a613ebe7217",
      ResourceVersion: (string) (len=4) "4459",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5275e74e-9cdf-4367-a3a8-c26890ca69a1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 37 35 65 37  34 65 2d 39 63 64 66 2d  |\"5275e74e-9cdf-|
              00000120  34 33 36 37 2d 61 33 61  38 2d 63 32 36 38 39 30  |4367-a3a8-c26890|
              00000130  63 61 36 39 61 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ca69a1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:09:44.399575 15 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0901 11:09:44.400202 15 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33e3fc09-0835-483c-a9c4-76ee2fd3411c",
      ResourceVersion: (string) (len=4) "4469",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5275e74e-9cdf-4367-a3a8-c26890ca69a1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 32 37 35 65 37 34  |"uid\":\"5275e74|
              000000b0  65 2d 39 63 64 66 2d 34  33 36 37 2d 61 33 61 38  |e-9cdf-4367-a3a8|
              000000c0  2d 63 32 36 38 39 30 63  61 36 39 61 31 5c 22 7d  |-c26890ca69a1\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:09:44.416622 15 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-fwlgb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-fwlgb",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-5075",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b8a0b61-690d-4a9a-8833-34338e1a03fc",
      ResourceVersion: (string) (len=4) "4458",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "3f0f4197-d472-4d08-995a-1a613ebe7217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 66  30 66 34 31 39 37 2d 64  |d\":\"3f0f4197-d|
              00000090  34 37 32 2d 34 64 30 38  2d 39 39 35 61 2d 31 61  |472-4d08-995a-1a|
              000000a0  36 31 33 65 62 65 37 32  31 37 5c 22 7d 22 3a 7b  |613ebe7217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 36 5c 22 7d 22 3a  |.233.65.126\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfpql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfpql",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892321782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=13) "10.233.65.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892321782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892321783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://91d63769d24e8362f07dd72ec07311baa3ce9decff01cbf6d0e8efe7eefff4e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kfpql",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 11:09:44.425895 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5075" for this suite. @ 09/01/25 11:09:44.441
â€¢ [15.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/01/25 11:09:44.475
  I0901 11:09:44.475507 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename chunking @ 09/01/25 11:09:44.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:09:44.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:09:44.519
  STEP: creating a large number of resources @ 09/01/25 11:09:44.53
  STEP: retrieving the first page @ 09/01/25 11:10:02.201
  I0901 11:10:02.248082 15 chunking.go:163] Retrieved 40/40 results with rv 4943 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 09/01/25 11:10:02.248
  I0901 11:10:22.276459 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:10:42.276203 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:11:02.272497 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:11:22.285716 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:11:42.277477 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:12:02.280711 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:12:22.271238 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:12:42.268907 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:13:02.265245 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:13:22.274750 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:13:42.265545 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:14:02.264307 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:14:22.274781 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:14:42.262723 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:15:02.272736 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:15:22.266483 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:15:42.284314 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:16:02.266360 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:16:22.274634 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:16:42.268008 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:17:02.271087 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:17:22.266991 15 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDk0Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 11:17:42.260312 15 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0901 11:17:42.260394 15 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/01/25 11:17:42.26
  STEP: retrieving all remaining pages @ 09/01/25 11:17:42.274
  I0901 11:17:42.290391 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0901 11:17:42.301672 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0901 11:17:42.314582 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0901 11:17:42.336940 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0901 11:17:42.349546 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0901 11:17:42.367348 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0901 11:17:42.381351 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk0OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0901 11:17:42.390178 15 chunking.go:221] Retrieved 40/40 results with rv 5949 and continue 
  I0901 11:17:42.390856 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1495" for this suite. @ 09/01/25 11:17:42.404
â€¢ [477.955 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/01/25 11:17:42.431
  I0901 11:17:42.431381 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename server-version @ 09/01/25 11:17:42.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:17:42.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:17:42.475
  STEP: Request ServerVersion @ 09/01/25 11:17:42.48
  STEP: Confirm major version @ 09/01/25 11:17:42.482
  I0901 11:17:42.483081 15 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/01/25 11:17:42.483
  I0901 11:17:42.483425 15 server_version.go:58] cleanMinorVersion: 32
  I0901 11:17:42.483482 15 server_version.go:62] Minor version: 32
  I0901 11:17:42.483884 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8136" for this suite. @ 09/01/25 11:17:42.505
â€¢ [0.129 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/01/25 11:17:42.56
  I0901 11:17:42.560730 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:17:42.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:17:42.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:17:42.596
  I0901 11:17:42.629552 15 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0901 11:17:47.643345 15 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 11:17:47.643
  I0901 11:17:47.643556 15 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/01/25 11:17:47.665
  I0901 11:17:47.691891 15 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3221",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c74ffccc-214a-4f1f-82fd-145fe901b843",
      ResourceVersion: (string) (len=4) "5984",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322267,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:17:47.705746 15 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3221",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be404915-c3e2-4594-9024-7a255f8f0234",
      ResourceVersion: (string) (len=4) "5986",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322267,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c74ffccc-214a-4f1f-82fd-145fe901b843",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 37 34 66 66 63  63 63 2d 32 31 34 61 2d  |\"c74ffccc-214a-|
              00000120  34 66 31 66 2d 38 32 66  64 2d 31 34 35 66 65 39  |4f1f-82fd-145fe9|
              00000130  30 31 62 38 34 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |01b843\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:17:47.707914 15 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0901 11:17:47.708969 15 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3221",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f48af354-3b1f-4cf5-a2ae-b8a9d3b72318",
      ResourceVersion: (string) (len=4) "5985",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c74ffccc-214a-4f1f-82fd-145fe901b843",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 37 34 66 66 63 63  |"uid\":\"c74ffcc|
              00000040  63 2d 32 31 34 61 2d 34  66 31 66 2d 38 32 66 64  |c-214a-4f1f-82fd|
              00000050  2d 31 34 35 66 65 39 30  31 62 38 34 33 5c 22 7d  |-145fe901b843\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:17:47.736910 15 deployment.go:68] Pod "test-cleanup-controller-thn7z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-thn7z",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3221",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fff2f954-fb58-4b5d-9bea-ab142b003558",
      ResourceVersion: (string) (len=4) "5974",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "f48af354-3b1f-4cf5-a2ae-b8a9d3b72318",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  66 34 38 61 66 33 35 34  |uid\":\"f48af354|
              00000080  2d 33 62 31 66 2d 34 63  66 35 2d 61 32 61 65 2d  |-3b1f-4cf5-a2ae-|
              00000090  62 38 61 39 64 33 62 37  32 33 31 38 5c 22 7d 22  |b8a9d3b72318\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  38 35 5c 22 7d 22 3a 7b  |.233.65.85\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwqj6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwqj6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=12) "10.233.65.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892322263,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e373bf5225c093ec46a002e105ee633c9abbaa9c8c67a657610b3e1ba4135333",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nwqj6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 11:17:47.753294 15 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-pjnbs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-pjnbs",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-3221",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0dedea50-c563-4214-900d-1b8e7c937c7c",
      ResourceVersion: (string) (len=4) "5990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892322267,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "be404915-c3e2-4594-9024-7a255f8f0234",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 65  34 30 34 39 31 35 2d 63  |d\":\"be404915-c|
              00000090  33 65 32 2d 34 35 39 34  2d 39 30 32 34 2d 37 61  |3e2-4594-9024-7a|
              000000a0  32 35 35 66 38 66 30 32  33 34 5c 22 7d 22 3a 7b  |255f8f0234\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l45st",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l45st",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892322267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 11:17:47.756259 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3221" for this suite. @ 09/01/25 11:17:47.768
â€¢ [5.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/01/25 11:17:47.784
  I0901 11:17:47.784961 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:17:47.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:17:47.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:17:47.897
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/01/25 11:17:47.982
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:17:47.999
  I0901 11:17:48.060539 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:17:48.062148 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:49.230227 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:17:49.231878 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:50.029050 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:17:50.029155 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:51.032833 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:51.032918 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:52.035060 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:52.035148 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:53.224201 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:53.224472 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:54.025858 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:54.025947 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:55.030897 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:55.031366 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:56.041092 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:56.041177 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:57.028270 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:57.028346 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:58.019865 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:58.020499 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:17:59.021748 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:17:59.021818 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:18:00.022856 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:18:00.022922 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:18:01.020220 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:18:01.020307 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  I0901 11:18:02.033644 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:18:02.033714 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  I0901 11:18:03.021978 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:18:03.022071 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/01/25 11:18:03.03
  I0901 11:18:03.124083 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:18:03.124153 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  I0901 11:18:04.085465 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:18:04.085567 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  I0901 11:18:05.085272 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:18:05.085387 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/01/25 11:18:05.085
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:18:05.104
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1374, will wait for the garbage collector to delete the pods @ 09/01/25 11:18:05.104
  I0901 11:18:05.185537 15 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 18.672347ms
  I0901 11:18:05.287072 15 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.472023ms
  I0901 11:18:07.496965 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:18:07.497074 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:18:07.516479 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6550"},"items":null}

  I0901 11:18:07.527917 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6550"},"items":null}

  I0901 11:18:07.618540 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1374" for this suite. @ 09/01/25 11:18:07.628
â€¢ [19.860 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/01/25 11:18:07.651
  I0901 11:18:07.652247 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 11:18:07.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:07.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:07.692
  STEP: Performing setup for networking test in namespace pod-network-test-5334 @ 09/01/25 11:18:07.701
  STEP: creating a selector @ 09/01/25 11:18:07.701
  STEP: Creating the service pods in kubernetes @ 09/01/25 11:18:07.701
  I0901 11:18:07.701781 15 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 11:18:34.054
  I0901 11:18:36.106024 15 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 11:18:36.106333 15 networking.go:42] Breadth first check of 10.233.66.114 on host 192.168.121.194...
  I0901 11:18:36.114883 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.40:9080/dial?request=hostname&protocol=http&host=10.233.66.114&port=8083&tries=1'] Namespace:pod-network-test-5334 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:18:36.115044 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:18:36.115861 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5334/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.40%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.114%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 11:18:36.353901 15 utils.go:356] Waiting for responses: map[]
  I0901 11:18:36.353996 15 utils.go:360] reached 10.233.66.114 after 0/1 tries
  I0901 11:18:36.354021 15 networking.go:42] Breadth first check of 10.233.64.234 on host 192.168.121.245...
  I0901 11:18:36.365764 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.40:9080/dial?request=hostname&protocol=http&host=10.233.64.234&port=8083&tries=1'] Namespace:pod-network-test-5334 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:18:36.365848 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:18:36.365997 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5334/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.40%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.234%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 11:18:36.524235 15 utils.go:356] Waiting for responses: map[]
  I0901 11:18:36.524374 15 utils.go:360] reached 10.233.64.234 after 0/1 tries
  I0901 11:18:36.524468 15 networking.go:42] Breadth first check of 10.233.65.124 on host 192.168.121.182...
  I0901 11:18:36.534896 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.40:9080/dial?request=hostname&protocol=http&host=10.233.65.124&port=8083&tries=1'] Namespace:pod-network-test-5334 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:18:36.535473 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:18:36.535864 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5334/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.40%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.124%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 11:18:36.677071 15 utils.go:356] Waiting for responses: map[]
  I0901 11:18:36.677153 15 utils.go:360] reached 10.233.65.124 after 0/1 tries
  I0901 11:18:36.677193 15 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 11:18:36.679110 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5334" for this suite. @ 09/01/25 11:18:36.693
â€¢ [29.069 seconds]
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/01/25 11:18:36.722
  I0901 11:18:36.722085 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename disruption @ 09/01/25 11:18:36.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:36.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:36.783
  STEP: creating the pdb @ 09/01/25 11:18:36.796
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:18:36.811
  STEP: updating the pdb @ 09/01/25 11:18:38.822
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:18:38.849
  STEP: patching the pdb @ 09/01/25 11:18:40.86
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:18:40.897
  STEP: Waiting for the pdb to be deleted @ 09/01/25 11:18:42.944
  I0901 11:18:42.954806 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5543" for this suite. @ 09/01/25 11:18:42.971
â€¢ [6.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/01/25 11:18:43
  I0901 11:18:43.000075 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 11:18:43.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:43.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:43.044
  I0901 11:18:43.049104 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  W0901 11:18:45.879383      15 warnings.go:70] unknown field "alpha"
  W0901 11:18:45.879809      15 warnings.go:70] unknown field "beta"
  W0901 11:18:45.879824      15 warnings.go:70] unknown field "delta"
  W0901 11:18:45.879835      15 warnings.go:70] unknown field "epsilon"
  W0901 11:18:45.879845      15 warnings.go:70] unknown field "gamma"
  I0901 11:18:46.498946 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3644" for this suite. @ 09/01/25 11:18:46.515
â€¢ [3.536 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/01/25 11:18:46.538
  I0901 11:18:46.538840 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:18:46.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:46.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:46.593
  I0901 11:18:50.673362 15 delete.go:62] Deleting pod "var-expansion-6afc863c-b21e-4f20-98c6-37032f46dc7f" in namespace "var-expansion-600"
  I0901 11:18:50.699574 15 delete.go:70] Wait up to 5m0s for pod "var-expansion-6afc863c-b21e-4f20-98c6-37032f46dc7f" to be fully deleted
  I0901 11:18:54.745575 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-600" for this suite. @ 09/01/25 11:18:54.765
â€¢ [8.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/01/25 11:18:54.799
  I0901 11:18:54.799324 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 11:18:54.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:54.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:54.851
  STEP: Deleting RuntimeClass runtimeclass-3790-delete-me @ 09/01/25 11:18:54.893
  STEP: Waiting for the RuntimeClass to disappear @ 09/01/25 11:18:54.919
  I0901 11:18:54.952688 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3790" for this suite. @ 09/01/25 11:18:54.966
â€¢ [0.186 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/01/25 11:18:54.986
  I0901 11:18:54.986207 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:18:54.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:55.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:55.028
  STEP: Updating Namespace "namespaces-1425" @ 09/01/25 11:18:55.034
  I0901 11:18:55.054762 15 namespace.go:390] Namespace "namespaces-1425" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"caccd6a4-faae-45df-a9b7-9656d1f0919f", "kubernetes.io/metadata.name":"namespaces-1425", "namespaces-1425":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0901 11:18:55.055454 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1425" for this suite. @ 09/01/25 11:18:55.066
â€¢ [0.094 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/01/25 11:18:55.08
  I0901 11:18:55.080678 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:18:55.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:55.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:55.117
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:18:55.124
  STEP: Saw pod success @ 09/01/25 11:18:59.189
  I0901 11:18:59.198729 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-debe8202-edfd-4279-af56-42af8fa657c4 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:18:59.273
  I0901 11:18:59.314353 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4927" for this suite. @ 09/01/25 11:18:59.327
â€¢ [4.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/01/25 11:18:59.344
  I0901 11:18:59.344583 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 11:18:59.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:18:59.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:18:59.435
  I0901 11:18:59.441498 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 11:19:02.754
  I0901 11:19:02.754746 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-2071 --namespace=crd-publish-openapi-2071 create -f -'
  I0901 11:19:03.230602 15 builder.go:146] stderr: ""
  I0901 11:19:03.235752 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5368-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 11:19:03.237095 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-2071 --namespace=crd-publish-openapi-2071 delete e2e-test-crd-publish-openapi-5368-crds test-cr'
  I0901 11:19:03.483054 15 builder.go:146] stderr: ""
  I0901 11:19:03.485555 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5368-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0901 11:19:03.485839 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-2071 --namespace=crd-publish-openapi-2071 apply -f -'
  I0901 11:19:03.780184 15 builder.go:146] stderr: ""
  I0901 11:19:03.783167 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5368-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 11:19:03.783562 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-2071 --namespace=crd-publish-openapi-2071 delete e2e-test-crd-publish-openapi-5368-crds test-cr'
  I0901 11:19:03.992304 15 builder.go:146] stderr: ""
  I0901 11:19:03.992603 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5368-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 11:19:03.994
  I0901 11:19:03.995092 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-2071 explain e2e-test-crd-publish-openapi-5368-crds'
  I0901 11:19:04.180178 15 builder.go:146] stderr: ""
  I0901 11:19:04.180315 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5368-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0901 11:19:06.545533 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2071" for this suite. @ 09/01/25 11:19:06.59
â€¢ [7.262 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/01/25 11:19:06.609
  I0901 11:19:06.610169 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 11:19:06.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:06.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:06.655
  STEP: creating a target pod @ 09/01/25 11:19:06.66
  STEP: adding an ephemeral container @ 09/01/25 11:19:10.72
  STEP: checking pod container endpoints @ 09/01/25 11:19:12.776
  I0901 11:19:12.776662 15 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8694 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:19:12.776763 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:19:12.776920 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-8694/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 11:19:12.941561 15 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/01/25 11:19:12.961
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/01/25 11:19:12.979
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/01/25 11:19:13.011
  I0901 11:19:13.034687 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8694" for this suite. @ 09/01/25 11:19:13.045
â€¢ [6.448 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/01/25 11:19:13.058
  I0901 11:19:13.058182 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename ingressclass @ 09/01/25 11:19:13.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:13.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:13.099
  STEP: getting /apis @ 09/01/25 11:19:13.104
  STEP: getting /apis/networking.k8s.io @ 09/01/25 11:19:13.132
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 11:19:13.134
  STEP: creating @ 09/01/25 11:19:13.137
  STEP: getting @ 09/01/25 11:19:13.187
  STEP: listing @ 09/01/25 11:19:13.193
  STEP: watching @ 09/01/25 11:19:13.203
  I0901 11:19:13.203558 15 ingressclass.go:348] starting watch
  STEP: patching @ 09/01/25 11:19:13.207
  STEP: updating @ 09/01/25 11:19:13.235
  I0901 11:19:13.246861 15 ingressclass.go:364] waiting for watch events with expected annotations
  I0901 11:19:13.251626 15 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/01/25 11:19:13.253
  STEP: deleting a collection @ 09/01/25 11:19:13.281
  I0901 11:19:13.325150 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9954" for this suite. @ 09/01/25 11:19:13.338
â€¢ [0.293 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:19:13.352
  I0901 11:19:13.353163 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:19:13.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:19:13.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:19:13.386
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6e446c78-eb4b-412f-9968-b9d3fb898dd5 @ 09/01/25 11:19:13.434
  STEP: Creating the pod @ 09/01/25 11:19:13.462
  STEP: Updating configmap projected-configmap-test-upd-6e446c78-eb4b-412f-9968-b9d3fb898dd5 @ 09/01/25 11:19:15.548
  STEP: waiting to observe update in volume @ 09/01/25 11:19:15.589
  I0901 11:20:36.760383 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6988" for this suite. @ 09/01/25 11:20:36.784
â€¢ [83.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/01/25 11:20:36.812
  I0901 11:20:36.812307 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:20:36.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:36.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:36.868
  STEP: Creating configMap with name projected-configmap-test-volume-map-af1675b1-10bf-4138-aed0-5337f5f9892b @ 09/01/25 11:20:36.876
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:20:36.887
  STEP: Saw pod success @ 09/01/25 11:20:40.969
  I0901 11:20:40.984536 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-31c0b6b2-9809-4f95-ad8b-ba4fc36612ac container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:20:41.01
  I0901 11:20:41.048789 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-794" for this suite. @ 09/01/25 11:20:41.058
â€¢ [4.260 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/01/25 11:20:41.072
  I0901 11:20:41.072920 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:20:41.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:41.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:41.107
  STEP: Setting up server cert @ 09/01/25 11:20:41.146
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:20:42.365
  STEP: Deploying the webhook pod @ 09/01/25 11:20:42.379
  STEP: Wait for the deployment to be ready @ 09/01/25 11:20:42.403
  I0901 11:20:42.421151 15 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0901 11:20:44.460698 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 20, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 20, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 20, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 20, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 11:20:46.475
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:20:46.513
  I0901 11:20:47.513904 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/01/25 11:20:47.545
  STEP: create a configmap that should be updated by the webhook @ 09/01/25 11:20:47.603
  I0901 11:20:47.744536 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8113" for this suite. @ 09/01/25 11:20:47.759
  STEP: Destroying namespace "webhook-markers-6627" for this suite. @ 09/01/25 11:20:47.774
â€¢ [6.720 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/01/25 11:20:47.792
  I0901 11:20:47.792981 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 11:20:47.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:47.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:47.835
  I0901 11:20:47.844137 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  I0901 11:20:51.105673 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3899" for this suite. @ 09/01/25 11:20:51.12
â€¢ [3.349 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/01/25 11:20:51.142
  I0901 11:20:51.142814 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:20:51.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:51.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:51.186
  I0901 11:20:51.198049 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: creating the pod @ 09/01/25 11:20:51.2
  STEP: submitting the pod to kubernetes @ 09/01/25 11:20:51.201
  I0901 11:20:53.327035 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2740" for this suite. @ 09/01/25 11:20:53.337
â€¢ [2.211 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/01/25 11:20:53.356
  I0901 11:20:53.356932 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:20:53.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:53.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:53.397
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 11:20:53.403
  STEP: Saw pod success @ 09/01/25 11:20:57.489
  I0901 11:20:57.499730 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-06a2f93d-b9e3-455f-b823-36d91f979715 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:20:57.526
  I0901 11:20:57.573792 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3382" for this suite. @ 09/01/25 11:20:57.591
â€¢ [4.258 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/01/25 11:20:57.616
  I0901 11:20:57.616334 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:20:57.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:57.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:57.655
  STEP: create the deployment @ 09/01/25 11:20:57.661
  W0901 11:20:57.671697      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 11:20:57.671
  STEP: delete the deployment @ 09/01/25 11:20:58.182
  STEP: wait for all rs to be garbage collected @ 09/01/25 11:20:58.198
  STEP: expected 0 pods, got 2 pods @ 09/01/25 11:20:58.29
  STEP: Gathering metrics @ 09/01/25 11:20:58.732
  I0901 11:20:59.057634 15 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:20:59.059631 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-18" for this suite. @ 09/01/25 11:20:59.075
â€¢ [1.484 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/01/25 11:20:59.102
  I0901 11:20:59.102363 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:20:59.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:20:59.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:20:59.131
  STEP: Setting up server cert @ 09/01/25 11:20:59.168
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:21:00.257
  STEP: Deploying the webhook pod @ 09/01/25 11:21:00.273
  STEP: Wait for the deployment to be ready @ 09/01/25 11:21:00.298
  I0901 11:21:00.341760 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 11:21:02.378
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:21:02.407
  I0901 11:21:03.408698 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 11:21:03.425
  STEP: verifying the mutating webhook match conditions @ 09/01/25 11:21:03.47
  STEP: updating the mutating webhook match conditions @ 09/01/25 11:21:03.48
  STEP: verifying the mutating webhook match conditions @ 09/01/25 11:21:03.496
  I0901 11:21:03.646302 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7923" for this suite. @ 09/01/25 11:21:03.654
  STEP: Destroying namespace "webhook-markers-8226" for this suite. @ 09/01/25 11:21:03.666
â€¢ [4.577 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/01/25 11:21:03.679
  I0901 11:21:03.679880 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:21:03.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:03.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:03.711
  I0901 11:21:03.717678 15 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:21:03.764709 15 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 11:21:03.773953 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-1 before test
  I0901 11:21:03.785995 15 predicates.go:957] cilium-node-init-t2mqh from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786078 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 11:21:03.786139 15 predicates.go:957] cilium-phmzb from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786161 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:03.786266 15 predicates.go:957] coredns-668d6bf9bc-w8sj7 from kube-system started at 2025-09-01 10:53:37 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786345 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 11:21:03.786371 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786423 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:21:03.786444 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786460 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0901 11:21:03.786476 15 predicates.go:957] kube-proxy-9m2kx from kube-system started at 2025-09-01 10:43:58 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786491 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:03.786530 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.786547 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:21:03.786583 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-sbccx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:03.786599 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:03.786616 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 11:21:03.786633 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-2 before test
  I0901 11:21:03.796107 15 predicates.go:957] cilium-4g649 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.796173 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:03.796287 15 predicates.go:957] cilium-node-init-xjhj7 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.796388 15 predicates.go:959] 	Container node-init ready: true, restart count 2
  I0901 11:21:03.796457 15 predicates.go:957] coredns-668d6bf9bc-jtmfr from kube-system started at 2025-09-01 10:47:10 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.796580 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 11:21:03.796681 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.796770 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:21:03.796801 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.796901 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:21:03.797032 15 predicates.go:957] kube-proxy-x9ghv from kube-system started at 2025-09-01 10:44:58 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.797135 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:03.797250 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.797349 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:21:03.797396 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-2t4p8 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:03.797464 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:03.797618 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 11:21:03.797710 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-3 before test
  I0901 11:21:03.814343 15 predicates.go:957] cilium-node-init-nkr6k from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.814622 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 11:21:03.816061 15 predicates.go:957] cilium-operator-7869bdf68b-fnsfs from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.816248 15 predicates.go:959] 	Container cilium-operator ready: true, restart count 5
  I0901 11:21:03.816356 15 predicates.go:957] cilium-tdgd6 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.816482 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:03.817908 15 predicates.go:957] kube-proxy-sgb9m from kube-system started at 2025-09-01 10:45:27 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.818054 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:03.819288 15 predicates.go:957] pod-logs-websocket-9781efc9-24ec-4d2e-8ade-e3dbb703222a from pods-2740 started at 2025-09-01 11:20:51 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.819567 15 predicates.go:959] 	Container main ready: true, restart count 0
  I0901 11:21:03.819694 15 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:03.820065 15 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:21:03.820274 15 predicates.go:957] sonobuoy-e2e-job-f2a5303f9c494ce3 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:03.820299 15 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 11:21:03.820481 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:03.820707 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-wmhsb from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:03.820731 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:03.820830 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 11:21:03.821
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 11:21:05.893
  STEP: Trying to apply a random label on the found node. @ 09/01/25 11:21:05.922
  STEP: verifying the node has the label kubernetes.io/e2e-5754aca4-7302-4604-8da6-1c69b1b3cb1c 42 @ 09/01/25 11:21:05.948
  STEP: Trying to relaunch the pod, now with labels. @ 09/01/25 11:21:05.977
  STEP: removing the label kubernetes.io/e2e-5754aca4-7302-4604-8da6-1c69b1b3cb1c off the node aeshuj4hoh7a-3 @ 09/01/25 11:21:08.057
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5754aca4-7302-4604-8da6-1c69b1b3cb1c @ 09/01/25 11:21:08.107
  I0901 11:21:08.126946 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-683" for this suite. @ 09/01/25 11:21:08.143
â€¢ [4.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 09/01/25 11:21:08.159
  I0901 11:21:08.159250 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:21:08.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:08.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:08.195
  STEP: Creating a pod to test service account token:  @ 09/01/25 11:21:08.206
  STEP: Saw pod success @ 09/01/25 11:21:12.277
  I0901 11:21:12.292650 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod test-pod-c407e46b-7aab-4960-b227-e9ce5c7be9dd container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:21:12.316
  I0901 11:21:12.367133 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8096" for this suite. @ 09/01/25 11:21:12.389
â€¢ [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 09/01/25 11:21:12.41
  I0901 11:21:12.410106 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:21:12.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:12.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:12.473
  I0901 11:21:12.479114 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-3771 version'
  I0901 11:21:12.633543 15 builder.go:146] stderr: ""
  I0901 11:21:12.634107 15 builder.go:147] stdout: "Client Version: v1.32.8\nKustomize Version: v5.5.0\nServer Version: v1.32.8\n"
  I0901 11:21:12.634585 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3771" for this suite. @ 09/01/25 11:21:12.645
â€¢ [0.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/01/25 11:21:12.667
  I0901 11:21:12.667637 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:21:12.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:12.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:12.706
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:21:12.712
  STEP: Saw pod success @ 09/01/25 11:21:16.791
  I0901 11:21:16.810831 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-63c01bee-1f95-44e7-8e3f-8fcb65df899f container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:21:16.838
  I0901 11:21:16.884818 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9146" for this suite. @ 09/01/25 11:21:16.901
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/01/25 11:21:16.928
  I0901 11:21:16.928800 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:21:16.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:16.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:16.978
  I0901 11:21:16.988212 15 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:21:17.029671 15 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 11:21:17.039091 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-1 before test
  I0901 11:21:17.067538 15 predicates.go:957] cilium-node-init-t2mqh from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.067827 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 11:21:17.067867 15 predicates.go:957] cilium-phmzb from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.067904 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:17.068205 15 predicates.go:957] coredns-668d6bf9bc-w8sj7 from kube-system started at 2025-09-01 10:53:37 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.068266 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 11:21:17.068288 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.068305 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:21:17.068325 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.068343 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0901 11:21:17.068363 15 predicates.go:957] kube-proxy-9m2kx from kube-system started at 2025-09-01 10:43:58 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.068379 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:17.068439 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.068461 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:21:17.068481 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-sbccx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:17.068533 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:17.068551 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 11:21:17.068569 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-2 before test
  I0901 11:21:17.082747 15 predicates.go:957] cilium-4g649 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.082817 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:17.082846 15 predicates.go:957] cilium-node-init-xjhj7 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.082868 15 predicates.go:959] 	Container node-init ready: true, restart count 2
  I0901 11:21:17.082891 15 predicates.go:957] coredns-668d6bf9bc-jtmfr from kube-system started at 2025-09-01 10:47:10 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.082910 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 11:21:17.082955 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.082976 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:21:17.083019 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.083039 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:21:17.083062 15 predicates.go:957] kube-proxy-x9ghv from kube-system started at 2025-09-01 10:44:58 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.083090 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:17.083114 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.083133 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:21:17.083154 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-2t4p8 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:17.083174 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:17.083192 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 11:21:17.083210 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-3 before test
  I0901 11:21:17.101848 15 predicates.go:957] cilium-node-init-nkr6k from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.102629 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 11:21:17.102893 15 predicates.go:957] cilium-operator-7869bdf68b-fnsfs from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.103003 15 predicates.go:959] 	Container cilium-operator ready: true, restart count 5
  I0901 11:21:17.103084 15 predicates.go:957] cilium-tdgd6 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.103118 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:21:17.103166 15 predicates.go:957] kube-proxy-sgb9m from kube-system started at 2025-09-01 10:45:27 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.103194 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:21:17.103260 15 predicates.go:957] pod-logs-websocket-9781efc9-24ec-4d2e-8ade-e3dbb703222a from pods-2740 started at 2025-09-01 11:20:51 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.103330 15 predicates.go:959] 	Container main ready: true, restart count 0
  I0901 11:21:17.103357 15 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 11:21:17.103380 15 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:21:17.103461 15 predicates.go:957] sonobuoy-e2e-job-f2a5303f9c494ce3 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:17.103495 15 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 11:21:17.103569 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:17.103595 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-wmhsb from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:21:17.103616 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:21:17.103636 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node aeshuj4hoh7a-1 @ 09/01/25 11:21:17.165
  STEP: verifying the node has the label node aeshuj4hoh7a-2 @ 09/01/25 11:21:17.218
  STEP: verifying the node has the label node aeshuj4hoh7a-3 @ 09/01/25 11:21:17.332
  I0901 11:21:17.380153 15 predicates.go:372] Pod cilium-4g649 requesting resource cpu=0m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380224 15 predicates.go:372] Pod cilium-node-init-nkr6k requesting resource cpu=100m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380244 15 predicates.go:372] Pod cilium-node-init-t2mqh requesting resource cpu=100m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380260 15 predicates.go:372] Pod cilium-node-init-xjhj7 requesting resource cpu=100m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380276 15 predicates.go:372] Pod cilium-operator-7869bdf68b-fnsfs requesting resource cpu=0m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380291 15 predicates.go:372] Pod cilium-phmzb requesting resource cpu=0m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380307 15 predicates.go:372] Pod cilium-tdgd6 requesting resource cpu=0m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380323 15 predicates.go:372] Pod coredns-668d6bf9bc-jtmfr requesting resource cpu=100m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380346 15 predicates.go:372] Pod coredns-668d6bf9bc-w8sj7 requesting resource cpu=100m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380364 15 predicates.go:372] Pod kube-apiserver-aeshuj4hoh7a-1 requesting resource cpu=250m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380380 15 predicates.go:372] Pod kube-apiserver-aeshuj4hoh7a-2 requesting resource cpu=250m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380418 15 predicates.go:372] Pod kube-controller-manager-aeshuj4hoh7a-1 requesting resource cpu=200m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380455 15 predicates.go:372] Pod kube-controller-manager-aeshuj4hoh7a-2 requesting resource cpu=200m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380472 15 predicates.go:372] Pod kube-proxy-9m2kx requesting resource cpu=0m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380487 15 predicates.go:372] Pod kube-proxy-sgb9m requesting resource cpu=0m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380501 15 predicates.go:372] Pod kube-proxy-x9ghv requesting resource cpu=0m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380765 15 predicates.go:372] Pod kube-scheduler-aeshuj4hoh7a-1 requesting resource cpu=100m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380786 15 predicates.go:372] Pod kube-scheduler-aeshuj4hoh7a-2 requesting resource cpu=100m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380825 15 predicates.go:372] Pod pod-logs-websocket-9781efc9-24ec-4d2e-8ade-e3dbb703222a requesting resource cpu=0m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380842 15 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380857 15 predicates.go:372] Pod sonobuoy-e2e-job-f2a5303f9c494ce3 requesting resource cpu=0m on Node aeshuj4hoh7a-3
  I0901 11:21:17.380872 15 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-2t4p8 requesting resource cpu=0m on Node aeshuj4hoh7a-2
  I0901 11:21:17.380888 15 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-sbccx requesting resource cpu=0m on Node aeshuj4hoh7a-1
  I0901 11:21:17.380903 15 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-wmhsb requesting resource cpu=0m on Node aeshuj4hoh7a-3
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/01/25 11:21:17.38
  I0901 11:21:17.380990 15 predicates.go:382] Creating a pod which consumes cpu=595m on Node aeshuj4hoh7a-1
  I0901 11:21:17.434200 15 predicates.go:382] Creating a pod which consumes cpu=595m on Node aeshuj4hoh7a-2
  I0901 11:21:17.466364 15 predicates.go:382] Creating a pod which consumes cpu=1050m on Node aeshuj4hoh7a-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/01/25 11:21:21.559
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2.186124b23a14b492], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6950/filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2 to aeshuj4hoh7a-3] @ 09/01/25 11:21:21.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2.186124b26e7c6203], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 11:21:21.581
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2.186124b2757971fc], Reason = [Created], Message = [Created container: filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2] @ 09/01/25 11:21:21.581
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2.186124b2775826dd], Reason = [Started], Message = [Started container filler-pod-44e965f8-cb56-487d-be74-5b817d6a88c2] @ 09/01/25 11:21:21.581
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3.186124b237c39e28], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6950/filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3 to aeshuj4hoh7a-2] @ 09/01/25 11:21:21.581
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3.186124b28f8413ff], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3.186124b29ae1e11a], Reason = [Created], Message = [Created container: filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3.186124b29ca4c461], Reason = [Started], Message = [Started container filler-pod-48386ae6-e45b-46a9-8fd6-59692a2163a3] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846.186124b2326fafe9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6950/filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846 to aeshuj4hoh7a-1] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846.186124b275abea46], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846.186124b282955925], Reason = [Created], Message = [Created container: filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846.186124b2844694de], Reason = [Started], Message = [Started container filler-pod-fd06cf69-24fb-4ec5-9e7e-e35b1719e846] @ 09/01/25 11:21:21.582
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186124b32c987ac3], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 09/01/25 11:21:21.644
  STEP: removing the label node off the node aeshuj4hoh7a-1 @ 09/01/25 11:21:22.636
  STEP: verifying the node doesn't have the label node @ 09/01/25 11:21:22.68
  STEP: removing the label node off the node aeshuj4hoh7a-2 @ 09/01/25 11:21:22.693
  STEP: verifying the node doesn't have the label node @ 09/01/25 11:21:22.726
  STEP: removing the label node off the node aeshuj4hoh7a-3 @ 09/01/25 11:21:22.733
  STEP: verifying the node doesn't have the label node @ 09/01/25 11:21:22.762
  I0901 11:21:22.773724 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6950" for this suite. @ 09/01/25 11:21:22.786
â€¢ [5.872 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/01/25 11:21:22.806
  I0901 11:21:22.806955 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:21:22.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:21:22.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:21:22.872
  STEP: Creating pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023 @ 09/01/25 11:21:22.894
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:21:24.95
  I0901 11:21:24.966239 15 container_probe.go:1749] Initial restart count of pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 is 0
  I0901 11:21:24.980709 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:26.995885 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:29.005367 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:31.023194 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:33.038718 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:35.052629 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:37.065259 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:39.080313 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:41.098115 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:43.113100 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:45.125230 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:47.137443 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:49.157842 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:51.176330 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:53.195605 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:55.247915 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:57.267197 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:21:59.284443 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:01.297262 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:03.314001 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:05.329566 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:07.342894 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:09.356584 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:11.372746 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:13.394927 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:15.408076 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:17.422242 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:19.440722 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:21.455071 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:23.474996 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:25.489388 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:27.497717 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:29.513932 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:31.529133 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:33.540381 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:35.592737 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:37.604469 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:39.618733 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:41.630781 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:43.648232 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:45.666876 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:47.685089 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:49.703155 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:51.717538 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:53.734369 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:55.748799 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:57.765651 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:22:59.783814 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:01.797547 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:03.813709 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:05.828885 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:07.846228 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:09.861210 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:11.873017 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:13.887374 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:15.908129 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:17.923763 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:19.935852 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:21.947142 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:23.961390 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:25.974095 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:27.988114 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:30.002761 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:32.020029 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:34.034788 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:36.046683 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:38.063266 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:40.078777 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:42.097291 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:44.114686 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:46.127674 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:48.142029 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:50.161625 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:52.175111 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:54.210629 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:56.239158 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:23:58.257836 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:00.274206 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:02.293091 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:04.310308 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:06.328747 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:08.347004 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:10.361173 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:12.376162 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:14.395062 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:16.408061 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:18.423651 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:20.433989 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:22.447978 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:24.460278 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:26.474220 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:28.486189 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:30.502932 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:32.514115 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:34.526472 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:36.540981 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:38.555542 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:40.565781 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:42.582099 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:44.597468 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:46.609599 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:48.625303 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:50.640039 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:52.655776 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:54.667216 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:56.683804 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:24:58.694169 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:00.724297 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:02.737648 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:04.756657 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:06.769707 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:08.785674 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:10.797166 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:12.813661 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:14.827745 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:16.844649 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:18.862362 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:20.871677 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:22.887276 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  I0901 11:25:24.904886 15 container_probe.go:1759] Get pod liveness-da297bd5-54fe-48be-b00b-773f71338b99 in namespace container-probe-9023
  STEP: deleting the pod @ 09/01/25 11:25:26.907
  I0901 11:25:26.959817 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9023" for this suite. @ 09/01/25 11:25:26.983
â€¢ [244.196 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/01/25 11:25:27.005
  I0901 11:25:27.005736 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 11:25:27.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:27.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:27.067
  STEP: fetching the /apis discovery document @ 09/01/25 11:25:27.096
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/01/25 11:25:27.1
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 11:25:27.1
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/01/25 11:25:27.1
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/01/25 11:25:27.103
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 11:25:27.107
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 11:25:27.115
  I0901 11:25:27.116568 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2935" for this suite. @ 09/01/25 11:25:27.127
â€¢ [0.151 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/01/25 11:25:27.156
  I0901 11:25:27.156362 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:25:27.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:25:27.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:25:27.209
  STEP: Creating pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588 @ 09/01/25 11:25:27.218
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:25:29.266
  I0901 11:25:29.277070 15 container_probe.go:1749] Initial restart count of pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de is 0
  I0901 11:25:29.287370 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:31.299169 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:33.310295 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:35.323884 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:37.339673 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:39.356268 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:41.374705 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:43.389792 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:45.405198 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:47.419797 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:49.436936 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:51.507273 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:53.520528 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:55.529702 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:57.540455 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:25:59.553281 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:01.570051 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:03.606838 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:05.624246 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:07.640103 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:09.651663 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:11.668746 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:13.683447 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:15.698218 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:17.711595 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:19.726334 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:21.740575 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:23.754490 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:25.768366 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:27.781584 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:29.795849 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:31.805385 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:33.819066 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:35.832257 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:37.848561 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:39.861894 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:41.877600 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:43.892613 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:45.907955 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:47.923808 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:49.935356 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:51.948193 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:53.961223 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:55.974892 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:26:57.988081 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:00.003900 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:02.020954 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:04.039380 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:06.054285 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:08.069368 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:10.083253 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:12.095811 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:14.111052 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:16.126007 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:18.138032 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:20.155819 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:22.173546 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:24.189237 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:26.213373 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:28.225363 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:30.244939 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:32.266775 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:34.281331 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:36.294693 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:38.305916 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:40.317837 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:42.330304 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:44.344741 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:46.356377 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:48.369626 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:50.380295 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:52.394684 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:54.408003 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:56.419832 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:27:58.437609 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:00.451957 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:02.467456 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:04.484570 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:06.499685 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:08.515367 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:10.529086 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:12.544732 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:14.560553 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:16.575695 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:18.596600 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:20.609294 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:22.624296 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:24.638135 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:26.651303 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:28.665311 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:30.684607 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:32.696097 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:34.708754 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:36.730287 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:38.744967 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:40.756690 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:42.769543 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:44.783263 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:46.799211 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:48.809692 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:50.827272 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:52.838230 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:54.855084 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:56.870552 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:28:58.887111 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:00.903971 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:02.918555 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:04.931849 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:06.946864 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:08.960471 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:10.974032 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:12.983896 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:14.996820 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:17.013186 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:19.033985 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:21.050572 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:23.066331 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:25.084005 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:27.097749 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  I0901 11:29:29.131820 15 container_probe.go:1759] Get pod test-grpc-260836c8-c312-4ffc-ac8e-53fa92f162de in namespace container-probe-7588
  STEP: deleting the pod @ 09/01/25 11:29:31.134
  I0901 11:29:31.195677 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7588" for this suite. @ 09/01/25 11:29:31.221
â€¢ [244.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/01/25 11:29:31.245
  I0901 11:29:31.246573 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:29:31.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:31.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:31.281
  STEP: Creating a pod to test downward api env vars @ 09/01/25 11:29:31.291
  STEP: Saw pod success @ 09/01/25 11:29:35.347
  I0901 11:29:35.362142 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downward-api-34d15cab-f636-44b7-9bb3-b69bf70ed29c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 11:29:35.425
  I0901 11:29:35.521683 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1523" for this suite. @ 09/01/25 11:29:35.537
â€¢ [4.357 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/01/25 11:29:35.602
  I0901 11:29:35.602751 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:29:35.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:35.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:35.639
  STEP: Create set of pods @ 09/01/25 11:29:35.647
  I0901 11:29:35.669967 15 pods.go:871] created test-pod-1
  I0901 11:29:35.685124 15 pods.go:871] created test-pod-2
  I0901 11:29:35.701112 15 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/01/25 11:29:35.701
  STEP: waiting for all pods to be deleted @ 09/01/25 11:29:37.792
  I0901 11:29:37.801232 15 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0901 11:29:38.847313 15 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0901 11:29:39.801697 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4960" for this suite. @ 09/01/25 11:29:39.814
â€¢ [4.228 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/01/25 11:29:39.83
  I0901 11:29:39.830604 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:29:39.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:39.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:39.864
  STEP: Counting existing ResourceQuota @ 09/01/25 11:29:39.871
  STEP: Creating a ResourceQuota @ 09/01/25 11:29:44.889
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:29:44.917
  STEP: Creating a Service @ 09/01/25 11:29:46.929
  STEP: Creating a NodePort Service @ 09/01/25 11:29:46.976
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/01/25 11:29:47.03
  STEP: Ensuring resource quota status captures service creation @ 09/01/25 11:29:47.071
  STEP: Deleting Services @ 09/01/25 11:29:49.088
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:29:49.202
  I0901 11:29:51.221322 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7286" for this suite. @ 09/01/25 11:29:51.235
â€¢ [11.429 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/01/25 11:29:51.26
  I0901 11:29:51.260628 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 11:29:51.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:51.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:51.306
  I0901 11:29:55.416191 15 security_context.go:538] Got logs for pod "busybox-privileged-false-993b46d3-56c5-42b9-9c18-eda8a01aec08": "ip: RTNETLINK answers: Operation not permitted\n"
  I0901 11:29:55.417783 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8120" for this suite. @ 09/01/25 11:29:55.438
â€¢ [4.249 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 09/01/25 11:29:55.509
  I0901 11:29:55.509536 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:29:55.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:29:55.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:29:55.545
  STEP: Creating service test in namespace statefulset-7131 @ 09/01/25 11:29:55.552
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/01/25 11:29:55.563
  STEP: Creating stateful set ss in namespace statefulset-7131 @ 09/01/25 11:29:55.575
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7131 @ 09/01/25 11:29:55.598
  I0901 11:29:55.657524 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0901 11:30:05.611850 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/01/25 11:30:05.612
  I0901 11:30:05.625540 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:30:06.022218 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:30:06.023664 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:30:06.023708 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:30:06.034710 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0901 11:30:16.097074 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:30:16.097690 15 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 11:30:16.186939 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.99999932s
  I0901 11:30:17.251507 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.966190967s
  I0901 11:30:18.266885 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.902486879s
  I0901 11:30:19.283359 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.886629336s
  I0901 11:30:20.294873 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.87066185s
  I0901 11:30:21.310625 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.859157706s
  I0901 11:30:22.329880 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.842690479s
  I0901 11:30:23.342372 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.823773787s
  I0901 11:30:24.357861 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.811004025s
  I0901 11:30:25.373873 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 796.470019ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7131 @ 09/01/25 11:30:26.375
  I0901 11:30:26.389302 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:30:26.823215 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:30:26.823345 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:30:26.823868 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:30:26.835533 15 wait.go:40] Found 1 stateful pods, waiting for 3
  I0901 11:30:36.839329 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:30:36.840114 15 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:30:36.840183 15 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/01/25 11:30:36.84
  STEP: Scale down will halt with unhealthy stateful pod @ 09/01/25 11:30:36.84
  I0901 11:30:36.866994 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:30:37.229639 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:30:37.229744 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:30:37.229773 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:30:37.230217 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:30:37.587566 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:30:37.592111 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:30:37.592194 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:30:37.592674 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 11:30:37.954886 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 11:30:37.954995 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 11:30:37.955052 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 11:30:37.955075 15 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 11:30:37.964578 15 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 1
  I0901 11:30:47.987161 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:30:47.987279 15 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:30:47.987317 15 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 11:30:48.088281 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999083s
  I0901 11:30:49.102053 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.941649037s
  I0901 11:30:50.118283 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.928087337s
  I0901 11:30:51.134771 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.910447877s
  I0901 11:30:52.154894 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.894801698s
  I0901 11:30:53.165674 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.875115456s
  I0901 11:30:54.184356 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.863790168s
  I0901 11:30:55.201686 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.84545621s
  I0901 11:30:56.219072 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.828081997s
  I0901 11:30:57.230169 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 810.548593ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7131 @ 09/01/25 11:30:58.231
  I0901 11:30:58.249897 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:30:58.591018 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:30:58.591193 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:30:58.591223 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:30:58.591954 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:30:58.941755 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:30:58.941922 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:30:58.941954 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:30:58.943250 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-7131 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 11:30:59.308078 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 11:30:59.308224 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 11:30:59.308327 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 11:30:59.308384 15 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/01/25 11:31:09.336
  I0901 11:31:09.337529 15 statefulset.go:138] Deleting all statefulset in ns statefulset-7131
  I0901 11:31:09.349891 15 rest.go:152] Scaling statefulset ss to 0
  I0901 11:31:09.369784 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 11:31:09.379254 15 rest.go:90] Deleting statefulset ss
  I0901 11:31:09.419914 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7131" for this suite. @ 09/01/25 11:31:09.433
â€¢ [73.941 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/01/25 11:31:09.453
  I0901 11:31:09.454374 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:31:09.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:31:09.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:31:09.489
  STEP: creating the pod @ 09/01/25 11:31:09.496
  STEP: waiting for pod running @ 09/01/25 11:31:09.516
  STEP: creating a file in subpath @ 09/01/25 11:31:11.553
  I0901 11:31:11.565392 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6998 PodName:var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:31:11.567787 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:31:11.568385 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-6998/pods/var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/01/25 11:31:11.688
  I0901 11:31:11.698351 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6998 PodName:var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:31:11.698946 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:31:11.699066 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-6998/pods/var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/01/25 11:31:11.821
  I0901 11:31:12.356878 15 pod_client.go:173] Successfully updated pod "var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531"
  STEP: waiting for annotated pod running @ 09/01/25 11:31:12.357
  STEP: deleting the pod gracefully @ 09/01/25 11:31:12.374
  I0901 11:31:12.375514 15 delete.go:62] Deleting pod "var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531" in namespace "var-expansion-6998"
  I0901 11:31:12.396058 15 delete.go:70] Wait up to 5m0s for pod "var-expansion-f460d289-ff80-482b-9d7f-b1e79b1e1531" to be fully deleted
  I0901 11:31:46.681795 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6998" for this suite. @ 09/01/25 11:31:46.7
â€¢ [37.271 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/01/25 11:31:46.725
  I0901 11:31:46.725764 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:31:46.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:31:46.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:31:46.78
  STEP: Creating the pod @ 09/01/25 11:31:46.789
  I0901 11:31:49.430851 15 pod_client.go:173] Successfully updated pod "annotationupdatec1c3995b-092a-4425-94bc-cdf44501a660"
  I0901 11:31:51.508327 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6823" for this suite. @ 09/01/25 11:31:51.527
â€¢ [4.820 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:31:51.544
  I0901 11:31:51.544873 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 11:31:51.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:31:51.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:31:51.582
  STEP: Creating a ForbidConcurrent cronjob @ 09/01/25 11:31:51.589
  STEP: Ensuring a job is scheduled @ 09/01/25 11:31:51.608
  STEP: Ensuring exactly one is scheduled @ 09/01/25 11:32:01.617
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 11:32:01.624
  STEP: Ensuring no more jobs are scheduled @ 09/01/25 11:32:01.637
  STEP: Removing cronjob @ 09/01/25 11:32:01.648
  I0901 11:32:01.665042 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9462" for this suite. @ 09/01/25 11:32:01.683
â€¢ [10.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/01/25 11:32:01.713
  I0901 11:32:01.713325 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:32:01.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:01.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:01.759
  STEP: Creating Pod @ 09/01/25 11:32:01.766
  STEP: Reading file content from the nginx-container @ 09/01/25 11:32:05.825
  I0901 11:32:05.826018 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1417 PodName:pod-sharedvolume-e57664f2-f307-43dd-8851-f952d3263edf ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:32:05.826437 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:32:05.826677 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-1417/pods/pod-sharedvolume-e57664f2-f307-43dd-8851-f952d3263edf/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0901 11:32:05.983676 15 exec_util.go:108] Exec stderr: ""
  I0901 11:32:05.986303 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1417" for this suite. @ 09/01/25 11:32:06.002
â€¢ [4.322 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 09/01/25 11:32:06.036
  I0901 11:32:06.036159 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:32:06.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:06.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:06.082
  I0901 11:32:06.137832 15 service_accounts.go:647] created pod
  STEP: Saw pod success @ 09/01/25 11:32:10.179
  I0901 11:32:40.179690 15 service_accounts.go:653] polling logs
  I0901 11:32:40.212528 15 service_accounts.go:663] Pod logs: 
  I0901 11:32:07.231278       1 log.go:245] OK: Got token
  I0901 11:32:07.233389       1 log.go:245] validating with in-cluster discovery
  I0901 11:32:07.237052       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0901 11:32:07.237118       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8818:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000d1db0), NotBefore:(*jwt.NumericDate)(0xc0000d1ea0), IssuedAt:(*jwt.NumericDate)(0xc0000d1dc0), ID:"f9e0f84a-f028-48f0-93ac-f529fa839b1f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8818", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"52a476c7-7ed5-4e39-ba5c-a9e24364e721"}}}
  I0901 11:32:07.287374       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0901 11:32:07.304649       1 log.go:245] OK: Validated signature on JWT
  I0901 11:32:07.304831       1 log.go:245] OK: Got valid claims from token!
  I0901 11:32:07.304892       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8818:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000132b8), NotBefore:(*jwt.NumericDate)(0xc0000132e0), IssuedAt:(*jwt.NumericDate)(0xc0000132c0), ID:"f9e0f84a-f028-48f0-93ac-f529fa839b1f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8818", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"52a476c7-7ed5-4e39-ba5c-a9e24364e721"}}}

  I0901 11:32:40.212716 15 service_accounts.go:667] completed pod
  I0901 11:32:40.237980 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8818" for this suite. @ 09/01/25 11:32:40.256
â€¢ [34.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/01/25 11:32:40.283
  I0901 11:32:40.283364 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:32:40.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:40.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:40.333
  STEP: Creating a test namespace @ 09/01/25 11:32:40.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:40.375
  STEP: Creating a service in the namespace @ 09/01/25 11:32:40.383
  STEP: Deleting the namespace @ 09/01/25 11:32:40.419
  STEP: Waiting for the namespace to be removed. @ 09/01/25 11:32:40.442
  STEP: Recreating the namespace @ 09/01/25 11:32:46.461
  STEP: Verifying there is no service in the namespace @ 09/01/25 11:32:46.493
  I0901 11:32:46.505130 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1907" for this suite. @ 09/01/25 11:32:46.519
  STEP: Destroying namespace "nsdeletetest-2073" for this suite. @ 09/01/25 11:32:46.538
  I0901 11:32:46.547556 15 framework.go:370] Namespace nsdeletetest-2073 was already deleted
  STEP: Destroying namespace "nsdeletetest-1946" for this suite. @ 09/01/25 11:32:46.547
â€¢ [6.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/01/25 11:32:46.563
  I0901 11:32:46.563785 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 11:32:46.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:46.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:46.604
  I0901 11:32:46.622073 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9485" for this suite. @ 09/01/25 11:32:46.65
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 09/01/25 11:32:46.669
  I0901 11:32:46.669359 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 11:32:46.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:46.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:46.704
  STEP: Creating a job @ 09/01/25 11:32:46.713
  STEP: Ensuring active pods == parallelism @ 09/01/25 11:32:46.725
  STEP: delete a job @ 09/01/25 11:32:48.786
  STEP: deleting Job.batch foo in namespace job-930, will wait for the garbage collector to delete the pods @ 09/01/25 11:32:48.787
  I0901 11:32:48.875358 15 resources.go:139] Deleting Job.batch foo took: 20.423209ms
  I0901 11:32:48.976387 15 resources.go:163] Terminating Job.batch foo pods took: 101.039949ms
  STEP: Ensuring job was deleted @ 09/01/25 11:32:50.478
  I0901 11:32:50.495014 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-930" for this suite. @ 09/01/25 11:32:50.517
â€¢ [3.873 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/01/25 11:32:50.545
  I0901 11:32:50.545917 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:32:50.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:50.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:50.608
  STEP: creating a Pod with a static label @ 09/01/25 11:32:50.625
  STEP: watching for Pod to be ready @ 09/01/25 11:32:50.657
  I0901 11:32:50.667034 15 pods.go:945] observed Pod pod-test in namespace pods-5933 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0901 11:32:50.675272 15 pods.go:945] observed Pod pod-test in namespace pods-5933 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC  }]
  I0901 11:32:50.706640 15 pods.go:945] observed Pod pod-test in namespace pods-5933 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC  }]
  I0901 11:32:52.326000 15 pods.go:948] Found Pod pod-test in namespace pods-5933 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:52 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:52 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 11:32:50 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/01/25 11:32:52.333
  STEP: getting the Pod and ensuring that it's patched @ 09/01/25 11:32:52.357
  STEP: replacing the Pod's status Ready condition to False @ 09/01/25 11:32:52.365
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/01/25 11:32:52.394
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/01/25 11:32:52.394
  STEP: watching for the Pod to be deleted @ 09/01/25 11:32:52.414
  I0901 11:32:52.419313 15 pods.go:1058] observed event type MODIFIED
  I0901 11:32:54.356298 15 pods.go:1058] observed event type MODIFIED
  I0901 11:32:54.594558 15 pods.go:1058] observed event type MODIFIED
  I0901 11:32:55.417348 15 pods.go:1058] observed event type MODIFIED
  I0901 11:32:55.428204 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5933" for this suite. @ 09/01/25 11:32:55.469
â€¢ [4.941 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/01/25 11:32:55.487
  I0901 11:32:55.487930 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 11:32:55.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:55.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:55.532
  I0901 11:32:55.634688 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2654" for this suite. @ 09/01/25 11:32:55.647
â€¢ [0.174 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/01/25 11:32:55.663
  I0901 11:32:55.663807 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 11:32:55.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:32:55.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:32:55.699
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/01/25 11:32:55.725
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/01/25 11:33:12.97
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/01/25 11:33:12.984
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/01/25 11:33:13.005
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/01/25 11:33:13.006
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/01/25 11:33:13.092
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/01/25 11:33:16.139
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/01/25 11:33:17.168
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/01/25 11:33:17.191
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/01/25 11:33:17.191
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/01/25 11:33:17.289
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/01/25 11:33:18.31
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/01/25 11:33:20.348
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/01/25 11:33:20.377
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/01/25 11:33:20.378
  I0901 11:33:20.473689 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1867" for this suite. @ 09/01/25 11:33:20.489
â€¢ [24.854 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/01/25 11:33:20.521
  I0901 11:33:20.521269 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:33:20.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:33:20.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:33:20.576
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:33:20.586
  STEP: Saw pod success @ 09/01/25 11:33:24.656
  I0901 11:33:24.667742 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-571b63f5-8f11-4e74-974e-554b5597b33b container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:33:24.691
  I0901 11:33:24.749047 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9491" for this suite. @ 09/01/25 11:33:24.765
â€¢ [4.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/01/25 11:33:24.787
  I0901 11:33:24.787672 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 11:33:24.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:33:24.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:33:24.826
  STEP: create the container @ 09/01/25 11:33:24.834
  W0901 11:33:24.859288      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/01/25 11:33:24.859
  STEP: get the container status @ 09/01/25 11:33:28.937
  STEP: the container should be terminated @ 09/01/25 11:33:28.944
  STEP: the termination message should be set @ 09/01/25 11:33:28.944
  I0901 11:33:28.944816 15 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 11:33:28.944
  I0901 11:33:28.980802 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4196" for this suite. @ 09/01/25 11:33:28.991
â€¢ [4.226 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/01/25 11:33:29.014
  I0901 11:33:29.014193 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 11:33:29.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:33:29.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:33:29.055
  STEP: Creating pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521 @ 09/01/25 11:33:29.063
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 11:33:31.119
  I0901 11:33:31.133629 15 container_probe.go:1749] Initial restart count of pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b is 0
  I0901 11:33:31.143993 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:33.169024 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:35.185618 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:37.197736 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:39.215795 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:41.234022 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:43.246643 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:45.257924 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:47.273545 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:49.288925 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:51.302807 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:53.318161 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:55.332754 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:57.345331 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:33:59.359513 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:01.374696 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:03.394288 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:05.409807 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:07.419701 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:09.435786 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:11.477503 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:13.496612 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:15.522008 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:17.535789 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:19.631929 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:21.645984 15 container_probe.go:1759] Get pod busybox-da3907c0-c57b-4da3-83c2-c072b382f61b in namespace container-probe-3521
  I0901 11:34:21.646176 15 container_probe.go:1763] Restart count of pod container-probe-3521/busybox-da3907c0-c57b-4da3-83c2-c072b382f61b is now 1 (50.512386817s elapsed)
  STEP: deleting the pod @ 09/01/25 11:34:21.649
  I0901 11:34:21.705193 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3521" for this suite. @ 09/01/25 11:34:21.725
â€¢ [52.736 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/01/25 11:34:21.758
  I0901 11:34:21.758757 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 11:34:21.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:34:21.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:34:21.804
  I0901 11:34:21.813811 15 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 11:34:21.839848 15 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 11:34:21.852685 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-1 before test
  I0901 11:34:21.878486 15 predicates.go:957] cilium-node-init-t2mqh from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.878608 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 11:34:21.878642 15 predicates.go:957] cilium-phmzb from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.878667 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:34:21.878691 15 predicates.go:957] coredns-668d6bf9bc-w8sj7 from kube-system started at 2025-09-01 10:53:37 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.878711 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 11:34:21.878740 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.878760 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:34:21.878784 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.878803 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0901 11:34:21.878832 15 predicates.go:957] kube-proxy-9m2kx from kube-system started at 2025-09-01 10:43:58 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.878870 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:34:21.879771 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.880049 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:34:21.880262 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-sbccx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:34:21.880353 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:34:21.880380 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 11:34:21.880440 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-2 before test
  I0901 11:34:21.979395 15 predicates.go:957] cilium-4g649 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.979569 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:34:21.979608 15 predicates.go:957] cilium-node-init-xjhj7 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.979634 15 predicates.go:959] 	Container node-init ready: true, restart count 2
  I0901 11:34:21.979663 15 predicates.go:957] coredns-668d6bf9bc-jtmfr from kube-system started at 2025-09-01 10:47:10 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.980224 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 11:34:21.980291 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.980320 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 11:34:21.980347 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.980921 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0901 11:34:21.980964 15 predicates.go:957] kube-proxy-x9ghv from kube-system started at 2025-09-01 10:44:58 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.981015 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:34:21.981072 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 11:34:21.981100 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 11:34:21.981127 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-2t4p8 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:34:21.981151 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:34:21.981174 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 11:34:21.981201 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-3 before test
  I0901 11:34:21.999953 15 predicates.go:957] cilium-node-init-nkr6k from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:22.000034 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 11:34:22.000134 15 predicates.go:957] cilium-operator-7869bdf68b-fnsfs from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:22.000172 15 predicates.go:959] 	Container cilium-operator ready: true, restart count 5
  I0901 11:34:22.000206 15 predicates.go:957] cilium-tdgd6 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 11:34:22.000269 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 11:34:22.000300 15 predicates.go:957] kube-proxy-sgb9m from kube-system started at 2025-09-01 10:45:27 +0000 UTC (1 container statuses recorded)
  I0901 11:34:22.000360 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 11:34:22.000392 15 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 11:34:22.000654 15 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 11:34:22.000690 15 predicates.go:957] sonobuoy-e2e-job-f2a5303f9c494ce3 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:34:22.000714 15 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 11:34:22.000738 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:34:22.000975 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-wmhsb from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 11:34:22.001038 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 11:34:22.001063 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/01/25 11:34:22.001
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18612568e445b18c], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/01/25 11:34:22.1
  I0901 11:34:23.096120 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3282" for this suite. @ 09/01/25 11:34:23.112
â€¢ [1.380 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/01/25 11:34:23.14
  I0901 11:34:23.140170 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:34:23.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:34:23.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:34:23.2
  STEP: creating a secret @ 09/01/25 11:34:23.216
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/01/25 11:34:23.236
  STEP: patching the secret @ 09/01/25 11:34:23.251
  STEP: deleting the secret using a LabelSelector @ 09/01/25 11:34:23.284
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/01/25 11:34:23.313
  I0901 11:34:23.324861 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3070" for this suite. @ 09/01/25 11:34:23.348
â€¢ [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/01/25 11:34:23.376
  I0901 11:34:23.376215 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename init-container @ 09/01/25 11:34:23.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:34:23.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:34:23.421
  STEP: creating the pod @ 09/01/25 11:34:23.427
  I0901 11:34:23.428152 15 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0901 11:34:27.557719 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-711" for this suite. @ 09/01/25 11:34:27.571
â€¢ [4.236 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 09/01/25 11:34:27.614
  I0901 11:34:27.614203 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 11:34:27.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:34:27.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:34:27.644
  I0901 11:34:27.683726 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 11:35:27.719918 15 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 11:35:27.737
  STEP: Adding a custom resource @ 09/01/25 11:35:27.737
  I0901 11:35:27.796765 15 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0901 11:35:27.813194 15 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:35:27.813
  I0901 11:35:27.879009 15 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 11:35:27.892984 15 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 11:35:27.893
  I0901 11:35:27.937796 15 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 11:35:27.948292 15 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 11:35:27.948
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/01/25 11:35:32.116
  STEP: Removing a custom resource @ 09/01/25 11:35:36.312
  STEP: Removing a custom resource @ 09/01/25 11:35:36.344
  STEP: Removing a custom resource @ 09/01/25 11:35:36.374
  I0901 11:35:36.412315 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1922" for this suite. @ 09/01/25 11:35:36.43
â€¢ [68.834 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/01/25 11:35:36.451
  I0901 11:35:36.451823 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 11:35:36.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:35:36.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:35:36.49
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/01/25 11:35:36.497
  I0901 11:35:36.514080 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3244" for this suite. @ 09/01/25 11:35:36.526
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/01/25 11:35:36.56
  I0901 11:35:36.560442 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:35:36.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:35:36.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:35:36.599
  STEP: creating a replication controller @ 09/01/25 11:35:36.605
  I0901 11:35:36.606304 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 create -f -'
  I0901 11:35:37.044526 15 builder.go:146] stderr: ""
  I0901 11:35:37.044681 15 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:35:37.045
  I0901 11:35:37.046541 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:35:37.272284 15 builder.go:146] stderr: ""
  I0901 11:35:37.272480 15 builder.go:147] stdout: "update-demo-nautilus-cb7wg update-demo-nautilus-tp9t5 "
  I0901 11:35:37.273171 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:37.470811 15 builder.go:146] stderr: ""
  I0901 11:35:37.470885 15 builder.go:147] stdout: ""
  I0901 11:35:37.470922 15 kubectl.go:2509] update-demo-nautilus-cb7wg is created but not running
  I0901 11:35:42.474722 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:35:43.389844 15 builder.go:146] stderr: ""
  I0901 11:35:43.390102 15 builder.go:147] stdout: "update-demo-nautilus-cb7wg update-demo-nautilus-tp9t5 "
  I0901 11:35:43.409107 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:44.149684 15 builder.go:146] stderr: ""
  I0901 11:35:44.149793 15 builder.go:147] stdout: ""
  I0901 11:35:44.149981 15 kubectl.go:2509] update-demo-nautilus-cb7wg is created but not running
  I0901 11:35:49.150678 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:35:49.345957 15 builder.go:146] stderr: ""
  I0901 11:35:49.346143 15 builder.go:147] stdout: "update-demo-nautilus-cb7wg update-demo-nautilus-tp9t5 "
  I0901 11:35:49.346560 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:49.509811 15 builder.go:146] stderr: ""
  I0901 11:35:49.509886 15 builder.go:147] stdout: "true"
  I0901 11:35:49.510319 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:35:49.663378 15 builder.go:146] stderr: ""
  I0901 11:35:49.663850 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:35:49.664156 15 kubectl.go:2400] validating pod update-demo-nautilus-cb7wg
  I0901 11:35:49.682323 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:35:49.683034 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:35:49.683069 15 kubectl.go:2527] update-demo-nautilus-cb7wg is verified up and running
  I0901 11:35:49.683479 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-tp9t5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:49.853395 15 builder.go:146] stderr: ""
  I0901 11:35:49.853783 15 builder.go:147] stdout: ""
  I0901 11:35:49.853812 15 kubectl.go:2509] update-demo-nautilus-tp9t5 is created but not running
  I0901 11:35:54.856797 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:35:55.108815 15 builder.go:146] stderr: ""
  I0901 11:35:55.108929 15 builder.go:147] stdout: "update-demo-nautilus-cb7wg update-demo-nautilus-tp9t5 "
  I0901 11:35:55.109190 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:55.302839 15 builder.go:146] stderr: ""
  I0901 11:35:55.302947 15 builder.go:147] stdout: "true"
  I0901 11:35:55.303315 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:35:55.499323 15 builder.go:146] stderr: ""
  I0901 11:35:55.499478 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:35:55.499507 15 kubectl.go:2400] validating pod update-demo-nautilus-cb7wg
  I0901 11:35:55.509639 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:35:55.510142 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:35:55.510175 15 kubectl.go:2527] update-demo-nautilus-cb7wg is verified up and running
  I0901 11:35:55.510520 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-tp9t5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:55.727660 15 builder.go:146] stderr: ""
  I0901 11:35:55.727757 15 builder.go:147] stdout: "true"
  I0901 11:35:55.728028 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-tp9t5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:35:55.913918 15 builder.go:146] stderr: ""
  I0901 11:35:55.914027 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:35:55.914110 15 kubectl.go:2400] validating pod update-demo-nautilus-tp9t5
  I0901 11:35:55.943684 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:35:55.943810 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:35:55.943868 15 kubectl.go:2527] update-demo-nautilus-tp9t5 is verified up and running
  STEP: scaling down the replication controller @ 09/01/25 11:35:55.943
  I0901 11:35:55.974931 15 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0901 11:35:55.975146 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0901 11:35:57.236671 15 builder.go:146] stderr: ""
  I0901 11:35:57.236988 15 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:35:57.237
  I0901 11:35:57.237611 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:35:57.435519 15 builder.go:146] stderr: ""
  I0901 11:35:57.436195 15 builder.go:147] stdout: "update-demo-nautilus-cb7wg "
  I0901 11:35:57.436823 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:57.648127 15 builder.go:146] stderr: ""
  I0901 11:35:57.648258 15 builder.go:147] stdout: "true"
  I0901 11:35:57.648894 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:35:57.852372 15 builder.go:146] stderr: ""
  I0901 11:35:57.852553 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:35:57.852582 15 kubectl.go:2400] validating pod update-demo-nautilus-cb7wg
  I0901 11:35:57.870704 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:35:57.870850 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:35:57.870889 15 kubectl.go:2527] update-demo-nautilus-cb7wg is verified up and running
  STEP: scaling up the replication controller @ 09/01/25 11:35:57.87
  I0901 11:35:57.890137 15 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0901 11:35:57.890598 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0901 11:35:59.140559 15 builder.go:146] stderr: ""
  I0901 11:35:59.140880 15 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:35:59.141
  I0901 11:35:59.142028 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:35:59.345917 15 builder.go:146] stderr: ""
  I0901 11:35:59.346333 15 builder.go:147] stdout: "update-demo-nautilus-cb7wg update-demo-nautilus-dzvgd "
  I0901 11:35:59.346871 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:59.545875 15 builder.go:146] stderr: ""
  I0901 11:35:59.546049 15 builder.go:147] stdout: "true"
  I0901 11:35:59.546389 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-cb7wg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:35:59.729859 15 builder.go:146] stderr: ""
  I0901 11:35:59.730239 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:35:59.730290 15 kubectl.go:2400] validating pod update-demo-nautilus-cb7wg
  I0901 11:35:59.743276 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:35:59.743559 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:35:59.743602 15 kubectl.go:2527] update-demo-nautilus-cb7wg is verified up and running
  I0901 11:35:59.743941 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-dzvgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:35:59.941771 15 builder.go:146] stderr: ""
  I0901 11:35:59.942530 15 builder.go:147] stdout: "true"
  I0901 11:35:59.943428 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods update-demo-nautilus-dzvgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:36:00.153841 15 builder.go:146] stderr: ""
  I0901 11:36:00.154086 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:36:00.154152 15 kubectl.go:2400] validating pod update-demo-nautilus-dzvgd
  I0901 11:36:00.178104 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:36:00.178371 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:36:00.178526 15 kubectl.go:2527] update-demo-nautilus-dzvgd is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 11:36:00.178
  I0901 11:36:00.179341 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 delete --grace-period=0 --force -f -'
  I0901 11:36:00.422371 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:36:00.423379 15 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0901 11:36:00.424873 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get rc,svc -l name=update-demo --no-headers'
  I0901 11:36:00.765789 15 builder.go:146] stderr: "No resources found in kubectl-7702 namespace.\n"
  I0901 11:36:00.765910 15 builder.go:147] stdout: ""
  I0901 11:36:00.783556 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7702 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 11:36:01.068367 15 builder.go:146] stderr: ""
  I0901 11:36:01.068510 15 builder.go:147] stdout: ""
  I0901 11:36:01.075064 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7702" for this suite. @ 09/01/25 11:36:01.093
â€¢ [24.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 09/01/25 11:36:01.127
  I0901 11:36:01.128802 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:36:01.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:01.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:01.181
  STEP: Creating a Serviceaccount "e2e-sa-c77gb" in namespace "svcaccounts-4858" @ 09/01/25 11:36:01.186
  STEP: Creating a ServiceaccountToken "e2e-sa-c77gb" in namespace "svcaccounts-4858" @ 09/01/25 11:36:01.208
  STEP: Creating a TokenReview for "e2e-sa-c77gb" in namespace "svcaccounts-4858" @ 09/01/25 11:36:01.223
  I0901 11:36:01.229034 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4858" for this suite. @ 09/01/25 11:36:01.246
â€¢ [0.137 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/01/25 11:36:01.264
  I0901 11:36:01.265023 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 11:36:01.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:01.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:01.297
  STEP: creating a ReplicationController @ 09/01/25 11:36:01.32
  STEP: waiting for RC to be added @ 09/01/25 11:36:01.336
  STEP: waiting for available Replicas @ 09/01/25 11:36:01.336
  STEP: patching ReplicationController @ 09/01/25 11:36:03.104
  STEP: waiting for RC to be modified @ 09/01/25 11:36:03.133
  STEP: patching ReplicationController status @ 09/01/25 11:36:03.133
  STEP: waiting for RC to be modified @ 09/01/25 11:36:03.15
  STEP: waiting for available Replicas @ 09/01/25 11:36:03.151
  STEP: fetching ReplicationController status @ 09/01/25 11:36:03.17
  STEP: patching ReplicationController scale @ 09/01/25 11:36:03.184
  STEP: waiting for RC to be modified @ 09/01/25 11:36:03.21
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/01/25 11:36:03.216
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/01/25 11:36:04.88
  STEP: updating ReplicationController status @ 09/01/25 11:36:04.891
  STEP: waiting for RC to be modified @ 09/01/25 11:36:04.916
  STEP: listing all ReplicationControllers @ 09/01/25 11:36:04.916
  STEP: checking that ReplicationController has expected values @ 09/01/25 11:36:04.924
  STEP: deleting ReplicationControllers by collection @ 09/01/25 11:36:04.924
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/01/25 11:36:04.947
  I0901 11:36:05.051873 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 11:36:05.053671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2866" for this suite. @ 09/01/25 11:36:05.068
â€¢ [3.818 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/01/25 11:36:05.083
  I0901 11:36:05.083923 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename init-container @ 09/01/25 11:36:05.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:05.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:05.124
  STEP: creating the pod @ 09/01/25 11:36:05.133
  I0901 11:36:05.133679 15 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0901 11:36:06.054329      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:07.053811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:08.054515      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:09.054861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:10.055556      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:11.059516      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:12.057842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:13.058712      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:14.059716      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:15.060025      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:16.060089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:17.060657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:18.061706      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:19.063084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:20.063911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:21.064347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:22.064599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:23.065932      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:24.066818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:25.067837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:26.067798      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:27.068715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:28.069607      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:29.070551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:30.070765      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:31.072059      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:32.073359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:33.073388      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:34.074209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:35.074557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:36.074677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:37.075266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:38.076034      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:39.076516      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:40.077712      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:41.078025      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:42.078852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:43.079380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:44.079862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:45.080359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:46.080579      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:47.081728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:48.082897      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:36:48.473836 15 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-f41164c5-7ab7-4bb9-b0d7-6e79b5e1f9b2", GenerateName:"", Namespace:"init-container-4365", SelfLink:"", UID:"3e2e275a-aa11-4a67-9767-648b5c5f8767", ResourceVersion:"11196", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"133621979"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba6d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 11, 36, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba708), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-g6b2c", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0011683e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g6b2c", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g6b2c", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g6b2c", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002a81378), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"aeshuj4hoh7a-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00219d320), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002a81420)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002a81440)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002a81448), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002a8144c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000b1e580), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 11, 36, 8, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.182", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.182"}}, PodIP:"10.233.65.106", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.65.106"}}, StartTime:time.Date(2025, time.September, 1, 11, 36, 5, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000500700)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000500930)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://87e013069b9dfe01c940748fd11c477f1c13ce2a33ce290f702b5ad71b7d1aa7", Started:(*bool)(0xc002a8150a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-g6b2c", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000b1e5a0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001168440), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002a8151d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-g6b2c", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000b1e5b0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001168420), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc002a814d4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-g6b2c", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000b1e590)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0901 11:36:48.474271 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4365" for this suite. @ 09/01/25 11:36:48.495
â€¢ [43.432 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/01/25 11:36:48.517
  I0901 11:36:48.517384 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:36:48.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:48.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:48.56
  STEP: Setting up server cert @ 09/01/25 11:36:48.605
  E0901 11:36:49.083911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:36:49.9
  STEP: Deploying the webhook pod @ 09/01/25 11:36:49.918
  STEP: Wait for the deployment to be ready @ 09/01/25 11:36:49.956
  I0901 11:36:49.980731 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 11:36:50.084889      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:51.085727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 11:36:52.025
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:36:52.066
  E0901 11:36:52.087333      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:36:53.068245 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0901 11:36:53.087867      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 11:36:53.094
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 11:36:53.16
  STEP: Creating a dummy validating-webhook-configuration object @ 09/01/25 11:36:53.216
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/01/25 11:36:53.238
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/01/25 11:36:53.255
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/01/25 11:36:53.279
  I0901 11:36:53.422608 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9292" for this suite. @ 09/01/25 11:36:53.436
  STEP: Destroying namespace "webhook-markers-4143" for this suite. @ 09/01/25 11:36:53.458
â€¢ [4.963 seconds]
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/01/25 11:36:53.48
  I0901 11:36:53.480547 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename csinodes @ 09/01/25 11:36:53.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:53.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:53.509
  STEP: Creating initial csiNode "e2e-csinode-s6qkz" @ 09/01/25 11:36:53.519
  STEP: Getting initial csiNode "e2e-csinode-s6qkz" @ 09/01/25 11:36:53.532
  STEP: Patching initial csiNode: "e2e-csinode-s6qkz" @ 09/01/25 11:36:53.539
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-s6qkz=patched" @ 09/01/25 11:36:53.557
  STEP: Delete initial csiNode: "e2e-csinode-s6qkz" @ 09/01/25 11:36:53.566
  STEP: Confirm deletion of csiNode "e2e-csinode-s6qkz" @ 09/01/25 11:36:53.578
  STEP: Creating replacement csiNode "e2e-csinode-rk5pw" @ 09/01/25 11:36:53.59
  STEP: Getting replacement csiNode "e2e-csinode-rk5pw" @ 09/01/25 11:36:53.601
  STEP: Updating replacement csiNode "e2e-csinode-rk5pw" @ 09/01/25 11:36:53.608
  STEP: DeleteCollection of CSINodes with "e2e-csinode-rk5pw=updated" label @ 09/01/25 11:36:53.628
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-rk5pw=updated" @ 09/01/25 11:36:53.646
  I0901 11:36:53.653662 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-8720" for this suite. @ 09/01/25 11:36:53.663
â€¢ [0.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/01/25 11:36:53.682
  I0901 11:36:53.682500 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:36:53.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:53.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:53.722
  STEP: Creating namespace "e2e-ns-qm8dz" @ 09/01/25 11:36:53.731
  I0901 11:36:53.752206 15 namespace.go:412] Namespace "e2e-ns-qm8dz-7223" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-qm8dz-7223" @ 09/01/25 11:36:53.752
  I0901 11:36:53.774675 15 namespace.go:435] Namespace "e2e-ns-qm8dz-7223" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-qm8dz-7223" @ 09/01/25 11:36:53.774
  I0901 11:36:53.793663 15 namespace.go:464] Namespace "e2e-ns-qm8dz-7223" has []v1.FinalizerName{"kubernetes"}
  I0901 11:36:53.793993 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2691" for this suite. @ 09/01/25 11:36:53.804
  STEP: Destroying namespace "e2e-ns-qm8dz-7223" for this suite. @ 09/01/25 11:36:53.818
â€¢ [0.150 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/01/25 11:36:53.833
  I0901 11:36:53.833127 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:36:53.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:53.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:53.864
  STEP: Creating configMap with name configmap-test-volume-62d79d28-0f51-49bd-922e-0ef42810569d @ 09/01/25 11:36:53.871
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:36:53.888
  E0901 11:36:54.088221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:55.089232      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:56.089667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:36:57.090054      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:36:57.953
  I0901 11:36:57.964279 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-bcb1b96e-9938-4114-bcb5-a37ee5c95f2c container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:36:58.033
  I0901 11:36:58.089339 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 11:36:58.090131      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-7700" for this suite. @ 09/01/25 11:36:58.103
â€¢ [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/01/25 11:36:58.13
  I0901 11:36:58.130346 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 11:36:58.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:36:58.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:36:58.185
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:36:58.193
  E0901 11:36:59.090722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:00.091288      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:01.091343      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:02.091835      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:37:02.258
  I0901 11:37:02.270924 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-8c24d669-24a6-4c0c-88af-0f3b758a9514 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:37:02.295
  I0901 11:37:02.354068 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7907" for this suite. @ 09/01/25 11:37:02.376
â€¢ [4.272 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/01/25 11:37:02.404
  I0901 11:37:02.404167 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:37:02.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:37:02.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:37:02.468
  STEP: Counting existing ResourceQuota @ 09/01/25 11:37:02.476
  E0901 11:37:03.092762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:04.093089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:05.094054      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:06.094114      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:07.094855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 11:37:07.491
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:37:07.504
  E0901 11:37:08.095784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:09.100361      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/01/25 11:37:09.517
  STEP: Ensuring resource quota status captures replicaset creation @ 09/01/25 11:37:09.556
  E0901 11:37:10.098326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:11.098609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/01/25 11:37:11.57
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:37:11.59
  E0901 11:37:12.098943      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:13.099592      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:13.605737 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6631" for this suite. @ 09/01/25 11:37:13.62
â€¢ [11.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/01/25 11:37:13.647
  I0901 11:37:13.647702 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:37:13.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:37:13.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:37:13.702
  STEP: create the rc @ 09/01/25 11:37:13.724
  W0901 11:37:13.740345      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0901 11:37:14.099801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:15.100971      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:16.141166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:17.267483      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:18.419963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:19.319603      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 11:37:19.944
  STEP: wait for the rc to be deleted @ 09/01/25 11:37:20.435
  E0901 11:37:21.006684      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:37:23.062575      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:23.747083 15 garbage_collector.go:670] 76 pods remaining
  I0901 11:37:23.747195 15 garbage_collector.go:677] 57 pods has nil DeletionTimestamp
  I0901 11:37:23.747214 15 garbage_collector.go:678] 
  I0901 11:37:23.803145 15 garbage_collector.go:670] 73 pods remaining
  I0901 11:37:23.807369 15 garbage_collector.go:677] 54 pods has nil DeletionTimestamp
  I0901 11:37:23.808084 15 garbage_collector.go:678] 
  E0901 11:37:24.076118      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:24.531347 15 garbage_collector.go:670] 68 pods remaining
  I0901 11:37:24.531465 15 garbage_collector.go:677] 43 pods has nil DeletionTimestamp
  I0901 11:37:24.531484 15 garbage_collector.go:678] 
  E0901 11:37:25.182305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:25.698366 15 garbage_collector.go:670] 64 pods remaining
  I0901 11:37:25.755602 15 garbage_collector.go:677] 29 pods has nil DeletionTimestamp
  I0901 11:37:25.755766 15 garbage_collector.go:678] 
  E0901 11:37:26.142651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:27.320331 15 garbage_collector.go:670] 52 pods remaining
  I0901 11:37:27.320394 15 garbage_collector.go:677] 11 pods has nil DeletionTimestamp
  I0901 11:37:27.320433 15 garbage_collector.go:678] 
  E0901 11:37:27.798209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:28.278086 15 garbage_collector.go:670] 48 pods remaining
  I0901 11:37:28.278360 15 garbage_collector.go:677] 2 pods has nil DeletionTimestamp
  I0901 11:37:28.278395 15 garbage_collector.go:678] 
  E0901 11:37:28.308576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:28.491476 15 garbage_collector.go:670] 47 pods remaining
  I0901 11:37:28.491634 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:28.491657 15 garbage_collector.go:678] 
  E0901 11:37:29.406556      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:29.413524 15 garbage_collector.go:670] 36 pods remaining
  I0901 11:37:29.413564 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:29.413578 15 garbage_collector.go:678] 
  E0901 11:37:30.332277      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:30.489920 15 garbage_collector.go:670] 26 pods remaining
  I0901 11:37:30.489998 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:30.490016 15 garbage_collector.go:678] 
  E0901 11:37:31.333274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:31.419523 15 garbage_collector.go:670] 22 pods remaining
  I0901 11:37:31.422040 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:31.422064 15 garbage_collector.go:678] 
  I0901 11:37:32.238620 15 garbage_collector.go:670] 13 pods remaining
  I0901 11:37:32.238730 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:32.238759 15 garbage_collector.go:678] 
  E0901 11:37:32.333795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:33.326988 15 garbage_collector.go:670] 4 pods remaining
  I0901 11:37:33.327278 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:33.327300 15 garbage_collector.go:678] 
  E0901 11:37:33.335158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:34.233234 15 garbage_collector.go:670] 0 pods remaining
  I0901 11:37:34.233307 15 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0901 11:37:34.233325 15 garbage_collector.go:678] 
  E0901 11:37:34.335848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 11:37:35.23
  E0901 11:37:35.336021      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:35.637164 15 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 11:37:35.638301 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5790" for this suite. @ 09/01/25 11:37:35.655
â€¢ [22.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/01/25 11:37:35.765
  I0901 11:37:35.765342 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:37:35.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:37:35.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:37:35.876
  I0901 11:37:36.187014 15 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/01/25 11:37:36.25
  I0901 11:37:36.290488 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:36.291561 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/01/25 11:37:36.291
  E0901 11:37:36.337141      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:36.450124 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:36.450217 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:37.337591      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:37.424042 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:37.424256 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:38.344665      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:38.439141 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:38.439586 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:39.341876      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:39.425693 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:39.425878 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:40.342736      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:40.424008 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:40.424310 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:41.342601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:41.419360 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:41.419645 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:42.343008      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:42.415984 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:42.416284 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:43.344726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:43.412245 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:43.412329 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:44.345026      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:44.421844 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:44.421978 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:45.345331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:45.423569 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:45.423708 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:46.345919      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:46.418774 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:46.419219 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:47.346315      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:47.423298 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:47.423386 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:48.347773      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:48.418765 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:48.418890 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:49.347013      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:49.418473 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:49.418852 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:50.347929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:50.419063 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:50.419191 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:51.347339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:51.418590 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:51.418820 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:52.348210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:52.419039 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:52.419196 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:53.348614      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:53.418556 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:53.418677 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:54.348865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:54.419838 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:54.419960 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:55.349781      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:55.414875 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:55.414981 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:56.350161      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:56.420734 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:56.420864 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:57.350580      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:57.420633 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:57.420735 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:58.351475      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:58.412495 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:58.412627 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:37:59.352267      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:37:59.418074 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:37:59.418936 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:00.352626      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:00.422379 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:00.422592 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:01.354139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:01.415616 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:01.415731 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:02.354001      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:02.415246 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:02.415327 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:03.354809      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:03.421055 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:03.421546 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:04.354857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:04.417650 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:04.417775 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:05.355956      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:05.412470 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:05.412923 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:06.356218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:06.414090 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:06.414182 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:07.357012      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:07.436544 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:07.436716 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:08.357490      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:08.417358 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:08.417594 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:09.358220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:09.417688 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:09.417820 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:10.359051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:10.570185 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:10.570266 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:11.437377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:11.480970 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:11.481040 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:12.422782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:12.536166 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:12.539551 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:13.401617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:13.471235 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:13.471424 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:14.392729      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:14.420709 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:14.426900 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:15.394820      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:15.415231 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:38:15.415300 15 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/01/25 11:38:15.5
  I0901 11:38:15.564563 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:38:15.564674 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0901 11:38:16.393526      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:16.565248 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:16.565380 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/01/25 11:38:16.566
  I0901 11:38:16.635027 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:16.635143 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:17.393380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:17.609599 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:17.609677 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:38:18.394615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:18.609235 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:38:18.609317 15 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:38:18.634
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-625, will wait for the garbage collector to delete the pods @ 09/01/25 11:38:18.634
  I0901 11:38:18.714622 15 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 21.441467ms
  I0901 11:38:18.815342 15 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.694592ms
  E0901 11:38:19.394786      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:19.925341 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:38:19.925472 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:38:19.935695 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13025"},"items":null}

  I0901 11:38:19.941998 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13025"},"items":null}

  I0901 11:38:20.014698 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-625" for this suite. @ 09/01/25 11:38:20.023
â€¢ [44.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/01/25 11:38:20.051
  I0901 11:38:20.051222 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:38:20.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:38:20.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:38:20.111
  STEP: Setting up server cert @ 09/01/25 11:38:20.147
  E0901 11:38:20.396640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:38:21.126
  STEP: Deploying the webhook pod @ 09/01/25 11:38:21.158
  STEP: Wait for the deployment to be ready @ 09/01/25 11:38:21.218
  I0901 11:38:21.289844 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 11:38:21.397635      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:22.400114      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 11:38:23.33
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:38:23.38
  E0901 11:38:23.399697      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:24.380751 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0901 11:38:24.400599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:24.404028 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-767-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 11:38:24.942
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 11:38:25.011
  E0901 11:38:25.401303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:26.402100      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:27.402103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:28.255813 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9955" for this suite. @ 09/01/25 11:38:28.27
  STEP: Destroying namespace "webhook-markers-141" for this suite. @ 09/01/25 11:38:28.288
â€¢ [8.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 09/01/25 11:38:28.309
  I0901 11:38:28.309669 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:38:28.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:38:28.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:38:28.356
  STEP: Creating service test in namespace statefulset-4058 @ 09/01/25 11:38:28.364
  I0901 11:38:28.401920 15 wait.go:40] Found 0 stateful pods, waiting for 1
  E0901 11:38:28.401987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:29.402308      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:30.403033      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:31.404017      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:32.403711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:33.404793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:34.406772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:35.406387      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:36.406303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:37.407940      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:38.407244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:38.417633 15 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/01/25 11:38:38.441
  I0901 11:38:38.515258 15 wait.go:40] Found 1 stateful pods, waiting for 2
  E0901 11:38:39.408109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:40.408772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:41.424962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:42.422166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:43.422676      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:44.424391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:45.423902      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:46.424231      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:47.425039      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:48.426046      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:38:48.511724 15 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:38:48.512328 15 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/01/25 11:38:48.548
  STEP: Delete all of the StatefulSets @ 09/01/25 11:38:48.56
  STEP: Verify that StatefulSets have been deleted @ 09/01/25 11:38:48.584
  I0901 11:38:48.597182 15 statefulset.go:138] Deleting all statefulset in ns statefulset-4058
  I0901 11:38:48.663603 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4058" for this suite. @ 09/01/25 11:38:48.683
â€¢ [20.390 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/01/25 11:38:48.7
  I0901 11:38:48.700616 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:38:48.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:38:48.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:38:48.734
  E0901 11:38:49.426740      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:50.426733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:51.426913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:52.428070      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:53.429096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:54.429503      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:55.429330      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:56.429910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:57.430222      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:58.430637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:38:59.430974      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:00.431260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:01.432117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:02.431967      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:03.432242      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:04.432836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:05.433116      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/01/25 11:39:05.758
  E0901 11:39:06.434180      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:07.434759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:08.435770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:09.436534      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:10.437119      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 11:39:10.778
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:39:10.794
  E0901 11:39:11.438274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:12.439154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/01/25 11:39:12.809
  STEP: Ensuring resource quota status captures configMap creation @ 09/01/25 11:39:12.853
  E0901 11:39:13.439693      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:14.440711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/01/25 11:39:14.867
  STEP: Ensuring resource quota status released usage @ 09/01/25 11:39:14.903
  E0901 11:39:15.440950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:16.441847      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:39:16.931041 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6081" for this suite. @ 09/01/25 11:39:16.95
â€¢ [28.269 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 09/01/25 11:39:16.97
  I0901 11:39:16.970078 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:39:16.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:17.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:17.011
  I0901 11:39:17.029687 15 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-2101"
  I0901 11:39:17.046159 15 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-2101"
  E0901 11:39:17.442187      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 09/01/25 11:39:17.547
  I0901 11:39:17.557770 15 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-2101"
  I0901 11:39:17.573875 15 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-2101"
  STEP: waiting for the root ca configmap reconciled @ 09/01/25 11:39:18.075
  I0901 11:39:18.092485 15 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-2101"
  I0901 11:39:18.093169 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2101" for this suite. @ 09/01/25 11:39:18.114
â€¢ [1.164 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/01/25 11:39:18.137
  I0901 11:39:18.138217 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:39:18.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:18.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:18.186
  STEP: Setting up data @ 09/01/25 11:39:18.194
  STEP: Creating pod pod-subpath-test-secret-2lwh @ 09/01/25 11:39:18.215
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:39:18.215
  E0901 11:39:18.442974      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:19.443346      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:20.443561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:21.444284      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:22.445046      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:23.445866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:24.446037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:25.446315      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:26.446689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:27.446928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:28.447260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:29.447736      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:30.448364      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:31.449371      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:32.451085      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:33.451245      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:34.452276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:35.452712      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:36.452871      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:37.453753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:38.454982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:39.455921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:40.457819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:41.457714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:39:42.415
  I0901 11:39:42.428606 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-subpath-test-secret-2lwh container test-container-subpath-secret-2lwh: <nil>
  E0901 11:39:42.459712      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/01/25 11:39:42.495
  STEP: Deleting pod pod-subpath-test-secret-2lwh @ 09/01/25 11:39:42.549
  I0901 11:39:42.549955 15 delete.go:62] Deleting pod "pod-subpath-test-secret-2lwh" in namespace "subpath-5630"
  I0901 11:39:42.562477 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5630" for this suite. @ 09/01/25 11:39:42.58
â€¢ [24.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/01/25 11:39:42.61
  I0901 11:39:42.610834 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:39:42.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:39:42.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:39:42.661
  STEP: creating a watch on configmaps with label A @ 09/01/25 11:39:42.67
  STEP: creating a watch on configmaps with label B @ 09/01/25 11:39:42.683
  STEP: creating a watch on configmaps with label A or B @ 09/01/25 11:39:42.692
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/01/25 11:39:42.7
  I0901 11:39:42.714386 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13476 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:39:42.715206 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13476 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/01/25 11:39:42.715
  I0901 11:39:42.741210 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13477 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:39:42.741585 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13477 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/01/25 11:39:42.741
  I0901 11:39:42.768576 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13478 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:39:42.768885 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13478 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/01/25 11:39:42.769
  I0901 11:39:42.786741 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13479 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:39:42.786912 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6913  3f5f355c-3c7c-49f6-8dde-e5bc2aa9089e 13479 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/01/25 11:39:42.786
  I0901 11:39:42.803828 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6913  1dc5a780-5382-475f-98f6-b877c391779d 13480 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:39:42.804883 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6913  1dc5a780-5382-475f-98f6-b877c391779d 13480 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0901 11:39:43.459898      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:44.460311      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:45.461019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:46.461867      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:47.463193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:48.463776      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:49.464568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:50.465347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:51.467287      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:52.467600      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/01/25 11:39:52.806
  I0901 11:39:52.830046 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6913  1dc5a780-5382-475f-98f6-b877c391779d 13513 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:39:52.830365 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6913  1dc5a780-5382-475f-98f6-b877c391779d 13513 0 2025-09-01 11:39:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 11:39:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0901 11:39:53.468759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:54.469765      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:55.470210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:56.470287      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:57.470962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:58.472816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:39:59.472380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:00.472841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:01.473157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:02.476284      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:40:02.831770 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6913" for this suite. @ 09/01/25 11:40:02.851
â€¢ [20.264 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 09/01/25 11:40:02.876
  I0901 11:40:02.876823 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 11:40:02.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:02.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:02.935
  STEP: Creating a job @ 09/01/25 11:40:02.947
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/01/25 11:40:02.969
  E0901 11:40:03.476772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:04.477509      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/01/25 11:40:04.996
  STEP: updating /status @ 09/01/25 11:40:05.029
  STEP: get /status @ 09/01/25 11:40:05.063
  I0901 11:40:05.076722 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9934" for this suite. @ 09/01/25 11:40:05.092
â€¢ [2.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/01/25 11:40:05.123
  I0901 11:40:05.123225 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 11:40:05.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:40:05.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:40:05.181
  STEP: creating the pod with failed condition @ 09/01/25 11:40:05.19
  E0901 11:40:05.478499      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:06.479648      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:07.480303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:08.480159      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:09.481230      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:10.481823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:11.482777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:12.483327      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:13.484119      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:14.484604      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:15.484671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:16.484886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:17.486105      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:18.486802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:19.487107      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:20.488073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:21.488985      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:22.489209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:23.490022      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:24.490584      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:25.490672      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:26.490721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:27.490917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:28.490956      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:29.491866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:30.491562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:31.493615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:32.517062      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:33.497557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:34.517600      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:35.500818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:36.501305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:37.501983      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:38.502977      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:39.505003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:40.505985      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:41.506330      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:42.506619      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:43.506836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:44.507102      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:45.507585      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:46.508125      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:47.507918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:48.508612      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:49.509321      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:50.510027      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:51.510609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:52.510931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:53.511496      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:54.511631      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:55.511836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:56.511908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:57.512447      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:58.512925      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:40:59.513056      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:00.513688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:01.513576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:02.514325      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:03.514688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:04.515647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:05.515757      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:06.516244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:07.516979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:08.517970      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:09.517688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:10.518504      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:11.519072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:12.519555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:13.520761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:14.520657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:15.521130      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:16.524050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:17.529720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:18.530907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:19.530907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:20.531307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:21.531861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:22.532857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:23.534003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:24.534316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:25.535011      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:26.535228      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:27.536074      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:28.536587      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:29.537331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:30.538186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:31.539380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:32.540175      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:33.539942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:34.539924      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:35.540721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:36.541186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:37.542019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:38.542238      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:39.543227      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:40.544205      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:41.544317      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:42.545840      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:43.581377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:44.564379      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:45.578802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:46.570302      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:47.575936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:48.577031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:49.577177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:50.578628      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:51.578306      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:52.579118      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:53.579534      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:54.579944      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:55.580978      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:56.581326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:57.582378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:58.583359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:41:59.582838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:00.583754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:01.583377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:02.584271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:03.584956      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:04.586541      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/01/25 11:42:05.245
  E0901 11:42:05.586347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:42:05.791696 15 pod_client.go:173] Successfully updated pod "var-expansion-ec0d51b3-2e85-418f-9231-70b44aa4a14a"
  STEP: waiting for pod running @ 09/01/25 11:42:05.793
  E0901 11:42:06.587246      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:07.587689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/01/25 11:42:07.826
  I0901 11:42:07.826239 15 delete.go:62] Deleting pod "var-expansion-ec0d51b3-2e85-418f-9231-70b44aa4a14a" in namespace "var-expansion-2320"
  I0901 11:42:07.855303 15 delete.go:70] Wait up to 5m0s for pod "var-expansion-ec0d51b3-2e85-418f-9231-70b44aa4a14a" to be fully deleted
  E0901 11:42:08.588083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:09.589391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:10.588872      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:11.589815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:12.591051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:13.591299      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:14.592361      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:15.592731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:16.592977      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:17.594546      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:18.594889      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:19.595200      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:20.595926      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:21.597548      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:22.596770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:23.597688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:24.598974      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:25.599731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:26.600039      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:27.600828      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:28.602273      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:29.603014      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:30.603497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:31.603995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:32.605315      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:33.605806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:34.606564      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:35.606660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:36.607859      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:37.608193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:38.608233      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:39.608859      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:42:40.077780 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2320" for this suite. @ 09/01/25 11:42:40.098
â€¢ [154.994 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/01/25 11:42:40.128
  I0901 11:42:40.128296 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 11:42:40.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:40.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:40.183
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 11:42:40.194
  E0901 11:42:40.609722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:41.609814      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:42.610065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:43.610190      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:42:44.253
  I0901 11:42:44.263092 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-bf6f0796-aa04-4d0b-b354-b2f4cb0623cf container test-container: <nil>
  STEP: delete the pod @ 09/01/25 11:42:44.316
  I0901 11:42:44.378210 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6309" for this suite. @ 09/01/25 11:42:44.39
â€¢ [4.278 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/01/25 11:42:44.407
  I0901 11:42:44.408314 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:42:44.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:44.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:44.448
  STEP: Creating projection with secret that has name projected-secret-test-cdcc502c-292b-497f-a886-c2c52b5f68ef @ 09/01/25 11:42:44.458
  STEP: Creating a pod to test consume secrets @ 09/01/25 11:42:44.471
  E0901 11:42:44.611218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:45.613544      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:46.615011      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:47.614855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:42:48.533
  I0901 11:42:48.544989 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-secrets-b87b0953-95ee-490f-8e45-3c7ad728ba0e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 11:42:48.571
  E0901 11:42:48.617516      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:42:48.630230 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5434" for this suite. @ 09/01/25 11:42:48.646
â€¢ [4.262 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/01/25 11:42:48.673
  I0901 11:42:48.673606 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:42:48.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:48.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:48.721
  STEP: Creating a ResourceQuota @ 09/01/25 11:42:48.732
  STEP: Getting a ResourceQuota @ 09/01/25 11:42:48.75
  STEP: Updating a ResourceQuota @ 09/01/25 11:42:48.761
  STEP: Verifying a ResourceQuota was modified @ 09/01/25 11:42:48.785
  STEP: Deleting a ResourceQuota @ 09/01/25 11:42:48.794
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 11:42:48.809
  I0901 11:42:48.818694 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6879" for this suite. @ 09/01/25 11:42:48.831
â€¢ [0.173 seconds]
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/01/25 11:42:48.845
  I0901 11:42:48.845523 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:42:48.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:48.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:48.894
  STEP: creating pod @ 09/01/25 11:42:48.902
  E0901 11:42:49.618077      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:50.618158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:42:50.974633 15 pods.go:83] Pod pod-hostip-90bff381-8898-4eb8-a3e4-255f1eceed6b has hostIP: 192.168.121.182
  I0901 11:42:50.974945 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8233" for this suite. @ 09/01/25 11:42:50.988
â€¢ [2.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/01/25 11:42:51.014
  I0901 11:42:51.014188 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:42:51.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:51.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:51.062
  STEP: Creating configMap with name configmap-test-volume-d9af97f5-ef52-4c22-a4e1-7bc83dc3f881 @ 09/01/25 11:42:51.07
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:42:51.083
  E0901 11:42:51.619696      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:52.627112      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:53.623088      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:54.646228      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:42:55.157
  I0901 11:42:55.170231 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-827314a4-b3c0-4695-a1da-66248025ce4d container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:42:55.213
  I0901 11:42:55.283287 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8702" for this suite. @ 09/01/25 11:42:55.308
â€¢ [4.318 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/01/25 11:42:55.336
  I0901 11:42:55.336672 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:42:55.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:42:55.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:42:55.399
  STEP: Counting existing ResourceQuota @ 09/01/25 11:42:55.409
  E0901 11:42:55.629069      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:56.628880      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:57.630070      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:58.630242      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:42:59.631385      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 11:43:00.426
  STEP: Ensuring resource quota status is calculated @ 09/01/25 11:43:00.443
  E0901 11:43:00.631696      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:01.631850      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/01/25 11:43:02.456
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/01/25 11:43:02.519
  E0901 11:43:02.632647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:03.633694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/01/25 11:43:04.535
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/01/25 11:43:04.545
  STEP: Ensuring a pod cannot update its resource requirements @ 09/01/25 11:43:04.552
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/01/25 11:43:04.575
  E0901 11:43:04.634875      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:05.634978      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 11:43:06.587
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 11:43:06.625
  E0901 11:43:06.636186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:07.636623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:08.637856      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:43:08.643074 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2304" for this suite. @ 09/01/25 11:43:08.661
â€¢ [13.352 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/01/25 11:43:08.688
  I0901 11:43:08.688531 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 11:43:08.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:08.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:08.743
  STEP: Looking for a node to schedule job pod @ 09/01/25 11:43:08.75
  STEP: Creating a job @ 09/01/25 11:43:08.762
  STEP: Ensuring job fails @ 09/01/25 11:43:08.781
  E0901 11:43:09.638062      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:10.639248      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:11.639878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:12.640638      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:13.641015      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:14.641329      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:15.642071      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:16.642722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:17.642834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:18.643565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:19.643849      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:20.644777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:43:20.863899 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3808" for this suite. @ 09/01/25 11:43:20.879
â€¢ [12.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/01/25 11:43:20.91
  I0901 11:43:20.910286 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename taint-single-pod @ 09/01/25 11:43:20.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:43:20.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:43:20.97
  I0901 11:43:20.979116 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 11:43:21.645128      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:22.645382      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:23.645780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:24.646092      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:25.647186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:26.647472      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:27.647713      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:28.648328      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:29.648639      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:30.648850      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:31.649523      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:32.650705      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:33.650948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:34.651175      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:35.651700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:36.652711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:37.654004      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:38.653831      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:39.654086      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:40.654504      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:41.655506      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:42.656121      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:43.657110      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:44.657788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:45.658137      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:46.659162      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:47.666505      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:48.660158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:49.664680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:50.662222      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:51.662825      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:52.664630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:53.664959      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:54.663773      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:55.664652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:56.665559      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:57.666109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:58.666678      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:43:59.666812      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:00.667822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:01.668260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:02.669354      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:03.669873      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:04.670810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:05.671098      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:06.671659      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:07.672685      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:08.673713      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:09.674257      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:10.674887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:11.675192      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:12.675942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:13.676383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:14.676718      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:15.677339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:16.677689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:17.677921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:18.678176      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:19.678590      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:20.678986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:44:20.981078 15 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 11:44:20.994130 15 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/01/25 11:44:20.994
  I0901 11:44:21.235280 15 taints.go:294] Pod is running on aeshuj4hoh7a-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 11:44:21.236
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 11:44:21.274
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/01/25 11:44:21.283
  I0901 11:44:21.283333 15 taints.go:313] Pod wasn't evicted. Proceeding
  I0901 11:44:21.283508 15 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 11:44:21.314
  STEP: Waiting some time to make sure that toleration time passed. @ 09/01/25 11:44:21.329
  E0901 11:44:21.679727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:22.680301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:23.680804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:24.681942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:25.681896      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:26.682361      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:27.682576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:28.682783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:29.683183      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:30.683389      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:31.685027      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:32.684101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:33.684951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:34.685342      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:35.686023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:36.686201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:37.686997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:38.686960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:39.687260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:40.688335      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:41.688189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:42.688683      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:43.689655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:44.689779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:45.690513      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:46.690928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:47.691006      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:48.691606      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:49.691948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:50.693104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:51.693330      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:52.693543      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:53.694377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:54.694863      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:55.695587      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:56.695605      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:57.696336      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:58.696723      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:44:59.696727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:00.697079      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:01.698087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:02.697820      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:03.698075      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:04.699254      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:05.698957      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:06.699751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:07.699770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:08.700708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:09.701737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:10.702180      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:11.703007      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:12.702860      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:13.703387      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:14.704629      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:15.705032      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:16.705657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:17.705644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:18.705843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:19.706064      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:20.706836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:21.707128      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:22.707844      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:23.707821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:24.708616      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:25.708860      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:26.709324      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:27.710263      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:28.710680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:29.712189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:30.711848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:31.713168      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:32.713196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:33.721145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:34.718088      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:35.721035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:36.330870 15 taints.go:329] Pod wasn't evicted. Test successful
  I0901 11:45:36.346494 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9094" for this suite. @ 09/01/25 11:45:36.376
â€¢ [135.486 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/01/25 11:45:36.399
  I0901 11:45:36.399805 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:45:36.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:36.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:36.449
  STEP: Creating configMap with name configmap-test-volume-map-31858e3e-f26a-437e-b874-44e996b974fc @ 09/01/25 11:45:36.456
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:45:36.471
  E0901 11:45:36.720818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:37.721787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:38.723002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:39.723819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:45:40.54
  I0901 11:45:40.550947 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-5877ca68-e83a-4ab5-8c2c-a8132a65b507 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 11:45:40.598
  I0901 11:45:40.646786 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6701" for this suite. @ 09/01/25 11:45:40.661
â€¢ [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/01/25 11:45:40.682
  I0901 11:45:40.682272 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:45:40.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:40.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:40.723
  E0901 11:45:40.723985      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 11:45:40.802
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 11:45:40.818
  I0901 11:45:40.875072 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:45:40.875158 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 11:45:41.724965      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:41.879648 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:45:41.879732 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 11:45:42.725932      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:42.854268 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:45:42.854372 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 11:45:43.726089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:43.846639 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:45:43.846777 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/01/25 11:45:43.86
  I0901 11:45:43.874888 15 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/01/25 11:45:43.875
  I0901 11:45:43.907919 15 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/01/25 11:45:43.908
  I0901 11:45:43.921484 15 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0901 11:45:43.922575 15 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.923557 15 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.924348 15 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.925136 15 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.925293 15 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-7060 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:45:43.925348 15 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/01/25 11:45:43.925
  STEP: watching for the daemon set status to be patched @ 09/01/25 11:45:43.95
  I0901 11:45:43.956186 15 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0901 11:45:43.957028 15 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.957689 15 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.958156 15 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.958829 15 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.960046 15 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-7060 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 11:45:43.961376 15 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 11:45:43.963383 15 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-7060 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0901 11:45:43.963525 15 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:45:43.972
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7060, will wait for the garbage collector to delete the pods @ 09/01/25 11:45:43.972
  I0901 11:45:44.051902 15 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 18.25643ms
  I0901 11:45:44.152966 15 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.049757ms
  E0901 11:45:44.727102      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:45.728226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:46.061350 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:45:46.061537 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:45:46.070333 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14759"},"items":null}

  I0901 11:45:46.077841 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14759"},"items":null}

  I0901 11:45:46.121146 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7060" for this suite. @ 09/01/25 11:45:46.13
â€¢ [5.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/01/25 11:45:46.153
  I0901 11:45:46.153943 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 11:45:46.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:46.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:46.189
  STEP: getting /apis @ 09/01/25 11:45:46.213
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 11:45:46.226
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 11:45:46.229
  STEP: creating @ 09/01/25 11:45:46.232
  STEP: getting @ 09/01/25 11:45:46.263
  STEP: listing @ 09/01/25 11:45:46.271
  STEP: watching @ 09/01/25 11:45:46.278
  I0901 11:45:46.280374 15 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/01/25 11:45:46.283
  STEP: updating @ 09/01/25 11:45:46.295
  I0901 11:45:46.312513 15 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 11:45:46.312
  STEP: deleting a collection @ 09/01/25 11:45:46.337
  I0901 11:45:46.382579 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2511" for this suite. @ 09/01/25 11:45:46.396
â€¢ [0.259 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/01/25 11:45:46.413
  I0901 11:45:46.413229 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:45:46.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:46.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:46.446
  STEP: Setting up server cert @ 09/01/25 11:45:46.483
  E0901 11:45:46.728782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:45:46.992
  STEP: Deploying the webhook pod @ 09/01/25 11:45:47.008
  STEP: Wait for the deployment to be ready @ 09/01/25 11:45:47.048
  I0901 11:45:47.076183 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 11:45:47.729922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:48.730795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:49.121697 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 45, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 45, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 45, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 45, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:45:49.731808      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:50.731853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 11:45:51.133
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:45:51.173
  E0901 11:45:51.733201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:45:52.175067 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 11:45:52.200254 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 11:45:52.733245      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/01/25 11:45:52.737
  STEP: Creating a custom resource that should be denied by the webhook @ 09/01/25 11:45:52.789
  E0901 11:45:53.733828      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:54.734686      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/01/25 11:45:54.957
  STEP: Updating the custom resource with disallowed data should be denied @ 09/01/25 11:45:54.977
  STEP: Deleting the custom resource should be denied @ 09/01/25 11:45:55.01
  STEP: Remove the offending key and value from the custom resource data @ 09/01/25 11:45:55.037
  STEP: Deleting the updated custom resource should be successful @ 09/01/25 11:45:55.067
  I0901 11:45:55.731494 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 11:45:55.735609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-7847" for this suite. @ 09/01/25 11:45:55.743
  STEP: Destroying namespace "webhook-markers-9371" for this suite. @ 09/01/25 11:45:55.756
â€¢ [9.358 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/01/25 11:45:55.771
  I0901 11:45:55.771277 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 11:45:55.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:45:55.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:45:55.816
  STEP: Creating secret with name s-test-opt-del-4ddbcc84-2671-4cca-adc8-4445a682670e @ 09/01/25 11:45:55.844
  STEP: Creating secret with name s-test-opt-upd-5978e528-2738-41b2-b8dd-a2483e3e49e1 @ 09/01/25 11:45:55.857
  STEP: Creating the pod @ 09/01/25 11:45:55.872
  E0901 11:45:56.736799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:57.737160      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-4ddbcc84-2671-4cca-adc8-4445a682670e @ 09/01/25 11:45:57.991
  STEP: Updating secret s-test-opt-upd-5978e528-2738-41b2-b8dd-a2483e3e49e1 @ 09/01/25 11:45:58.016
  STEP: Creating secret with name s-test-opt-create-31fa191f-4b71-4bad-aed8-0b49ca655f17 @ 09/01/25 11:45:58.032
  STEP: waiting to observe update in volume @ 09/01/25 11:45:58.045
  E0901 11:45:58.737267      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:45:59.737682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:00.738220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:01.738790      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:02.739762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:03.740250      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:04.740821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:05.740922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:06.741905      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:07.742639      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:08.742881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:09.743083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:10.743724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:11.744366      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:12.744911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:13.745096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:14.746322      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:15.746256      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:16.747050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:17.746855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:18.747668      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:19.747881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:20.748378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:21.749356      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:22.750913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:23.750839      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:24.750775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:25.751515      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:26.751951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:27.753128      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:28.752908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:29.753145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:30.753586      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:31.754100      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:32.755332      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:33.755815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:34.756359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:35.757513      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:36.758321      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:37.758770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:38.759202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:39.759133      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:40.759662      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:41.760310      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:42.760936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:43.761133      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:44.762140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:45.763150      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:46.763720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:47.764794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:48.764214      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:49.765143      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:50.766704      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:51.767206      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:52.768166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:53.768623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:54.769296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:55.770089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:56.770143      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:57.770593      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:58.770880      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:46:59.770934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:00.771758      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:01.772059      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:02.773061      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:03.774316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:04.774844      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:05.775915      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:06.777200      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:07.777531      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:08.777983      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:09.778942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:10.780053      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:11.781204      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:12.781389      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:13.782080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:14.782292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:15.783285      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:16.783641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:17.784655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:18.784782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:19.785327      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:20.785702      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:21.786685      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:22.787095      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:23.788834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:24.788707      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:25.792146      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:26.791157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:27.790890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:28.792197      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:47:29.501264 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6712" for this suite. @ 09/01/25 11:47:29.518
â€¢ [93.768 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 09/01/25 11:47:29.54
  I0901 11:47:29.540883 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 11:47:29.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:29.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:29.597
  STEP: Creating a suspended job @ 09/01/25 11:47:29.618
  STEP: Patching the Job @ 09/01/25 11:47:29.633
  STEP: Watching for Job to be patched @ 09/01/25 11:47:29.677
  I0901 11:47:29.684865 15 job.go:1309] Event ADDED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb] and annotations: map[]
  I0901 11:47:29.685004 15 job.go:1309] Event MODIFIED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb] and annotations: map[]
  I0901 11:47:29.685725 15 job.go:1312] Event MODIFIED found for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[]
  STEP: Updating the job @ 09/01/25 11:47:29.686
  STEP: Watching for Job to be updated @ 09/01/25 11:47:29.707
  I0901 11:47:29.710711 15 job.go:1312] Event MODIFIED found for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  I0901 11:47:29.710800 15 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/01/25 11:47:29.71
  I0901 11:47:29.717907 15 job.go:1187] Job: e2e-qrghb as labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched]
  STEP: Waiting for job to complete @ 09/01/25 11:47:29.719
  E0901 11:47:29.794699      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:30.797202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:31.798149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:32.798199      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:33.798510      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:34.799740      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:35.800884      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:36.801154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:37.802645      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:38.802791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:39.804177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/01/25 11:47:39.809
  STEP: Watching for Job to be deleted @ 09/01/25 11:47:39.839
  I0901 11:47:39.846173 15 job.go:1309] Event MODIFIED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  I0901 11:47:39.847099 15 job.go:1309] Event MODIFIED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  I0901 11:47:39.847982 15 job.go:1309] Event MODIFIED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  I0901 11:47:39.848037 15 job.go:1309] Event MODIFIED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  I0901 11:47:39.848527 15 job.go:1309] Event MODIFIED observed for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  I0901 11:47:39.849527 15 job.go:1312] Event DELETED found for Job e2e-qrghb in namespace job-1037 with labels: map[e2e-job-label:e2e-qrghb e2e-qrghb:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/01/25 11:47:39.849
  I0901 11:47:39.861491 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1037" for this suite. @ 09/01/25 11:47:39.879
â€¢ [10.386 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/01/25 11:47:39.926
  I0901 11:47:39.926491 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 11:47:39.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:39.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:39.974
  STEP: Creating a test namespace @ 09/01/25 11:47:39.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:40.009
  STEP: Creating a pod in the namespace @ 09/01/25 11:47:40.017
  STEP: Waiting for the pod to have running status @ 09/01/25 11:47:40.042
  E0901 11:47:40.804028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:41.804503      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/01/25 11:47:42.073
  STEP: Waiting for the namespace to be removed. @ 09/01/25 11:47:42.094
  E0901 11:47:42.804762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:43.805321      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:44.805622      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:45.806068      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:46.806151      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:47.807137      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:48.808103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:49.808069      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:50.809256      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:51.809627      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:52.810164      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:53.810745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/01/25 11:47:54.107
  STEP: Verifying there are no pods in the namespace @ 09/01/25 11:47:54.143
  I0901 11:47:54.155085 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2518" for this suite. @ 09/01/25 11:47:54.17
  STEP: Destroying namespace "nsdeletetest-6758" for this suite. @ 09/01/25 11:47:54.189
  I0901 11:47:54.200771 15 framework.go:370] Namespace nsdeletetest-6758 was already deleted
  STEP: Destroying namespace "nsdeletetest-8205" for this suite. @ 09/01/25 11:47:54.2
â€¢ [14.300 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/01/25 11:47:54.239
  I0901 11:47:54.240278 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 11:47:54.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:54.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:54.294
  STEP: create the container @ 09/01/25 11:47:54.305
  W0901 11:47:54.338228      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/01/25 11:47:54.338
  E0901 11:47:54.811301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:55.812637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:56.812841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 11:47:57.396
  STEP: the container should be terminated @ 09/01/25 11:47:57.409
  STEP: the termination message should be set @ 09/01/25 11:47:57.409
  I0901 11:47:57.409881 15 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/01/25 11:47:57.409
  I0901 11:47:57.449494 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1051" for this suite. @ 09/01/25 11:47:57.461
â€¢ [3.247 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/01/25 11:47:57.485
  I0901 11:47:57.485901 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 11:47:57.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:47:57.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:47:57.524
  I0901 11:47:57.585018 15 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 11:47:57.585
  E0901 11:47:57.812873      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:47:58.812995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:47:59.604552 15 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0901 11:47:59.813774      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:00.814728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:01.613800 15 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0901 11:48:01.634639 15 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0901 11:48:01.814912      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:02.815832      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:03.654371 15 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0901 11:48:03.678129 15 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0901 11:48:03.700909 15 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0901 11:48:03.735835 15 deployment.go:314] Updating deployment test-rollover-deployment
  I0901 11:48:03.736004 15 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0901 11:48:03.816368      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:04.816733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:05.759805 15 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0901 11:48:05.779321 15 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0901 11:48:05.802810 15 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:48:05.802967 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:48:05.817870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:06.818536      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:07.818281      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:07.834916 15 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:48:07.835116 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:48:08.819012      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:09.818744      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:09.828575 15 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:48:09.828860 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:48:10.819671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:11.819691      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:11.830309 15 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:48:11.830781 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:48:12.819997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:13.820556      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:13.830836 15 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 11:48:13.830956 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 48, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:48:14.821635      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:15.821065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:15.828086 15 deployment.go:95] 
  I0901 11:48:15.828452 15 deployment.go:974] Ensure that both old replica sets have no replicas
  I0901 11:48:15.870656 15 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "944a4c1a-7efd-4a03-b413-f9b6f36b5037",
      ResourceVersion: (string) (len=5) "15516",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 11:48:15.911271 15 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25086d6d-2bfa-4a0f-a8cc-e767a91f4f03",
      ResourceVersion: (string) (len=5) "15505",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "944a4c1a-7efd-4a03-b413-f9b6f36b5037",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 34 61 34 63  31 61 2d 37 65 66 64 2d  |\"944a4c1a-7efd-|
              00000120  34 61 30 33 2d 62 34 31  33 2d 66 39 62 36 66 33  |4a03-b413-f9b6f3|
              00000130  36 62 35 30 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6b5037\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:48:15.927721 15 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0901 11:48:15.928589 15 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cec7b71-c248-4ccb-b422-cc4d882bab4d",
      ResourceVersion: (string) (len=5) "15514",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "944a4c1a-7efd-4a03-b413-f9b6f36b5037",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 34 34 61 34 63 31 61  2d 37 65 66 64 2d 34 61  |944a4c1a-7efd-4a|
              000000c0  30 33 2d 62 34 31 33 2d  66 39 62 36 66 33 36 62  |03-b413-f9b6f36b|
              000000d0  35 30 33 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |5037\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:48:15.931478 15 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83465a1e-5dca-4065-9ade-21da67adc078",
      ResourceVersion: (string) (len=5) "15460",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "944a4c1a-7efd-4a03-b413-f9b6f36b5037",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 34 61 34 63  31 61 2d 37 65 66 64 2d  |\"944a4c1a-7efd-|
              00000120  34 61 30 33 2d 62 34 31  33 2d 66 39 62 36 66 33  |4a03-b413-f9b6f3|
              00000130  36 62 35 30 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6b5037\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 11:48:15.947251 15 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-c65bl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-c65bl",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-2817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fc35096-1486-4839-9264-e54e69bd7b3c",
      ResourceVersion: (string) (len=5) "15481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "25086d6d-2bfa-4a0f-a8cc-e767a91f4f03",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 35  30 38 36 64 36 64 2d 32  |d\":\"25086d6d-2|
              00000090  62 66 61 2d 34 61 30 66  2d 61 38 63 63 2d 65 37  |bfa-4a0f-a8cc-e7|
              000000a0  36 37 61 39 31 66 34 66  30 33 5c 22 7d 22 3a 7b  |67a91f4f03\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  38 38 5c 22 7d 22 3a 7b  |.233.65.88\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5k7x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5k7x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=12) "10.233.65.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892324084,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb",
          ContainerID: (string) (len=72) "cri-o://3922645285aadc041c2fa4bc392426fb9fedd793c80900d30689457897639c80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m5k7x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 11:48:15.959716 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2817" for this suite. @ 09/01/25 11:48:15.984
â€¢ [18.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/01/25 11:48:16.014
  I0901 11:48:16.014663 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 11:48:16.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:16.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:16.057
  I0901 11:48:16.164194 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7135" for this suite. @ 09/01/25 11:48:16.181
â€¢ [0.192 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/01/25 11:48:16.206
  I0901 11:48:16.206714 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 11:48:16.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:16.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:16.251
  STEP: create the container @ 09/01/25 11:48:16.259
  W0901 11:48:16.293749      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/01/25 11:48:16.294
  E0901 11:48:16.821975      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:17.822552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:18.823115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:19.824806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 11:48:20.355
  STEP: the container should be terminated @ 09/01/25 11:48:20.365
  STEP: the termination message should be set @ 09/01/25 11:48:20.365
  I0901 11:48:20.365306 15 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/01/25 11:48:20.365
  I0901 11:48:20.417146 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1118" for this suite. @ 09/01/25 11:48:20.426
â€¢ [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/01/25 11:48:20.442
  I0901 11:48:20.442659 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 11:48:20.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:20.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:20.475
  I0901 11:48:20.489781 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8694" for this suite. @ 09/01/25 11:48:20.531
â€¢ [0.107 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 09/01/25 11:48:20.549
  I0901 11:48:20.549223 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:48:20.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:20.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:20.596
  STEP: Starting the proxy @ 09/01/25 11:48:20.603
  I0901 11:48:20.607003 15 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-6023 proxy --unix-socket=/tmp/kubectl-proxy-unix3554873573/test'
  STEP: retrieving proxy /api/ output @ 09/01/25 11:48:20.776
  I0901 11:48:20.780844 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6023" for this suite. @ 09/01/25 11:48:20.796
â€¢ [0.269 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/01/25 11:48:20.82
  I0901 11:48:20.820650 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename hostport @ 09/01/25 11:48:20.825
  E0901 11:48:20.826300      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:20.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:20.864
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/01/25 11:48:20.898
  E0901 11:48:21.826738      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:22.826551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:23.827002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:24.828099      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:25.828022      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:26.828357      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:27.829936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:28.830296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:29.830223      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:30.830567      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:31.830915      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:32.831634      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:33.831806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:34.832155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.245 on the node which pod1 resides and expect scheduled @ 09/01/25 11:48:35.046
  E0901 11:48:35.832853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:36.834096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:37.835776      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:38.835550      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.245 but use UDP protocol on the node which pod2 resides @ 09/01/25 11:48:39.102
  E0901 11:48:39.835129      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:40.836904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:41.837196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:42.836960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:43.837226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:44.838182      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/01/25 11:48:45.262
  I0901 11:48:45.263477 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.245 http://127.0.0.1:54323/hostname] Namespace:hostport-9090 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:48:45.263628 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:48:45.263907 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9090/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.245+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.245, port: 54323 @ 09/01/25 11:48:45.484
  I0901 11:48:45.484357 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.245:54323/hostname] Namespace:hostport-9090 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:48:45.484436 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:48:45.484853 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9090/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.245%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.245, port: 54323 UDP @ 09/01/25 11:48:45.632
  I0901 11:48:45.632700 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.245 54323] Namespace:hostport-9090 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 11:48:45.633057 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 11:48:45.633183 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9090/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.245+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0901 11:48:45.838824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:46.838969      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:47.839605      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:48.839619      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:49.839805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:50.762647 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9090" for this suite. @ 09/01/25 11:48:50.785
â€¢ [29.986 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/01/25 11:48:50.808
  I0901 11:48:50.808304 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 11:48:50.817
  E0901 11:48:50.839957      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:50.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:50.864
  I0901 11:48:50.957374 15 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"eafd68d0-92af-47e0-98ef-9b884e0611a1", Controller:(*bool)(0xc002d38b06), BlockOwnerDeletion:(*bool)(0xc002d38b07)}}
  I0901 11:48:50.989940 15 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"af2469dd-daf3-4583-873b-eda09ddd22b7", Controller:(*bool)(0xc002d38d1a), BlockOwnerDeletion:(*bool)(0xc002d38d1b)}}
  I0901 11:48:51.008084 15 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f152e3ba-734f-40a1-b1a7-5e6c340e4a47", Controller:(*bool)(0xc002d38f46), BlockOwnerDeletion:(*bool)(0xc002d38f47)}}
  E0901 11:48:51.840539      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:52.841038      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:53.841572      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:54.842586      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:55.843724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:48:56.044800 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4470" for this suite. @ 09/01/25 11:48:56.06
â€¢ [5.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/01/25 11:48:56.082
  I0901 11:48:56.082653 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 11:48:56.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:48:56.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:48:56.14
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 11:48:56.269
  E0901 11:48:56.844276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:57.844483      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:58.845730      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:48:59.845647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 11:49:00.342
  E0901 11:49:00.845899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:01.846464      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/01/25 11:49:02.394
  E0901 11:49:02.846641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:03.847140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/01/25 11:49:04.444
  I0901 11:49:04.498364 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2492" for this suite. @ 09/01/25 11:49:04.514
â€¢ [8.460 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/01/25 11:49:04.543
  I0901 11:49:04.543850 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename tables @ 09/01/25 11:49:04.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:04.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:04.592
  I0901 11:49:04.613490 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9877" for this suite. @ 09/01/25 11:49:04.632
â€¢ [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/01/25 11:49:04.663
  I0901 11:49:04.663065 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 11:49:04.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:04.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:04.705
  STEP: Creating a test headless service @ 09/01/25 11:49:04.722
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7376.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-7376.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 11:49:04.732
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7376.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7376.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 11:49:04.733
  STEP: creating a pod to probe DNS @ 09/01/25 11:49:04.733
  STEP: submitting the pod to kubernetes @ 09/01/25 11:49:04.733
  E0901 11:49:04.849592      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:05.848727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:06.849317      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:07.849861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:08.850299      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:09.851551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:10.851737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:11.851967      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:12.852571      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:13.853044      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:14.853907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:15.854230      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:16.854291      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:17.855621      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:18.855125      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:19.855660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:20.856823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:21.858756      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:22.857167      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:23.857365      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:24.857681      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:25.857827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:26.858714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:27.859746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:28.859982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:29.860370      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:30.860747      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 11:49:30.934
  STEP: looking for the results for each expected name from probers @ 09/01/25 11:49:30.943
  I0901 11:49:30.994727 15 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-7376/dns-test-6aa204a1-c6c0-4dc3-ad7a-0e97f8e310c9: the server could not find the requested resource (get pods dns-test-6aa204a1-c6c0-4dc3-ad7a-0e97f8e310c9)
  I0901 11:49:30.994836 15 dns_common.go:506] Lookups using dns-7376/dns-test-6aa204a1-c6c0-4dc3-ad7a-0e97f8e310c9 failed for: [jessie_hosts@dns-querier-2]

  I0901 11:49:31.047620 15 dns_common.go:514] Pod client logs for webserver: 
  I0901 11:49:31.067226 15 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 11:49:31.090632 15 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 11:49:31.860864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:32.861158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:33.861671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:34.861874      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:35.863265      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:49:35.997839 15 dns_common.go:546] DNS probes using dns-7376/dns-test-6aa204a1-c6c0-4dc3-ad7a-0e97f8e310c9 succeeded

  STEP: deleting the pod @ 09/01/25 11:49:35.998
  STEP: deleting the test headless service @ 09/01/25 11:49:36.034
  I0901 11:49:36.075458 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7376" for this suite. @ 09/01/25 11:49:36.1
â€¢ [31.457 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 09/01/25 11:49:36.12
  I0901 11:49:36.120339 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 11:49:36.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:36.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:36.149
  I0901 11:49:36.200493 15 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0901 11:49:36.200581 15 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0901 11:49:36.220136 15 service_accounts.go:282] created pod pod-service-account-mountsa
  I0901 11:49:36.220235 15 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0901 11:49:36.251372 15 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0901 11:49:36.251798 15 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0901 11:49:36.276612 15 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0901 11:49:36.277783 15 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0901 11:49:36.299192 15 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0901 11:49:36.299256 15 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0901 11:49:36.327810 15 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0901 11:49:36.327876 15 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0901 11:49:36.346657 15 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0901 11:49:36.346722 15 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0901 11:49:36.407996 15 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0901 11:49:36.408059 15 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0901 11:49:36.426607 15 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0901 11:49:36.426674 15 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0901 11:49:36.426877 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3094" for this suite. @ 09/01/25 11:49:36.438
â€¢ [0.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/01/25 11:49:36.487
  I0901 11:49:36.487037 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:49:36.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:49:36.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:49:36.587
  STEP: Setting up data @ 09/01/25 11:49:36.66
  STEP: Creating pod pod-subpath-test-configmap-npzb @ 09/01/25 11:49:36.764
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:49:36.764
  E0901 11:49:36.898434      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:37.912764      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:38.914694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:39.915668      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:40.916705      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:41.927227      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:42.928322      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:43.934036      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:44.931481      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:45.931929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:46.932155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:47.932786      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:48.933034      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:49.933623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:50.934664      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:51.934928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:52.936073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:53.936877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:54.937349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:55.937987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:56.938775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:57.939798      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:58.939830      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:49:59.940707      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:00.941209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:01.941838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:02.946029      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:50:03.16
  I0901 11:50:03.173131 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-subpath-test-configmap-npzb container test-container-subpath-configmap-npzb: <nil>
  STEP: delete the pod @ 09/01/25 11:50:03.204
  STEP: Deleting pod pod-subpath-test-configmap-npzb @ 09/01/25 11:50:03.252
  I0901 11:50:03.252629 15 delete.go:62] Deleting pod "pod-subpath-test-configmap-npzb" in namespace "subpath-5092"
  I0901 11:50:03.260762 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5092" for this suite. @ 09/01/25 11:50:03.282
â€¢ [26.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/01/25 11:50:03.307
  I0901 11:50:03.307239 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 11:50:03.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:03.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:03.354
  STEP: Setting up server cert @ 09/01/25 11:50:03.423
  E0901 11:50:03.945279      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:04.946202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 11:50:05.373
  STEP: Deploying the webhook pod @ 09/01/25 11:50:05.39
  STEP: Wait for the deployment to be ready @ 09/01/25 11:50:05.422
  I0901 11:50:05.473574 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 11:50:05.947316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:06.947887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:07.517888 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 11, 50, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 50, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 11, 50, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 11, 50, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 11:50:07.947744      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:08.948527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 11:50:09.534
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 11:50:09.578
  E0901 11:50:09.949955      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:10.580669 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/01/25 11:50:10.608
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/01/25 11:50:10.678
  STEP: Creating a configMap that should not be mutated @ 09/01/25 11:50:10.696
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/01/25 11:50:10.73
  STEP: Creating a configMap that should be mutated @ 09/01/25 11:50:10.75
  I0901 11:50:10.936922 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 11:50:10.949546      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-496" for this suite. @ 09/01/25 11:50:10.954
  STEP: Destroying namespace "webhook-markers-4705" for this suite. @ 09/01/25 11:50:10.975
â€¢ [7.687 seconds]
------------------------------
SS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/01/25 11:50:10.995
  I0901 11:50:10.995700 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svc-latency @ 09/01/25 11:50:11.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:11.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:11.038
  I0901 11:50:11.045369 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8907 @ 09/01/25 11:50:11.047
  I0901 11:50:11.059309      15 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8907, replica count: 1
  E0901 11:50:11.951055      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:12.110936      15 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0901 11:50:12.951588      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:13.111734      15 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:50:13.269539 15 service_latency.go:356] Created: latency-svc-q67tn
  I0901 11:50:13.290006 15 service_latency.go:363] Got endpoints: latency-svc-q67tn [77.019331ms]
  I0901 11:50:13.323530 15 service_latency.go:356] Created: latency-svc-xf8x8
  I0901 11:50:13.333801 15 service_latency.go:356] Created: latency-svc-w79xd
  I0901 11:50:13.342984 15 service_latency.go:363] Got endpoints: latency-svc-xf8x8 [51.466003ms]
  I0901 11:50:13.345127 15 service_latency.go:356] Created: latency-svc-w4vhr
  I0901 11:50:13.358278 15 service_latency.go:356] Created: latency-svc-76p8x
  I0901 11:50:13.365582 15 service_latency.go:356] Created: latency-svc-fgrp5
  I0901 11:50:13.371627 15 service_latency.go:356] Created: latency-svc-lcdnh
  I0901 11:50:13.388491 15 service_latency.go:356] Created: latency-svc-r89vw
  I0901 11:50:13.399665 15 service_latency.go:356] Created: latency-svc-s6wwh
  I0901 11:50:13.407870 15 service_latency.go:363] Got endpoints: latency-svc-w4vhr [115.638504ms]
  I0901 11:50:13.409096 15 service_latency.go:363] Got endpoints: latency-svc-w79xd [116.95583ms]
  I0901 11:50:13.414943 15 service_latency.go:356] Created: latency-svc-f4zqk
  I0901 11:50:13.431337 15 service_latency.go:356] Created: latency-svc-m4s9h
  I0901 11:50:13.431490 15 service_latency.go:363] Got endpoints: latency-svc-76p8x [138.918064ms]
  I0901 11:50:13.446476 15 service_latency.go:356] Created: latency-svc-5nsq8
  I0901 11:50:13.447991 15 service_latency.go:356] Created: latency-svc-mqj2t
  I0901 11:50:13.448452 15 service_latency.go:363] Got endpoints: latency-svc-fgrp5 [154.730157ms]
  I0901 11:50:13.466437 15 service_latency.go:356] Created: latency-svc-5xkfx
  I0901 11:50:13.468813 15 service_latency.go:363] Got endpoints: latency-svc-lcdnh [174.699443ms]
  I0901 11:50:13.501117 15 service_latency.go:363] Got endpoints: latency-svc-s6wwh [208.157118ms]
  I0901 11:50:13.503986 15 service_latency.go:363] Got endpoints: latency-svc-r89vw [209.66524ms]
  I0901 11:50:13.504546 15 service_latency.go:363] Got endpoints: latency-svc-f4zqk [209.431181ms]
  I0901 11:50:13.534360 15 service_latency.go:363] Got endpoints: latency-svc-5nsq8 [238.712176ms]
  I0901 11:50:13.533471 15 service_latency.go:363] Got endpoints: latency-svc-m4s9h [237.868355ms]
  I0901 11:50:13.553821 15 service_latency.go:363] Got endpoints: latency-svc-mqj2t [258.61537ms]
  I0901 11:50:13.554812 15 service_latency.go:363] Got endpoints: latency-svc-5xkfx [262.029701ms]
  I0901 11:50:13.576453 15 service_latency.go:356] Created: latency-svc-krjd4
  I0901 11:50:13.585236 15 service_latency.go:356] Created: latency-svc-pffsm
  I0901 11:50:13.585340 15 service_latency.go:356] Created: latency-svc-48fkz
  I0901 11:50:13.586300 15 service_latency.go:356] Created: latency-svc-hqdzc
  I0901 11:50:13.596454 15 service_latency.go:363] Got endpoints: latency-svc-krjd4 [301.877845ms]
  I0901 11:50:13.596464 15 service_latency.go:356] Created: latency-svc-km76w
  I0901 11:50:13.605790 15 service_latency.go:363] Got endpoints: latency-svc-hqdzc [309.882257ms]
  I0901 11:50:13.622287 15 service_latency.go:363] Got endpoints: latency-svc-48fkz [214.292556ms]
  I0901 11:50:13.622889 15 service_latency.go:363] Got endpoints: latency-svc-km76w [173.958953ms]
  I0901 11:50:13.623892 15 service_latency.go:363] Got endpoints: latency-svc-pffsm [280.824772ms]
  I0901 11:50:13.635822 15 service_latency.go:356] Created: latency-svc-cwbq2
  I0901 11:50:13.638031 15 service_latency.go:356] Created: latency-svc-g9snv
  I0901 11:50:13.640313 15 service_latency.go:356] Created: latency-svc-ggxbl
  I0901 11:50:13.643727 15 service_latency.go:356] Created: latency-svc-rkxgv
  I0901 11:50:13.649626 15 service_latency.go:356] Created: latency-svc-98v6v
  I0901 11:50:13.664543 15 service_latency.go:363] Got endpoints: latency-svc-cwbq2 [231.816147ms]
  I0901 11:50:13.667840 15 service_latency.go:356] Created: latency-svc-qbt6p
  I0901 11:50:13.667952 15 service_latency.go:356] Created: latency-svc-7jg78
  I0901 11:50:13.683954 15 service_latency.go:363] Got endpoints: latency-svc-rkxgv [274.741228ms]
  I0901 11:50:13.688137 15 service_latency.go:356] Created: latency-svc-8ssjh
  I0901 11:50:13.688076 15 service_latency.go:363] Got endpoints: latency-svc-g9snv [184.032296ms]
  I0901 11:50:13.694180 15 service_latency.go:363] Got endpoints: latency-svc-ggxbl [225.289542ms]
  I0901 11:50:13.694279 15 service_latency.go:363] Got endpoints: latency-svc-98v6v [189.691956ms]
  I0901 11:50:13.710736 15 service_latency.go:363] Got endpoints: latency-svc-qbt6p [204.884064ms]
  I0901 11:50:13.718593 15 service_latency.go:363] Got endpoints: latency-svc-7jg78 [184.115449ms]
  I0901 11:50:13.725331 15 service_latency.go:356] Created: latency-svc-glmvq
  I0901 11:50:13.726810 15 service_latency.go:356] Created: latency-svc-kt2sm
  I0901 11:50:13.759202 15 service_latency.go:363] Got endpoints: latency-svc-glmvq [204.342017ms]
  I0901 11:50:13.759802 15 service_latency.go:363] Got endpoints: latency-svc-8ssjh [222.741438ms]
  I0901 11:50:13.760340 15 service_latency.go:363] Got endpoints: latency-svc-kt2sm [204.395816ms]
  I0901 11:50:13.831503 15 service_latency.go:356] Created: latency-svc-9dclg
  I0901 11:50:13.835233 15 service_latency.go:356] Created: latency-svc-mzvmc
  I0901 11:50:13.839283 15 service_latency.go:363] Got endpoints: latency-svc-9dclg [233.430866ms]
  I0901 11:50:13.842804 15 service_latency.go:363] Got endpoints: latency-svc-mzvmc [245.841557ms]
  I0901 11:50:13.854440 15 service_latency.go:356] Created: latency-svc-pkrqz
  I0901 11:50:13.879519 15 service_latency.go:356] Created: latency-svc-mmcvm
  I0901 11:50:13.886600 15 service_latency.go:356] Created: latency-svc-sm69r
  I0901 11:50:13.889946 15 service_latency.go:356] Created: latency-svc-x4vh5
  I0901 11:50:13.896252 15 service_latency.go:363] Got endpoints: latency-svc-pkrqz [273.894232ms]
  I0901 11:50:13.908042 15 service_latency.go:363] Got endpoints: latency-svc-mmcvm [284.892889ms]
  I0901 11:50:13.921580 15 service_latency.go:356] Created: latency-svc-f7xls
  I0901 11:50:13.943233 15 service_latency.go:356] Created: latency-svc-rvqtv
  I0901 11:50:13.944249 15 service_latency.go:356] Created: latency-svc-fvnff
  I0901 11:50:13.946831 15 service_latency.go:356] Created: latency-svc-ffxl5
  I0901 11:50:13.947009 15 service_latency.go:356] Created: latency-svc-q7829
  I0901 11:50:13.947919 15 service_latency.go:356] Created: latency-svc-76krp
  I0901 11:50:13.948619 15 service_latency.go:356] Created: latency-svc-zfdv6
  I0901 11:50:13.948464 15 service_latency.go:356] Created: latency-svc-9pzfx
  E0901 11:50:13.952578      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:13.954174 15 service_latency.go:363] Got endpoints: latency-svc-sm69r [289.559997ms]
  I0901 11:50:13.954441 15 service_latency.go:363] Got endpoints: latency-svc-x4vh5 [330.470675ms]
  I0901 11:50:13.963000 15 service_latency.go:356] Created: latency-svc-b2dgp
  I0901 11:50:13.963228 15 service_latency.go:356] Created: latency-svc-hr6kq
  I0901 11:50:13.963336 15 service_latency.go:356] Created: latency-svc-vvcxp
  I0901 11:50:13.981287 15 service_latency.go:363] Got endpoints: latency-svc-f7xls [220.884319ms]
  I0901 11:50:14.048768 15 service_latency.go:356] Created: latency-svc-rpmvb
  I0901 11:50:14.050998 15 service_latency.go:363] Got endpoints: latency-svc-hr6kq [361.53128ms]
  I0901 11:50:14.051431 15 service_latency.go:363] Got endpoints: latency-svc-fvnff [357.079908ms]
  I0901 11:50:14.051507 15 service_latency.go:363] Got endpoints: latency-svc-b2dgp [367.463236ms]
  I0901 11:50:14.051607 15 service_latency.go:363] Got endpoints: latency-svc-vvcxp [292.328292ms]
  I0901 11:50:14.051970 15 service_latency.go:363] Got endpoints: latency-svc-9pzfx [209.112221ms]
  I0901 11:50:14.056677 15 service_latency.go:363] Got endpoints: latency-svc-76krp [296.834608ms]
  I0901 11:50:14.057947 15 service_latency.go:363] Got endpoints: latency-svc-ffxl5 [216.239449ms]
  I0901 11:50:14.059192 15 service_latency.go:363] Got endpoints: latency-svc-zfdv6 [347.894482ms]
  I0901 11:50:14.114013 15 service_latency.go:363] Got endpoints: latency-svc-rvqtv [395.31491ms]
  I0901 11:50:14.114607 15 service_latency.go:363] Got endpoints: latency-svc-q7829 [420.339571ms]
  I0901 11:50:14.137706 15 service_latency.go:363] Got endpoints: latency-svc-rpmvb [241.361764ms]
  I0901 11:50:14.257133 15 service_latency.go:356] Created: latency-svc-xqp5r
  I0901 11:50:14.266817 15 service_latency.go:356] Created: latency-svc-tbn2z
  I0901 11:50:14.267983 15 service_latency.go:356] Created: latency-svc-9lzfr
  I0901 11:50:14.272589 15 service_latency.go:356] Created: latency-svc-gktdm
  I0901 11:50:14.274785 15 service_latency.go:356] Created: latency-svc-gjft8
  I0901 11:50:14.279561 15 service_latency.go:363] Got endpoints: latency-svc-xqp5r [325.068462ms]
  I0901 11:50:14.291795 15 service_latency.go:356] Created: latency-svc-85vxr
  I0901 11:50:14.293710 15 service_latency.go:356] Created: latency-svc-bg7w2
  I0901 11:50:14.295326 15 service_latency.go:356] Created: latency-svc-mrbxq
  I0901 11:50:14.297594 15 service_latency.go:363] Got endpoints: latency-svc-9lzfr [389.362275ms]
  I0901 11:50:14.298236 15 service_latency.go:356] Created: latency-svc-8j56r
  I0901 11:50:14.300654 15 service_latency.go:356] Created: latency-svc-rnzfx
  I0901 11:50:14.298360 15 service_latency.go:356] Created: latency-svc-zd652
  I0901 11:50:14.301581 15 service_latency.go:356] Created: latency-svc-8bp2p
  I0901 11:50:14.301854 15 service_latency.go:356] Created: latency-svc-gcs7k
  I0901 11:50:14.301897 15 service_latency.go:356] Created: latency-svc-dxtf6
  I0901 11:50:14.301943 15 service_latency.go:356] Created: latency-svc-4zvfv
  I0901 11:50:14.307487 15 service_latency.go:363] Got endpoints: latency-svc-tbn2z [326.128543ms]
  I0901 11:50:14.323660 15 service_latency.go:356] Created: latency-svc-8vhm7
  I0901 11:50:14.329340 15 service_latency.go:356] Created: latency-svc-nh6mx
  I0901 11:50:14.338906 15 service_latency.go:356] Created: latency-svc-x7djc
  I0901 11:50:14.348556 15 service_latency.go:363] Got endpoints: latency-svc-gktdm [394.307093ms]
  I0901 11:50:14.367661 15 service_latency.go:356] Created: latency-svc-qzjhs
  I0901 11:50:14.383123 15 service_latency.go:363] Got endpoints: latency-svc-mrbxq [268.332779ms]
  I0901 11:50:14.403841 15 service_latency.go:356] Created: latency-svc-jzd7d
  I0901 11:50:14.432230 15 service_latency.go:363] Got endpoints: latency-svc-4zvfv [318.101381ms]
  I0901 11:50:14.453068 15 service_latency.go:356] Created: latency-svc-p28dt
  I0901 11:50:14.483621 15 service_latency.go:363] Got endpoints: latency-svc-gjft8 [345.408954ms]
  I0901 11:50:14.505487 15 service_latency.go:356] Created: latency-svc-qncc8
  I0901 11:50:14.539101 15 service_latency.go:363] Got endpoints: latency-svc-dxtf6 [487.073373ms]
  I0901 11:50:14.562464 15 service_latency.go:356] Created: latency-svc-fjpt9
  I0901 11:50:14.587437 15 service_latency.go:363] Got endpoints: latency-svc-zd652 [535.950872ms]
  I0901 11:50:14.615743 15 service_latency.go:356] Created: latency-svc-qvfx8
  I0901 11:50:14.638228 15 service_latency.go:363] Got endpoints: latency-svc-bg7w2 [586.64779ms]
  I0901 11:50:14.659294 15 service_latency.go:356] Created: latency-svc-gqm79
  I0901 11:50:14.683571 15 service_latency.go:363] Got endpoints: latency-svc-gcs7k [625.502616ms]
  I0901 11:50:14.703390 15 service_latency.go:356] Created: latency-svc-8wdd4
  I0901 11:50:14.732199 15 service_latency.go:363] Got endpoints: latency-svc-rnzfx [675.452123ms]
  I0901 11:50:14.760808 15 service_latency.go:356] Created: latency-svc-l4xz5
  I0901 11:50:14.784700 15 service_latency.go:363] Got endpoints: latency-svc-85vxr [725.451181ms]
  I0901 11:50:14.812926 15 service_latency.go:356] Created: latency-svc-7m8hg
  I0901 11:50:14.833175 15 service_latency.go:363] Got endpoints: latency-svc-8bp2p [781.529007ms]
  I0901 11:50:14.856815 15 service_latency.go:356] Created: latency-svc-glqcl
  I0901 11:50:14.887237 15 service_latency.go:363] Got endpoints: latency-svc-8j56r [836.177ms]
  I0901 11:50:14.915063 15 service_latency.go:356] Created: latency-svc-htmvc
  I0901 11:50:14.933703 15 service_latency.go:363] Got endpoints: latency-svc-8vhm7 [654.076394ms]
  E0901 11:50:14.953051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:14.955481 15 service_latency.go:356] Created: latency-svc-t84qz
  I0901 11:50:14.988156 15 service_latency.go:363] Got endpoints: latency-svc-nh6mx [690.240823ms]
  I0901 11:50:15.010666 15 service_latency.go:356] Created: latency-svc-k2dt5
  I0901 11:50:15.031600 15 service_latency.go:363] Got endpoints: latency-svc-x7djc [724.006659ms]
  I0901 11:50:15.053303 15 service_latency.go:356] Created: latency-svc-vhrvb
  I0901 11:50:15.086437 15 service_latency.go:363] Got endpoints: latency-svc-qzjhs [737.767305ms]
  I0901 11:50:15.110820 15 service_latency.go:356] Created: latency-svc-86gbq
  I0901 11:50:15.137172 15 service_latency.go:363] Got endpoints: latency-svc-jzd7d [753.984714ms]
  I0901 11:50:15.159633 15 service_latency.go:356] Created: latency-svc-vrh4h
  I0901 11:50:15.185566 15 service_latency.go:363] Got endpoints: latency-svc-p28dt [753.262851ms]
  I0901 11:50:15.211655 15 service_latency.go:356] Created: latency-svc-pwmxk
  I0901 11:50:15.236461 15 service_latency.go:363] Got endpoints: latency-svc-qncc8 [752.715395ms]
  I0901 11:50:15.259931 15 service_latency.go:356] Created: latency-svc-6gz55
  I0901 11:50:15.283311 15 service_latency.go:363] Got endpoints: latency-svc-fjpt9 [744.051753ms]
  I0901 11:50:15.307671 15 service_latency.go:356] Created: latency-svc-kwfdb
  I0901 11:50:15.337943 15 service_latency.go:363] Got endpoints: latency-svc-qvfx8 [750.405083ms]
  I0901 11:50:15.367583 15 service_latency.go:356] Created: latency-svc-zgpjr
  I0901 11:50:15.400113 15 service_latency.go:363] Got endpoints: latency-svc-gqm79 [761.761682ms]
  I0901 11:50:15.427047 15 service_latency.go:356] Created: latency-svc-qtvb5
  I0901 11:50:15.442230 15 service_latency.go:363] Got endpoints: latency-svc-8wdd4 [758.58058ms]
  I0901 11:50:15.485853 15 service_latency.go:356] Created: latency-svc-jh77w
  I0901 11:50:15.487473 15 service_latency.go:363] Got endpoints: latency-svc-l4xz5 [755.168815ms]
  I0901 11:50:15.525715 15 service_latency.go:356] Created: latency-svc-b7w6w
  I0901 11:50:15.568506 15 service_latency.go:363] Got endpoints: latency-svc-7m8hg [783.711863ms]
  I0901 11:50:15.591182 15 service_latency.go:363] Got endpoints: latency-svc-glqcl [757.920849ms]
  I0901 11:50:15.644957 15 service_latency.go:356] Created: latency-svc-gltns
  I0901 11:50:15.647109 15 service_latency.go:363] Got endpoints: latency-svc-htmvc [759.6758ms]
  I0901 11:50:15.659262 15 service_latency.go:356] Created: latency-svc-29rk8
  I0901 11:50:15.675783 15 service_latency.go:356] Created: latency-svc-4qv6t
  I0901 11:50:15.685129 15 service_latency.go:363] Got endpoints: latency-svc-t84qz [751.350929ms]
  I0901 11:50:15.711083 15 service_latency.go:356] Created: latency-svc-d4kcb
  I0901 11:50:15.748031 15 service_latency.go:363] Got endpoints: latency-svc-k2dt5 [759.786445ms]
  I0901 11:50:15.768283 15 service_latency.go:356] Created: latency-svc-dshf6
  I0901 11:50:15.803637 15 service_latency.go:363] Got endpoints: latency-svc-vhrvb [771.971479ms]
  I0901 11:50:15.823474 15 service_latency.go:356] Created: latency-svc-g9g8f
  I0901 11:50:15.835646 15 service_latency.go:363] Got endpoints: latency-svc-86gbq [749.126896ms]
  I0901 11:50:15.854044 15 service_latency.go:356] Created: latency-svc-rz9z4
  I0901 11:50:15.884521 15 service_latency.go:363] Got endpoints: latency-svc-vrh4h [747.277421ms]
  I0901 11:50:15.905868 15 service_latency.go:356] Created: latency-svc-kwwgn
  I0901 11:50:15.936615 15 service_latency.go:363] Got endpoints: latency-svc-pwmxk [750.959123ms]
  E0901 11:50:15.954691      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:15.960317 15 service_latency.go:356] Created: latency-svc-8c52b
  I0901 11:50:15.985473 15 service_latency.go:363] Got endpoints: latency-svc-6gz55 [748.893003ms]
  I0901 11:50:16.011181 15 service_latency.go:356] Created: latency-svc-wprvp
  I0901 11:50:16.034716 15 service_latency.go:363] Got endpoints: latency-svc-kwfdb [751.311811ms]
  I0901 11:50:16.059658 15 service_latency.go:356] Created: latency-svc-fjhf7
  I0901 11:50:16.083142 15 service_latency.go:363] Got endpoints: latency-svc-zgpjr [745.067188ms]
  I0901 11:50:16.104431 15 service_latency.go:356] Created: latency-svc-kz9fr
  I0901 11:50:16.133672 15 service_latency.go:363] Got endpoints: latency-svc-qtvb5 [733.31217ms]
  I0901 11:50:16.158717 15 service_latency.go:356] Created: latency-svc-qr24c
  I0901 11:50:16.185277 15 service_latency.go:363] Got endpoints: latency-svc-jh77w [742.981495ms]
  I0901 11:50:16.211651 15 service_latency.go:356] Created: latency-svc-89vk8
  I0901 11:50:16.233672 15 service_latency.go:363] Got endpoints: latency-svc-b7w6w [746.134446ms]
  I0901 11:50:16.261232 15 service_latency.go:356] Created: latency-svc-wmn82
  I0901 11:50:16.287718 15 service_latency.go:363] Got endpoints: latency-svc-gltns [718.626978ms]
  I0901 11:50:16.314862 15 service_latency.go:356] Created: latency-svc-9x5mk
  I0901 11:50:16.333857 15 service_latency.go:363] Got endpoints: latency-svc-29rk8 [742.588946ms]
  I0901 11:50:16.352480 15 service_latency.go:356] Created: latency-svc-2xzvf
  I0901 11:50:16.383818 15 service_latency.go:363] Got endpoints: latency-svc-4qv6t [736.648685ms]
  I0901 11:50:16.415845 15 service_latency.go:356] Created: latency-svc-ccz5m
  I0901 11:50:16.439613 15 service_latency.go:363] Got endpoints: latency-svc-d4kcb [754.384456ms]
  I0901 11:50:16.459233 15 service_latency.go:356] Created: latency-svc-ftgsr
  I0901 11:50:16.484674 15 service_latency.go:363] Got endpoints: latency-svc-dshf6 [736.548545ms]
  I0901 11:50:16.508716 15 service_latency.go:356] Created: latency-svc-gdv86
  I0901 11:50:16.533041 15 service_latency.go:363] Got endpoints: latency-svc-g9g8f [729.281827ms]
  I0901 11:50:16.558976 15 service_latency.go:356] Created: latency-svc-28pnb
  I0901 11:50:16.587802 15 service_latency.go:363] Got endpoints: latency-svc-rz9z4 [752.066167ms]
  I0901 11:50:16.613638 15 service_latency.go:356] Created: latency-svc-chv47
  I0901 11:50:16.636353 15 service_latency.go:363] Got endpoints: latency-svc-kwwgn [751.738813ms]
  I0901 11:50:16.661339 15 service_latency.go:356] Created: latency-svc-jw5cr
  I0901 11:50:16.683561 15 service_latency.go:363] Got endpoints: latency-svc-8c52b [746.852528ms]
  I0901 11:50:16.707067 15 service_latency.go:356] Created: latency-svc-ss8fr
  I0901 11:50:16.734346 15 service_latency.go:363] Got endpoints: latency-svc-wprvp [748.775395ms]
  I0901 11:50:16.753458 15 service_latency.go:356] Created: latency-svc-s5x7k
  I0901 11:50:16.787725 15 service_latency.go:363] Got endpoints: latency-svc-fjhf7 [752.934333ms]
  I0901 11:50:16.813182 15 service_latency.go:356] Created: latency-svc-5nzg5
  I0901 11:50:16.834029 15 service_latency.go:363] Got endpoints: latency-svc-kz9fr [750.709274ms]
  I0901 11:50:16.860813 15 service_latency.go:356] Created: latency-svc-t7fp4
  I0901 11:50:16.882661 15 service_latency.go:363] Got endpoints: latency-svc-qr24c [748.929468ms]
  I0901 11:50:16.912717 15 service_latency.go:356] Created: latency-svc-wdqhs
  I0901 11:50:16.935672 15 service_latency.go:363] Got endpoints: latency-svc-89vk8 [750.293171ms]
  E0901 11:50:16.955308      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:16.957109 15 service_latency.go:356] Created: latency-svc-2pf4n
  I0901 11:50:16.996655 15 service_latency.go:363] Got endpoints: latency-svc-wmn82 [762.91042ms]
  I0901 11:50:17.032785 15 service_latency.go:363] Got endpoints: latency-svc-9x5mk [744.767825ms]
  I0901 11:50:17.035872 15 service_latency.go:356] Created: latency-svc-snx5b
  I0901 11:50:17.059997 15 service_latency.go:356] Created: latency-svc-bskx7
  I0901 11:50:17.082952 15 service_latency.go:363] Got endpoints: latency-svc-2xzvf [749.024544ms]
  I0901 11:50:17.104896 15 service_latency.go:356] Created: latency-svc-wtlsl
  I0901 11:50:17.142612 15 service_latency.go:363] Got endpoints: latency-svc-ccz5m [758.723806ms]
  I0901 11:50:17.172528 15 service_latency.go:356] Created: latency-svc-jvrdl
  I0901 11:50:17.186087 15 service_latency.go:363] Got endpoints: latency-svc-ftgsr [744.417841ms]
  I0901 11:50:17.218085 15 service_latency.go:356] Created: latency-svc-4rr84
  I0901 11:50:17.233174 15 service_latency.go:363] Got endpoints: latency-svc-gdv86 [748.41796ms]
  I0901 11:50:17.248766 15 service_latency.go:356] Created: latency-svc-8p6nk
  I0901 11:50:17.284206 15 service_latency.go:363] Got endpoints: latency-svc-28pnb [750.936016ms]
  I0901 11:50:17.308233 15 service_latency.go:356] Created: latency-svc-747wh
  I0901 11:50:17.333095 15 service_latency.go:363] Got endpoints: latency-svc-chv47 [745.204128ms]
  I0901 11:50:17.351277 15 service_latency.go:356] Created: latency-svc-27gf7
  I0901 11:50:17.382358 15 service_latency.go:363] Got endpoints: latency-svc-jw5cr [745.862728ms]
  I0901 11:50:17.405433 15 service_latency.go:356] Created: latency-svc-hlr4f
  I0901 11:50:17.446083 15 service_latency.go:363] Got endpoints: latency-svc-ss8fr [762.443686ms]
  I0901 11:50:17.476570 15 service_latency.go:356] Created: latency-svc-ngqcw
  I0901 11:50:17.491537 15 service_latency.go:363] Got endpoints: latency-svc-s5x7k [757.051132ms]
  I0901 11:50:17.518915 15 service_latency.go:356] Created: latency-svc-lmc4n
  I0901 11:50:17.542148 15 service_latency.go:363] Got endpoints: latency-svc-5nzg5 [754.276108ms]
  I0901 11:50:17.564786 15 service_latency.go:356] Created: latency-svc-27scn
  I0901 11:50:17.584025 15 service_latency.go:363] Got endpoints: latency-svc-t7fp4 [749.659896ms]
  I0901 11:50:17.623842 15 service_latency.go:356] Created: latency-svc-cdjb6
  I0901 11:50:17.640898 15 service_latency.go:363] Got endpoints: latency-svc-wdqhs [758.168146ms]
  I0901 11:50:17.662582 15 service_latency.go:356] Created: latency-svc-4rpgc
  I0901 11:50:17.690524 15 service_latency.go:363] Got endpoints: latency-svc-2pf4n [754.721431ms]
  I0901 11:50:17.712802 15 service_latency.go:356] Created: latency-svc-bwxmd
  I0901 11:50:17.733123 15 service_latency.go:363] Got endpoints: latency-svc-snx5b [736.347273ms]
  I0901 11:50:17.754326 15 service_latency.go:356] Created: latency-svc-drd9s
  I0901 11:50:17.787237 15 service_latency.go:363] Got endpoints: latency-svc-bskx7 [754.303261ms]
  I0901 11:50:17.804243 15 service_latency.go:356] Created: latency-svc-xkdrk
  I0901 11:50:17.831262 15 service_latency.go:363] Got endpoints: latency-svc-wtlsl [748.181949ms]
  I0901 11:50:17.855320 15 service_latency.go:356] Created: latency-svc-8fkl2
  I0901 11:50:17.883477 15 service_latency.go:363] Got endpoints: latency-svc-jvrdl [740.592985ms]
  I0901 11:50:17.910435 15 service_latency.go:356] Created: latency-svc-7h8pp
  I0901 11:50:17.931742 15 service_latency.go:363] Got endpoints: latency-svc-4rr84 [745.539905ms]
  I0901 11:50:17.951019 15 service_latency.go:356] Created: latency-svc-xkks2
  E0901 11:50:17.954751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:17.985852 15 service_latency.go:363] Got endpoints: latency-svc-8p6nk [752.167889ms]
  I0901 11:50:18.022994 15 service_latency.go:356] Created: latency-svc-6stnk
  I0901 11:50:18.038665 15 service_latency.go:363] Got endpoints: latency-svc-747wh [754.347266ms]
  I0901 11:50:18.066554 15 service_latency.go:356] Created: latency-svc-pqw55
  I0901 11:50:18.086182 15 service_latency.go:363] Got endpoints: latency-svc-27gf7 [752.986727ms]
  I0901 11:50:18.109165 15 service_latency.go:356] Created: latency-svc-7k9fr
  I0901 11:50:18.135600 15 service_latency.go:363] Got endpoints: latency-svc-hlr4f [753.108753ms]
  I0901 11:50:18.161909 15 service_latency.go:356] Created: latency-svc-9sk4v
  I0901 11:50:18.185761 15 service_latency.go:363] Got endpoints: latency-svc-ngqcw [739.413948ms]
  I0901 11:50:18.205812 15 service_latency.go:356] Created: latency-svc-7vwqz
  I0901 11:50:18.235924 15 service_latency.go:363] Got endpoints: latency-svc-lmc4n [744.276564ms]
  I0901 11:50:18.258607 15 service_latency.go:356] Created: latency-svc-jskh7
  I0901 11:50:18.286789 15 service_latency.go:363] Got endpoints: latency-svc-27scn [742.793944ms]
  I0901 11:50:18.313157 15 service_latency.go:356] Created: latency-svc-tt5dk
  I0901 11:50:18.335521 15 service_latency.go:363] Got endpoints: latency-svc-cdjb6 [751.39225ms]
  I0901 11:50:18.358544 15 service_latency.go:356] Created: latency-svc-5m24c
  I0901 11:50:18.398568 15 service_latency.go:363] Got endpoints: latency-svc-4rpgc [757.54963ms]
  I0901 11:50:18.422334 15 service_latency.go:356] Created: latency-svc-tt8kj
  I0901 11:50:18.431572 15 service_latency.go:363] Got endpoints: latency-svc-bwxmd [740.963118ms]
  I0901 11:50:18.452016 15 service_latency.go:356] Created: latency-svc-58sxv
  I0901 11:50:18.486753 15 service_latency.go:363] Got endpoints: latency-svc-drd9s [753.524859ms]
  I0901 11:50:18.512449 15 service_latency.go:356] Created: latency-svc-ms7wm
  I0901 11:50:18.534877 15 service_latency.go:363] Got endpoints: latency-svc-xkdrk [747.447661ms]
  I0901 11:50:18.552312 15 service_latency.go:356] Created: latency-svc-wfvpt
  I0901 11:50:18.581076 15 service_latency.go:363] Got endpoints: latency-svc-8fkl2 [749.705261ms]
  I0901 11:50:18.604395 15 service_latency.go:356] Created: latency-svc-xf6pf
  I0901 11:50:18.636735 15 service_latency.go:363] Got endpoints: latency-svc-7h8pp [753.179003ms]
  I0901 11:50:18.660764 15 service_latency.go:356] Created: latency-svc-bm7b6
  I0901 11:50:18.683058 15 service_latency.go:363] Got endpoints: latency-svc-xkks2 [751.241131ms]
  I0901 11:50:18.704169 15 service_latency.go:356] Created: latency-svc-97xpl
  I0901 11:50:18.736932 15 service_latency.go:363] Got endpoints: latency-svc-6stnk [750.846918ms]
  I0901 11:50:18.756716 15 service_latency.go:356] Created: latency-svc-z952j
  I0901 11:50:18.783102 15 service_latency.go:363] Got endpoints: latency-svc-pqw55 [744.355215ms]
  I0901 11:50:18.807331 15 service_latency.go:356] Created: latency-svc-n64zb
  I0901 11:50:18.832814 15 service_latency.go:363] Got endpoints: latency-svc-7k9fr [746.542725ms]
  I0901 11:50:18.855486 15 service_latency.go:356] Created: latency-svc-q4d86
  I0901 11:50:18.888644 15 service_latency.go:363] Got endpoints: latency-svc-9sk4v [751.966972ms]
  I0901 11:50:18.919709 15 service_latency.go:356] Created: latency-svc-fld7q
  I0901 11:50:18.938645 15 service_latency.go:363] Got endpoints: latency-svc-7vwqz [752.799226ms]
  E0901 11:50:18.955040      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:18.984825 15 service_latency.go:363] Got endpoints: latency-svc-jskh7 [748.820358ms]
  I0901 11:50:18.988012 15 service_latency.go:356] Created: latency-svc-gjlv7
  I0901 11:50:19.003604 15 service_latency.go:356] Created: latency-svc-wkgvc
  I0901 11:50:19.033790 15 service_latency.go:363] Got endpoints: latency-svc-tt5dk [746.511513ms]
  I0901 11:50:19.052174 15 service_latency.go:356] Created: latency-svc-c8lc6
  I0901 11:50:19.090597 15 service_latency.go:363] Got endpoints: latency-svc-5m24c [754.99954ms]
  I0901 11:50:19.115990 15 service_latency.go:356] Created: latency-svc-tgmw5
  I0901 11:50:19.131112 15 service_latency.go:363] Got endpoints: latency-svc-tt8kj [732.394307ms]
  I0901 11:50:19.159289 15 service_latency.go:356] Created: latency-svc-ml7ph
  I0901 11:50:19.189332 15 service_latency.go:363] Got endpoints: latency-svc-58sxv [757.692557ms]
  I0901 11:50:19.213658 15 service_latency.go:356] Created: latency-svc-zd7hq
  I0901 11:50:19.235524 15 service_latency.go:363] Got endpoints: latency-svc-ms7wm [748.688843ms]
  I0901 11:50:19.258993 15 service_latency.go:356] Created: latency-svc-vz47c
  I0901 11:50:19.283231 15 service_latency.go:363] Got endpoints: latency-svc-wfvpt [748.237703ms]
  I0901 11:50:19.318535 15 service_latency.go:356] Created: latency-svc-9vkg2
  I0901 11:50:19.333982 15 service_latency.go:363] Got endpoints: latency-svc-xf6pf [752.724319ms]
  I0901 11:50:19.363863 15 service_latency.go:356] Created: latency-svc-lxzr6
  I0901 11:50:19.399869 15 service_latency.go:363] Got endpoints: latency-svc-bm7b6 [763.054457ms]
  I0901 11:50:19.423159 15 service_latency.go:356] Created: latency-svc-ffx28
  I0901 11:50:19.476765 15 service_latency.go:363] Got endpoints: latency-svc-97xpl [793.435493ms]
  I0901 11:50:19.493321 15 service_latency.go:363] Got endpoints: latency-svc-z952j [756.29552ms]
  I0901 11:50:19.525210 15 service_latency.go:356] Created: latency-svc-5x2mz
  I0901 11:50:19.537648 15 service_latency.go:356] Created: latency-svc-qdrhq
  I0901 11:50:19.569715 15 service_latency.go:363] Got endpoints: latency-svc-n64zb [786.536134ms]
  I0901 11:50:19.582343 15 service_latency.go:363] Got endpoints: latency-svc-q4d86 [749.466235ms]
  I0901 11:50:19.614626 15 service_latency.go:356] Created: latency-svc-6vj7l
  I0901 11:50:19.619292 15 service_latency.go:356] Created: latency-svc-m9hmx
  I0901 11:50:19.636660 15 service_latency.go:363] Got endpoints: latency-svc-fld7q [747.933071ms]
  I0901 11:50:19.658502 15 service_latency.go:356] Created: latency-svc-btgbv
  I0901 11:50:19.691792 15 service_latency.go:363] Got endpoints: latency-svc-gjlv7 [753.059348ms]
  I0901 11:50:19.719309 15 service_latency.go:356] Created: latency-svc-cc5cv
  I0901 11:50:19.732485 15 service_latency.go:363] Got endpoints: latency-svc-wkgvc [747.589184ms]
  I0901 11:50:19.758807 15 service_latency.go:356] Created: latency-svc-c6x22
  I0901 11:50:19.786902 15 service_latency.go:363] Got endpoints: latency-svc-c8lc6 [753.01044ms]
  I0901 11:50:19.807772 15 service_latency.go:356] Created: latency-svc-5gr2j
  I0901 11:50:19.834014 15 service_latency.go:363] Got endpoints: latency-svc-tgmw5 [743.269717ms]
  I0901 11:50:19.857894 15 service_latency.go:356] Created: latency-svc-ljbh5
  I0901 11:50:19.887653 15 service_latency.go:363] Got endpoints: latency-svc-ml7ph [756.353676ms]
  I0901 11:50:19.915727 15 service_latency.go:356] Created: latency-svc-4q9ns
  I0901 11:50:19.936155 15 service_latency.go:363] Got endpoints: latency-svc-zd7hq [746.693705ms]
  E0901 11:50:19.955247      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:19.956484 15 service_latency.go:356] Created: latency-svc-8clms
  I0901 11:50:19.987169 15 service_latency.go:363] Got endpoints: latency-svc-vz47c [751.544166ms]
  I0901 11:50:20.014575 15 service_latency.go:356] Created: latency-svc-zt4sg
  I0901 11:50:20.035533 15 service_latency.go:363] Got endpoints: latency-svc-9vkg2 [751.230342ms]
  I0901 11:50:20.054730 15 service_latency.go:356] Created: latency-svc-g6xd5
  I0901 11:50:20.082186 15 service_latency.go:363] Got endpoints: latency-svc-lxzr6 [747.927577ms]
  I0901 11:50:20.101274 15 service_latency.go:356] Created: latency-svc-4pmxn
  I0901 11:50:20.134532 15 service_latency.go:363] Got endpoints: latency-svc-ffx28 [734.559533ms]
  I0901 11:50:20.159170 15 service_latency.go:356] Created: latency-svc-4qbdc
  I0901 11:50:20.185337 15 service_latency.go:363] Got endpoints: latency-svc-5x2mz [708.388081ms]
  I0901 11:50:20.213331 15 service_latency.go:356] Created: latency-svc-wwbbs
  I0901 11:50:20.235667 15 service_latency.go:363] Got endpoints: latency-svc-qdrhq [741.947185ms]
  I0901 11:50:20.259361 15 service_latency.go:356] Created: latency-svc-q78c4
  I0901 11:50:20.288932 15 service_latency.go:363] Got endpoints: latency-svc-6vj7l [718.911474ms]
  I0901 11:50:20.316195 15 service_latency.go:356] Created: latency-svc-rkppq
  I0901 11:50:20.338587 15 service_latency.go:363] Got endpoints: latency-svc-m9hmx [756.110751ms]
  I0901 11:50:20.367944 15 service_latency.go:356] Created: latency-svc-zwwqq
  I0901 11:50:20.390253 15 service_latency.go:363] Got endpoints: latency-svc-btgbv [753.45434ms]
  I0901 11:50:20.416663 15 service_latency.go:356] Created: latency-svc-xcmbt
  I0901 11:50:20.434315 15 service_latency.go:363] Got endpoints: latency-svc-cc5cv [742.438037ms]
  I0901 11:50:20.476267 15 service_latency.go:356] Created: latency-svc-9mdbk
  I0901 11:50:20.489961 15 service_latency.go:363] Got endpoints: latency-svc-c6x22 [757.283279ms]
  I0901 11:50:20.522762 15 service_latency.go:356] Created: latency-svc-dcjkp
  I0901 11:50:20.534860 15 service_latency.go:363] Got endpoints: latency-svc-5gr2j [747.883067ms]
  I0901 11:50:20.554086 15 service_latency.go:356] Created: latency-svc-wfrzg
  I0901 11:50:20.587471 15 service_latency.go:363] Got endpoints: latency-svc-ljbh5 [752.763456ms]
  I0901 11:50:20.612966 15 service_latency.go:356] Created: latency-svc-plcjg
  I0901 11:50:20.634346 15 service_latency.go:363] Got endpoints: latency-svc-4q9ns [746.119293ms]
  I0901 11:50:20.656225 15 service_latency.go:356] Created: latency-svc-cbq4b
  I0901 11:50:20.685007 15 service_latency.go:363] Got endpoints: latency-svc-8clms [748.362521ms]
  I0901 11:50:20.706892 15 service_latency.go:356] Created: latency-svc-h8tfp
  I0901 11:50:20.734736 15 service_latency.go:363] Got endpoints: latency-svc-zt4sg [747.479616ms]
  I0901 11:50:20.753673 15 service_latency.go:356] Created: latency-svc-lhc9l
  I0901 11:50:20.785353 15 service_latency.go:363] Got endpoints: latency-svc-g6xd5 [749.74388ms]
  I0901 11:50:20.809730 15 service_latency.go:356] Created: latency-svc-jv9nl
  I0901 11:50:20.833689 15 service_latency.go:363] Got endpoints: latency-svc-4pmxn [751.387679ms]
  I0901 11:50:20.857276 15 service_latency.go:356] Created: latency-svc-b9dlv
  I0901 11:50:20.886121 15 service_latency.go:363] Got endpoints: latency-svc-4qbdc [751.473987ms]
  I0901 11:50:20.913588 15 service_latency.go:356] Created: latency-svc-vxj77
  I0901 11:50:20.930925 15 service_latency.go:363] Got endpoints: latency-svc-wwbbs [745.406543ms]
  E0901 11:50:20.957462      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:20.960083 15 service_latency.go:356] Created: latency-svc-z79r2
  I0901 11:50:20.985529 15 service_latency.go:363] Got endpoints: latency-svc-q78c4 [749.667553ms]
  I0901 11:50:21.009047 15 service_latency.go:356] Created: latency-svc-4wf7f
  I0901 11:50:21.036680 15 service_latency.go:363] Got endpoints: latency-svc-rkppq [747.670084ms]
  I0901 11:50:21.060603 15 service_latency.go:356] Created: latency-svc-sjmgd
  I0901 11:50:21.083540 15 service_latency.go:363] Got endpoints: latency-svc-zwwqq [744.887122ms]
  I0901 11:50:21.107615 15 service_latency.go:356] Created: latency-svc-2nfjs
  I0901 11:50:21.136310 15 service_latency.go:363] Got endpoints: latency-svc-xcmbt [744.374484ms]
  I0901 11:50:21.219325 15 service_latency.go:363] Got endpoints: latency-svc-9mdbk [784.663708ms]
  I0901 11:50:21.235835 15 service_latency.go:363] Got endpoints: latency-svc-dcjkp [745.63936ms]
  I0901 11:50:21.291576 15 service_latency.go:363] Got endpoints: latency-svc-wfrzg [756.619488ms]
  I0901 11:50:21.337746 15 service_latency.go:363] Got endpoints: latency-svc-plcjg [748.488439ms]
  I0901 11:50:21.386499 15 service_latency.go:363] Got endpoints: latency-svc-cbq4b [752.030328ms]
  I0901 11:50:21.436640 15 service_latency.go:363] Got endpoints: latency-svc-h8tfp [749.632025ms]
  I0901 11:50:21.488227 15 service_latency.go:363] Got endpoints: latency-svc-lhc9l [753.393443ms]
  I0901 11:50:21.536511 15 service_latency.go:363] Got endpoints: latency-svc-jv9nl [750.95287ms]
  I0901 11:50:21.590952 15 service_latency.go:363] Got endpoints: latency-svc-b9dlv [757.184225ms]
  I0901 11:50:21.636806 15 service_latency.go:363] Got endpoints: latency-svc-vxj77 [750.543263ms]
  I0901 11:50:21.686276 15 service_latency.go:363] Got endpoints: latency-svc-z79r2 [749.346089ms]
  I0901 11:50:21.734164 15 service_latency.go:363] Got endpoints: latency-svc-4wf7f [748.532969ms]
  I0901 11:50:21.792984 15 service_latency.go:363] Got endpoints: latency-svc-sjmgd [756.214014ms]
  I0901 11:50:21.839090 15 service_latency.go:363] Got endpoints: latency-svc-2nfjs [755.472086ms]
  I0901 11:50:21.840964 15 service_latency.go:114] Latencies: [51.466003ms 115.638504ms 116.95583ms 138.918064ms 154.730157ms 173.958953ms 174.699443ms 184.032296ms 184.115449ms 189.691956ms 204.342017ms 204.395816ms 204.884064ms 208.157118ms 209.112221ms 209.431181ms 209.66524ms 214.292556ms 216.239449ms 220.884319ms 222.741438ms 225.289542ms 231.816147ms 233.430866ms 237.868355ms 238.712176ms 241.361764ms 245.841557ms 258.61537ms 262.029701ms 268.332779ms 273.894232ms 274.741228ms 280.824772ms 284.892889ms 289.559997ms 292.328292ms 296.834608ms 301.877845ms 309.882257ms 318.101381ms 325.068462ms 326.128543ms 330.470675ms 345.408954ms 347.894482ms 357.079908ms 361.53128ms 367.463236ms 389.362275ms 394.307093ms 395.31491ms 420.339571ms 487.073373ms 535.950872ms 586.64779ms 625.502616ms 654.076394ms 675.452123ms 690.240823ms 708.388081ms 718.626978ms 718.911474ms 724.006659ms 725.451181ms 729.281827ms 732.394307ms 733.31217ms 734.559533ms 736.347273ms 736.548545ms 736.648685ms 737.767305ms 739.413948ms 740.592985ms 740.963118ms 741.947185ms 742.438037ms 742.588946ms 742.793944ms 742.981495ms 743.269717ms 744.051753ms 744.276564ms 744.355215ms 744.374484ms 744.417841ms 744.767825ms 744.887122ms 745.067188ms 745.204128ms 745.406543ms 745.539905ms 745.63936ms 745.862728ms 746.119293ms 746.134446ms 746.511513ms 746.542725ms 746.693705ms 746.852528ms 747.277421ms 747.447661ms 747.479616ms 747.589184ms 747.670084ms 747.883067ms 747.927577ms 747.933071ms 748.181949ms 748.237703ms 748.362521ms 748.41796ms 748.488439ms 748.532969ms 748.688843ms 748.775395ms 748.820358ms 748.893003ms 748.929468ms 749.024544ms 749.126896ms 749.346089ms 749.466235ms 749.632025ms 749.659896ms 749.667553ms 749.705261ms 749.74388ms 750.293171ms 750.405083ms 750.543263ms 750.709274ms 750.846918ms 750.936016ms 750.95287ms 750.959123ms 751.230342ms 751.241131ms 751.311811ms 751.350929ms 751.387679ms 751.39225ms 751.473987ms 751.544166ms 751.738813ms 751.966972ms 752.030328ms 752.066167ms 752.167889ms 752.715395ms 752.724319ms 752.763456ms 752.799226ms 752.934333ms 752.986727ms 753.01044ms 753.059348ms 753.108753ms 753.179003ms 753.262851ms 753.393443ms 753.45434ms 753.524859ms 753.984714ms 754.276108ms 754.303261ms 754.347266ms 754.384456ms 754.721431ms 754.99954ms 755.168815ms 755.472086ms 756.110751ms 756.214014ms 756.29552ms 756.353676ms 756.619488ms 757.051132ms 757.184225ms 757.283279ms 757.54963ms 757.692557ms 757.920849ms 758.168146ms 758.58058ms 758.723806ms 759.6758ms 759.786445ms 761.761682ms 762.443686ms 762.91042ms 763.054457ms 771.971479ms 781.529007ms 783.711863ms 784.663708ms 786.536134ms 793.435493ms 836.177ms]
  I0901 11:50:21.841053 15 service_latency.go:118] 50 %ile: 746.852528ms
  I0901 11:50:21.841088 15 service_latency.go:119] 90 %ile: 757.283279ms
  I0901 11:50:21.841116 15 service_latency.go:120] 99 %ile: 793.435493ms
  I0901 11:50:21.841142 15 service_latency.go:121] Total sample count: 200
  I0901 11:50:21.841537 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8907" for this suite. @ 09/01/25 11:50:21.868
â€¢ [10.893 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/01/25 11:50:21.896
  I0901 11:50:21.896261 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 11:50:21.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:21.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:21.948
  E0901 11:50:21.956561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with best effort scope @ 09/01/25 11:50:21.956
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 11:50:21.969
  E0901 11:50:22.957276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:23.957643      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/01/25 11:50:23.979
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 11:50:23.991
  E0901 11:50:24.958670      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:25.959771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/01/25 11:50:26.005
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/01/25 11:50:26.055
  E0901 11:50:26.960284      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:27.960528      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/01/25 11:50:28.09
  E0901 11:50:28.961286      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:29.961908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 11:50:30.103
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 11:50:30.123
  E0901 11:50:30.962440      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:31.962946      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/01/25 11:50:32.136
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/01/25 11:50:32.158
  E0901 11:50:32.965668      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:33.966303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/01/25 11:50:34.167
  E0901 11:50:34.967248      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:35.967446      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 11:50:36.177
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 11:50:36.205
  E0901 11:50:36.967765      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:37.968577      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:38.218222 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2406" for this suite. @ 09/01/25 11:50:38.233
â€¢ [16.356 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/01/25 11:50:38.254
  I0901 11:50:38.254260 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename conformance-tests @ 09/01/25 11:50:38.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:38.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:38.299
  STEP: Getting node addresses @ 09/01/25 11:50:38.306
  I0901 11:50:38.306865 15 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0901 11:50:38.332216 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2713" for this suite. @ 09/01/25 11:50:38.436
â€¢ [0.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/01/25 11:50:38.475
  I0901 11:50:38.475321 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename events @ 09/01/25 11:50:38.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:38.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:38.529
  STEP: creating a test event @ 09/01/25 11:50:38.541
  STEP: listing all events in all namespaces @ 09/01/25 11:50:38.562
  STEP: patching the test event @ 09/01/25 11:50:38.607
  STEP: fetching the test event @ 09/01/25 11:50:38.629
  STEP: updating the test event @ 09/01/25 11:50:38.64
  STEP: getting the test event @ 09/01/25 11:50:38.668
  STEP: deleting the test event @ 09/01/25 11:50:38.678
  STEP: listing all events in all namespaces @ 09/01/25 11:50:38.702
  I0901 11:50:38.746609 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9522" for this suite. @ 09/01/25 11:50:38.759
â€¢ [0.304 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/01/25 11:50:38.78
  I0901 11:50:38.780631 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:50:38.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:38.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:38.814
  STEP: Creating configMap configmap-1869/configmap-test-96278c9f-1948-487d-be3a-8504ac58a7d7 @ 09/01/25 11:50:38.823
  STEP: Creating a pod to test consume configMaps @ 09/01/25 11:50:38.835
  E0901 11:50:38.969587      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:39.969763      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:40.970288      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:41.970841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:50:42.896
  I0901 11:50:42.908891 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-f00c68f7-24ad-401d-bf37-aa6358817ef3 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 11:50:42.942
  E0901 11:50:42.972513      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:42.986908 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1869" for this suite. @ 09/01/25 11:50:43.005
â€¢ [4.251 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/01/25 11:50:43.035
  I0901 11:50:43.036292 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/01/25 11:50:43.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:43.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:43.088
  STEP: getting /apis @ 09/01/25 11:50:43.097
  STEP: getting /apis/storage.k8s.io @ 09/01/25 11:50:43.112
  STEP: getting /apis/storage.k8s.io/v1 @ 09/01/25 11:50:43.115
  STEP: creating @ 09/01/25 11:50:43.118
  STEP: watching @ 09/01/25 11:50:43.16
  I0901 11:50:43.160194 15 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/01/25 11:50:43.184
  STEP: listing in namespace @ 09/01/25 11:50:43.193
  STEP: listing across namespaces @ 09/01/25 11:50:43.2
  STEP: patching @ 09/01/25 11:50:43.21
  STEP: updating @ 09/01/25 11:50:43.224
  I0901 11:50:43.239359 15 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0901 11:50:43.240660 15 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/01/25 11:50:43.241
  STEP: deleting a collection @ 09/01/25 11:50:43.279
  I0901 11:50:43.321943 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5546" for this suite. @ 09/01/25 11:50:43.333
â€¢ [0.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/01/25 11:50:43.356
  I0901 11:50:43.356990 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 11:50:43.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:43.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:43.403
  STEP: Create set of pod templates @ 09/01/25 11:50:43.412
  I0901 11:50:43.428041 15 podtemplates.go:143] created test-podtemplate-1
  I0901 11:50:43.464091 15 podtemplates.go:143] created test-podtemplate-2
  I0901 11:50:43.477447 15 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/01/25 11:50:43.477
  STEP: delete collection of pod templates @ 09/01/25 11:50:43.489
  I0901 11:50:43.489581 15 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/01/25 11:50:43.545
  I0901 11:50:43.545822 15 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0901 11:50:43.594712 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-718" for this suite. @ 09/01/25 11:50:43.608
â€¢ [0.266 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/01/25 11:50:43.63
  I0901 11:50:43.630641 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 11:50:43.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:50:43.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:50:43.669
  STEP: Creating service test in namespace statefulset-2854 @ 09/01/25 11:50:43.679
  STEP: Creating a new StatefulSet @ 09/01/25 11:50:43.693
  I0901 11:50:43.718050 15 wait.go:40] Found 0 stateful pods, waiting for 3
  E0901 11:50:43.971720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:44.972045      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:45.972651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:46.973611      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:47.973919      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:48.975344      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:49.975080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:50.975609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:51.975775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:52.976746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:50:53.728398 15 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:50:53.728583 15 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:50:53.728630 15 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 11:50:53.776
  I0901 11:50:53.817659 15 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 11:50:53.817
  E0901 11:50:53.977277      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:54.977891      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:55.978896      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:56.979762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:57.979470      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:58.979833      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:50:59.980566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:00.980863      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:01.982327      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:02.983501      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/01/25 11:51:03.855
  STEP: Performing a canary update @ 09/01/25 11:51:03.856
  I0901 11:51:03.891987 15 statefulset.go:2510] Updating stateful set ss2
  I0901 11:51:03.927133 15 wait.go:74] Waiting for Pod statefulset-2854/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:51:03.984234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:04.985185      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:05.988821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:06.985941      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:07.986224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:08.986841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:09.987391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:10.988009      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:11.989210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:12.989752      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/01/25 11:51:13.921
  E0901 11:51:13.990296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:51:14.057062 15 wait.go:40] Found 1 stateful pods, waiting for 3
  E0901 11:51:14.990804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:15.991053      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:16.991568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:17.992185      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:18.992912      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:19.993823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:20.994041      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:21.995529      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:22.995520      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:23.995896      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:51:24.070805 15 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:51:24.071067 15 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 11:51:24.071173 15 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/01/25 11:51:24.102
  I0901 11:51:24.143641 15 statefulset.go:2510] Updating stateful set ss2
  I0901 11:51:24.193475 15 wait.go:74] Waiting for Pod statefulset-2854/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:51:24.996759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:25.996731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:26.997569      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:27.999055      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:28.998876      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:29.998958      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:30.999279      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:31.999782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:33.000842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:34.001028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:51:34.202848 15 statefulset.go:2510] Updating stateful set ss2
  I0901 11:51:34.222827 15 wait.go:56] Waiting for StatefulSet statefulset-2854/ss2 to complete update
  I0901 11:51:34.223069 15 wait.go:63] Waiting for Pod statefulset-2854/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0901 11:51:35.001715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:36.001902      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:37.002580      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:38.002815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:39.003206      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:40.003843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:41.004213      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:42.004766      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:43.005062      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:44.005270      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:51:44.234796 15 wait.go:56] Waiting for StatefulSet statefulset-2854/ss2 to complete update
  E0901 11:51:45.005796      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:46.005992      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:47.006080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:48.006768      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:49.006869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:50.007999      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:51.008294      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:52.009221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:53.010652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:54.011637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:51:54.244083 15 statefulset.go:138] Deleting all statefulset in ns statefulset-2854
  I0901 11:51:54.262776 15 rest.go:152] Scaling statefulset ss2 to 0
  E0901 11:51:55.012793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:56.013560      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:57.013682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:58.014196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:51:59.014991      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:00.015051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:01.015802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:02.016640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:03.017294      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:04.017583      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:52:04.304340 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 11:52:04.312921 15 rest.go:90] Deleting statefulset ss2
  I0901 11:52:04.364698 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2854" for this suite. @ 09/01/25 11:52:04.388
â€¢ [80.777 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/01/25 11:52:04.41
  I0901 11:52:04.411008 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:52:04.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:04.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:04.463
  STEP: creating a new configmap @ 09/01/25 11:52:04.474
  STEP: modifying the configmap once @ 09/01/25 11:52:04.488
  STEP: modifying the configmap a second time @ 09/01/25 11:52:04.511
  STEP: deleting the configmap @ 09/01/25 11:52:04.534
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/01/25 11:52:04.554
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/01/25 11:52:04.557
  I0901 11:52:04.559008 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1000  dbf0a3a6-59c0-4d00-922f-4f98e78a3ea5 18819 0 2025-09-01 11:52:04 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 11:52:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:52:04.560056 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1000  dbf0a3a6-59c0-4d00-922f-4f98e78a3ea5 18820 0 2025-09-01 11:52:04 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 11:52:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:52:04.561009 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1000" for this suite. @ 09/01/25 11:52:04.577
â€¢ [0.188 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/01/25 11:52:04.598
  I0901 11:52:04.599044 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 11:52:04.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:04.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:04.642
  STEP: Waiting for pod completion @ 09/01/25 11:52:04.69
  E0901 11:52:05.018697      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:06.019840      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:07.021219      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:08.022059      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:52:08.779145 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4308" for this suite. @ 09/01/25 11:52:08.805
â€¢ [4.230 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/01/25 11:52:08.829
  I0901 11:52:08.829443 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename disruption @ 09/01/25 11:52:08.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:08.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:08.888
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/01/25 11:52:08.903
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:52:08.921
  E0901 11:52:09.022986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:10.023598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/01/25 11:52:10.943
  STEP: Waiting for all pods to be running @ 09/01/25 11:52:10.943
  I0901 11:52:10.952644 15 disruption.go:680] pods: 0 < 3
  E0901 11:52:11.024168      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:12.026482      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:52:12.992938 15 disruption.go:691] running pods: 2 < 3
  E0901 11:52:13.030983      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:14.026568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/01/25 11:52:14.971
  STEP: Updating the pdb to allow a pod to be evicted @ 09/01/25 11:52:15.011
  E0901 11:52:15.027926      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:52:15.039
  E0901 11:52:16.030870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:17.029005      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 11:52:17.065
  STEP: Waiting for all pods to be running @ 09/01/25 11:52:17.066
  STEP: Waiting for the pdb to observed all healthy pods @ 09/01/25 11:52:17.083
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/01/25 11:52:17.159
  STEP: Waiting for the pdb to be processed @ 09/01/25 11:52:17.212
  E0901 11:52:18.029942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:19.030139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/01/25 11:52:19.233
  STEP: locating a running pod @ 09/01/25 11:52:19.244
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/01/25 11:52:19.286
  STEP: Waiting for the pdb to be deleted @ 09/01/25 11:52:19.3
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 11:52:19.313
  STEP: Waiting for all pods to be running @ 09/01/25 11:52:19.314
  I0901 11:52:19.419537 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2846" for this suite. @ 09/01/25 11:52:19.439
â€¢ [10.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/01/25 11:52:19.496
  I0901 11:52:19.496322 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 11:52:19.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:19.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:19.605
  STEP: creating a ConfigMap @ 09/01/25 11:52:19.614
  STEP: fetching the ConfigMap @ 09/01/25 11:52:19.624
  STEP: patching the ConfigMap @ 09/01/25 11:52:19.629
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/01/25 11:52:19.641
  STEP: deleting the ConfigMap by collection with a label selector @ 09/01/25 11:52:19.647
  STEP: listing all ConfigMaps in test namespace @ 09/01/25 11:52:19.665
  I0901 11:52:19.673292 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2827" for this suite. @ 09/01/25 11:52:19.687
â€¢ [0.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/01/25 11:52:19.705
  I0901 11:52:19.705817 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 11:52:19.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:52:19.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:52:19.742
  STEP: Creating a suspended cronjob @ 09/01/25 11:52:19.751
  STEP: Ensuring no jobs are scheduled @ 09/01/25 11:52:19.766
  E0901 11:52:20.031215      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:21.032172      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:22.031891      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:23.032654      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:24.032993      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:25.033057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:26.036072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:27.036223      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:28.038081      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:29.038097      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:30.039561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:31.040180      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:32.042037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:33.041474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:34.041857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:35.043188      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:36.043397      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:37.044353      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:38.045604      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:39.046689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:40.046775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:41.046842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:42.047139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:43.048002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:44.048318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:45.048711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:46.049269      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:47.049861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:48.050927      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:49.050899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:50.052299      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:51.053051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:52.053561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:53.054116      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:54.055598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:55.056002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:56.055982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:57.056516      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:58.057341      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:52:59.057581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:00.057822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:01.058513      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:02.058098      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:03.058697      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:04.058894      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:05.059657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:06.060490      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:07.061146      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:08.061624      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:09.061822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:10.062708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:11.063137      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:12.064101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:13.064618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:14.066152      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:15.067099      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:16.067156      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:17.067612      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:18.068306      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:19.069162      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:20.069747      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:21.070106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:22.070650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:23.071544      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:24.071829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:25.072107      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:26.072509      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:27.072982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:28.074205      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:29.074745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:30.075528      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:31.076050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:32.076513      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:33.076696      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:34.076907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:35.077212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:36.078735      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:37.079911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:38.080729      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:39.081203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:40.081538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:41.081893      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:42.082202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:43.083707      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:44.084506      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:45.087128      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:46.089517      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:47.089142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:48.089807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:49.090495      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:50.091615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:51.092183      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:52.093900      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:53.094729      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:54.097474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:55.096344      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:56.096746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:57.097027      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:58.098115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:53:59.098959      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:00.100238      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:01.101269      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:02.102469      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:03.102957      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:04.104344      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:05.105382      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:06.105983      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:07.106527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:08.106289      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:09.106770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:10.106908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:11.107060      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:12.108221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:13.108797      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:14.109110      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:15.109837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:16.110338      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:17.110773      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:18.114638      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:19.112076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:20.113108      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:21.113700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:22.114996      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:23.116151      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:24.116065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:25.118507      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:26.117065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:27.117182      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:28.118233      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:29.117980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:30.118203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:31.118698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:32.118908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:33.119979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:34.120960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:35.122598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:36.123445      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:37.123239      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:38.124777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:39.125028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:40.125449      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:41.125786      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:42.126829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:43.127027      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:44.127166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:45.127972      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:46.128161      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:47.129211      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:48.129802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:49.129890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:50.130204      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:51.131278      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:52.132143      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:53.133813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:54.134042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:55.134135      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:56.134942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:57.135709      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:58.137145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:54:59.137715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:00.138164      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:01.138292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:02.139049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:03.140547      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:04.140751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:05.141273      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:06.142512      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:07.143503      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:08.143865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:09.145140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:10.146136      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:11.146701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:12.147630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:13.147899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:14.148990      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:15.149194      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:16.150151      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:17.150676      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:18.151811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:19.152803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:20.152869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:21.153698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:22.154660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:23.154982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:24.155449      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:25.156608      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:26.157494      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:27.157640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:28.159057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:29.159307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:30.160118      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:31.160398      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:32.160940      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:33.161064      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:34.161670      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:35.161920      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:36.163223      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:37.164654      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:38.164779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:39.166065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:40.165262      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:41.165806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:42.166778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:43.167687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:44.168116      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:45.168846      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:46.169482      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:47.170660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:48.172053      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:49.178276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:50.179295      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:51.179824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:52.180227      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:53.180724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:54.181581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:55.181524      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:56.181823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:57.182257      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:58.182780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:55:59.182778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:00.183154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:01.183886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:02.184210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:03.184479      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:04.184816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:05.186083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:06.186529      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:07.187117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:08.187851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:09.188072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:10.188271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:11.189112      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:12.189744      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:13.190590      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:14.191793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:15.191871      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:16.192622      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:17.192749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:18.193810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:19.193935      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:20.194242      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:21.194857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:22.195914      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:23.196706      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:24.196897      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:25.197144      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:26.198117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:27.198772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:28.199292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:29.199731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:30.199878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:31.200244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:32.200794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:33.201276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:34.203015      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:35.220565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:36.206143      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:37.220733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:38.210842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:39.220010      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:40.213751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:41.214593      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:42.214847      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:43.216191      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:44.216613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:45.217497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:46.217471      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:47.218474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:48.218885      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:49.218561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:50.218864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:51.219719      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:52.220714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:53.220476      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:54.220636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:55.221696      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:56.222597      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:57.223275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:58.223790      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:56:59.224164      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:00.224567      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:01.225186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:02.225754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:03.225738      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:04.226731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:05.227035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:06.227502      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:07.228245      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:08.228894      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:09.229140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:10.230577      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:11.230507      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:12.231838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:13.232701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:14.232803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:15.233723      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:16.234378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:17.235055      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:18.235245      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:19.235936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/01/25 11:57:19.767
  STEP: Removing cronjob @ 09/01/25 11:57:19.783
  I0901 11:57:19.810770 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8725" for this suite. @ 09/01/25 11:57:19.83
â€¢ [300.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/01/25 11:57:19.867
  I0901 11:57:19.868163 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 11:57:19.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:19.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:19.957
  STEP: creating service in namespace services-6892 @ 09/01/25 11:57:19.97
  STEP: creating service affinity-clusterip in namespace services-6892 @ 09/01/25 11:57:19.97
  STEP: creating replication controller affinity-clusterip in namespace services-6892 @ 09/01/25 11:57:20.003
  I0901 11:57:20.028277      15 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-6892, replica count: 3
  E0901 11:57:20.236239      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:21.236324      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:22.236727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:57:23.081276      15 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0901 11:57:23.237211      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:24.237599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:25.239074      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:57:26.081614      15 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 11:57:26.106679 15 resource.go:361] Creating new exec pod
  E0901 11:57:26.238912      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:27.238647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:28.239479      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:57:29.181375 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6892 exec execpod-affinitydb2zt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0901 11:57:29.239972      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:57:29.562114 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.46.176) 80 port [tcp/http] succeeded!\n"
  I0901 11:57:29.562893 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:57:29.563226 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6892 exec execpod-affinitydb2zt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.176 80'
  I0901 11:57:29.908939 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.176 80\nConnection to 10.233.46.176 80 port [tcp/http] succeeded!\n"
  I0901 11:57:29.909184 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 11:57:29.909763 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6892 exec execpod-affinitydb2zt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.46.176:80/ ; done'
  E0901 11:57:30.240689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:57:30.645135 15 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.46.176:80/\n"
  I0901 11:57:30.645647 15 builder.go:147] stdout: "\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz\naffinity-clusterip-xv9dz"
  I0901 11:57:30.645716 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645743 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645760 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645777 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645793 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645809 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645826 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645853 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645873 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645890 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645909 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645925 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645941 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645956 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645972 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.645987 15 service.go:242] Received response from host: affinity-clusterip-xv9dz
  I0901 11:57:30.646159 15 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6892, will wait for the garbage collector to delete the pods @ 09/01/25 11:57:30.68
  I0901 11:57:30.763788 15 resources.go:139] Deleting ReplicationController affinity-clusterip took: 22.859528ms
  I0901 11:57:30.866990 15 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 103.184716ms
  E0901 11:57:31.241925      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:32.242754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:33.243620      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:34.244782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:57:34.321696 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6892" for this suite. @ 09/01/25 11:57:34.336
â€¢ [14.484 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/01/25 11:57:34.351
  I0901 11:57:34.351820 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename subpath @ 09/01/25 11:57:34.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:34.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:34.389
  STEP: Setting up data @ 09/01/25 11:57:34.394
  STEP: Creating pod pod-subpath-test-configmap-7h8r @ 09/01/25 11:57:34.409
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 11:57:34.409
  E0901 11:57:35.244866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:36.245538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:37.245731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:38.246455      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:39.247074      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:40.247865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:41.248096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:42.248658      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:43.248792      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:44.249125      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:45.249536      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:46.250072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:47.250849      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:48.250900      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:49.251168      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:50.251722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:51.252136      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:52.252522      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:53.253453      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:54.253908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:55.254529      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:56.254709      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:57.254973      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:57:58.255761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:57:58.6
  I0901 11:57:58.611267 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-subpath-test-configmap-7h8r container test-container-subpath-configmap-7h8r: <nil>
  STEP: delete the pod @ 09/01/25 11:57:58.682
  STEP: Deleting pod pod-subpath-test-configmap-7h8r @ 09/01/25 11:57:58.74
  I0901 11:57:58.740807 15 delete.go:62] Deleting pod "pod-subpath-test-configmap-7h8r" in namespace "subpath-8962"
  I0901 11:57:58.753022 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8962" for this suite. @ 09/01/25 11:57:58.769
â€¢ [24.439 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/01/25 11:57:58.794
  I0901 11:57:58.794906 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename watch @ 09/01/25 11:57:58.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:58.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:58.841
  STEP: creating a watch on configmaps @ 09/01/25 11:57:58.85
  STEP: creating a new configmap @ 09/01/25 11:57:58.863
  STEP: modifying the configmap once @ 09/01/25 11:57:58.879
  STEP: closing the watch once it receives two notifications @ 09/01/25 11:57:58.902
  I0901 11:57:58.902721 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8970  b7373a35-77fc-4985-9fdc-b3a91b26580d 19998 0 2025-09-01 11:57:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:57:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:57:58.903375 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8970  b7373a35-77fc-4985-9fdc-b3a91b26580d 19999 0 2025-09-01 11:57:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:57:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/01/25 11:57:58.904
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/01/25 11:57:58.927
  STEP: deleting the configmap @ 09/01/25 11:57:58.932
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/01/25 11:57:58.949
  I0901 11:57:58.949462 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8970  b7373a35-77fc-4985-9fdc-b3a91b26580d 20000 0 2025-09-01 11:57:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:57:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:57:58.949782 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8970  b7373a35-77fc-4985-9fdc-b3a91b26580d 20001 0 2025-09-01 11:57:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 11:57:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 11:57:58.950368 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8970" for this suite. @ 09/01/25 11:57:58.964
â€¢ [0.190 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 09/01/25 11:57:58.984
  I0901 11:57:58.984822 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:57:58.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:57:59.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:57:59.028
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:57:59.037
  I0901 11:57:59.037776 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-4156 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 11:57:59.246627 15 builder.go:146] stderr: ""
  I0901 11:57:59.246720 15 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/01/25 11:57:59.246
  E0901 11:57:59.255652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:00.255877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:01.257833      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:02.257106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:03.257794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:04.258682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 11:58:04.305
  I0901 11:58:04.306994 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-4156 get pod e2e-test-httpd-pod -o json'
  I0901 11:58:04.504653 15 builder.go:146] stderr: ""
  I0901 11:58:04.505190 15 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-01T11:57:59Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4156\",\n        \"resourceVersion\": \"20017\",\n        \"uid\": \"a958c9aa-6836-432a-8cc8-249774384e5b\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-km8x6\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"aeshuj4hoh7a-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-km8x6\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T11:58:00Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T11:57:59Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T11:58:00Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T11:58:00Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T11:57:59Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://e6d74e8e5c46df101b6bbf1089335acf8e40615066f78880e93c84493fab8d95\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-01T11:58:00Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-km8x6\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.121.182\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.182\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.65.26\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.65.26\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-01T11:57:59Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/01/25 11:58:04.506
  I0901 11:58:04.506606 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-4156 replace -f -'
  I0901 11:58:04.892524 15 builder.go:146] stderr: ""
  I0901 11:58:04.893732 15 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/01/25 11:58:04.894
  I0901 11:58:04.909044 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-4156 delete pods e2e-test-httpd-pod'
  E0901 11:58:05.259583      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:06.260508      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:06.478969 15 builder.go:146] stderr: ""
  I0901 11:58:06.479111 15 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 11:58:06.480767 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4156" for this suite. @ 09/01/25 11:58:06.495
â€¢ [7.527 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/01/25 11:58:06.514
  I0901 11:58:06.515020 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 11:58:06.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:06.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:06.56
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 11:58:06.568
  E0901 11:58:07.261090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:08.261963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:09.262782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:10.263562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 11:58:10.631
  I0901 11:58:10.642493 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-27dab28e-a7ab-4232-8a72-3baed51e09e7 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 11:58:10.665
  I0901 11:58:10.713125 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5296" for this suite. @ 09/01/25 11:58:10.727
â€¢ [4.240 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/01/25 11:58:10.754
  I0901 11:58:10.754610 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 11:58:10.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:10.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:10.798
  I0901 11:58:10.868381 15 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0901 11:58:10.883238 15 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0901 11:58:10.936140 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:58:10.936247 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 11:58:11.264157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:11.946928 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:58:11.946999 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 11:58:12.263871      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:12.916249 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 11:58:12.916425 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 11:58:13.264751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:13.919898 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 11:58:13.919996 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 11:58:14.265874      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:14.907737 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 11:58:14.908081 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0901 11:58:14.908385 15 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0901 11:58:14.944540 15 daemon_set.go:102] Updating DaemonSet daemon-set
  E0901 11:58:15.266089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:16.266760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:16.985072 15 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0901 11:58:17.030779 15 daemon_set.go:102] Updating DaemonSet daemon-set
  I0901 11:58:17.030923 15 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0901 11:58:17.049486 15 daemon_set.go:1193] Wrong image for pod: daemon-set-rqp5k. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0901 11:58:17.049934 15 daemon_set.go:1198] Pod daemon-set-rqp5k is not available
  E0901 11:58:17.267924      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:18.268101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:19.269018      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:20.268862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:21.268882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:22.269557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:23.270605      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:24.041154 15 daemon_set.go:1198] Pod daemon-set-kq4pz is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 11:58:24.074
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8205, will wait for the garbage collector to delete the pods @ 09/01/25 11:58:24.074
  I0901 11:58:24.170873 15 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 33.260555ms
  E0901 11:58:24.272890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:24.371259 15 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.368021ms
  E0901 11:58:25.273763      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:26.274687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:26.683627 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 11:58:26.683734 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 11:58:26.697227 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20240"},"items":null}

  I0901 11:58:26.708032 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20240"},"items":null}

  I0901 11:58:26.759012 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8205" for this suite. @ 09/01/25 11:58:26.774
â€¢ [16.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/01/25 11:58:26.802
  I0901 11:58:26.802830 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 11:58:26.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:26.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:26.855
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 11:58:26.885
  E0901 11:58:27.275067      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:28.275931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 11:58:28.958
  E0901 11:58:29.277014      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:30.277306      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/01/25 11:58:31.011
  E0901 11:58:31.278788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:32.278526      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/01/25 11:58:33.054
  I0901 11:58:33.110737 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4976" for this suite. @ 09/01/25 11:58:33.127
â€¢ [6.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/01/25 11:58:33.155
  I0901 11:58:33.155854 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:58:33.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:33.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:33.209
  STEP: creating a replication controller @ 09/01/25 11:58:33.234
  I0901 11:58:33.236201 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 create -f -'
  E0901 11:58:33.279150      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:33.662207 15 builder.go:146] stderr: ""
  I0901 11:58:33.662522 15 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 11:58:33.662
  I0901 11:58:33.663534 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 11:58:33.876150 15 builder.go:146] stderr: ""
  I0901 11:58:33.876248 15 builder.go:147] stdout: "update-demo-nautilus-c2ltx update-demo-nautilus-kgjdx "
  I0901 11:58:33.876509 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods update-demo-nautilus-c2ltx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:58:34.107620 15 builder.go:146] stderr: ""
  I0901 11:58:34.107816 15 builder.go:147] stdout: ""
  I0901 11:58:34.108978 15 kubectl.go:2509] update-demo-nautilus-c2ltx is created but not running
  E0901 11:58:34.279259      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:35.281003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:36.280834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:37.281218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:38.281645      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:39.110276 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0901 11:58:39.281534      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:39.292950 15 builder.go:146] stderr: ""
  I0901 11:58:39.293454 15 builder.go:147] stdout: "update-demo-nautilus-c2ltx update-demo-nautilus-kgjdx "
  I0901 11:58:39.293709 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods update-demo-nautilus-c2ltx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:58:39.488759 15 builder.go:146] stderr: ""
  I0901 11:58:39.488965 15 builder.go:147] stdout: "true"
  I0901 11:58:39.489778 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods update-demo-nautilus-c2ltx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:58:39.687874 15 builder.go:146] stderr: ""
  I0901 11:58:39.687948 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:58:39.687974 15 kubectl.go:2400] validating pod update-demo-nautilus-c2ltx
  I0901 11:58:39.708998 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:58:39.709313 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:58:39.709375 15 kubectl.go:2527] update-demo-nautilus-c2ltx is verified up and running
  I0901 11:58:39.709937 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods update-demo-nautilus-kgjdx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 11:58:39.886985 15 builder.go:146] stderr: ""
  I0901 11:58:39.887061 15 builder.go:147] stdout: "true"
  I0901 11:58:39.887801 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods update-demo-nautilus-kgjdx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 11:58:40.067306 15 builder.go:146] stderr: ""
  I0901 11:58:40.067519 15 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 11:58:40.067567 15 kubectl.go:2400] validating pod update-demo-nautilus-kgjdx
  I0901 11:58:40.094887 15 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 11:58:40.095038 15 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 11:58:40.095280 15 kubectl.go:2527] update-demo-nautilus-kgjdx is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 11:58:40.095
  I0901 11:58:40.096135 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 delete --grace-period=0 --force -f -'
  E0901 11:58:40.282123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:40.300813 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 11:58:40.301210 15 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0901 11:58:40.301619 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get rc,svc -l name=update-demo --no-headers'
  I0901 11:58:40.596383 15 builder.go:146] stderr: "No resources found in kubectl-1932 namespace.\n"
  I0901 11:58:40.596488 15 builder.go:147] stdout: ""
  I0901 11:58:40.596944 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1932 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 11:58:40.884638 15 builder.go:146] stderr: ""
  I0901 11:58:40.884801 15 builder.go:147] stdout: ""
  I0901 11:58:40.885722 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1932" for this suite. @ 09/01/25 11:58:40.9
â€¢ [7.760 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/01/25 11:58:40.917
  I0901 11:58:40.917930 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 11:58:40.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:40.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:40.953
  STEP: creating the policy @ 09/01/25 11:58:40.972
  STEP: waiting until the marker is denied @ 09/01/25 11:58:41.007
  E0901 11:58:41.282659      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 11:58:41.982
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 11:58:42.023
  I0901 11:58:42.151277 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7812" for this suite. @ 09/01/25 11:58:42.163
â€¢ [1.263 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 09/01/25 11:58:42.181
  I0901 11:58:42.181232 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 11:58:42.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:42.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:42.213
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:58:42.221
  I0901 11:58:42.222034 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2718 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0901 11:58:42.284307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:42.426630 15 builder.go:146] stderr: ""
  I0901 11:58:42.426772 15 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/01/25 11:58:42.426
  I0901 11:58:42.427201 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2718 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0901 11:58:42.631848 15 builder.go:146] stderr: ""
  I0901 11:58:42.632382 15 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 11:58:42.632
  I0901 11:58:42.651818 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2718 delete pods e2e-test-httpd-pod'
  E0901 11:58:43.284477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:44.284899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:45.284993      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:45.337043 15 builder.go:146] stderr: ""
  I0901 11:58:45.337177 15 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 11:58:45.337748 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2718" for this suite. @ 09/01/25 11:58:45.356
â€¢ [3.194 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/01/25 11:58:45.375
  I0901 11:58:45.375641 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename prestop @ 09/01/25 11:58:45.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:45.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:45.432
  STEP: Creating server pod server in namespace prestop-5824 @ 09/01/25 11:58:45.439
  STEP: Waiting for pods to come up. @ 09/01/25 11:58:45.471
  E0901 11:58:46.285305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:47.285838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5824 @ 09/01/25 11:58:47.504
  E0901 11:58:48.286679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:49.286690      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/01/25 11:58:49.546
  E0901 11:58:50.287056      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:51.287679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:52.287921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:53.288947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:54.289481      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:58:54.586382 15 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/01/25 11:58:54.587
  I0901 11:58:54.636573 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5824" for this suite. @ 09/01/25 11:58:54.656
â€¢ [9.302 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/01/25 11:58:54.679
  I0901 11:58:54.680243 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 11:58:54.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:54.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:54.742
  STEP: creating the pod @ 09/01/25 11:58:54.766
  STEP: submitting the pod to kubernetes @ 09/01/25 11:58:54.771
  STEP: verifying QOS class is set on the pod @ 09/01/25 11:58:54.801
  I0901 11:58:54.813011 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4392" for this suite. @ 09/01/25 11:58:54.849
â€¢ [0.191 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/01/25 11:58:54.871
  I0901 11:58:54.871780 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/01/25 11:58:54.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 11:58:54.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 11:58:54.946
  I0901 11:58:54.956681 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 11:58:55.289612      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:56.289752      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:57.290982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:58.291572      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:58:59.291911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:00.292670      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:01.292589      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:02.293193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:03.293353      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:04.294056      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:05.294757      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:06.295446      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:07.296025      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:08.296382      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:09.297715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:10.297722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:11.297949      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:12.298680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:13.299155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:14.299970      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:15.300292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:16.301471      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:17.302248      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:18.302326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:19.302650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:20.302920      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:21.303711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:22.303914      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:23.304980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:24.305259      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:25.306918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:26.306803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:27.307805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:28.308985      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:29.309851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:30.309657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:31.310853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:32.311237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:33.312247      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:34.312615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:35.313722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:36.313395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:37.314285      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:38.314750      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:39.315815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:40.316142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:41.317097      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:42.317602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:43.318556      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:44.318691      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:45.319221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:46.319941      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:47.320632      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:48.320987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:49.321294      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:50.322146      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:51.322978      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:52.323998      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:53.324201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:54.324824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:59:54.959012 15 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 11:59:54.973526 15 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/01/25 11:59:54.973
  I0901 11:59:55.219619 15 taints.go:463] Pod1 is running on aeshuj4hoh7a-3. Tainting Node
  E0901 11:59:55.325641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:56.325905      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:57.326783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 11:59:57.497917 15 taints.go:471] Pod2 is running on aeshuj4hoh7a-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 11:59:57.498
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 11:59:57.541
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/01/25 11:59:57.555
  E0901 11:59:58.328067      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 11:59:59.328268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:00.328967      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:01.329234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:02.329375      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:03.329831      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:03.349562 15 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0901 12:00:04.330098      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:05.330810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:06.330748      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:07.331604      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:08.331759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:09.332221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:10.332743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:11.333774      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:12.334965      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:13.335680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:14.336553      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:15.337476      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:16.338149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:17.338876      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:18.339753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:19.340391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:20.341480      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:21.342260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:22.343576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:23.343807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:23.525184 15 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 12:00:23.551
  I0901 12:00:23.594191 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4254" for this suite. @ 09/01/25 12:00:23.607
â€¢ [88.750 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/01/25 12:00:23.622
  I0901 12:00:23.623003 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename certificates @ 09/01/25 12:00:23.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:23.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:23.664
  E0901 12:00:24.343766      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/01/25 12:00:24.583
  STEP: getting /apis/certificates.k8s.io @ 09/01/25 12:00:24.595
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/01/25 12:00:24.597
  STEP: creating @ 09/01/25 12:00:24.6
  STEP: getting @ 09/01/25 12:00:24.642
  STEP: listing @ 09/01/25 12:00:24.649
  STEP: watching @ 09/01/25 12:00:24.658
  I0901 12:00:24.659063 15 certificates.go:316] starting watch
  STEP: patching @ 09/01/25 12:00:24.661
  STEP: updating @ 09/01/25 12:00:24.675
  I0901 12:00:24.687947 15 certificates.go:332] waiting for watch events with expected annotations
  I0901 12:00:24.688076 15 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/01/25 12:00:24.688
  STEP: patching /approval @ 09/01/25 12:00:24.697
  STEP: updating /approval @ 09/01/25 12:00:24.712
  STEP: getting /status @ 09/01/25 12:00:24.725
  STEP: patching /status @ 09/01/25 12:00:24.733
  STEP: updating /status @ 09/01/25 12:00:24.752
  STEP: deleting @ 09/01/25 12:00:24.769
  STEP: deleting a collection @ 09/01/25 12:00:24.803
  I0901 12:00:24.848933 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3901" for this suite. @ 09/01/25 12:00:24.86
â€¢ [1.257 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/01/25 12:00:24.883
  I0901 12:00:24.883786 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:00:24.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:24.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:24.934
  STEP: Create a pod @ 09/01/25 12:00:24.942
  E0901 12:00:25.344056      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:26.344747      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/01/25 12:00:26.985
  I0901 12:00:27.017488 15 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0901 12:00:27.018063 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8891" for this suite. @ 09/01/25 12:00:27.036
â€¢ [2.170 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/01/25 12:00:27.053
  I0901 12:00:27.053975 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:00:27.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:27.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:27.115
  STEP: Creating the pod @ 09/01/25 12:00:27.125
  E0901 12:00:27.345806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:28.346851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:29.347772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:29.805161 15 pod_client.go:173] Successfully updated pod "labelsupdatef358ded0-14b2-44b7-b9c7-658c9e4bdc05"
  E0901 12:00:30.348049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:31.348743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:31.855032 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7723" for this suite. @ 09/01/25 12:00:31.877
â€¢ [4.853 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/01/25 12:00:31.909
  I0901 12:00:31.910205 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:00:31.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:31.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:31.968
  STEP: creating a Deployment @ 09/01/25 12:00:31.996
  I0901 12:00:31.996264 15 deployment.go:507] Creating simple deployment test-deployment-9gnq7
  I0901 12:00:32.044703 15 deployment.go:223] deployment "test-deployment-9gnq7" doesn't have the required revision set
  E0901 12:00:32.349303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:33.349879      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/01/25 12:00:34.089
  I0901 12:00:34.103273 15 deployment.go:532] Deployment test-deployment-9gnq7 has Conditions: [{Available True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9gnq7-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/01/25 12:00:34.103
  I0901 12:00:34.137135 15 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 0, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 0, 32, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-9gnq7-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/01/25 12:00:34.137
  I0901 12:00:34.144301 15 deployment.go:579] Observed &Deployment event: ADDED
  I0901 12:00:34.144457 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9gnq7-6fb4c74686"}
  I0901 12:00:34.144773 15 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 12:00:34.145009 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9gnq7-6fb4c74686"}
  I0901 12:00:34.145085 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:00:34.146584 15 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 12:00:34.147711 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:00:34.148148 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9gnq7-6fb4c74686" is progressing.}
  I0901 12:00:34.149739 15 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 12:00:34.150270 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:00:34.150535 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9gnq7-6fb4c74686" has successfully progressed.}
  I0901 12:00:34.151138 15 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 12:00:34.151236 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:00:34.151279 15 deployment.go:575] Observed Deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9gnq7-6fb4c74686" has successfully progressed.}
  I0901 12:00:34.151379 15 deployment.go:572] Found Deployment test-deployment-9gnq7 in namespace deployment-6936 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:00:34.151564 15 deployment.go:583] Deployment test-deployment-9gnq7 has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 12:00:34.151
  I0901 12:00:34.151671 15 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:00:34.175186 15 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/01/25 12:00:34.175
  I0901 12:00:34.184167 15 deployment.go:616] Observed &Deployment event: ADDED
  I0901 12:00:34.184358 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9gnq7-6fb4c74686"}
  I0901 12:00:34.184898 15 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 12:00:34.188977 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9gnq7-6fb4c74686"}
  I0901 12:00:34.189071 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:00:34.190852 15 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 12:00:34.191717 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 12:00:34.191857 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:32 +0000 UTC 2025-09-01 12:00:32 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9gnq7-6fb4c74686" is progressing.}
  I0901 12:00:34.193228 15 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 12:00:34.194197 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:00:34.194284 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9gnq7-6fb4c74686" has successfully progressed.}
  I0901 12:00:34.195284 15 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 12:00:34.195889 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 12:00:34.196212 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 12:00:33 +0000 UTC 2025-09-01 12:00:32 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9gnq7-6fb4c74686" has successfully progressed.}
  I0901 12:00:34.196253 15 deployment.go:612] Observed deployment test-deployment-9gnq7 in namespace deployment-6936 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:00:34.197231 15 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 12:00:34.197541 15 deployment.go:609] Found deployment test-deployment-9gnq7 in namespace deployment-6936 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0901 12:00:34.197747 15 deployment.go:620] Deployment test-deployment-9gnq7 has a patched status
  I0901 12:00:34.208717 15 deployment.go:633] Deployment "test-deployment-9gnq7":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-9gnq7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6936",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6fef76a-9f08-4cf0-aa35-46a924c5ff25",
      ResourceVersion: (string) (len=5) "21121",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-9gnq7-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:00:34.235195 15 deployment.go:40] New ReplicaSet "test-deployment-9gnq7-6fb4c74686" of Deployment "test-deployment-9gnq7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-9gnq7-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6936",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfcfb2e8-eb50-421a-bbeb-f90d192f887a",
      ResourceVersion: (string) (len=5) "21110",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-9gnq7",
          UID: (types.UID) (len=36) "a6fef76a-9f08-4cf0-aa35-46a924c5ff25",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 36 66  |k:{\"uid\":\"a6f|
              00000120  65 66 37 36 61 2d 39 66  30 38 2d 34 63 66 30 2d  |ef76a-9f08-4cf0-|
              00000130  61 61 33 35 2d 34 36 61  39 32 34 63 35 66 66 32  |aa35-46a924c5ff2|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:00:34.252129 15 deployment.go:68] Pod "test-deployment-9gnq7-6fb4c74686-s4xmd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-9gnq7-6fb4c74686-s4xmd",
      GenerateName: (string) (len=33) "test-deployment-9gnq7-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-6936",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32169870-f4bc-4551-a9c6-2289fd98bc1a",
      ResourceVersion: (string) (len=5) "21109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-9gnq7-6fb4c74686",
          UID: (types.UID) (len=36) "dfcfb2e8-eb50-421a-bbeb-f90d192f887a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 66 63 66 62 32 65  38 2d 65 62 35 30 2d 34  |"dfcfb2e8-eb50-4|
              000000a0  32 31 61 2d 62 62 65 62  2d 66 39 30 64 31 39 32  |21a-bbeb-f90d192|
              000000b0  66 38 38 37 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |f887a\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  34 35 5c 22 7d 22 3a 7b  |.233.65.45\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6rk9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6rk9b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892324832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=12) "10.233.65.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892324832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892324833,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3bf9b4c8b6b62792d939aa3c852f2a93b644b3f4db79eb703395715a4ca85bc7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6rk9b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:00:34.264381 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6936" for this suite. @ 09/01/25 12:00:34.277
â€¢ [2.386 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/01/25 12:00:34.294
  I0901 12:00:34.294578 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:00:34.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:34.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:34.331
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:00:34.339
  E0901 12:00:34.349981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:35.351087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:36.350724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:37.351656      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:38.351598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:00:38.393
  I0901 12:00:38.403679 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-a4d18666-a40d-4398-9828-5770563e355c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:00:38.425
  I0901 12:00:38.468225 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1856" for this suite. @ 09/01/25 12:00:38.484
â€¢ [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 09/01/25 12:00:38.504
  I0901 12:00:38.504751 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:00:38.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:38.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:38.545
  STEP: creating the pod @ 09/01/25 12:00:38.553
  I0901 12:00:38.554613 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 create -f -'
  I0901 12:00:38.928640 15 builder.go:146] stderr: ""
  I0901 12:00:38.928774 15 builder.go:147] stdout: "pod/pause created\n"
  E0901 12:00:39.352637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:40.352790      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/01/25 12:00:40.955
  I0901 12:00:40.955867 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 label pods pause testing-label=testing-label-value'
  I0901 12:00:41.180665 15 builder.go:146] stderr: ""
  I0901 12:00:41.180738 15 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/01/25 12:00:41.18
  I0901 12:00:41.181285 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 get pod pause -L testing-label'
  E0901 12:00:41.353246      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:41.358521 15 builder.go:146] stderr: ""
  I0901 12:00:41.358585 15 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/01/25 12:00:41.358
  I0901 12:00:41.358909 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 label pods pause testing-label-'
  I0901 12:00:41.578642 15 builder.go:146] stderr: ""
  I0901 12:00:41.578718 15 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/01/25 12:00:41.578
  I0901 12:00:41.579587 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 get pod pause -L testing-label'
  I0901 12:00:41.759929 15 builder.go:146] stderr: ""
  I0901 12:00:41.760064 15 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/01/25 12:00:41.76
  I0901 12:00:41.760940 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 delete --grace-period=0 --force -f -'
  I0901 12:00:41.949918 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:00:41.950100 15 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0901 12:00:41.951762 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 get rc,svc -l name=pause --no-headers'
  I0901 12:00:42.158403 15 builder.go:146] stderr: "No resources found in kubectl-2262 namespace.\n"
  I0901 12:00:42.158583 15 builder.go:147] stdout: ""
  I0901 12:00:42.159232 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2262 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 12:00:42.347243 15 builder.go:146] stderr: ""
  I0901 12:00:42.347357 15 builder.go:147] stdout: ""
  I0901 12:00:42.347834 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:00:42.353687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-2262" for this suite. @ 09/01/25 12:00:42.359
â€¢ [3.875 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/01/25 12:00:42.38
  I0901 12:00:42.380147 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:00:42.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:42.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:42.422
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6229 @ 09/01/25 12:00:42.43
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 12:00:42.454
  STEP: creating service externalsvc in namespace services-6229 @ 09/01/25 12:00:42.455
  STEP: creating replication controller externalsvc in namespace services-6229 @ 09/01/25 12:00:42.482
  I0901 12:00:42.495136      15 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6229, replica count: 2
  E0901 12:00:43.354887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:44.354828      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:45.355704      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:45.550108      15 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/01/25 12:00:45.561
  I0901 12:00:45.610672 15 resource.go:361] Creating new exec pod
  E0901 12:00:46.356104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:47.357376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:47.665463 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6229 exec execpod24fkw -- /bin/sh -x -c nslookup clusterip-service.services-6229.svc.cluster.local'
  I0901 12:00:48.168365 15 builder.go:146] stderr: "+ nslookup clusterip-service.services-6229.svc.cluster.local\n"
  I0901 12:00:48.168582 15 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-6229.svc.cluster.local\tcanonical name = externalsvc.services-6229.svc.cluster.local.\nName:\texternalsvc.services-6229.svc.cluster.local\nAddress: 10.233.59.127\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6229, will wait for the garbage collector to delete the pods @ 09/01/25 12:00:48.169
  I0901 12:00:48.251764 15 resources.go:139] Deleting ReplicationController externalsvc took: 21.245915ms
  I0901 12:00:48.353177 15 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.390309ms
  E0901 12:00:48.357475      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:49.358866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:50.359785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:00:51.193066 15 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0901 12:00:51.223872 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6229" for this suite. @ 09/01/25 12:00:51.237
â€¢ [8.872 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 09/01/25 12:00:51.253
  I0901 12:00:51.253947 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 12:00:51.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:00:51.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:00:51.289
  STEP: Creating a job @ 09/01/25 12:00:51.297
  STEP: Ensuring job reaches completions @ 09/01/25 12:00:51.309
  E0901 12:00:51.361069      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:52.361236      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:53.361774      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:54.362241      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:55.363284      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:56.362948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:57.363794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:58.365819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:00:59.365561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:00.366242      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:01.366917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:01.397599 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9979" for this suite. @ 09/01/25 12:01:01.414
â€¢ [10.180 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/01/25 12:01:01.434
  I0901 12:01:01.435042 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:01:01.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:01:01.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:01:01.479
  STEP: Creating pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949 @ 09/01/25 12:01:01.487
  E0901 12:01:02.367689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:03.368593      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:01:03.538
  I0901 12:01:03.555361 15 container_probe.go:1749] Initial restart count of pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd is 0
  I0901 12:01:03.568652 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:04.369148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:05.369718      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:05.581504 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:06.369768      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:07.370730      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:07.590660 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:08.370701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:09.371141      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:09.606284 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:10.371623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:11.371755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:11.615977 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:12.371783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:13.372159      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:13.630605 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:14.372877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:15.373175      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:15.645381 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:16.373681      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:17.374089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:17.659172 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:18.373593      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:19.374162      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:19.670634 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:20.374981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:21.375773      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:21.685771 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:22.376523      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:23.376626      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:23.705763 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:24.376856      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:25.377483      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:25.722989 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:26.378725      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:27.378939      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:27.738491 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:28.379469      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:29.380103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:29.751829 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:30.380212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:31.380492      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:31.763458 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:32.380848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:33.381602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:33.781644 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:34.381830      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:35.383313      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:35.793874 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:36.383184      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:37.384009      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:37.808596 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:38.384709      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:39.385749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:39.821382 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:40.385925      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:41.385817      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:41.837584 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:42.386292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:43.388840      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:43.849206 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:44.387522      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:45.388603      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:45.860896 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:46.388395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:47.394395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:47.872859 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:48.389266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:49.390502      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:49.884922 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:50.390533      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:51.390777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:51.904374 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:52.391298      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:53.392598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:53.921719 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:54.393047      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:55.394080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:55.932209 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:56.395271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:57.396246      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:57.947358 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:01:58.396859      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:01:59.396821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:01:59.958584 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:00.398152      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:01.398875      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:01.970895 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:02.399849      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:03.400624      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:03.981797 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:04.402109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:05.401992      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:05.994510 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:06.402651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:07.402787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:08.011937 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:08.403502      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:09.404170      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:10.031703 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:10.405477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:11.405806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:12.043501 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:12.406720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:13.407140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:14.057742 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:14.407289      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:15.408177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:16.075271 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:16.409254      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:17.409463      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:18.091733 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:18.410714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:19.409910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:20.104516 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:20.411347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:21.413154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:22.119528 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:22.414688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:23.414178      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:24.132070 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:24.415247      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:25.415895      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:26.148688 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:26.416362      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:27.416921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:28.160711 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:28.417595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:29.417357      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:30.174479 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:30.417951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:31.418654      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:32.185010 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:32.419785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:33.420883      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:34.200185 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:34.421727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:35.421985      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:36.213143 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:36.422529      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:37.422860      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:38.227369 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:38.423941      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:39.424079      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:40.239724 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:40.425388      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:41.425097      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:42.254469 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:42.425626      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:43.425655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:44.270275 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:44.426993      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:45.427507      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:46.284997 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:46.428266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:47.428690      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:48.297198 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:48.429933      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:49.430305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:50.310653 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:50.431071      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:51.430963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:52.324340 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:52.431193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:53.431733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:54.336676 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:54.432862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:55.433915      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:56.350638 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:56.434681      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:57.435202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:02:58.366020 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:02:58.435707      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:02:59.435708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:00.379616 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:00.436728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:01.437715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:02.393673 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:02.437819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:03.438563      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:04.410357 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:04.439331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:05.439910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:06.424391 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:06.440623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:07.441111      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:08.440519 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:08.440899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:09.441180      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:10.441218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:10.456139 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:11.441787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:12.442755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:12.469032 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:13.442755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:14.443023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:14.483300 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:15.444226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:16.444846      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:16.496597 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:17.445293      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:18.445810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:18.511829 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:19.446045      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:20.446221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:20.526375 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:21.447118      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:22.447827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:22.541140 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:23.448726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:24.449653      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:24.556709 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:25.450566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:26.451024      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:26.570022 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:27.452191      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:28.451570      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:28.585236 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:29.451802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:30.452631      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:30.602809 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:31.453076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:32.453748      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:32.617294 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:33.454657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:34.454848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:34.629831 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:35.455010      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:36.455873      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:36.641130 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:37.456524      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:38.456736      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:38.653345 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:39.457088      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:40.457837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:40.663677 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:41.459184      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:42.458921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:42.675335 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:43.459677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:44.460145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:44.687991 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:45.460846      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:46.461810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:46.699644 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:47.461596      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:48.462981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:48.713830 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:49.462904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:50.463616      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:50.725702 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:51.463795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:52.464523      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:52.747951 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:53.464824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:54.465384      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:54.759926 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:55.465491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:56.466359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:56.775481 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:57.467050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:03:58.467887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:03:58.788197 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:03:59.468625      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:00.469395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:00.802035 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:01.469831      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:02.470886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:02.818548 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:03.471244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:04.472031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:04.832960 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:05.472847      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:06.473483      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:06.851566 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:07.473397      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:08.473827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:08.866056 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:09.474622      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:10.475109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:10.881108 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:11.475594      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:12.475715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:12.893074 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:13.475858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:14.476606      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:14.912218 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:15.476677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:16.477084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:16.928678 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:17.478595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:18.479057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:18.947063 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:19.479745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:20.480283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:20.959682 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:21.480649      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:22.480857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:22.978709 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:23.481983      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:24.482159      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:24.994615 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:25.483239      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:26.483461      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:27.011943 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:27.484244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:28.484927      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:29.024269 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:29.485527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:30.485671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:31.041047 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:31.485816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:32.486054      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:33.053777 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:33.486852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:34.487190      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:35.070884 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:35.487214      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:36.487753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:37.087970 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:37.489848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:38.490823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:39.102673 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:39.490953      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:40.491566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:41.117975 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:41.491677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:42.492228      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:43.137007 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:43.492749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:44.493373      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:45.155840 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:45.493980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:46.495019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:47.173641 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:47.501384      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:48.498793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:49.187614 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:49.499281      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:50.500162      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:51.209382 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:51.500825      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:52.505658      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:53.250687 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:53.501813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:54.502347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:55.266998 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:55.503021      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:56.503395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:57.282220 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:57.504442      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:04:58.504995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:04:59.295711 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:04:59.505519      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:00.506742      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:01.310918 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:05:01.507147      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:02.507392      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:03.323770 15 container_probe.go:1759] Get pod test-webserver-a474e7c9-de88-4c24-a281-9db082e9e3cd in namespace container-probe-7949
  E0901 12:05:03.508096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:04.509131      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/01/25 12:05:05.325
  I0901 12:05:05.374304 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7949" for this suite. @ 09/01/25 12:05:05.401
â€¢ [243.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/01/25 12:05:05.423
  I0901 12:05:05.423794 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename controllerrevisions @ 09/01/25 12:05:05.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:05.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:05.467
  E0901 12:05:05.509033      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating DaemonSet "e2e-clg4t-daemon-set" @ 09/01/25 12:05:05.528
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:05:05.541
  I0901 12:05:05.620303 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-clg4t-daemon-set: 0
  I0901 12:05:05.620512 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:05:06.509663      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:06.626198 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-clg4t-daemon-set: 0
  I0901 12:05:06.626767 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:05:07.510266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:07.605617 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-clg4t-daemon-set: 0
  I0901 12:05:07.605700 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:05:08.510498      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:08.570086 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-clg4t-daemon-set: 2
  I0901 12:05:08.570157 15 fixtures.go:131] Node aeshuj4hoh7a-2 is running 0 daemon pod, expected 1
  E0901 12:05:09.510637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:09.565065 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-clg4t-daemon-set: 3
  I0901 12:05:09.565171 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-clg4t-daemon-set
  STEP: Confirm DaemonSet "e2e-clg4t-daemon-set" successfully created with "daemonset-name=e2e-clg4t-daemon-set" label @ 09/01/25 12:05:09.577
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-clg4t-daemon-set" @ 09/01/25 12:05:09.596
  I0901 12:05:09.607566 15 controller_revision.go:162] Located ControllerRevision: "e2e-clg4t-daemon-set-85b46ddcb4"
  STEP: Patching ControllerRevision "e2e-clg4t-daemon-set-85b46ddcb4" @ 09/01/25 12:05:09.614
  I0901 12:05:09.629056 15 controller_revision.go:173] e2e-clg4t-daemon-set-85b46ddcb4 has been patched
  STEP: Create a new ControllerRevision @ 09/01/25 12:05:09.629
  I0901 12:05:09.643483 15 controller_revision.go:191] Created ControllerRevision: e2e-clg4t-daemon-set-685c5c6d74
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 12:05:09.643
  I0901 12:05:09.643609 15 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:05:09.652640 15 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-clg4t-daemon-set-85b46ddcb4" @ 09/01/25 12:05:09.652
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 12:05:09.665
  I0901 12:05:09.665987 15 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:05:09.675051 15 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-clg4t-daemon-set-685c5c6d74" @ 09/01/25 12:05:09.682
  I0901 12:05:09.711515 15 controller_revision.go:220] e2e-clg4t-daemon-set-685c5c6d74 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/01/25 12:05:09.711
  W0901 12:05:09.726354      15 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 12:05:09.726
  I0901 12:05:09.726678 15 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0901 12:05:10.510976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:10.726835 15 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:05:10.738134 15 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-clg4t-daemon-set-685c5c6d74=updated" @ 09/01/25 12:05:10.738
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 12:05:10.771
  I0901 12:05:10.771892 15 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 12:05:10.839180 15 controller_revision.go:265] Found 1 ControllerRevisions
  I0901 12:05:10.849604 15 controller_revision.go:246] ControllerRevision "e2e-clg4t-daemon-set-79985d8cbc" has revision 3
  STEP: Deleting DaemonSet "e2e-clg4t-daemon-set" @ 09/01/25 12:05:10.862
  STEP: deleting DaemonSet.extensions e2e-clg4t-daemon-set in namespace controllerrevisions-3425, will wait for the garbage collector to delete the pods @ 09/01/25 12:05:10.862
  I0901 12:05:10.941383 15 resources.go:139] Deleting DaemonSet.extensions e2e-clg4t-daemon-set took: 20.163326ms
  I0901 12:05:11.043967 15 resources.go:163] Terminating DaemonSet.extensions e2e-clg4t-daemon-set pods took: 102.562862ms
  E0901 12:05:11.511490      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:12.454295 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-clg4t-daemon-set: 0
  I0901 12:05:12.454475 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-clg4t-daemon-set
  I0901 12:05:12.463507 15 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22149"},"items":null}

  I0901 12:05:12.471667 15 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22149"},"items":null}

  I0901 12:05:12.508552 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:05:12.511780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "controllerrevisions-3425" for this suite. @ 09/01/25 12:05:12.518
â€¢ [7.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/01/25 12:05:12.533
  I0901 12:05:12.534038 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:05:12.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:12.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:12.569
  STEP: Setting up server cert @ 09/01/25 12:05:12.617
  E0901 12:05:13.512662      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:05:13.596
  STEP: Deploying the webhook pod @ 09/01/25 12:05:13.614
  STEP: Wait for the deployment to be ready @ 09/01/25 12:05:13.647
  I0901 12:05:13.677647 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:05:14.513010      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:15.513186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:15.737046 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 5, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 5, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:05:16.513283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:17.513992      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:05:17.75
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:05:17.777
  E0901 12:05:18.514181      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:18.777621 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 12:05:18.805
  I0901 12:05:18.927893 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9991" for this suite. @ 09/01/25 12:05:18.938
  STEP: Destroying namespace "webhook-markers-5399" for this suite. @ 09/01/25 12:05:18.959
â€¢ [6.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/01/25 12:05:18.981
  I0901 12:05:18.981571 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:05:18.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:19.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:19.028
  STEP: Creating a pod to test substitution in container's command @ 09/01/25 12:05:19.035
  E0901 12:05:19.514780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:20.515373      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:21.515381      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:22.515774      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:05:23.094
  I0901 12:05:23.107111 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod var-expansion-f6333a58-86ca-4cca-bed4-11fb0d16aac8 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:05:23.167
  I0901 12:05:23.220089 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3897" for this suite. @ 09/01/25 12:05:23.236
â€¢ [4.282 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/01/25 12:05:23.263
  I0901 12:05:23.263727 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:05:23.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:23.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:23.311
  STEP: Creating configMap with name configmap-test-volume-map-f7e5bf4c-6466-4bec-b0be-c13cffbe3526 @ 09/01/25 12:05:23.322
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:05:23.338
  E0901 12:05:23.516493      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:24.516863      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:25.518390      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:26.518350      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:05:27.405
  I0901 12:05:27.425944 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-5e90b647-e35b-4707-a0b7-04567a00ec3e container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:05:27.457
  E0901 12:05:27.519240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:27.524235 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1132" for this suite. @ 09/01/25 12:05:27.538
â€¢ [4.328 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/01/25 12:05:27.592
  I0901 12:05:27.592719 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename events @ 09/01/25 12:05:27.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:27.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:27.629
  STEP: creating a test event @ 09/01/25 12:05:27.635
  STEP: listing events in all namespaces @ 09/01/25 12:05:27.655
  STEP: listing events in test namespace @ 09/01/25 12:05:27.669
  STEP: listing events with field selection filtering on source @ 09/01/25 12:05:27.676
  STEP: listing events with field selection filtering on reportingController @ 09/01/25 12:05:27.688
  STEP: getting the test event @ 09/01/25 12:05:27.696
  STEP: patching the test event @ 09/01/25 12:05:27.702
  STEP: getting the test event @ 09/01/25 12:05:27.728
  STEP: updating the test event @ 09/01/25 12:05:27.735
  STEP: getting the test event @ 09/01/25 12:05:27.748
  STEP: deleting the test event @ 09/01/25 12:05:27.756
  STEP: listing events in all namespaces @ 09/01/25 12:05:27.779
  STEP: listing events in test namespace @ 09/01/25 12:05:27.787
  I0901 12:05:27.797385 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2739" for this suite. @ 09/01/25 12:05:27.809
â€¢ [0.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/01/25 12:05:27.824
  I0901 12:05:27.824952 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 12:05:27.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:27.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:27.86
  STEP: Setting up server cert @ 09/01/25 12:05:27.867
  E0901 12:05:28.519630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:05:28.957
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:05:28.975
  STEP: Wait for the deployment to be ready @ 09/01/25 12:05:29.001
  I0901 12:05:29.026179 15 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0901 12:05:29.519816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:30.521071      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:05:31.068
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:05:31.099
  E0901 12:05:31.521864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:32.100154 15 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 12:05:32.127738 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:05:32.523803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:33.523687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:34.524060      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/01/25 12:05:34.957
  STEP: Create a v2 custom resource @ 09/01/25 12:05:35.004
  STEP: List CRs in v1 @ 09/01/25 12:05:35.292
  STEP: List CRs in v2 @ 09/01/25 12:05:35.301
  E0901 12:05:35.525129      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:36.055804 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1454" for this suite. @ 09/01/25 12:05:36.097
â€¢ [8.310 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/01/25 12:05:36.134
  I0901 12:05:36.134844 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:05:36.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:36.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:36.174
  I0901 12:05:36.295030 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7948" for this suite. @ 09/01/25 12:05:36.306
â€¢ [0.189 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/01/25 12:05:36.329
  I0901 12:05:36.329989 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:05:36.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:36.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:36.369
  STEP: Creating configMap with name configmap-test-volume-76d55706-d153-414e-a82e-5f382e72d372 @ 09/01/25 12:05:36.376
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:05:36.388
  E0901 12:05:36.526980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:37.527372      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:38.527576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:39.527722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:05:40.455
  I0901 12:05:40.467396 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-41117f94-798c-4165-86a9-ccd8bfebc08c container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:05:40.501
  E0901 12:05:40.528782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:40.544599 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7666" for this suite. @ 09/01/25 12:05:40.566
â€¢ [4.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/01/25 12:05:40.6
  I0901 12:05:40.600461 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:05:40.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:40.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:40.656
  I0901 12:05:40.774450 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3881" for this suite. @ 09/01/25 12:05:40.79
â€¢ [0.213 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/01/25 12:05:40.814
  I0901 12:05:40.815883 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:05:40.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:40.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:40.862
  STEP: Setting up server cert @ 09/01/25 12:05:40.919
  E0901 12:05:41.528573      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:05:41.712
  STEP: Deploying the webhook pod @ 09/01/25 12:05:41.725
  STEP: Wait for the deployment to be ready @ 09/01/25 12:05:41.756
  I0901 12:05:41.776862 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:05:42.528617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:43.529491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:05:43.817
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:05:43.849
  E0901 12:05:44.529785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:05:44.851079 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 12:05:45.08
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:05:45.177
  STEP: Deleting the collection of validation webhooks @ 09/01/25 12:05:45.254
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:05:45.397
  I0901 12:05:45.525056 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:05:45.530237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6004" for this suite. @ 09/01/25 12:05:45.534
  STEP: Destroying namespace "webhook-markers-5712" for this suite. @ 09/01/25 12:05:45.552
â€¢ [4.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/01/25 12:05:45.573
  I0901 12:05:45.573831 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:05:45.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:05:45.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:05:45.613
  STEP: create the rc1 @ 09/01/25 12:05:45.636
  STEP: create the rc2 @ 09/01/25 12:05:45.649
  E0901 12:05:46.549347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:47.550765      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:48.565380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:49.566290      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:50.566581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/01/25 12:05:50.86
  E0901 12:05:51.994969      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:53.049619      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:54.066637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:55.072196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:56.088721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:57.226931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:58.116521      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:05:59.115826      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/01/25 12:06:00.114
  E0901 12:06:00.116037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 09/01/25 12:06:00.129
  E0901 12:06:01.117383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:02.117550      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:03.118311      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:04.119224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:05.120124      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:05.269957 15 garbage_collector.go:762] 86 pods remaining
  I0901 12:06:05.270050 15 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I0901 12:06:05.270147 15 garbage_collector.go:770] 
  E0901 12:06:06.121760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:07.121568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:08.122157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:09.122918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:10.123552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:10.170992 15 garbage_collector.go:762] 63 pods remaining
  I0901 12:06:10.171093 15 garbage_collector.go:769] 50 pods has nil DeletionTimestamp
  I0901 12:06:10.171119 15 garbage_collector.go:770] 
  E0901 12:06:11.123692      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:12.124742      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:13.124745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:14.125266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:15.125530      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 12:06:15.159
  I0901 12:06:15.426540 15 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:06:15.426718 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28d2h" in namespace "gc-2882"
  I0901 12:06:15.487130 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jbpb" in namespace "gc-2882"
  I0901 12:06:15.542002 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wvv4" in namespace "gc-2882"
  I0901 12:06:15.634962 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zv6j" in namespace "gc-2882"
  I0901 12:06:15.743250 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4289t" in namespace "gc-2882"
  I0901 12:06:15.775385 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46ctr" in namespace "gc-2882"
  I0901 12:06:15.798830 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4blld" in namespace "gc-2882"
  I0901 12:06:15.836980 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4cxvr" in namespace "gc-2882"
  I0901 12:06:15.889678 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4kc9w" in namespace "gc-2882"
  I0901 12:06:15.968864 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57hbw" in namespace "gc-2882"
  I0901 12:06:16.032699 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57vsg" in namespace "gc-2882"
  I0901 12:06:16.071055 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fhrt" in namespace "gc-2882"
  E0901 12:06:16.125981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:16.137051 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5flsc" in namespace "gc-2882"
  I0901 12:06:16.204705 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5flv4" in namespace "gc-2882"
  I0901 12:06:16.265743 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nrvc" in namespace "gc-2882"
  I0901 12:06:16.302100 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68j46" in namespace "gc-2882"
  I0901 12:06:16.389298 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6srn5" in namespace "gc-2882"
  I0901 12:06:16.521048 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-77z9m" in namespace "gc-2882"
  I0901 12:06:16.692183 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mxrx" in namespace "gc-2882"
  I0901 12:06:16.880123 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7t6tp" in namespace "gc-2882"
  I0901 12:06:17.010226 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-826jf" in namespace "gc-2882"
  I0901 12:06:17.123453 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84x2m" in namespace "gc-2882"
  E0901 12:06:17.126568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:17.234205 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-895z6" in namespace "gc-2882"
  I0901 12:06:17.405699 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8sdd6" in namespace "gc-2882"
  I0901 12:06:17.445042 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92g2f" in namespace "gc-2882"
  I0901 12:06:17.478015 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ggmx" in namespace "gc-2882"
  I0901 12:06:17.616788 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9vkg6" in namespace "gc-2882"
  I0901 12:06:17.790242 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b674c" in namespace "gc-2882"
  I0901 12:06:17.907055 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgcr9" in namespace "gc-2882"
  I0901 12:06:17.969449 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8twf" in namespace "gc-2882"
  I0901 12:06:18.032995 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjdbn" in namespace "gc-2882"
  I0901 12:06:18.104768 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ck74h" in namespace "gc-2882"
  E0901 12:06:18.127093      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:18.137906 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctrqm" in namespace "gc-2882"
  I0901 12:06:18.185387 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cxqc4" in namespace "gc-2882"
  I0901 12:06:18.248342 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxwps" in namespace "gc-2882"
  I0901 12:06:18.405650 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fbhc7" in namespace "gc-2882"
  I0901 12:06:18.475999 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ff98g" in namespace "gc-2882"
  I0901 12:06:18.807475 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwrdf" in namespace "gc-2882"
  I0901 12:06:18.884505 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fzjt4" in namespace "gc-2882"
  I0901 12:06:19.002129 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g962w" in namespace "gc-2882"
  I0901 12:06:19.123012 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggtm9" in namespace "gc-2882"
  E0901 12:06:19.127858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:19.183305 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gh7cg" in namespace "gc-2882"
  I0901 12:06:19.245023 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gk5qr" in namespace "gc-2882"
  I0901 12:06:19.353990 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gxpqj" in namespace "gc-2882"
  I0901 12:06:19.523016 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hhxff" in namespace "gc-2882"
  I0901 12:06:19.572853 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hktsr" in namespace "gc-2882"
  I0901 12:06:19.718233 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmrx4" in namespace "gc-2882"
  I0901 12:06:19.797727 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hnphl" in namespace "gc-2882"
  I0901 12:06:19.865117 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hqd9v" in namespace "gc-2882"
  I0901 12:06:19.902570 15 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxmw4" in namespace "gc-2882"
  I0901 12:06:20.007925 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2882" for this suite. @ 09/01/25 12:06:20.028
â€¢ [34.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/01/25 12:06:20.056
  I0901 12:06:20.057198 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:06:20.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:20.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:20.101
  E0901 12:06:20.142988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating configMap with name configmap-projected-all-test-volume-cf2d08af-38b9-42cb-94bc-0d9e4d49b9d3 @ 09/01/25 12:06:20.109
  STEP: Creating secret with name secret-projected-all-test-volume-3203925b-264d-4406-b20b-949d4c3252d1 @ 09/01/25 12:06:20.174
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/01/25 12:06:20.19
  W0901 12:06:20.244529      15 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0901 12:06:21.143823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:22.144081      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:23.145461      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:24.145396      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:25.145598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:26.145724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:27.145910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:28.146623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:29.146726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:30.147303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:31.148543      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:32.148623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:33.149449      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:34.149784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:35.150664      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:36.150392      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:37.179734      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:38.190908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:39.189700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:40.206747      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:41.206928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:42.207090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:43.207254      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:44.207813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:06:44.635
  I0901 12:06:44.656948 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod projected-volume-374fc543-f0d7-43b7-bbd0-ad2884e5d76d container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:06:44.674
  I0901 12:06:44.711466 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2416" for this suite. @ 09/01/25 12:06:44.722
â€¢ [24.684 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/01/25 12:06:44.742
  I0901 12:06:44.742121 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:06:44.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:44.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:44.794
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 12:06:44.803
  E0901 12:06:45.208125      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:46.208603      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:47.209196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:48.209353      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:06:48.869
  I0901 12:06:48.882273 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-7bd34cb3-df1b-4c04-9cfa-e4c2d2d4cdd5 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:06:48.919
  I0901 12:06:48.989080 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5147" for this suite. @ 09/01/25 12:06:49.003
â€¢ [4.280 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/01/25 12:06:49.025
  I0901 12:06:49.025289 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:06:49.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:49.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:49.062
  STEP: getting a starting resourceVersion @ 09/01/25 12:06:49.068
  STEP: starting a background goroutine to produce watch events @ 09/01/25 12:06:49.078
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/01/25 12:06:49.078
  E0901 12:06:49.209946      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:50.210858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:51.211832      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:51.866042 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2299" for this suite. @ 09/01/25 12:06:51.892
â€¢ [2.923 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 09/01/25 12:06:51.948
  I0901 12:06:51.948593 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:06:51.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:51.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:51.993
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 12:06:52
  I0901 12:06:52.001552 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-30 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0901 12:06:52.212008      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:52.319913 15 builder.go:146] stderr: ""
  I0901 12:06:52.319986 15 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 12:06:52.32
  I0901 12:06:52.337861 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-30 delete pods e2e-test-httpd-pod'
  E0901 12:06:53.212992      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:06:54.096179 15 builder.go:146] stderr: ""
  I0901 12:06:54.096248 15 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 12:06:54.096736 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-30" for this suite. @ 09/01/25 12:06:54.123
â€¢ [2.195 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 09/01/25 12:06:54.143
  I0901 12:06:54.143853 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:06:54.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:06:54.21
  E0901 12:06:54.213639      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:06:54.231
  STEP: Creating service test in namespace statefulset-9114 @ 09/01/25 12:06:54.304
  STEP: Creating statefulset ss in namespace statefulset-9114 @ 09/01/25 12:06:54.334
  I0901 12:06:54.450506 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0901 12:06:55.214929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:56.215066      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:57.215936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:58.216804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:06:59.217471      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:00.218477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:01.218867      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:02.220466      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:03.220708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:04.221760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:04.377859 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/01/25 12:07:04.412
  STEP: updating a scale subresource @ 09/01/25 12:07:04.427
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 12:07:04.448
  STEP: Patch a scale subresource @ 09/01/25 12:07:04.455
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 12:07:04.476
  I0901 12:07:04.487183 15 statefulset.go:138] Deleting all statefulset in ns statefulset-9114
  I0901 12:07:04.535618 15 rest.go:152] Scaling statefulset ss to 0
  E0901 12:07:05.221489      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:06.221650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:07.222274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:08.223202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:09.223490      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:10.223887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:11.223937      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:12.224301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:13.224645      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:14.225495      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:14.633680 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 12:07:14.642154 15 rest.go:90] Deleting statefulset ss
  I0901 12:07:14.682239 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9114" for this suite. @ 09/01/25 12:07:14.693
â€¢ [20.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/01/25 12:07:14.712
  I0901 12:07:14.712725 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename fake-node @ 09/01/25 12:07:14.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:07:14.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:07:14.753
  STEP: Create "e2e-fake-node-jt7dj" @ 09/01/25 12:07:14.774
  STEP: Getting "e2e-fake-node-jt7dj" @ 09/01/25 12:07:14.79
  STEP: Patching "e2e-fake-node-jt7dj" @ 09/01/25 12:07:14.809
  STEP: Listing nodes with LabelSelector "e2e-fake-node-jt7dj=patched" @ 09/01/25 12:07:14.826
  STEP: Updating "e2e-fake-node-jt7dj" @ 09/01/25 12:07:14.836
  STEP: Delete "e2e-fake-node-jt7dj" @ 09/01/25 12:07:14.851
  STEP: Confirm deletion of "e2e-fake-node-jt7dj" @ 09/01/25 12:07:14.864
  I0901 12:07:14.871282 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-6629" for this suite. @ 09/01/25 12:07:14.881
â€¢ [0.190 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/01/25 12:07:14.903
  I0901 12:07:14.903380 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:07:14.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:07:14.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:07:14.937
  STEP: Creating resourceQuota "e2e-rq-status-bvf76" @ 09/01/25 12:07:14.954
  I0901 12:07:14.973617 15 resource_quota.go:1102] Resource quota "e2e-rq-status-bvf76" reports spec: hard cpu limit of 500m
  I0901 12:07:14.973778 15 resource_quota.go:1104] Resource quota "e2e-rq-status-bvf76" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-bvf76" /status @ 09/01/25 12:07:14.973
  STEP: Confirm /status for "e2e-rq-status-bvf76" resourceQuota via watch @ 09/01/25 12:07:15.026
  I0901 12:07:15.030553 15 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-bvf76" in namespace "resourcequota-8842" with hard status: v1.ResourceList(nil)
  I0901 12:07:15.031000 15 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-bvf76" in namespace "resourcequota-8842" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 12:07:15.031071 15 resource_quota.go:1141] ResourceQuota "e2e-rq-status-bvf76" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/01/25 12:07:15.038
  I0901 12:07:15.055968 15 resource_quota.go:1152] Resource quota "e2e-rq-status-bvf76" reports spec: hard cpu limit of 1
  I0901 12:07:15.056086 15 resource_quota.go:1153] Resource quota "e2e-rq-status-bvf76" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-bvf76" /status @ 09/01/25 12:07:15.056
  STEP: Confirm /status for "e2e-rq-status-bvf76" resourceQuota via watch @ 09/01/25 12:07:15.069
  I0901 12:07:15.072223 15 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-bvf76" in namespace "resourcequota-8842" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 12:07:15.073092 15 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-bvf76" in namespace "resourcequota-8842" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0901 12:07:15.073174 15 resource_quota.go:1185] ResourceQuota "e2e-rq-status-bvf76" /status was patched
  STEP: Get "e2e-rq-status-bvf76" /status @ 09/01/25 12:07:15.073
  I0901 12:07:15.084058 15 resource_quota.go:1196] Resourcequota "e2e-rq-status-bvf76" reports status: hard cpu of 1
  I0901 12:07:15.084128 15 resource_quota.go:1198] Resourcequota "e2e-rq-status-bvf76" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-bvf76" /status before checking Spec is unchanged @ 09/01/25 12:07:15.089
  I0901 12:07:15.102294 15 resource_quota.go:1218] Resourcequota "e2e-rq-status-bvf76" reports status: hard cpu of 2
  I0901 12:07:15.102381 15 resource_quota.go:1220] Resourcequota "e2e-rq-status-bvf76" reports status: hard memory of 2Gi
  I0901 12:07:15.105246 15 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-bvf76" in namespace "resourcequota-8842" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0901 12:07:15.112570 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037751e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775278), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:15.226023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:16.226033      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:17.226490      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:18.226916      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:19.228360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:20.117926 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0006e9e30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0006e9e60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0006e9e90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:20.229614      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:21.229775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:22.230823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:23.230984      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:24.231231      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:25.119980 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:25.233110      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:26.232754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:27.233094      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:28.235650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:29.235944      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:30.117108 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:30.236538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:31.237171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:32.237124      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:33.237803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:34.238186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:35.119121 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba3c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:35.238977      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:36.239807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:37.239547      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:38.240002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:39.240753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:40.126593 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ba5d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:40.240939      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:41.241114      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:42.241552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:43.241626      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:44.241867      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:45.112762 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037757a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037757d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:45.242684      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:46.242928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:47.243769      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:48.244140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:49.244852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:50.119598 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775968), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037759b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:50.245827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:51.246217      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:52.246349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:53.246761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:54.247514      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:07:55.119639 15 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bvf76" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bvf76", GenerateName:"", Namespace:"resourcequota-8842", SelfLink:"", UID:"99d70977-c832-491b-a99f-21d0d40cfa5b", ResourceVersion:"24768", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 12, 7, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bvf76"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775b78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 12, 7, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003775bd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0901 12:07:55.247778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:56.248597      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:57.249166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:58.249859      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:07:59.250730      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:00.116824 15 resource_quota.go:1260] ResourceQuota "e2e-rq-status-bvf76" Spec was unchanged and /status reset
  I0901 12:08:00.117277 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8842" for this suite. @ 09/01/25 12:08:00.136
â€¢ [45.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/01/25 12:08:00.176
  I0901 12:08:00.176858 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:08:00.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:00.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:00.217
  STEP: creating the pod @ 09/01/25 12:08:00.223
  STEP: submitting the pod to kubernetes @ 09/01/25 12:08:00.224
  E0901 12:08:00.251142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:01.251393      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:02.251720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/01/25 12:08:02.293
  STEP: updating the pod @ 09/01/25 12:08:02.308
  I0901 12:08:02.846145 15 pod_client.go:173] Successfully updated pod "pod-update-379ea536-16ca-4c07-b70a-a884bd5a6a14"
  STEP: verifying the updated pod is in kubernetes @ 09/01/25 12:08:02.865
  I0901 12:08:02.878168 15 pods.go:391] Pod update OK
  I0901 12:08:02.879565 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2754" for this suite. @ 09/01/25 12:08:02.902
â€¢ [2.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/01/25 12:08:02.925
  I0901 12:08:02.925807 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:08:02.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:02.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:02.965
  STEP: Creating secret with name secret-test-map-07f3178a-e0a2-495a-a0eb-45e3b7b58d83 @ 09/01/25 12:08:02.973
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:08:02.989
  E0901 12:08:03.253008      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:04.253970      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:05.253843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:06.254309      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:08:07.05
  I0901 12:08:07.062936 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-1c52c4dd-156d-4163-b710-888f8afece2d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:08:07.086
  I0901 12:08:07.130248 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5796" for this suite. @ 09/01/25 12:08:07.141
â€¢ [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/01/25 12:08:07.16
  I0901 12:08:07.160503 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:08:07.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:07.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:07.196
  I0901 12:08:07.207862 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:08:07.254811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:08.255155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:09.255240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 12:08:09.926
  I0901 12:08:09.926990 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-275 --namespace=crd-publish-openapi-275 create -f -'
  I0901 12:08:10.210516 15 builder.go:146] stderr: ""
  I0901 12:08:10.210791 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2524-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 12:08:10.211472 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-275 --namespace=crd-publish-openapi-275 delete e2e-test-crd-publish-openapi-2524-crds test-cr'
  E0901 12:08:10.255997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:10.548461 15 builder.go:146] stderr: ""
  I0901 12:08:10.548578 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2524-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0901 12:08:10.548923 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-275 --namespace=crd-publish-openapi-275 apply -f -'
  I0901 12:08:10.762264 15 builder.go:146] stderr: ""
  I0901 12:08:10.762464 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2524-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 12:08:10.762975 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-275 --namespace=crd-publish-openapi-275 delete e2e-test-crd-publish-openapi-2524-crds test-cr'
  I0901 12:08:10.973164 15 builder.go:146] stderr: ""
  I0901 12:08:10.973250 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2524-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 12:08:10.973
  I0901 12:08:10.974298 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-275 explain e2e-test-crd-publish-openapi-2524-crds'
  I0901 12:08:11.142950 15 builder.go:146] stderr: ""
  I0901 12:08:11.143160 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2524-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0901 12:08:11.256474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:12.257259      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:13.257762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:13.686795 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-275" for this suite. @ 09/01/25 12:08:13.718
â€¢ [6.577 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 09/01/25 12:08:13.737
  I0901 12:08:13.737242 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:08:13.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:13.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:13.786
  STEP: fetching services @ 09/01/25 12:08:13.792
  I0901 12:08:13.800849 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-616" for this suite. @ 09/01/25 12:08:13.816
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/01/25 12:08:13.837
  I0901 12:08:13.837074 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:08:13.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:13.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:13.868
  I0901 12:08:13.874944 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:08:14.258796      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:15.259805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:16.260078      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0901 12:08:16.633692      15 warnings.go:70] unknown field "alpha"
  W0901 12:08:16.633762      15 warnings.go:70] unknown field "beta"
  W0901 12:08:16.633780      15 warnings.go:70] unknown field "delta"
  W0901 12:08:16.633797      15 warnings.go:70] unknown field "epsilon"
  W0901 12:08:16.633813      15 warnings.go:70] unknown field "gamma"
  E0901 12:08:17.260679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:17.294148 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4551" for this suite. @ 09/01/25 12:08:17.311
â€¢ [3.497 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/01/25 12:08:17.333
  I0901 12:08:17.333902 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:08:17.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:17.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:17.38
  STEP: creating service in namespace services-849 @ 09/01/25 12:08:17.388
  STEP: creating service affinity-clusterip-transition in namespace services-849 @ 09/01/25 12:08:17.389
  STEP: creating replication controller affinity-clusterip-transition in namespace services-849 @ 09/01/25 12:08:17.417
  I0901 12:08:17.431632      15 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-849, replica count: 3
  E0901 12:08:18.261816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:19.262349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:20.263369      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:20.483966      15 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 12:08:20.508781 15 resource.go:361] Creating new exec pod
  E0901 12:08:21.263964      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:22.265327      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:23.265700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:23.547645 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-849 exec execpod-affinitydn9zm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0901 12:08:23.950009 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.54.187) 80 port [tcp/http] succeeded!\n"
  I0901 12:08:23.950134 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:08:23.950758 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-849 exec execpod-affinitydn9zm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.187 80'
  I0901 12:08:24.237801 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.187 80\nConnection to 10.233.54.187 80 port [tcp/http] succeeded!\n"
  I0901 12:08:24.238056 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:08:24.265185 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-849 exec execpod-affinitydn9zm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.54.187:80/ ; done'
  E0901 12:08:24.267992      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:24.850452 15 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n"
  I0901 12:08:24.850544 15 builder.go:147] stdout: "\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-m8bsg\naffinity-clusterip-transition-v9hvj\naffinity-clusterip-transition-m8bsg\naffinity-clusterip-transition-m8bsg\naffinity-clusterip-transition-v9hvj\naffinity-clusterip-transition-m8bsg\naffinity-clusterip-transition-v9hvj\naffinity-clusterip-transition-m8bsg\naffinity-clusterip-transition-m8bsg\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-v9hvj\naffinity-clusterip-transition-wxzkv"
  I0901 12:08:24.850806 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:24.850847 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:24.850866 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:24.850882 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:24.850900 15 service.go:242] Received response from host: affinity-clusterip-transition-m8bsg
  I0901 12:08:24.850916 15 service.go:242] Received response from host: affinity-clusterip-transition-v9hvj
  I0901 12:08:24.850931 15 service.go:242] Received response from host: affinity-clusterip-transition-m8bsg
  I0901 12:08:24.850946 15 service.go:242] Received response from host: affinity-clusterip-transition-m8bsg
  I0901 12:08:24.850969 15 service.go:242] Received response from host: affinity-clusterip-transition-v9hvj
  I0901 12:08:24.850985 15 service.go:242] Received response from host: affinity-clusterip-transition-m8bsg
  I0901 12:08:24.851000 15 service.go:242] Received response from host: affinity-clusterip-transition-v9hvj
  I0901 12:08:24.851016 15 service.go:242] Received response from host: affinity-clusterip-transition-m8bsg
  I0901 12:08:24.851031 15 service.go:242] Received response from host: affinity-clusterip-transition-m8bsg
  I0901 12:08:24.851045 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:24.851060 15 service.go:242] Received response from host: affinity-clusterip-transition-v9hvj
  I0901 12:08:24.851075 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:24.873357 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-849 exec execpod-affinitydn9zm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.54.187:80/ ; done'
  E0901 12:08:25.266852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:25.431904 15 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.187:80/\n"
  I0901 12:08:25.431996 15 builder.go:147] stdout: "\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv\naffinity-clusterip-transition-wxzkv"
  I0901 12:08:25.432026 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432067 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432104 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432167 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432198 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432231 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432255 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432279 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432310 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432365 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432403 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432443 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432461 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432477 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432496 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432513 15 service.go:242] Received response from host: affinity-clusterip-transition-wxzkv
  I0901 12:08:25.432665 15 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-849, will wait for the garbage collector to delete the pods @ 09/01/25 12:08:25.466
  I0901 12:08:25.544149 15 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 16.245006ms
  I0901 12:08:25.644899 15 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.732135ms
  E0901 12:08:26.266789      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:27.267872      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:28.268076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:28.908779 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-849" for this suite. @ 09/01/25 12:08:28.923
â€¢ [11.602 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 09/01/25 12:08:28.937
  I0901 12:08:28.937581 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:08:28.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:28.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:28.972
  STEP: creating Agnhost RC @ 09/01/25 12:08:28.978
  I0901 12:08:28.978758 15 kubectl.go:1544] namespace kubectl-9058
  I0901 12:08:28.979449 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-9058 create -f -'
  E0901 12:08:29.269185      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:29.315291 15 builder.go:146] stderr: ""
  I0901 12:08:29.315453 15 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 12:08:29.315
  E0901 12:08:30.269506      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:30.327671 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:30.327739 15 framework.go:733] Found 0 / 1
  E0901 12:08:31.270311      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:31.330630 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:31.330731 15 framework.go:733] Found 1 / 1
  I0901 12:08:31.330802 15 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 12:08:31.339267 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:31.339990 15 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:08:31.340331 15 kubectl.go:1551] wait on agnhost-primary startup in kubectl-9058 
  I0901 12:08:31.340887 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-9058 logs agnhost-primary-wlhp9 agnhost-primary'
  I0901 12:08:31.557873 15 builder.go:146] stderr: ""
  I0901 12:08:31.557960 15 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/01/25 12:08:31.558
  I0901 12:08:31.558644 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-9058 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0901 12:08:31.792192 15 builder.go:146] stderr: ""
  I0901 12:08:31.792997 15 builder.go:147] stdout: "service/rm2 exposed\n"
  I0901 12:08:31.805802 15 utils.go:1203] Service rm2 in namespace kubectl-9058 found.
  E0901 12:08:32.271012      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:33.271628      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/01/25 12:08:33.829
  I0901 12:08:33.830307 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-9058 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0901 12:08:34.057741 15 builder.go:146] stderr: ""
  I0901 12:08:34.058075 15 builder.go:147] stdout: "service/rm3 exposed\n"
  I0901 12:08:34.072196 15 utils.go:1203] Service rm3 in namespace kubectl-9058 found.
  E0901 12:08:34.273249      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:35.273868      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:36.098293 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9058" for this suite. @ 09/01/25 12:08:36.113
â€¢ [7.202 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 09/01/25 12:08:36.139
  I0901 12:08:36.139178 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:08:36.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:36.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:36.186
  STEP: creating Agnhost RC @ 09/01/25 12:08:36.192
  I0901 12:08:36.193120 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-4552 create -f -'
  E0901 12:08:36.274073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:36.526103 15 builder.go:146] stderr: ""
  I0901 12:08:36.526181 15 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 12:08:36.526
  E0901 12:08:37.275244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:37.534827 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:37.534895 15 framework.go:733] Found 0 / 1
  E0901 12:08:38.276640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:38.540253 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:38.540385 15 framework.go:733] Found 1 / 1
  I0901 12:08:38.540483 15 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/01/25 12:08:38.54
  I0901 12:08:38.553679 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:38.553743 15 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:08:38.554153 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-4552 patch pod agnhost-primary-kfnzm -p {"metadata":{"annotations":{"x":"y"}}}'
  I0901 12:08:38.763202 15 builder.go:146] stderr: ""
  I0901 12:08:38.763271 15 builder.go:147] stdout: "pod/agnhost-primary-kfnzm patched\n"
  STEP: checking annotations @ 09/01/25 12:08:38.763
  I0901 12:08:38.770507 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:08:38.770577 15 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:08:38.771703 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4552" for this suite. @ 09/01/25 12:08:38.784
â€¢ [2.658 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/01/25 12:08:38.798
  I0901 12:08:38.798194 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:08:38.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:38.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:38.828
  STEP: Creating a pod to test substitution in volume subpath @ 09/01/25 12:08:38.834
  E0901 12:08:39.276787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:40.277617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:41.277962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:42.278703      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:08:42.883
  I0901 12:08:42.889472 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod var-expansion-1d2ecb54-247a-4652-a0d6-1e8d9e4e546c container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:08:42.932
  I0901 12:08:42.962605 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6691" for this suite. @ 09/01/25 12:08:42.971
â€¢ [4.186 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/01/25 12:08:42.984
  I0901 12:08:42.984737 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:08:42.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:43.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:43.015
  I0901 12:08:43.097871 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3948" for this suite. @ 09/01/25 12:08:43.107
â€¢ [0.139 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/01/25 12:08:43.125
  I0901 12:08:43.125257 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 12:08:43.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:43.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:43.165
  STEP: Create VolumeAttachment "va-e2e-p4hgn" on node "aeshuj4hoh7a-3" @ 09/01/25 12:08:43.21
  STEP: Patch VolumeAttachment "va-e2e-p4hgn" on node "aeshuj4hoh7a-3" @ 09/01/25 12:08:43.223
  STEP: Reading "va-e2e-p4hgn" Status @ 09/01/25 12:08:43.233
  STEP: Patching "va-e2e-p4hgn" Status @ 09/01/25 12:08:43.243
  I0901 12:08:43.256610 15 volume_attachment.go:224] "va-e2e-p4hgn" Status.Attached: true
  STEP: Updating "va-e2e-p4hgn" Status @ 09/01/25 12:08:43.256
  I0901 12:08:43.272951 15 volume_attachment.go:240] "va-e2e-p4hgn" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-p4hgn" on node "aeshuj4hoh7a-3" @ 09/01/25 12:08:43.273
  E0901 12:08:43.278166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Confirm deletion of VolumeAttachment "va-e2e-p4hgn" on node "aeshuj4hoh7a-3" @ 09/01/25 12:08:43.284
  I0901 12:08:43.291167 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8488" for this suite. @ 09/01/25 12:08:43.31
â€¢ [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 09/01/25 12:08:43.329
  I0901 12:08:43.329498 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:08:43.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:08:43.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:08:43.366
  STEP: Creating service test in namespace statefulset-9989 @ 09/01/25 12:08:43.37
  STEP: Creating stateful set ss in namespace statefulset-9989 @ 09/01/25 12:08:43.388
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9989 @ 09/01/25 12:08:43.405
  I0901 12:08:43.416391 15 wait.go:40] Found 0 stateful pods, waiting for 1
  E0901 12:08:44.279398      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:45.279093      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:46.279769      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:47.279585      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:48.280610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:49.281195      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:50.281634      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:51.282391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:52.283066      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:53.283581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:08:53.422329 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/01/25 12:08:53.422
  I0901 12:08:53.434231 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:08:53.760269 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:08:53.760381 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:08:53.760457 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:08:53.789927 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0901 12:08:54.284307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:55.284891      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:56.287289      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:57.286573      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:58.287076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:08:59.287332      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:00.287795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:01.287981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:02.288327      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:03.288640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:03.786313 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:03.786539 15 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:09:03.852872 15 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0901 12:09:03.853257 15 resource.go:175] ss-0  aeshuj4hoh7a-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:43 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:43 +0000 UTC  }]
  I0901 12:09:03.853478 15 resource.go:175] ss-2                  Pending         []
  I0901 12:09:03.853887 15 resource.go:178] 
  I0901 12:09:03.853920 15 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  E0901 12:09:04.289037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:04.864747 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.97822735s
  E0901 12:09:05.289476      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:05.883520 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.9679263s
  E0901 12:09:06.289953      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:06.902872 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.949069356s
  E0901 12:09:07.290763      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:07.919393 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.929327667s
  E0901 12:09:08.291778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:08.933483 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.913282942s
  E0901 12:09:09.292619      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:09.946682 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.8993401s
  E0901 12:09:10.292837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:10.960781 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.886004078s
  E0901 12:09:11.293189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:11.978704 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.871585271s
  E0901 12:09:12.293841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:12.994051 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 854.003527ms
  E0901 12:09:13.294762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9989 @ 09/01/25 12:09:13.994
  I0901 12:09:14.011518 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:09:14.296082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:14.359391 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:09:14.359761 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:09:14.359983 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:09:14.360293 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:09:14.700524 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 12:09:14.700657 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:09:14.700705 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:09:14.700974 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:09:15.019921 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 12:09:15.020071 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:09:15.020112 15 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 12:09:15.036397 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:09:15.036559 15 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:09:15.036596 15 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/01/25 12:09:15.036
  I0901 12:09:15.051641 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 12:09:15.295949      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:15.407472 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:09:15.408153 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:09:15.408524 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:09:15.409039 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:09:15.717319 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:09:15.717527 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:09:15.717573 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:09:15.718022 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-9989 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:09:16.043652 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:09:16.043753 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:09:16.043789 15 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 12:09:16.043829 15 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 12:09:16.057769 15 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0901 12:09:16.296255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:17.296804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:18.297869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:19.298042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:20.298397      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:21.298751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:22.299947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:23.300713      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:24.300807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:25.301520      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:26.068856 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:26.069176 15 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:26.069223 15 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 12:09:26.140028 15 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0901 12:09:26.140467 15 resource.go:175] ss-0  aeshuj4hoh7a-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:43 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:43 +0000 UTC  }]
  I0901 12:09:26.140540 15 resource.go:175] ss-1  aeshuj4hoh7a-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC  }]
  I0901 12:09:26.140596 15 resource.go:175] ss-2  aeshuj4hoh7a-1  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC  }]
  I0901 12:09:26.140618 15 resource.go:178] 
  I0901 12:09:26.140641 15 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0901 12:09:26.302848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:27.163979 15 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0901 12:09:27.164981 15 resource.go:175] ss-0  aeshuj4hoh7a-3  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:43 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:15 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:08:43 +0000 UTC  }]
  I0901 12:09:27.165052 15 resource.go:175] ss-2  aeshuj4hoh7a-1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:16 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:16 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 12:09:03 +0000 UTC  }]
  I0901 12:09:27.165076 15 resource.go:178] 
  I0901 12:09:27.165101 15 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 2
  E0901 12:09:27.303264      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:28.179059 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.938997928s
  E0901 12:09:28.303546      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:29.191068 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.924891885s
  E0901 12:09:29.303767      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:30.205291 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.91354004s
  E0901 12:09:30.303935      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:31.221563 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.899081183s
  E0901 12:09:31.305791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:32.235962 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.883107057s
  E0901 12:09:32.305697      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:33.249805 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.867950051s
  E0901 12:09:33.306299      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:34.263809 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.854605935s
  E0901 12:09:34.307097      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:35.277950 15 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 840.606363ms
  E0901 12:09:35.307702      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9989 @ 09/01/25 12:09:36.278
  I0901 12:09:36.292668 15 rest.go:152] Scaling statefulset ss to 0
  E0901 12:09:36.308079      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:09:36.314239 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 12:09:36.323841 15 statefulset.go:138] Deleting all statefulset in ns statefulset-9989
  I0901 12:09:36.336519 15 rest.go:152] Scaling statefulset ss to 0
  I0901 12:09:36.359112 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 12:09:36.369867 15 rest.go:90] Deleting statefulset ss
  I0901 12:09:36.413310 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9989" for this suite. @ 09/01/25 12:09:36.424
â€¢ [53.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/01/25 12:09:36.447
  I0901 12:09:36.447856 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename csi-storageclass @ 09/01/25 12:09:36.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:36.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:36.483
  STEP: Creating a StorageClass @ 09/01/25 12:09:36.488
  STEP: Get StorageClass "e2e-69jhs" @ 09/01/25 12:09:36.5
  STEP: Patching the StorageClass "e2e-69jhs" @ 09/01/25 12:09:36.506
  STEP: Delete StorageClass "e2e-69jhs" @ 09/01/25 12:09:36.519
  STEP: Confirm deletion of StorageClass "e2e-69jhs" @ 09/01/25 12:09:36.535
  STEP: Create a replacement StorageClass @ 09/01/25 12:09:36.541
  STEP: Updating StorageClass "e2e-v2-kvc57" @ 09/01/25 12:09:36.549
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-kvc57=updated" @ 09/01/25 12:09:36.565
  STEP: Deleting StorageClass "e2e-v2-kvc57" via DeleteCollection @ 09/01/25 12:09:36.572
  STEP: Confirm deletion of StorageClass "e2e-v2-kvc57" @ 09/01/25 12:09:36.589
  I0901 12:09:36.595242 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1074" for this suite. @ 09/01/25 12:09:36.606
â€¢ [0.173 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/01/25 12:09:36.62
  I0901 12:09:36.620802 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:09:36.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:09:36.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:09:36.652
  STEP: Creating a ReplaceConcurrent cronjob @ 09/01/25 12:09:36.658
  STEP: Ensuring a job is scheduled @ 09/01/25 12:09:36.667
  E0901 12:09:37.309027      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:38.308849      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:39.309003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:40.309606      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:41.310933      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:42.311124      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:43.312331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:44.313024      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:45.314302      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:46.314296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:47.315570      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:48.315898      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:49.316629      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:50.316960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:51.317728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:52.317858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:53.318339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:54.318714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:55.319799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:56.321759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:57.320115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:58.320897      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:09:59.320808      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:00.321145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/01/25 12:10:00.681
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 12:10:00.69
  STEP: Ensuring the job is replaced with a new one @ 09/01/25 12:10:00.702
  E0901 12:10:01.321870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:02.321762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:03.321934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:04.323698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:05.323276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:06.326447      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:07.324206      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:08.324954      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:09.326498      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:10.326490      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:11.327018      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:12.327166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:13.328134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:14.328817      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:15.329227      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:16.330078      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:17.330726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:18.331709      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:19.332315      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:20.332821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:21.333084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:22.334263      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:23.335273      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:24.336176      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:25.336296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:26.337014      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:27.337851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:28.338823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:29.339211      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:30.339946      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:31.341152      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:32.341912      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:33.342626      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:34.343014      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:35.343855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:36.344142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:37.344488      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:38.344736      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:39.346050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:40.345484      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:41.346558      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:42.346334      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:43.346778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:44.347701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:45.348746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:46.349317      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:47.349210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:48.349911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:49.350258      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:50.350473      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:51.351350      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:52.351638      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:53.352565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:54.352796      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:55.353494      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:56.357644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:57.357951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:58.358581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:10:59.359604      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:00.359722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/01/25 12:11:00.716
  I0901 12:11:00.733897 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3770" for this suite. @ 09/01/25 12:11:00.807
â€¢ [84.221 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/01/25 12:11:00.845
  I0901 12:11:00.845244 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:11:00.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:00.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:00.944
  E0901 12:11:01.361980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:02.362653      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:03.363618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:04.363564      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:05.364799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:06.365396      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:07.366634      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:08.367667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:09.368706      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:10.369724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:11.370061      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:12.370342      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:13.370812      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:14.372670      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:15.373454      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:16.373120      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:17.373139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:18.373752      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:19.374235      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:20.374277      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:21.375083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:22.375128      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:11:23.154320 15 container_probe.go:92] Container started at 2025-09-01 12:11:01 +0000 UTC, pod became ready at 2025-09-01 12:11:22 +0000 UTC
  I0901 12:11:23.156303 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6300" for this suite. @ 09/01/25 12:11:23.176
â€¢ [22.354 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/01/25 12:11:23.199
  I0901 12:11:23.199490 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:11:23.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:23.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:23.249
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 12:11:23.256
  E0901 12:11:23.375276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:24.375830      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:25.376487      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:26.377223      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:11:27.321
  I0901 12:11:27.333281 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-341a201c-edc5-4cdd-adc8-7b7210224768 container test-container: <nil>
  E0901 12:11:27.377742      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/01/25 12:11:27.401
  I0901 12:11:27.481826 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4112" for this suite. @ 09/01/25 12:11:27.493
â€¢ [4.314 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/01/25 12:11:27.513
  I0901 12:11:27.513963 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:11:27.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:27.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:27.553
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/01/25 12:11:27.56
  I0901 12:11:27.562445 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:11:28.379945      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:29.388617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:11:30.099709 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:11:30.389552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:31.390477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:32.391989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:33.392190      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:34.392902      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:35.393224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:36.394073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:37.394976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:38.395641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:39.396484      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:11:39.580074 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7446" for this suite. @ 09/01/25 12:11:39.605
â€¢ [12.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/01/25 12:11:39.62
  I0901 12:11:39.620497 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:11:39.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:39.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:39.658
  STEP: Creating secret with name secret-test-bc267ef8-d859-4271-bc95-482dcdc0a4bf @ 09/01/25 12:11:39.666
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:11:39.678
  E0901 12:11:40.396624      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:41.396922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:42.398212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:43.398629      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:11:43.736
  I0901 12:11:43.749694 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-77577573-5e1e-40f6-985d-cd4a80a58e30 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:11:43.81
  I0901 12:11:43.864942 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3010" for this suite. @ 09/01/25 12:11:43.878
â€¢ [4.279 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/01/25 12:11:43.9
  I0901 12:11:43.901155 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:11:43.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:43.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:43.947
  STEP: Creating a pod to test override arguments @ 09/01/25 12:11:43.956
  E0901 12:11:44.398790      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:45.398717      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:46.399067      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:47.399780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:11:48.024
  I0901 12:11:48.037758 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod client-containers-cff6a29e-e079-431f-b175-6f0aff0fcb03 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:11:48.061
  I0901 12:11:48.105613 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-26" for this suite. @ 09/01/25 12:11:48.119
â€¢ [4.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/01/25 12:11:48.148
  I0901 12:11:48.148064 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:11:48.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:48.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:48.196
  STEP: Setting up server cert @ 09/01/25 12:11:48.256
  E0901 12:11:48.400659      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:49.401242      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:11:49.458
  STEP: Deploying the webhook pod @ 09/01/25 12:11:49.474
  STEP: Wait for the deployment to be ready @ 09/01/25 12:11:49.511
  I0901 12:11:49.528623 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:11:50.401879      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:51.402580      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:11:51.56
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:11:51.616
  E0901 12:11:52.403114      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:11:52.617741 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 12:11:52.767
  STEP: Creating a configMap that should be mutated @ 09/01/25 12:11:52.807
  STEP: Deleting the collection of validation webhooks @ 09/01/25 12:11:52.895
  STEP: Creating a configMap that should not be mutated @ 09/01/25 12:11:53.034
  I0901 12:11:53.138016 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8990" for this suite. @ 09/01/25 12:11:53.149
  STEP: Destroying namespace "webhook-markers-7396" for this suite. @ 09/01/25 12:11:53.197
â€¢ [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/01/25 12:11:53.223
  I0901 12:11:53.223232 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:11:53.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:53.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:53.253
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:11:53.259
  E0901 12:11:53.403307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:54.403678      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:55.404497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:56.404958      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:11:57.314
  I0901 12:11:57.328641 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downward-api-0e6239ed-a91e-44d8-b050-3c5e706db8ba container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:11:57.358
  E0901 12:11:57.405746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:11:57.417847 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2440" for this suite. @ 09/01/25 12:11:57.434
â€¢ [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/01/25 12:11:57.465
  I0901 12:11:57.465059 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:11:57.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:11:57.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:11:57.506
  I0901 12:11:57.515506 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:11:58.405857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:11:59.407068      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:00.407815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:00.991074 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5365" for this suite. @ 09/01/25 12:12:01.006
â€¢ [3.563 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/01/25 12:12:01.028
  I0901 12:12:01.029121 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:12:01.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:01.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:01.077
  STEP: Setting up server cert @ 09/01/25 12:12:01.135
  E0901 12:12:01.408242      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:12:02.046
  STEP: Deploying the webhook pod @ 09/01/25 12:12:02.062
  STEP: Wait for the deployment to be ready @ 09/01/25 12:12:02.09
  I0901 12:12:02.128655 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:12:02.408541      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:03.408756      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:12:04.169
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:12:04.204
  E0901 12:12:04.409680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:05.205078 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 12:12:05.252
  STEP: create the configmap with a random name @ 09/01/25 12:12:05.319
  STEP: verify the configmap is mutated @ 09/01/25 12:12:05.36
  STEP: create the configmap with 'skip-me' name @ 09/01/25 12:12:05.36
  E0901 12:12:05.409650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:05.493818 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2218" for this suite. @ 09/01/25 12:12:05.505
  STEP: Destroying namespace "webhook-markers-1766" for this suite. @ 09/01/25 12:12:05.519
â€¢ [4.505 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/01/25 12:12:05.533
  I0901 12:12:05.533896 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:12:05.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:05.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:05.574
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:12:05.579
  E0901 12:12:06.409913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:07.409829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:08.410749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:09.411319      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:12:09.626
  I0901 12:12:09.638190 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-ed3b11c9-3804-4d88-bfe6-f203ad0b36ac container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:12:09.662
  I0901 12:12:09.721699 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6785" for this suite. @ 09/01/25 12:12:09.738
â€¢ [4.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:12:09.755
  I0901 12:12:09.756936 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:12:09.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:09.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:09.805
  STEP: Creating secret with name secret-test-ef77d703-c3a8-40d1-9093-e85218eada79 @ 09/01/25 12:12:09.812
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:12:09.824
  E0901 12:12:10.412028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:11.412291      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:12.412480      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:13.412813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:12:13.875
  I0901 12:12:13.885768 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-e826513c-7067-4c96-adc6-9d7d36bb1089 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:12:13.917
  I0901 12:12:13.972677 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8311" for this suite. @ 09/01/25 12:12:13.985
â€¢ [4.272 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/01/25 12:12:14.027
  I0901 12:12:14.027668 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:12:14.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:14.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:14.065
  I0901 12:12:14.072894 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: creating the pod @ 09/01/25 12:12:14.076
  STEP: submitting the pod to kubernetes @ 09/01/25 12:12:14.076
  E0901 12:12:14.413963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:15.414595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:16.258578 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7164" for this suite. @ 09/01/25 12:12:16.286
â€¢ [2.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/01/25 12:12:16.311
  I0901 12:12:16.311954 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:12:16.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:16.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:16.36
  STEP: apply creating a deployment @ 09/01/25 12:12:16.371
  I0901 12:12:16.414112 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:12:16.415686      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-1228" for this suite. @ 09/01/25 12:12:16.429
â€¢ [0.137 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/01/25 12:12:16.448
  I0901 12:12:16.448641 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:12:16.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:16.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:16.49
  STEP: creating the pod @ 09/01/25 12:12:16.496
  STEP: setting up watch @ 09/01/25 12:12:16.496
  STEP: submitting the pod to kubernetes @ 09/01/25 12:12:16.607
  STEP: verifying the pod is in kubernetes @ 09/01/25 12:12:16.637
  STEP: verifying pod creation was observed @ 09/01/25 12:12:16.65
  E0901 12:12:17.416594      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:18.416740      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/01/25 12:12:18.695
  STEP: verifying pod deletion was observed @ 09/01/25 12:12:18.718
  E0901 12:12:19.416799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:20.420220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:20.513462 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9699" for this suite. @ 09/01/25 12:12:20.529
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/01/25 12:12:20.551
  I0901 12:12:20.551611 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:12:20.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:20.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:20.599
  STEP: Discovering how many secrets are in namespace by default @ 09/01/25 12:12:20.607
  E0901 12:12:21.417892      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:22.418261      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:23.418802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:24.419072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:25.419599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/01/25 12:12:25.624
  E0901 12:12:26.419683      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:27.419727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:28.420487      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:29.421125      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:30.421904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 12:12:30.642
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:12:30.653
  E0901 12:12:31.421778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:32.422078      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/01/25 12:12:32.666
  STEP: Ensuring resource quota status captures secret creation @ 09/01/25 12:12:32.706
  E0901 12:12:33.422738      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:34.423482      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/01/25 12:12:34.716
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:12:34.732
  E0901 12:12:35.422999      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:36.424052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:36.744775 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4561" for this suite. @ 09/01/25 12:12:36.762
â€¢ [16.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/01/25 12:12:36.785
  I0901 12:12:36.785601 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:12:36.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:36.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:36.835
  STEP: Setting up server cert @ 09/01/25 12:12:36.908
  E0901 12:12:37.424296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:12:37.87
  STEP: Deploying the webhook pod @ 09/01/25 12:12:37.885
  STEP: Wait for the deployment to be ready @ 09/01/25 12:12:37.94
  I0901 12:12:37.983896 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:12:38.425562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:39.425833      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:12:40.024
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:12:40.059
  E0901 12:12:40.427144      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:41.059575 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 12:12:41.085719 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:12:41.428214      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4253-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 12:12:41.617
  STEP: Creating a custom resource while v1 is storage version @ 09/01/25 12:12:41.676
  E0901 12:12:42.429633      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:43.429595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/01/25 12:12:43.918
  STEP: Patching the custom resource while v2 is storage version @ 09/01/25 12:12:43.965
  E0901 12:12:44.429930      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:44.855296 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7508" for this suite. @ 09/01/25 12:12:44.865
  STEP: Destroying namespace "webhook-markers-3701" for this suite. @ 09/01/25 12:12:44.88
â€¢ [8.113 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/01/25 12:12:44.898
  I0901 12:12:44.898193 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:12:44.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:44.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:44.932
  STEP: creating a Deployment @ 09/01/25 12:12:44.948
  STEP: waiting for Deployment to be created @ 09/01/25 12:12:44.958
  STEP: waiting for all Replicas to be Ready @ 09/01/25 12:12:44.963
  I0901 12:12:44.970629 15 deployment.go:246] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:44.970683 15 deployment.go:248] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:44.993809 15 deployment.go:246] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:44.993880 15 deployment.go:248] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:45.061231 15 deployment.go:246] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:45.061364 15 deployment.go:248] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:45.086351 15 deployment.go:246] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 12:12:45.086490 15 deployment.go:248] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0901 12:12:45.431165      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:46.431923      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:46.657782 15 deployment.go:246] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 12:12:46.657867 15 deployment.go:248] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 12:12:46.886707 15 deployment.go:248] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/01/25 12:12:46.886
  I0901 12:12:46.917932 15 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/01/25 12:12:46.921
  I0901 12:12:46.929995 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930171 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930364 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930536 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930827 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930866 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930896 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930947 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 0
  I0901 12:12:46.930987 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:46.931012 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:46.931166 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:46.931311 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:46.931930 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:46.932246 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:46.952747 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:46.952812 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:47.009316 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:47.009432 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:47.038823 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:47.038903 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:47.064089 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:47.064157 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  E0901 12:12:47.432921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:48.433040      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:48.734186 15 deployment.go:309] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:48.734291 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:48.789932 15 deployment.go:311] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  STEP: listing Deployments @ 09/01/25 12:12:48.79
  I0901 12:12:48.799965 15 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/01/25 12:12:48.8
  I0901 12:12:48.844914 15 deployment.go:360] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/01/25 12:12:48.844
  I0901 12:12:48.858103 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:12:48.892615 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:12:48.968055 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:12:49.014637 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:12:49.035599 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0901 12:12:49.433134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:50.137245 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0901 12:12:50.433721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:50.737179 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:12:50.798818 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 12:12:50.888364 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0901 12:12:51.434012      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:51.953657 15 deployment.go:389] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/01/25 12:12:52.035
  STEP: fetching the DeploymentStatus @ 09/01/25 12:12:52.058
  I0901 12:12:52.076612 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:52.077799 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:52.077836 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:52.078278 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:52.078310 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 1
  I0901 12:12:52.078332 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:52.079147 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 3
  I0901 12:12:52.080883 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:52.081497 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 2
  I0901 12:12:52.082275 15 deployment.go:449] observed Deployment test-deployment in namespace deployment-2555 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/01/25 12:12:52.082
  I0901 12:12:52.104530 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.105059 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.105141 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.105679 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.105724 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.105966 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.106534 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.106584 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.106610 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.107011 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.107054 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.107815 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.107857 15 deployment.go:475] observed event type MODIFIED
  I0901 12:12:52.136841 15 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0901 12:12:52.146272 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2555" for this suite. @ 09/01/25 12:12:52.157
â€¢ [7.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/01/25 12:12:52.184
  I0901 12:12:52.184449 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:12:52.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:12:52.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:12:52.232
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/01/25 12:12:52.242
  I0901 12:12:52.245195 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:12:52.435108      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:53.435278      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:54.435587      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:12:54.805057 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:12:55.436019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:56.448886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:57.449125      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:58.449301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:12:59.449735      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:00.451091      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:01.451622      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:02.452029      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:03.453257      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:03.940710 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2477" for this suite. @ 09/01/25 12:13:03.976
â€¢ [11.820 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/01/25 12:13:04.006
  I0901 12:13:04.006806 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:13:04.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:04.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:04.074
  STEP: Creating a pod to test substitution in container's args @ 09/01/25 12:13:04.08
  E0901 12:13:04.453171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:05.457892      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:06.455324      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:07.457805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:13:08.148
  I0901 12:13:08.161815 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod var-expansion-bcb1030d-7974-42c5-8049-ae65c17e6b07 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:13:08.222
  I0901 12:13:08.288618 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-379" for this suite. @ 09/01/25 12:13:08.3
â€¢ [4.310 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/01/25 12:13:08.325
  I0901 12:13:08.329034 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:13:08.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:08.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:08.38
  STEP: Creating projection with secret that has name projected-secret-test-be78fdaa-9eca-4a62-be7c-e1b6f0187f62 @ 09/01/25 12:13:08.385
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:13:08.401
  E0901 12:13:08.459672      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:09.457169      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:10.458194      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:11.458671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:12.459351      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:13:12.477
  I0901 12:13:12.488679 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-secrets-7aea0a69-87d6-493b-b961-8b3b44b8b619 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:13:12.513
  I0901 12:13:12.565489 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4060" for this suite. @ 09/01/25 12:13:12.583
â€¢ [4.279 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/01/25 12:13:12.606
  I0901 12:13:12.606532 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:13:12.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:12.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:12.647
  STEP: creating a Namespace @ 09/01/25 12:13:12.654
  STEP: patching the Namespace @ 09/01/25 12:13:12.677
  STEP: get the Namespace and ensuring it has the label @ 09/01/25 12:13:12.693
  I0901 12:13:12.699088 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5272" for this suite. @ 09/01/25 12:13:12.707
  STEP: Destroying namespace "nspatchtest-d415637d-3b1a-4771-b6d8-ce8a9d447252-7274" for this suite. @ 09/01/25 12:13:12.723
â€¢ [0.129 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/01/25 12:13:12.736
  I0901 12:13:12.736622 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:13:12.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:12.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:12.77
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:13:12.776
  E0901 12:13:13.460597      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:14.460090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:15.460564      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:16.460822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:13:16.832
  I0901 12:13:16.845616 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-63a46c46-0c2e-43c0-973f-98e224fb5748 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:13:16.872
  I0901 12:13:16.933704 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2268" for this suite. @ 09/01/25 12:13:16.95
â€¢ [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/01/25 12:13:16.971
  I0901 12:13:16.971244 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:13:16.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:17.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:17.009
  STEP: creating service in namespace services-1033 @ 09/01/25 12:13:17.015
  STEP: creating service affinity-nodeport in namespace services-1033 @ 09/01/25 12:13:17.015
  STEP: creating replication controller affinity-nodeport in namespace services-1033 @ 09/01/25 12:13:17.055
  I0901 12:13:17.075654      15 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1033, replica count: 3
  E0901 12:13:17.460810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:18.461701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:19.461728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:20.127872      15 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0901 12:13:20.461977      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:21.466862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:22.463166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:23.129272      15 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 12:13:23.166217 15 resource.go:361] Creating new exec pod
  E0901 12:13:23.463684      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:24.464683      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:25.465644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:26.231467 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-1033 exec execpod-affinityt82w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0901 12:13:26.466601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:26.638737 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.14.231) 80 port [tcp/http] succeeded!\n"
  I0901 12:13:26.639042 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:13:26.639533 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-1033 exec execpod-affinityt82w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.231 80'
  I0901 12:13:26.968689 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.231 80\nConnection to 10.233.14.231 80 port [tcp/http] succeeded!\n"
  I0901 12:13:26.968785 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:13:26.969592 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-1033 exec execpod-affinityt82w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.245 31902'
  I0901 12:13:27.292930 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.245 31902\nConnection to 192.168.121.245 31902 port [tcp/*] succeeded!\n"
  I0901 12:13:27.293025 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:13:27.293617 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-1033 exec execpod-affinityt82w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.194 31902'
  E0901 12:13:27.467026      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:27.589677 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.194 31902\nConnection to 192.168.121.194 31902 port [tcp/*] succeeded!\n"
  I0901 12:13:27.589768 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:13:27.590150 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-1033 exec execpod-affinityt82w9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.194:31902/ ; done'
  I0901 12:13:28.172984 15 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:31902/\n"
  I0901 12:13:28.173095 15 builder.go:147] stdout: "\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2\naffinity-nodeport-28ct2"
  I0901 12:13:28.173128 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173148 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173166 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173181 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173198 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173249 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173304 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173352 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173619 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173730 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173819 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173906 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173930 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.173996 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.174019 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.174103 15 service.go:242] Received response from host: affinity-nodeport-28ct2
  I0901 12:13:28.174613 15 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1033, will wait for the garbage collector to delete the pods @ 09/01/25 12:13:28.214
  I0901 12:13:28.297177 15 resources.go:139] Deleting ReplicationController affinity-nodeport took: 20.020904ms
  I0901 12:13:28.397621 15 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.422425ms
  E0901 12:13:28.467077      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:29.467682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:30.467685      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:31.467290      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:32.379839 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1033" for this suite. @ 09/01/25 12:13:32.389
â€¢ [15.432 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/01/25 12:13:32.403
  I0901 12:13:32.403281 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:13:32.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:32.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:32.439
  E0901 12:13:32.468341      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:33.469627      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:34.469803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:35.470179      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:36.470669      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:37.471267      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:38.471832      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:38.554771 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8586" for this suite. @ 09/01/25 12:13:38.574
â€¢ [6.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/01/25 12:13:38.6
  I0901 12:13:38.601083 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:13:38.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:38.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:38.648
  I0901 12:13:38.657294 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:13:39.472318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:40.472852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:41.473887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:42.474036      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:43.474090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:44.474853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:45.223578 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2303" for this suite. @ 09/01/25 12:13:45.238
â€¢ [6.665 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/01/25 12:13:45.269
  I0901 12:13:45.269597 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename init-container @ 09/01/25 12:13:45.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:45.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:45.325
  STEP: creating the pod @ 09/01/25 12:13:45.333
  I0901 12:13:45.333863 15 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0901 12:13:45.475743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:46.476477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:47.477335      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:48.478120      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:49.269867 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5183" for this suite. @ 09/01/25 12:13:49.286
â€¢ [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/01/25 12:13:49.311
  I0901 12:13:49.311094 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:13:49.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:49.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:49.347
  I0901 12:13:49.445566 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:13:49.479645      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "runtimeclass-4634" for this suite. @ 09/01/25 12:13:49.481
â€¢ [0.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 09/01/25 12:13:49.498
  I0901 12:13:49.498089 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:13:49.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:13:49.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:13:49.529
  STEP: Creating service test in namespace statefulset-8128 @ 09/01/25 12:13:49.534
  STEP: Creating statefulset ss in namespace statefulset-8128 @ 09/01/25 12:13:49.56
  I0901 12:13:49.587677 15 wait.go:40] Found 0 stateful pods, waiting for 1
  E0901 12:13:50.478911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:51.479847      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:52.481049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:53.481691      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:54.482241      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:55.483274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:56.483253      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:57.484326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:58.484638      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:13:59.484766      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:13:59.588121 15 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/01/25 12:13:59.604
  STEP: Getting /status @ 09/01/25 12:13:59.626
  I0901 12:13:59.638680 15 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/01/25 12:13:59.638
  I0901 12:13:59.659308 15 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/01/25 12:13:59.659
  I0901 12:13:59.663024 15 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0901 12:13:59.663611 15 statefulset.go:1114] Found Statefulset ss in namespace statefulset-8128 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:13:59.664051 15 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 12:13:59.664
  I0901 12:13:59.664172 15 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:13:59.675947 15 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/01/25 12:13:59.676
  I0901 12:13:59.679715 15 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0901 12:13:59.679882 15 statefulset.go:138] Deleting all statefulset in ns statefulset-8128
  I0901 12:13:59.685924 15 rest.go:152] Scaling statefulset ss to 0
  E0901 12:14:00.484827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:01.485301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:02.485964      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:03.486476      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:04.486834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:05.487777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:06.488881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:07.489017      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:08.489370      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:09.489893      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:09.720276 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 12:14:09.731486 15 rest.go:90] Deleting statefulset ss
  I0901 12:14:09.793762 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8128" for this suite. @ 09/01/25 12:14:09.808
â€¢ [20.327 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:14:09.825
  I0901 12:14:09.825233 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 12:14:09.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:09.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:09.863
  STEP: Create a pod template @ 09/01/25 12:14:09.876
  STEP: Replace a pod template @ 09/01/25 12:14:09.885
  I0901 12:14:09.901645 15 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0901 12:14:09.901858 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5427" for this suite. @ 09/01/25 12:14:09.909
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/01/25 12:14:09.926
  I0901 12:14:09.926346 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:14:09.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:09.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:09.958
  STEP: Creating secret with name secret-test-9f2391b9-c312-4c33-8413-7eb58913a3d1 @ 09/01/25 12:14:09.964
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:14:09.975
  E0901 12:14:10.489783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:11.490161      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:12.490130      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:13.491035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:14.03
  I0901 12:14:14.039306 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-975cccd9-b532-4156-ae30-2341c8532acd container secret-env-test: <nil>
  STEP: delete the pod @ 09/01/25 12:14:14.077
  I0901 12:14:14.135016 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3754" for this suite. @ 09/01/25 12:14:14.151
â€¢ [4.251 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/01/25 12:14:14.178
  I0901 12:14:14.178267 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:14:14.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:14.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:14.219
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:14:14.225
  E0901 12:14:14.491497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:15.491633      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:16.492139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:17.493496      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:18.289
  I0901 12:14:18.301046 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-a881e047-0ae0-4936-b6d2-830d4bf15835 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:14:18.327
  I0901 12:14:18.369506 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8505" for this suite. @ 09/01/25 12:14:18.383
â€¢ [4.222 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/01/25 12:14:18.401
  I0901 12:14:18.402643 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:14:18.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:18.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:18.436
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 12:14:18.442
  E0901 12:14:18.493033      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:19.493166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:20.493564      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:21.494760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:22.495048      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:22.508
  I0901 12:14:22.519704 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-26dc60fe-bf60-4fee-a323-9b74255cf5c3 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:14:22.543
  I0901 12:14:22.580461 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2497" for this suite. @ 09/01/25 12:14:22.589
â€¢ [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/01/25 12:14:22.608
  I0901 12:14:22.608914 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:14:22.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:22.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:22.644
  I0901 12:14:22.649628 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:14:23.496609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:24.498200      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0901 12:14:25.426645      15 warnings.go:70] unknown field "alpha"
  W0901 12:14:25.426708      15 warnings.go:70] unknown field "beta"
  W0901 12:14:25.426727      15 warnings.go:70] unknown field "delta"
  W0901 12:14:25.426743      15 warnings.go:70] unknown field "epsilon"
  W0901 12:14:25.426759      15 warnings.go:70] unknown field "gamma"
  E0901 12:14:25.498323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:26.062736 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4324" for this suite. @ 09/01/25 12:14:26.081
â€¢ [3.494 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/01/25 12:14:26.105
  I0901 12:14:26.106014 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:14:26.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:26.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:26.2
  STEP: Creating the pod @ 09/01/25 12:14:26.213
  E0901 12:14:26.499651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:27.499799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:28.500108      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:28.837550 15 pod_client.go:173] Successfully updated pod "labelsupdate2eaa0167-5481-45d1-b373-5e6a689d8eab"
  E0901 12:14:29.500527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:30.501326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:30.883793 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6559" for this suite. @ 09/01/25 12:14:30.902
â€¢ [4.822 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/01/25 12:14:30.929
  I0901 12:14:30.929497 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:14:30.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:30.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:30.978
  I0901 12:14:31.014686 15 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0901 12:14:31.501348      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:32.502115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:33.503006      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:34.504527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:35.504318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:36.041012 15 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:14:36.041
  STEP: Scaling up "test-rs" replicaset @ 09/01/25 12:14:36.041
  I0901 12:14:36.072865 15 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/01/25 12:14:36.072
  I0901 12:14:36.099672 15 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9138 with ReadyReplicas 1, AvailableReplicas 1
  I0901 12:14:36.130941 15 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9138 with ReadyReplicas 1, AvailableReplicas 1
  I0901 12:14:36.164889 15 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9138 with ReadyReplicas 1, AvailableReplicas 1
  I0901 12:14:36.211854 15 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9138 with ReadyReplicas 1, AvailableReplicas 1
  E0901 12:14:36.505582      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:37.505896      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:37.589486 15 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9138 with ReadyReplicas 2, AvailableReplicas 2
  E0901 12:14:38.506931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:39.507826      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:39.893747 15 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9138 with ReadyReplicas 3 found true
  I0901 12:14:39.894179 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9138" for this suite. @ 09/01/25 12:14:39.904
â€¢ [8.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/01/25 12:14:39.929
  I0901 12:14:39.929803 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:14:39.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:40.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:40.021
  STEP: Creating configMap with name configmap-test-volume-map-22d6c735-1fb2-4933-bd7a-ee0b376ee5b2 @ 09/01/25 12:14:40.03
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:14:40.043
  E0901 12:14:40.508928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:41.509270      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:42.510557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:43.510749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:14:44.096
  I0901 12:14:44.106997 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-549320e6-74c0-42fc-b51e-c30033ab2f92 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:14:44.132
  I0901 12:14:44.184311 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4570" for this suite. @ 09/01/25 12:14:44.2
â€¢ [4.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:14:44.227
  I0901 12:14:44.227651 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename subjectreview @ 09/01/25 12:14:44.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:44.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:44.279
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2707" @ 09/01/25 12:14:44.289
  I0901 12:14:44.302043 15 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-2707:e2e"
  I0901 12:14:44.302123 15 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2707"}
  I0901 12:14:44.302153 15 subjectreviews.go:71] saUID: "fb399a0d-43cf-4dd0-aece-581e2c9bea1c"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2707:e2e" @ 09/01/25 12:14:44.302
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2707:e2e" @ 09/01/25 12:14:44.306
  I0901 12:14:44.313085 15 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2707:e2e" api 'list' configmaps in "subjectreview-2707" namespace @ 09/01/25 12:14:44.313
  I0901 12:14:44.317657 15 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2707:e2e" @ 09/01/25 12:14:44.317
  I0901 12:14:44.323111 15 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0901 12:14:44.323188 15 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0901 12:14:44.323491 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2707" for this suite. @ 09/01/25 12:14:44.335
â€¢ [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/01/25 12:14:44.37
  I0901 12:14:44.370786 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:14:44.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:44.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:44.419
  E0901 12:14:44.511356      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:45.513293      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:46.504273 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:14:46.514253      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "containers-2244" for this suite. @ 09/01/25 12:14:46.525
â€¢ [2.179 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/01/25 12:14:46.55
  I0901 12:14:46.550159 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:14:46.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:46.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:46.605
  I0901 12:14:46.670164 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5210" for this suite. @ 09/01/25 12:14:46.687
â€¢ [0.152 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/01/25 12:14:46.702
  I0901 12:14:46.702865 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:14:46.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:46.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:46.737
  STEP: creating the pod @ 09/01/25 12:14:46.749
  STEP: submitting the pod to kubernetes @ 09/01/25 12:14:46.75
  W0901 12:14:46.770087      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0901 12:14:47.514816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:48.515870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:49.515987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:50.516537      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/01/25 12:14:50.824
  STEP: updating the pod @ 09/01/25 12:14:50.837
  I0901 12:14:51.376246 15 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-4e36da55-7650-47ac-9d92-a1c673f9ea1f"
  E0901 12:14:51.517150      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:52.518022      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:53.405739 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6506" for this suite. @ 09/01/25 12:14:53.415
â€¢ [6.728 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 09/01/25 12:14:53.43
  I0901 12:14:53.430484 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:14:53.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:53.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:53.47
  STEP: creating an Endpoint @ 09/01/25 12:14:53.484
  STEP: waiting for available Endpoint @ 09/01/25 12:14:53.493
  STEP: listing all Endpoints @ 09/01/25 12:14:53.497
  STEP: updating the Endpoint @ 09/01/25 12:14:53.503
  STEP: fetching the Endpoint @ 09/01/25 12:14:53.515
  E0901 12:14:53.518033      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the Endpoint @ 09/01/25 12:14:53.522
  STEP: fetching the Endpoint @ 09/01/25 12:14:53.545
  STEP: deleting the Endpoint by Collection @ 09/01/25 12:14:53.555
  STEP: waiting for Endpoint deletion @ 09/01/25 12:14:53.582
  STEP: fetching the Endpoint @ 09/01/25 12:14:53.588
  I0901 12:14:53.595984 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6506" for this suite. @ 09/01/25 12:14:53.606
â€¢ [0.191 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/01/25 12:14:53.621
  I0901 12:14:53.622000 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:14:53.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:14:53.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:14:53.653
  STEP: creating service endpoint-test2 in namespace services-8432 @ 09/01/25 12:14:53.658
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8432 to expose endpoints map[] @ 09/01/25 12:14:53.681
  I0901 12:14:53.699809 15 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0901 12:14:54.518680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:14:54.752311 15 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8432 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8432 @ 09/01/25 12:14:54.753
  E0901 12:14:55.518753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:56.519931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:57.520122      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:14:58.520637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8432 to expose endpoints map[pod1:[80]] @ 09/01/25 12:14:58.833
  I0901 12:14:58.876315 15 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8432 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/01/25 12:14:58.876
  I0901 12:14:58.876767 15 resource.go:361] Creating new exec pod
  E0901 12:14:59.521074      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:00.522041      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:01.523922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:01.933804 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8432 exec execpod85kft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 12:15:02.288356 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.25.126) 80 port [tcp/http] succeeded!\n"
  I0901 12:15:02.288590 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:15:02.288994 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8432 exec execpod85kft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.126 80'
  E0901 12:15:02.524450      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:02.580775 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.126 80\nConnection to 10.233.25.126 80 port [tcp/http] succeeded!\n"
  I0901 12:15:02.581024 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8432 @ 09/01/25 12:15:02.581
  E0901 12:15:03.523327      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:04.523722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:05.524826      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:06.525636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8432 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/01/25 12:15:06.655
  I0901 12:15:06.705795 15 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8432 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/01/25 12:15:06.705
  E0901 12:15:07.525922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:07.707462 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8432 exec execpod85kft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 12:15:08.052837 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.25.126) 80 port [tcp/http] succeeded!\n"
  I0901 12:15:08.053692 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:15:08.054551 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8432 exec execpod85kft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.126 80'
  I0901 12:15:08.345702 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.126 80\nConnection to 10.233.25.126 80 port [tcp/http] succeeded!\n"
  I0901 12:15:08.345800 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8432 @ 09/01/25 12:15:08.345
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8432 to expose endpoints map[pod2:[80]] @ 09/01/25 12:15:08.377
  E0901 12:15:08.526671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:09.476998 15 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8432 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/01/25 12:15:09.477
  E0901 12:15:09.526734      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:10.479017 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8432 exec execpod85kft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0901 12:15:10.527533      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:10.837247 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.25.126) 80 port [tcp/http] succeeded!\n"
  I0901 12:15:10.837333 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:15:10.837717 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8432 exec execpod85kft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.126 80'
  I0901 12:15:11.149546 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.126 80\nConnection to 10.233.25.126 80 port [tcp/http] succeeded!\n"
  I0901 12:15:11.149646 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8432 @ 09/01/25 12:15:11.149
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8432 to expose endpoints map[] @ 09/01/25 12:15:11.192
  E0901 12:15:11.527674      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:12.232352 15 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8432 exposes endpoints map[]
  I0901 12:15:12.291988 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8432" for this suite. @ 09/01/25 12:15:12.307
â€¢ [18.700 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/01/25 12:15:12.322
  I0901 12:15:12.322664 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:15:12.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:12.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:12.353
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 12:15:12.359
  E0901 12:15:12.528571      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:13.528821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:14.530238      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:15.530185      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:15:16.421
  I0901 12:15:16.436352 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-9b5845c3-be5c-4a25-9b21-09a0cbcc9241 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:15:16.471
  I0901 12:15:16.513237 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:15:16.530256      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-8011" for this suite. @ 09/01/25 12:15:16.53
â€¢ [4.228 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/01/25 12:15:16.55
  I0901 12:15:16.551036 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:15:16.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:16.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:16.588
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 12:15:16.596
  E0901 12:15:17.530780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:18.533497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:19.531726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:20.532243      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:15:20.658
  I0901 12:15:20.673630 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-f2adb0e8-58ce-427e-9570-486474376992 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:15:20.697
  I0901 12:15:20.740749 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6894" for this suite. @ 09/01/25 12:15:20.757
â€¢ [4.223 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/01/25 12:15:20.774
  I0901 12:15:20.774725 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:15:20.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:15:20.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:15:20.812
  STEP: Creating pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327 @ 09/01/25 12:15:20.818
  E0901 12:15:21.532656      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:22.532788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:15:22.872
  I0901 12:15:22.886064 15 container_probe.go:1749] Initial restart count of pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab is 0
  I0901 12:15:22.899244 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:23.533608      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:24.534567      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:24.910736 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:25.534816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:26.535017      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:26.926270 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:27.535998      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:28.536191      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:28.938028 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:29.536727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:30.537095      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:30.950955 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:31.537728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:32.538282      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:32.971219 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:33.539301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:34.540210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:34.986007 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:35.540340      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:36.540945      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:36.998197 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:37.542552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:38.542374      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:39.013490 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:39.542976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:40.544028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:41.028691 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:41.544491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:42.545117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:43.041105 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  I0901 12:15:43.041208 15 container_probe.go:1763] Restart count of pod container-probe-4327/liveness-d25c4adf-400f-408d-8d38-10ed4da062ab is now 1 (20.155041004s elapsed)
  E0901 12:15:43.545511      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:44.546109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:45.055087 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:45.546325      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:46.546763      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:47.070688 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:47.548155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:48.548582      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:49.082882 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:49.549738      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:50.550774      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:51.093310 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:51.550729      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:52.551543      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:53.106715 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:53.551771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:54.553597      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:55.119320 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:55.553736      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:56.554882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:57.131034 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:57.554560      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:15:58.554855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:15:59.144953 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:15:59.555279      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:00.555613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:01.163050 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:01.555779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:02.556606      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:03.175067 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  I0901 12:16:03.175171 15 container_probe.go:1763] Restart count of pod container-probe-4327/liveness-d25c4adf-400f-408d-8d38-10ed4da062ab is now 2 (40.289011145s elapsed)
  E0901 12:16:03.556717      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:04.557485      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:05.182383 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:05.557976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:06.558675      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:07.196727 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:07.558853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:08.559916      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:09.215648 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:09.561199      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:10.561326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:11.234982 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:11.561576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:12.562719      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:13.259856 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:13.563268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:14.564235      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:15.274995 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:15.565801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:16.567189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:17.291860 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:17.568196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:18.569116      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:19.308088 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:19.573288      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:20.573557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:21.321748 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:21.573801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:22.573988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:23.333707 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  I0901 12:16:23.333832 15 container_probe.go:1763] Restart count of pod container-probe-4327/liveness-d25c4adf-400f-408d-8d38-10ed4da062ab is now 3 (1m0.447669329s elapsed)
  E0901 12:16:23.574529      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:24.575555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:25.346104 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:25.576544      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:26.577091      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:27.359486 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:27.577620      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:28.577979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:29.371713 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:29.578129      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:30.579174      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:31.385773 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:31.581215      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:32.581081      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:33.399881 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:33.581928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:34.583030      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:35.412061 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:35.583076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:36.583345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:37.427868 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:37.584237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:38.584771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:39.484220 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:39.585345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:40.586158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:41.493379 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:41.586823      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:42.587360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:43.505175 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  I0901 12:16:43.505306 15 container_probe.go:1763] Restart count of pod container-probe-4327/liveness-d25c4adf-400f-408d-8d38-10ed4da062ab is now 4 (1m20.619146954s elapsed)
  E0901 12:16:43.589751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:44.589584      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:45.519799 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:45.590272      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:46.589981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:47.530683 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:47.590878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:48.591746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:49.541797 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:49.593073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:50.593927      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:51.594662      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:51.595160 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:52.595267      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:53.595667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:53.607306 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:54.596624      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:55.596170      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:55.616868 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:56.596860      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:57.598016      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:57.632287 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:16:58.599275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:16:59.599942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:16:59.645276 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:00.600539      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:01.601255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:01.659591 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:02.602662      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:03.602915      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:03.673747 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:04.603372      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:05.604008      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:05.688741 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:06.604337      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:07.604793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:07.702586 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:08.606727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:09.606050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:09.716116 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:10.606684      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:11.607579      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:11.729816 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:12.607874      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:13.608252      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:13.740841 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:14.608701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:15.609268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:15.755828 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:16.610218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:17.610562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:17.776016 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:18.611055      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:19.612335      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:19.794948 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:20.613357      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:21.613555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:21.809178 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:22.615339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:23.614676      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:23.821307 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:24.614997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:25.615744      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:25.835379 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:26.616311      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:27.617052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:27.849695 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:28.617749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:29.618080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:29.866569 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:30.619043      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:31.619201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:31.879668 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:32.619541      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:33.619725      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:33.894284 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:34.619857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:35.620367      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:35.905210 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:36.620771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:37.621618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:37.917159 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:38.621800      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:39.623381      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:39.932355 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:40.622651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:41.623000      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:41.947363 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:42.623948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:43.624633      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:43.959542 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:44.625092      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:45.626019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:45.972076 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:46.626992      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:47.627845      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:47.984547 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:48.628376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:49.628871      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:49.996334 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:50.629522      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:51.630669      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:52.009843 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  E0901 12:17:52.631169      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:53.631832      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:17:54.023856 15 container_probe.go:1759] Get pod liveness-d25c4adf-400f-408d-8d38-10ed4da062ab in namespace container-probe-4327
  I0901 12:17:54.024189 15 container_probe.go:1763] Restart count of pod container-probe-4327/liveness-d25c4adf-400f-408d-8d38-10ed4da062ab is now 5 (2m31.13802775s elapsed)
  STEP: deleting the pod @ 09/01/25 12:17:54.025
  I0901 12:17:54.076262 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4327" for this suite. @ 09/01/25 12:17:54.098
â€¢ [153.344 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/01/25 12:17:54.119
  I0901 12:17:54.119673 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:17:54.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:54.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:54.162
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:17:54.169
  E0901 12:17:54.632283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:55.632939      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:56.633147      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:57.633339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:17:58.231
  I0901 12:17:58.243640 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downward-api-62720018-ab43-4ddc-9991-b4c8408242b4 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:17:58.302
  I0901 12:17:58.339298 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5077" for this suite. @ 09/01/25 12:17:58.349
â€¢ [4.246 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/01/25 12:17:58.368
  I0901 12:17:58.368694 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:17:58.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:17:58.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:17:58.406
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:17:58.412
  E0901 12:17:58.634148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:17:59.634386      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:00.635655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:01.636833      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:18:02.483
  I0901 12:18:02.492039 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-4667e355-a7be-4d27-af71-ac5e483a9b03 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:18:02.515
  I0901 12:18:02.569480 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3796" for this suite. @ 09/01/25 12:18:02.581
â€¢ [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/01/25 12:18:02.599
  I0901 12:18:02.599061 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:18:02.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:02.631
  E0901 12:18:02.636382      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:02.639
  STEP: create the rc @ 09/01/25 12:18:02.648
  W0901 12:18:02.663074      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0901 12:18:03.636820      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:04.637551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:05.638270      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:06.638298      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:07.639863      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 12:18:07.68
  STEP: wait for all pods to be garbage collected @ 09/01/25 12:18:07.701
  E0901 12:18:08.640525      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:09.641320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:10.642105      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:11.643323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:12.643340      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 12:18:12.727
  I0901 12:18:13.079946 15 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:18:13.080393 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4695" for this suite. @ 09/01/25 12:18:13.098
â€¢ [10.520 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/01/25 12:18:13.124
  I0901 12:18:13.124502 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:18:13.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:13.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:13.187
  STEP: set up a multi version CRD @ 09/01/25 12:18:13.193
  I0901 12:18:13.194587 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:18:13.643804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:14.644693      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:15.645527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:16.646199      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:17.646883      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:18.647665      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/01/25 12:18:18.777
  STEP: check the new version name is served @ 09/01/25 12:18:18.809
  E0901 12:18:19.648534      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:20.648890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/01/25 12:18:21.135
  E0901 12:18:21.649388      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/01/25 12:18:22.194
  E0901 12:18:22.649660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:23.650697      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:24.652201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:25.652663      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:18:26.569512 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3841" for this suite. @ 09/01/25 12:18:26.598
â€¢ [13.498 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/01/25 12:18:26.623
  I0901 12:18:26.623135 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:18:26.626
  E0901 12:18:26.652939      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:18:26.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:18:26.665
  E0901 12:18:27.653915      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:28.654538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:29.654667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:30.654746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:31.655701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:32.656305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:33.657216      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:34.658052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:35.658052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:36.658326      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:37.658688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:38.658911      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:39.659028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:40.659649      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:41.660022      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:42.660264      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:43.660728      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:44.660931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:45.661148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:46.661704      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:47.662726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:48.663617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:49.664817      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:50.666171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:51.666561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:52.667205      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:53.668306      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:54.668834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:55.669813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:56.670775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:57.671080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:58.671212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:18:59.673306      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:00.672948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:01.674323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:02.675392      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:03.676667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:04.677672      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:05.677663      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:06.677918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:07.677934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:08.679261      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:09.680224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:10.680865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:11.681057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:12.681959      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:13.682275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:14.683210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:15.684030      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:16.685568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:17.686193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:18.686072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:19.686333      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:20.687075      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:21.687741      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:22.688026      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:23.690362      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:24.691361      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:25.691148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:26.691953      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:26.709841 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3299" for this suite. @ 09/01/25 12:19:26.723
â€¢ [60.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/01/25 12:19:26.754
  I0901 12:19:26.754347 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename aggregator @ 09/01/25 12:19:26.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:19:26.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:19:26.811
  I0901 12:19:26.819069 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Registering the sample API server. @ 09/01/25 12:19:26.822
  E0901 12:19:27.692724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:27.850127 15 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0901 12:19:27.918563 15 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0901 12:19:28.692687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:29.693139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:30.045629 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:30.694171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:31.694836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:32.058034 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:32.694988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:33.696141      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:34.059780 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:34.696807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:35.698002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:36.059273 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:36.699348      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:37.699825      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:38.057718 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:38.700203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:39.700824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:40.055143 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:40.701971      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:41.702838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:42.057494 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:42.703841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:43.704115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:44.057092 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:44.704959      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:45.705651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:46.059270 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:46.705768      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:47.706078      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:48.060090 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:48.706975      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:49.707229      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:50.063095 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:50.708244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:51.709058      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:52.060873 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:52.709564      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:53.710094      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:54.060294 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:54.710763      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:55.711531      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:56.057820 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 19, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:19:56.711636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:19:57.712816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:58.220241 15 aggregator.go:755] Waited 140.917289ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/01/25 12:19:58.312
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/01/25 12:19:58.319
  STEP: List APIServices @ 09/01/25 12:19:58.334
  I0901 12:19:58.346328 15 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/01/25 12:19:58.346
  I0901 12:19:58.376109 15 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/01/25 12:19:58.376
  I0901 12:19:58.398835 15 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 1, 12, 19, 58, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/01/25 12:19:58.398
  I0901 12:19:58.407991 15 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-01 12:19:58 +0000 UTC Passed all checks passed}
  I0901 12:19:58.408065 15 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:19:58.408107 15 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/01/25 12:19:58.408
  I0901 12:19:58.433260 15 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1858057331" @ 09/01/25 12:19:58.433
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/01/25 12:19:58.469
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/01/25 12:19:58.486
  STEP: Patch APIService Status @ 09/01/25 12:19:58.495
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/01/25 12:19:58.516
  I0901 12:19:58.523050 15 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-01 12:19:58 +0000 UTC Passed all checks passed}
  I0901 12:19:58.523561 15 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:19:58.523606 15 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0901 12:19:58.523648 15 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/01/25 12:19:58.523
  STEP: Confirm that the generated APIService has been deleted @ 09/01/25 12:19:58.544
  I0901 12:19:58.544915 15 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0901 12:19:58.550979 15 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0901 12:19:58.551039 15 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  E0901 12:19:58.712989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:19:58.775519 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-123" for this suite. @ 09/01/25 12:19:58.788
â€¢ [32.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/01/25 12:19:58.81
  I0901 12:19:58.810262 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:19:58.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:19:58.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:19:58.856
  STEP: Creating service test in namespace statefulset-4119 @ 09/01/25 12:19:58.862
  STEP: Creating a new StatefulSet @ 09/01/25 12:19:58.871
  I0901 12:19:58.896986 15 wait.go:40] Found 0 stateful pods, waiting for 3
  E0901 12:19:59.713805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:00.714875      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:01.714799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:02.715015      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:03.715289      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:04.715936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:05.716708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:06.716961      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:07.717601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:08.718053      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:20:08.906356 15 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:20:08.906564 15 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:20:08.906608 15 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0901 12:20:08.954129 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-4119 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:20:09.308758 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:20:09.308872 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:20:09.308927 15 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0901 12:20:09.718247      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:10.719139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:11.720184      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:12.721065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:13.721266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:14.722096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:15.722791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:16.723192      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:17.723630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:18.723819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 12:20:19.337
  I0901 12:20:19.371378 15 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 12:20:19.371
  E0901 12:20:19.724134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:20.724204      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:21.724959      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:22.725765      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:23.726817      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:24.727124      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:25.727502      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:26.727910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:27.728707      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:28.729163      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/01/25 12:20:29.401
  I0901 12:20:29.416830 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-4119 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 12:20:29.729499      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:20:29.744121 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:20:29.744219 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:20:29.744266 15 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0901 12:20:30.731208      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:31.730942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:32.731540      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:33.731748      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:34.731967      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:35.732634      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:36.733518      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:37.734371      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:38.734807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:39.735396      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:20:39.807670 15 wait.go:158] Waiting for StatefulSet statefulset-4119/ss2 to complete update
  E0901 12:20:40.735927      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:41.736633      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:42.737691      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:43.738562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:44.739344      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:45.739630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:46.739855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:47.740733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:48.741172      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:49.741641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/01/25 12:20:49.812
  I0901 12:20:49.813337 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-4119 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 12:20:50.184048 15 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 12:20:50.184162 15 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 12:20:50.184200 15 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0901 12:20:50.742989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:51.743716      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:52.743852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:53.744723      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:54.744979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:55.745251      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:56.746388      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:57.746722      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:58.746946      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:20:59.747191      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:00.246658 15 statefulset.go:2510] Updating stateful set ss2
  E0901 12:21:00.747791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:01.748283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:02.748537      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:03.748829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:04.749060      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:05.749319      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:06.749716      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:07.749989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:08.750555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:09.750489      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/01/25 12:21:10.273
  I0901 12:21:10.287577 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=statefulset-4119 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 12:21:10.668640 15 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 12:21:10.668857 15 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 12:21:10.668964 15 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0901 12:21:10.751775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:11.752491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:12.752908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:13.753635      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:14.754144      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:15.755138      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:16.755673      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:17.755850      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:18.756085      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:19.756794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:20.736017 15 statefulset.go:138] Deleting all statefulset in ns statefulset-4119
  I0901 12:21:20.749298 15 rest.go:152] Scaling statefulset ss2 to 0
  E0901 12:21:20.758010      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:21.757856      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:22.758260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:23.759331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:24.759278      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:25.760046      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:26.760394      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:27.765571      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:28.765729      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:29.763293      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:30.764234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:30.801765 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 12:21:30.815770 15 rest.go:90] Deleting statefulset ss2
  I0901 12:21:30.861750 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4119" for this suite. @ 09/01/25 12:21:30.873
â€¢ [92.082 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/01/25 12:21:30.892
  I0901 12:21:30.892829 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:21:30.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:21:30.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:21:30.929
  STEP: Creating configMap with name projected-configmap-test-volume-d8c535ab-ff13-41ca-a1c7-cb1098af5caf @ 09/01/25 12:21:30.934
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:21:30.944
  E0901 12:21:31.766855      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:32.767983      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:33.768951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:34.769870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:21:35.003
  I0901 12:21:35.010222 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-66939f8a-3e2d-4aa2-b043-84cdd7ffa4bb container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:21:35.05
  I0901 12:21:35.086209 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9209" for this suite. @ 09/01/25 12:21:35.098
â€¢ [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/01/25 12:21:35.117
  I0901 12:21:35.117349 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:21:35.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:21:35.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:21:35.149
  STEP: Creating configMap with name configmap-test-upd-938ae0d8-31be-4ff3-868f-835349861f0c @ 09/01/25 12:21:35.195
  STEP: Creating the pod @ 09/01/25 12:21:35.203
  E0901 12:21:35.802861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:36.803139      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/01/25 12:21:37.244
  STEP: Waiting for pod with binary data @ 09/01/25 12:21:37.259
  I0901 12:21:37.277037 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9111" for this suite. @ 09/01/25 12:21:37.288
â€¢ [2.186 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/01/25 12:21:37.303
  I0901 12:21:37.303908 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:21:37.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:21:37.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:21:37.338
  STEP: Creating pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930 @ 09/01/25 12:21:37.345
  E0901 12:21:37.803353      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:38.803904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:21:39.385
  I0901 12:21:39.392308 15 container_probe.go:1749] Initial restart count of pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f is 0
  I0901 12:21:39.399167 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:39.804029      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:40.804031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:41.418681 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:41.805080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:42.805929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:43.461967 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:43.808835      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:44.808506      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:45.478017 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:45.807767      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:46.808562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:47.487298 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:47.808743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:48.809317      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:49.498830 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:49.809345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:50.810254      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:51.509304 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:51.810975      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:52.811188      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:53.521861 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:53.812124      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:54.813234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:55.532731 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:55.813889      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:56.814601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:57.545096 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:57.815701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:21:58.815830      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:21:59.555958 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:21:59.816861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:00.816785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:01.569279 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:01.818066      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:02.818850      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:03.598791 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:03.819836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:04.820296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:05.612828 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:05.821836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:06.821806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:07.623921 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:07.822034      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:08.822716      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:09.639339 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:09.823039      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:10.824136      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:11.655038 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:11.824928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:12.825194      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:13.668039 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:13.826374      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:14.826787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:15.681315 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:15.827671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:16.827990      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:17.696670 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:17.828904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:18.829601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:19.708095 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:19.830255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:20.831091      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:21.725654 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:21.832282      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:22.832758      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:23.740962 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:23.833336      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:24.833320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:25.756288 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:25.833745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:26.833762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:27.774727 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:27.833948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:28.834609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:29.794071 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:29.835387      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:30.835956      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:31.808235 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:31.836526      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:32.836745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:33.820760 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:33.836934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:34.837951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:35.834791 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:35.838616      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:36.839572      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:37.840996      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:37.848076 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:38.840617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:39.840885      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:39.860964 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:40.840960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:41.841898      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:41.873308 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:42.842042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:43.843581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:43.883495 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:44.842835      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:45.843255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:45.896003 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:46.843489      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:47.843869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:47.909991 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:48.844271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:49.845320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:49.921057 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:50.845811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:51.846653      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:51.936215 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  E0901 12:22:52.847270      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:53.848037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:53.950187 15 container_probe.go:1759] Get pod test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f in namespace container-probe-4930
  I0901 12:22:53.950331 15 container_probe.go:1763] Restart count of pod container-probe-4930/test-grpc-2e335ff8-2bf8-4f5e-b9da-18bbc407e12f is now 1 (1m14.557959748s elapsed)
  STEP: deleting the pod @ 09/01/25 12:22:53.95
  I0901 12:22:53.989195 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4930" for this suite. @ 09/01/25 12:22:54.025
â€¢ [76.743 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/01/25 12:22:54.048
  I0901 12:22:54.048382 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:22:54.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:54.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:22:54.079
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 12:22:54.151
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:22:54.166
  I0901 12:22:54.240241 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:22:54.240393 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:22:54.848849      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:55.200331 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:22:55.200895 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:22:55.849345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:56.201762 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:22:56.201908 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:22:56.850248      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:57.216774 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:22:57.216851 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:22:57.850822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:22:58.197365 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:22:58.197557 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/01/25 12:22:58.207
  STEP: DeleteCollection of the DaemonSets @ 09/01/25 12:22:58.219
  STEP: Verify that ReplicaSets have been deleted @ 09/01/25 12:22:58.241
  I0901 12:22:58.390439 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30183"},"items":null}

  I0901 12:22:58.403617 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30183"},"items":[{"metadata":{"name":"daemon-set-2xtwc","generateName":"daemon-set-","namespace":"daemonsets-107","uid":"19a112b7-abd1-4361-8abb-9aa202729713","resourceVersion":"30180","creationTimestamp":"2025-09-01T12:22:54Z","deletionTimestamp":"2025-09-01T12:23:28Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5951ac43-1838-48c1-940a-407f73a6d69f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:22:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5951ac43-1838-48c1-940a-407f73a6d69f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:22:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.10\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rhfc9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rhfc9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aeshuj4hoh7a-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aeshuj4hoh7a-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:55Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:54Z"}],"hostIP":"192.168.121.182","hostIPs":[{"ip":"192.168.121.182"}],"podIP":"10.233.65.10","podIPs":[{"ip":"10.233.65.10"}],"startTime":"2025-09-01T12:22:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T12:22:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://52f1129fd2c4f4896400cb88f49800c99fc91911e1fe41814e1d92b3dab232aa","started":true,"volumeMounts":[{"name":"kube-api-access-rhfc9","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-k6zq6","generateName":"daemon-set-","namespace":"daemonsets-107","uid":"9a56ea52-3876-40ce-9869-8ae51e070a29","resourceVersion":"30179","creationTimestamp":"2025-09-01T12:22:54Z","deletionTimestamp":"2025-09-01T12:23:28Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5951ac43-1838-48c1-940a-407f73a6d69f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:22:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5951ac43-1838-48c1-940a-407f73a6d69f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:22:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.77\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xsg7h","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xsg7h","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aeshuj4hoh7a-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aeshuj4hoh7a-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:55Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:54Z"}],"hostIP":"192.168.121.245","hostIPs":[{"ip":"192.168.121.245"}],"podIP":"10.233.64.77","podIPs":[{"ip":"10.233.64.77"}],"startTime":"2025-09-01T12:22:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T12:22:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://ac2a17637e24657b9345303efb96e0546273aedb18c78aa01ee2472ad72f5873","started":true,"volumeMounts":[{"name":"kube-api-access-xsg7h","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kgfj8","generateName":"daemon-set-","namespace":"daemonsets-107","uid":"0b5c191a-ef8a-4693-aa39-8da9730551e2","resourceVersion":"30177","creationTimestamp":"2025-09-01T12:22:54Z","deletionTimestamp":"2025-09-01T12:23:28Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5951ac43-1838-48c1-940a-407f73a6d69f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:22:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5951ac43-1838-48c1-940a-407f73a6d69f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-01T12:22:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.28\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gggr9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gggr9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aeshuj4hoh7a-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aeshuj4hoh7a-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T12:22:54Z"}],"hostIP":"192.168.121.194","hostIPs":[{"ip":"192.168.121.194"}],"podIP":"10.233.66.28","podIPs":[{"ip":"10.233.66.28"}],"startTime":"2025-09-01T12:22:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T12:22:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://4c35bb366da11db87440702be9ad9a57970a9592bf5ed4950686bdbd06abae71","started":true,"volumeMounts":[{"name":"kube-api-access-gggr9","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0901 12:22:58.457159 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-107" for this suite. @ 09/01/25 12:22:58.467
â€¢ [4.438 seconds]
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 09/01/25 12:22:58.486
  I0901 12:22:58.486725 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 12:22:58.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:22:58.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:22:58.528
  STEP: Creating a job @ 09/01/25 12:22:58.533
  STEP: Ensuring active pods == parallelism @ 09/01/25 12:22:58.544
  E0901 12:22:58.852049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:22:59.852154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/01/25 12:23:00.572
  E0901 12:23:00.853509      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:23:01.118312 15 pod_client.go:173] Successfully updated pod "adopt-release-h7dc2"
  STEP: Checking that the Job readopts the Pod @ 09/01/25 12:23:01.118
  E0901 12:23:01.853875      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:02.855929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/01/25 12:23:03.176
  I0901 12:23:03.697737 15 pod_client.go:173] Successfully updated pod "adopt-release-h7dc2"
  STEP: Checking that the Job releases the Pod @ 09/01/25 12:23:03.697
  E0901 12:23:03.855920      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:04.856234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:23:05.714714 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5242" for this suite. @ 09/01/25 12:23:05.725
â€¢ [7.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/01/25 12:23:05.739
  I0901 12:23:05.739893 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:23:05.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:05.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:05.78
  STEP: Creating configMap with name cm-test-opt-del-95f21806-eb82-4d94-b254-edf6b24cc202 @ 09/01/25 12:23:05.824
  STEP: Creating configMap with name cm-test-opt-upd-ac2c361e-dd91-4397-9e0e-06882338299b @ 09/01/25 12:23:05.839
  STEP: Creating the pod @ 09/01/25 12:23:05.85
  E0901 12:23:05.857917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:06.857997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:07.858115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-95f21806-eb82-4d94-b254-edf6b24cc202 @ 09/01/25 12:23:08.037
  STEP: Updating configmap cm-test-opt-upd-ac2c361e-dd91-4397-9e0e-06882338299b @ 09/01/25 12:23:08.059
  STEP: Creating configMap with name cm-test-opt-create-e3afa963-66c6-4e17-a1b8-c948c5d7fb41 @ 09/01/25 12:23:08.073
  STEP: waiting to observe update in volume @ 09/01/25 12:23:08.088
  E0901 12:23:08.858209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:09.859323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:23:10.191606 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-59" for this suite. @ 09/01/25 12:23:10.212
â€¢ [4.499 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/01/25 12:23:10.24
  I0901 12:23:10.240519 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:23:10.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:10.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:10.288
  STEP: Creating projection with secret that has name projected-secret-test-map-250129fc-45de-4882-986d-cfb9194566a6 @ 09/01/25 12:23:10.297
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:23:10.312
  E0901 12:23:10.859913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:11.860603      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:12.861794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:13.861819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:23:14.378
  I0901 12:23:14.393129 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-1 pod pod-projected-secrets-2ed7e379-5fe8-4f3b-b401-e40ac541b2b2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:23:14.454
  I0901 12:23:14.506120 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8202" for this suite. @ 09/01/25 12:23:14.529
â€¢ [4.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/01/25 12:23:14.566
  I0901 12:23:14.567018 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:23:14.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:23:14.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:23:14.625
  STEP: Creating secret with name s-test-opt-del-0bfdb227-905f-42da-8d74-ca4abd367a16 @ 09/01/25 12:23:14.645
  STEP: Creating secret with name s-test-opt-upd-f8b0143e-ae1e-4cb8-8e71-a1578b07a257 @ 09/01/25 12:23:14.658
  STEP: Creating the pod @ 09/01/25 12:23:14.669
  E0901 12:23:14.863798      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:15.864860      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-0bfdb227-905f-42da-8d74-ca4abd367a16 @ 09/01/25 12:23:16.789
  STEP: Updating secret s-test-opt-upd-f8b0143e-ae1e-4cb8-8e71-a1578b07a257 @ 09/01/25 12:23:16.818
  STEP: Creating secret with name s-test-opt-create-2ef1286b-3884-4fa5-b4f4-b5e21a783a25 @ 09/01/25 12:23:16.831
  STEP: waiting to observe update in volume @ 09/01/25 12:23:16.843
  E0901 12:23:16.864449      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:17.864979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:18.865212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:19.866097      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:20.866752      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:21.867596      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:22.867733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:23.868563      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:24.868847      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:25.869080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:26.870032      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:27.870652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:28.870942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:29.871775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:30.871814      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:31.872398      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:32.872565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:33.873108      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:34.873353      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:35.873698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:36.873754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:37.874138      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:38.875273      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:39.875195      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:40.875660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:41.876611      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:42.876803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:43.877127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:44.878639      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:45.879902      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:46.879862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:47.879942      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:48.880615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:49.881271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:50.881834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:51.882647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:52.882652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:53.883275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:54.883637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:55.883846      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:56.884893      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:57.886123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:58.886127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:23:59.887512      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:00.887732      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:01.887954      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:02.888189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:03.888706      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:04.889678      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:05.890458      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:06.891280      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:07.891523      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:08.892140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:09.892146      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:10.892636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:11.893110      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:12.893275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:13.894272      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:14.895018      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:15.895610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:16.895801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:17.896623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:18.897636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:19.898274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:20.898762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:21.899632      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:21.936334 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3751" for this suite. @ 09/01/25 12:24:21.955
â€¢ [67.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/01/25 12:24:21.976
  I0901 12:24:21.976741 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/01/25 12:24:21.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:22.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:22.025
  STEP: Setting up server cert @ 09/01/25 12:24:22.032
  E0901 12:24:22.899642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:24:23.046
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:24:23.063
  STEP: Wait for the deployment to be ready @ 09/01/25 12:24:23.108
  I0901 12:24:23.133370 15 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0901 12:24:23.900209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:24.901069      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:25.183916 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 24, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 24, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 24, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 24, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:24:25.900812      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:26.901635      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:24:27.206
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:24:27.252
  E0901 12:24:27.901904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:28.254065 15 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/01/25 12:24:28.279
  I0901 12:24:28.279938 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Creating a custom resource conversion webhook @ 09/01/25 12:24:28.836
  E0901 12:24:28.902988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:29.903368      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:30.903880      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 09/01/25 12:24:31.187
  STEP: Registering informers with field selectors @ 09/01/25 12:24:31.208
  STEP: Creating custom resources @ 09/01/25 12:24:31.208
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/01/25 12:24:31.275
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/01/25 12:24:31.286
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/01/25 12:24:31.292
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/01/25 12:24:31.298
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/01/25 12:24:31.306
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 12:24:31.311
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/01/25 12:24:31.311
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/01/25 12:24:31.312
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 12:24:31.312
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/01/25 12:24:31.312
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/01/25 12:24:31.343
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/01/25 12:24:31.371
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/01/25 12:24:31.377
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/01/25 12:24:31.384
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 12:24:31.39
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/01/25 12:24:31.39
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/01/25 12:24:31.39
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 12:24:31.391
  E0901 12:24:31.904659      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:32.104583 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-261" for this suite. @ 09/01/25 12:24:32.116
â€¢ [10.170 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/01/25 12:24:32.146
  I0901 12:24:32.146367 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:24:32.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:32.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:32.199
  I0901 12:24:32.206062 15 proxy.go:293] Creating pod...
  E0901 12:24:32.904947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:33.905318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:34.248055 15 proxy.go:317] Creating service...
  I0901 12:24:34.287387 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/DELETE
  I0901 12:24:34.307609 15 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:24:34.307692 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/GET
  I0901 12:24:34.324057 15 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 12:24:34.324140 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/HEAD
  I0901 12:24:34.330891 15 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0901 12:24:34.330948 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/OPTIONS
  I0901 12:24:34.337263 15 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:24:34.337318 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/PATCH
  I0901 12:24:34.343952 15 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:24:34.344008 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/POST
  I0901 12:24:34.350598 15 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:24:34.350649 15 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/pods/agnhost/proxy/some/path/with/PUT
  I0901 12:24:34.358172 15 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:24:34.358242 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/DELETE
  I0901 12:24:34.369169 15 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:24:34.369224 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/GET
  I0901 12:24:34.379297 15 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 12:24:34.379387 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/HEAD
  I0901 12:24:34.392938 15 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0901 12:24:34.393049 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/OPTIONS
  I0901 12:24:34.404511 15 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:24:34.404600 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/PATCH
  I0901 12:24:34.414226 15 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:24:34.414281 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/POST
  I0901 12:24:34.425817 15 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:24:34.425873 15 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-912/services/test-service/proxy/some/path/with/PUT
  I0901 12:24:34.435729 15 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:24:34.436014 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-912" for this suite. @ 09/01/25 12:24:34.444
â€¢ [2.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/01/25 12:24:34.461
  I0901 12:24:34.461901 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename lease-test @ 09/01/25 12:24:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:34.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:34.492
  I0901 12:24:34.605929 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3988" for this suite. @ 09/01/25 12:24:34.617
â€¢ [0.170 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/01/25 12:24:34.632
  I0901 12:24:34.632391 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:24:34.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:34.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:34.662
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:24:34.716
  E0901 12:24:34.905807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:35.906745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 12:24:36.782
  E0901 12:24:36.906286      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:37.906501      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/01/25 12:24:38.835
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:24:38.859
  E0901 12:24:38.906383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:39.906637      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:40.904133 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:24:40.908215      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-lifecycle-hook-2112" for this suite. @ 09/01/25 12:24:40.918
â€¢ [6.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/01/25 12:24:40.95
  I0901 12:24:40.951559 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:24:40.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:40.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:41.001
  STEP: creating service in namespace services-2213 @ 09/01/25 12:24:41.012
  STEP: creating service affinity-nodeport-transition in namespace services-2213 @ 09/01/25 12:24:41.012
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2213 @ 09/01/25 12:24:41.06
  I0901 12:24:41.095084      15 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2213, replica count: 3
  E0901 12:24:41.908708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:42.909843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:43.910323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:44.147276      15 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 12:24:44.188364 15 resource.go:361] Creating new exec pod
  E0901 12:24:44.910785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:45.911142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:46.912003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:47.255277 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-2213 exec execpod-affinitysv427 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0901 12:24:47.619222 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.20.213) 80 port [tcp/http] succeeded!\n"
  I0901 12:24:47.619382 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:24:47.620151 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-2213 exec execpod-affinitysv427 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.20.213 80'
  I0901 12:24:47.904619 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.20.213 80\nConnection to 10.233.20.213 80 port [tcp/http] succeeded!\n"
  I0901 12:24:47.904732 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:24:47.905219 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-2213 exec execpod-affinitysv427 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.245 30592'
  E0901 12:24:47.913029      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:48.209270 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.245 30592\nConnection to 192.168.121.245 30592 port [tcp/*] succeeded!\n"
  I0901 12:24:48.209665 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:24:48.210043 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-2213 exec execpod-affinitysv427 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.182 30592'
  I0901 12:24:48.506767 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.182 30592\nConnection to 192.168.121.182 30592 port [tcp/*] succeeded!\n"
  I0901 12:24:48.506851 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:24:48.536680 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-2213 exec execpod-affinitysv427 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.194:30592/ ; done'
  E0901 12:24:48.915307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:49.167553 15 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n"
  I0901 12:24:49.168006 15 builder.go:147] stdout: "\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-zxqvn\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-zxqvn\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-zxqvn\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-zxqvn\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-zxqvn\naffinity-nodeport-transition-l4cs7\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn"
  I0901 12:24:49.168073 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.168101 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168120 15 service.go:242] Received response from host: affinity-nodeport-transition-zxqvn
  I0901 12:24:49.168137 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168154 15 service.go:242] Received response from host: affinity-nodeport-transition-zxqvn
  I0901 12:24:49.168177 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168196 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168213 15 service.go:242] Received response from host: affinity-nodeport-transition-zxqvn
  I0901 12:24:49.168242 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168258 15 service.go:242] Received response from host: affinity-nodeport-transition-zxqvn
  I0901 12:24:49.168293 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168310 15 service.go:242] Received response from host: affinity-nodeport-transition-zxqvn
  I0901 12:24:49.168325 15 service.go:242] Received response from host: affinity-nodeport-transition-l4cs7
  I0901 12:24:49.168342 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.168368 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.168385 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.186910 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-2213 exec execpod-affinitysv427 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.194:30592/ ; done'
  I0901 12:24:49.768637 15 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.194:30592/\n"
  I0901 12:24:49.768766 15 builder.go:147] stdout: "\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn\naffinity-nodeport-transition-2b7cn"
  I0901 12:24:49.769223 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.769522 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.769722 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.769904 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.770182 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.770263 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.770456 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.770666 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.770993 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771034 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771211 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771382 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771459 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771525 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771561 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771589 15 service.go:242] Received response from host: affinity-nodeport-transition-2b7cn
  I0901 12:24:49.771716 15 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2213, will wait for the garbage collector to delete the pods @ 09/01/25 12:24:49.81
  I0901 12:24:49.887287 15 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 15.035928ms
  E0901 12:24:49.916837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:49.987728 15 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.419824ms
  E0901 12:24:50.917834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:51.918648      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:52.919623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:24:53.348196 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2213" for this suite. @ 09/01/25 12:24:53.361
â€¢ [12.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:24:53.378
  I0901 12:24:53.378665 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:24:53.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:24:53.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:24:53.412
  STEP: Counting existing ResourceQuota @ 09/01/25 12:24:53.418
  E0901 12:24:53.920268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:54.920198      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:55.921206      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:56.921392      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:57.921576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 12:24:58.431
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:24:58.455
  E0901 12:24:58.921882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:24:59.922308      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:00.475324 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3421" for this suite. @ 09/01/25 12:25:00.491
â€¢ [7.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/01/25 12:25:00.515
  I0901 12:25:00.515553 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:25:00.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:00.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:00.567
  STEP: Creating a test headless service @ 09/01/25 12:25:00.577
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2102.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2102.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2102.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2102.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 149.54.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.54.149_udp@PTR;check="$$(dig +tcp +noall +answer +search 149.54.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.54.149_tcp@PTR;sleep 1; done
   @ 09/01/25 12:25:00.62
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2102.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2102.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2102.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2102.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2102.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 149.54.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.54.149_udp@PTR;check="$$(dig +tcp +noall +answer +search 149.54.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.54.149_tcp@PTR;sleep 1; done
   @ 09/01/25 12:25:00.62
  STEP: creating a pod to probe DNS @ 09/01/25 12:25:00.62
  STEP: submitting the pod to kubernetes @ 09/01/25 12:25:00.621
  E0901 12:25:00.925094      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:01.922955      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:25:02.668
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:25:02.68
  I0901 12:25:02.698974 15 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.710597 15 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.724663 15 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.739004 15 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.785903 15 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.792617 15 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.800372 15 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.807266 15 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local from pod dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414: the server could not find the requested resource (get pods dns-test-da662808-6d88-4f2e-b917-334c89c53414)
  I0901 12:25:02.838789 15 dns_common.go:506] Lookups using dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414 failed for: [agnhost_udp@dns-test-service.dns-2102.svc.cluster.local agnhost_tcp@dns-test-service.dns-2102.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local jessie_udp@dns-test-service.dns-2102.svc.cluster.local jessie_tcp@dns-test-service.dns-2102.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2102.svc.cluster.local]

  I0901 12:25:02.856288 15 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:25:02.870699 15 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:25:02.884889 15 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:25:02.923771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:03.924130      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:04.924491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:05.925169      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:06.925760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:07.880180 15 dns_common.go:546] DNS probes using dns-2102/dns-test-da662808-6d88-4f2e-b917-334c89c53414 succeeded

  STEP: deleting the pod @ 09/01/25 12:25:07.881
  E0901 12:25:07.936644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the test service @ 09/01/25 12:25:07.94
  STEP: deleting the test headless service @ 09/01/25 12:25:08.016
  I0901 12:25:08.058785 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2102" for this suite. @ 09/01/25 12:25:08.088
â€¢ [7.590 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/01/25 12:25:08.105
  I0901 12:25:08.105650 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:25:08.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:08.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:08.141
  STEP: Creating secret with name secret-test-a2574506-518b-4914-9905-3150e4328c4d @ 09/01/25 12:25:08.181
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:25:08.216
  E0901 12:25:08.936586      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:09.942804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:10.942935      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:11.943584      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:25:12.295
  I0901 12:25:12.305703 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-8e82a090-d53e-428b-bce7-632ac56b4b28 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:25:12.33
  I0901 12:25:12.375932 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3419" for this suite. @ 09/01/25 12:25:12.386
  STEP: Destroying namespace "secret-namespace-6253" for this suite. @ 09/01/25 12:25:12.405
â€¢ [4.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/01/25 12:25:12.424
  I0901 12:25:12.424178 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:25:12.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:12.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:12.463
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 12:25:12.469
  E0901 12:25:12.943669      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:13.943821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:14.944123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:15.945280      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:25:16.519
  I0901 12:25:16.531246 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-6587372e-a031-48db-95f5-db7f72d99f20 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:25:16.552
  I0901 12:25:16.598302 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3505" for this suite. @ 09/01/25 12:25:16.613
â€¢ [4.204 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/01/25 12:25:16.628
  I0901 12:25:16.628954 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:25:16.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:16.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:16.664
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 12:25:16.67
  E0901 12:25:16.945680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:17.945668      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:18.946067      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:19.946395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:25:20.728
  I0901 12:25:20.738312 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-f10abb31-c8a7-481b-a2fc-540f100525e5 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:25:20.764
  I0901 12:25:20.812269 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6201" for this suite. @ 09/01/25 12:25:20.821
â€¢ [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/01/25 12:25:20.839
  I0901 12:25:20.839306 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:25:20.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:20.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:20.871
  STEP: getting /apis @ 09/01/25 12:25:20.877
  STEP: getting /apis/discovery.k8s.io @ 09/01/25 12:25:20.885
  STEP: getting /apis/discovery.k8s.iov1 @ 09/01/25 12:25:20.887
  STEP: creating @ 09/01/25 12:25:20.889
  STEP: getting @ 09/01/25 12:25:20.925
  STEP: listing @ 09/01/25 12:25:20.932
  STEP: watching @ 09/01/25 12:25:20.939
  I0901 12:25:20.939282 15 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:25:20.941
  E0901 12:25:20.947377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: cluster-wide watching @ 09/01/25 12:25:20.947
  I0901 12:25:20.947533 15 endpointslice.go:459] starting watch
  STEP: patching @ 09/01/25 12:25:20.949
  STEP: updating @ 09/01/25 12:25:20.962
  I0901 12:25:20.975202 15 endpointslice.go:482] waiting for watch events with expected annotations
  I0901 12:25:20.975265 15 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/01/25 12:25:20.975
  STEP: deleting a collection @ 09/01/25 12:25:21.004
  I0901 12:25:21.057122 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5065" for this suite. @ 09/01/25 12:25:21.067
â€¢ [0.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/01/25 12:25:21.083
  I0901 12:25:21.083973 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:25:21.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:21.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:21.114
  STEP: creating service multi-endpoint-test in namespace services-108 @ 09/01/25 12:25:21.12
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-108 to expose endpoints map[] @ 09/01/25 12:25:21.145
  I0901 12:25:21.159061 15 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0901 12:25:21.947379      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:22.178531 15 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-108 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-108 @ 09/01/25 12:25:22.178
  E0901 12:25:22.949140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:23.950093      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-108 to expose endpoints map[pod1:[100]] @ 09/01/25 12:25:24.232
  I0901 12:25:24.278154 15 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-108 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-108 @ 09/01/25 12:25:24.278
  E0901 12:25:24.949926      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:25.950538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-108 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/01/25 12:25:26.326
  I0901 12:25:26.362532 15 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-108 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/01/25 12:25:26.362
  I0901 12:25:26.363136 15 resource.go:361] Creating new exec pod
  E0901 12:25:26.952578      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:27.953685      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:28.953987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:29.415647 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-108 exec execpod5gkfk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0901 12:25:29.798105 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.18.17) 80 port [tcp/http] succeeded!\n"
  I0901 12:25:29.798260 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:25:29.799071 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-108 exec execpod5gkfk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.18.17 80'
  E0901 12:25:29.954154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:30.149794 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.18.17 80\nConnection to 10.233.18.17 80 port [tcp/http] succeeded!\n"
  I0901 12:25:30.149921 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:25:30.150719 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-108 exec execpod5gkfk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0901 12:25:30.500950 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.18.17) 81 port [tcp/*] succeeded!\n"
  I0901 12:25:30.501706 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:25:30.502311 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-108 exec execpod5gkfk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.18.17 81'
  I0901 12:25:30.806760 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.18.17 81\nConnection to 10.233.18.17 81 port [tcp/*] succeeded!\n"
  I0901 12:25:30.806840 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-108 @ 09/01/25 12:25:30.806
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-108 to expose endpoints map[pod2:[101]] @ 09/01/25 12:25:30.843
  I0901 12:25:30.895941 15 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-108 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-108 @ 09/01/25 12:25:30.896
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-108 to expose endpoints map[] @ 09/01/25 12:25:30.929
  E0901 12:25:30.958795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:30.994586 15 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-108 exposes endpoints map[]
  I0901 12:25:31.036703 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-108" for this suite. @ 09/01/25 12:25:31.048
â€¢ [9.978 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/01/25 12:25:31.064
  I0901 12:25:31.064383 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:25:31.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:31.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:31.098
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 12:25:31.106
  E0901 12:25:31.958760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:32.959252      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:33.960292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:34.960301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:25:35.169
  I0901 12:25:35.181094 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-831b03ef-5067-4b25-857c-357184d2c413 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:25:35.209
  I0901 12:25:35.265313 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7477" for this suite. @ 09/01/25 12:25:35.282
â€¢ [4.239 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 09/01/25 12:25:35.304
  I0901 12:25:35.304329 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:25:35.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:35.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:35.348
  STEP: validating api versions @ 09/01/25 12:25:35.354
  I0901 12:25:35.355065 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2726 api-versions'
  I0901 12:25:35.620555 15 builder.go:146] stderr: ""
  I0901 12:25:35.620700 15 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0901 12:25:35.621346 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2726" for this suite. @ 09/01/25 12:25:35.634
â€¢ [0.346 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:25:35.649
  I0901 12:25:35.649959 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:25:35.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:35.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:35.687
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:25:35.693
  E0901 12:25:35.961391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:36.962372      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:37.963688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:38.964715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:25:39.751
  I0901 12:25:39.767168 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-18212b35-d993-4283-9044-81eb23eaec42 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:25:39.814
  I0901 12:25:39.864535 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7514" for this suite. @ 09/01/25 12:25:39.881
â€¢ [4.250 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/01/25 12:25:39.901
  I0901 12:25:39.901585 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:25:39.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:25:39.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:25:39.948
  STEP: Creating pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333 @ 09/01/25 12:25:39.957
  E0901 12:25:39.965596      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:40.965780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:41.966349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:25:42.009
  I0901 12:25:42.022131 15 container_probe.go:1749] Initial restart count of pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b is 0
  I0901 12:25:42.035730 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:42.966642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:43.966982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:44.049526 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:44.967299      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:45.968100      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:46.068372 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:46.968702      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:47.968896      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:48.081207 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:48.969679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:49.969749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:50.096702 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:50.970376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:51.971310      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:52.108771 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:52.971630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:53.971945      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:54.122356 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:54.974302      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:55.974006      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:56.147035 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:56.974794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:57.976837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:25:58.165535 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:25:58.977087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:25:59.977221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:26:00.178696 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  E0901 12:26:00.978208      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:01.980122      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:26:02.193240 15 container_probe.go:1759] Get pod liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b in namespace container-probe-4333
  I0901 12:26:02.194075 15 container_probe.go:1763] Restart count of pod container-probe-4333/liveness-5a44f6bc-4036-4eb3-9dea-6ceec040810b is now 1 (20.171619522s elapsed)
  STEP: deleting the pod @ 09/01/25 12:26:02.196
  I0901 12:26:02.258092 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4333" for this suite. @ 09/01/25 12:26:02.277
â€¢ [22.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/01/25 12:26:02.305
  I0901 12:26:02.305634 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:26:02.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:02.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:02.342
  STEP: getting /apis @ 09/01/25 12:26:02.369
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 12:26:02.381
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 12:26:02.384
  STEP: creating @ 09/01/25 12:26:02.387
  STEP: getting @ 09/01/25 12:26:02.445
  STEP: listing @ 09/01/25 12:26:02.459
  STEP: watching @ 09/01/25 12:26:02.467
  I0901 12:26:02.468097 15 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/01/25 12:26:02.471
  STEP: updating @ 09/01/25 12:26:02.491
  I0901 12:26:02.508852 15 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 12:26:02.51
  STEP: patching /status @ 09/01/25 12:26:02.516
  STEP: updating /status @ 09/01/25 12:26:02.545
  STEP: deleting @ 09/01/25 12:26:02.583
  STEP: deleting a collection @ 09/01/25 12:26:02.616
  I0901 12:26:02.661155 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1256" for this suite. @ 09/01/25 12:26:02.669
â€¢ [0.377 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 09/01/25 12:26:02.683
  I0901 12:26:02.683736 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:26:02.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:26:02.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:26:02.716
  I0901 12:26:02.750818 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:26:02.980127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:03.980984      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:04.981758      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:05.981963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:06.982792      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:07.983202      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:08.984137      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:09.985087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:10.985751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:11.986727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:12.987641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:13.987789      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:14.988270      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:15.988760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:16.988857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:17.989601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:18.989706      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:19.989815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:20.990065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:21.990378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:22.991312      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:23.991664      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:24.992394      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:25.993922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:26.993866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:27.994507      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:28.994659      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:29.994896      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:30.996099      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:31.996816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:32.997323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:33.998189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:34.998551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:35.998806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:36.998950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:37.999517      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:38.999799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:40.000658      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:41.000865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:42.001563      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:43.002360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:44.003551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:45.004367      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:46.004886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:47.004994      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:48.005743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:49.006755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:50.007561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:51.007737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:52.008758      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:53.009081      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:54.009853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:55.010735      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:56.010949      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:57.011562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:58.012384      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:26:59.012816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:00.013514      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:01.014719      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:02.015668      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:02.773181 15 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/01/25 12:27:02.796
  STEP: Adding a custom resource @ 09/01/25 12:27:02.796
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/01/25 12:27:02.825
  I0901 12:27:02.853072 15 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/01/25 12:27:02.853
  E0901 12:27:03.016725      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:04.017080      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/01/25 12:27:04.887
  I0901 12:27:04.909310 15 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/01/25 12:27:04.909
  E0901 12:27:05.019590      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:06.018769      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/01/25 12:27:06.933
  I0901 12:27:06.944017 15 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0901 12:27:07.020084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:07.518743 15 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/01/25 12:27:07.559
  STEP: Removing a custom resource @ 09/01/25 12:27:07.627
  STEP: Removing a custom resource @ 09/01/25 12:27:07.648
  I0901 12:27:07.674687 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7177" for this suite. @ 09/01/25 12:27:07.686
â€¢ [65.021 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/01/25 12:27:07.704
  I0901 12:27:07.704627 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl-logs @ 09/01/25 12:27:07.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:07.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:07.737
  STEP: creating a pod @ 09/01/25 12:27:07.743
  I0901 12:27:07.743835 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0901 12:27:07.963738 15 builder.go:146] stderr: ""
  I0901 12:27:07.964060 15 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/01/25 12:27:07.964
  I0901 12:27:07.964340 15 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0901 12:27:08.021066      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:09.021210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:09.996595 15 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/01/25 12:27:09.996
  I0901 12:27:09.997199 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 logs logs-generator logs-generator'
  E0901 12:27:10.022382      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:10.260816 15 builder.go:146] stderr: ""
  I0901 12:27:10.261064 15 builder.go:147] stdout: "I0901 12:27:09.122738       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/jqm 399\nI0901 12:27:09.323559       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/5db 515\nI0901 12:27:09.523126       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/4hkp 237\nI0901 12:27:09.723670       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/5r54 512\nI0901 12:27:09.923354       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/rs5n 386\nI0901 12:27:10.122844       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/bx2 315\n"
  STEP: limiting log lines @ 09/01/25 12:27:10.261
  I0901 12:27:10.261940 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 logs logs-generator logs-generator --tail=1'
  I0901 12:27:10.471278 15 builder.go:146] stderr: ""
  I0901 12:27:10.471598 15 builder.go:147] stdout: "I0901 12:27:10.323188       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vvhf 431\n"
  I0901 12:27:10.471637 15 logs.go:180] got output "I0901 12:27:10.323188       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vvhf 431\n"
  STEP: limiting log bytes @ 09/01/25 12:27:10.471
  I0901 12:27:10.472206 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 logs logs-generator logs-generator --limit-bytes=1'
  I0901 12:27:10.679370 15 builder.go:146] stderr: ""
  I0901 12:27:10.679917 15 builder.go:147] stdout: "I"
  I0901 12:27:10.679948 15 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/01/25 12:27:10.679
  I0901 12:27:10.680588 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 logs logs-generator logs-generator --tail=1 --timestamps'
  I0901 12:27:10.870622 15 builder.go:146] stderr: ""
  I0901 12:27:10.871144 15 builder.go:147] stdout: "2025-09-01T12:27:10.723281711Z I0901 12:27:10.723198       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/lnx 397\n"
  I0901 12:27:10.871227 15 logs.go:192] got output "2025-09-01T12:27:10.723281711Z I0901 12:27:10.723198       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/lnx 397\n"
  STEP: restricting to a time range @ 09/01/25 12:27:10.871
  E0901 12:27:11.023369      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:12.023689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:13.024316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:13.374479 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 logs logs-generator logs-generator --since=1s'
  I0901 12:27:13.589268 15 builder.go:146] stderr: ""
  I0901 12:27:13.589606 15 builder.go:147] stdout: "I0901 12:27:12.723066       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/m9tf 516\nI0901 12:27:12.923519       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/zls 212\nI0901 12:27:13.122820       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/8wb 569\nI0901 12:27:13.323220       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/7h28 316\nI0901 12:27:13.523700       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/fgd 481\n"
  I0901 12:27:13.590033 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 logs logs-generator logs-generator --since=24h'
  I0901 12:27:13.789810 15 builder.go:146] stderr: ""
  I0901 12:27:13.789934 15 builder.go:147] stdout: "I0901 12:27:09.122738       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/jqm 399\nI0901 12:27:09.323559       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/5db 515\nI0901 12:27:09.523126       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/4hkp 237\nI0901 12:27:09.723670       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/5r54 512\nI0901 12:27:09.923354       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/rs5n 386\nI0901 12:27:10.122844       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/bx2 315\nI0901 12:27:10.323188       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vvhf 431\nI0901 12:27:10.523729       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/gc9p 384\nI0901 12:27:10.723198       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/lnx 397\nI0901 12:27:10.923826       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/9gf 219\nI0901 12:27:11.123592       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/jpm 462\nI0901 12:27:11.322936       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/sjb 424\nI0901 12:27:11.523539       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/ljfl 576\nI0901 12:27:11.722959       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/tqf 302\nI0901 12:27:11.923576       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/852j 218\nI0901 12:27:12.122881       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/wc5 416\nI0901 12:27:12.324533       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/bm6h 468\nI0901 12:27:12.523565       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/qm2m 219\nI0901 12:27:12.723066       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/m9tf 516\nI0901 12:27:12.923519       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/zls 212\nI0901 12:27:13.122820       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/8wb 569\nI0901 12:27:13.323220       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/7h28 316\nI0901 12:27:13.523700       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/fgd 481\nI0901 12:27:13.723535       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/784 406\n"
  I0901 12:27:13.790317 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-logs-3598 delete pod logs-generator'
  E0901 12:27:14.025237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:15.026023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:15.493710 15 builder.go:146] stderr: ""
  I0901 12:27:15.493806 15 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0901 12:27:15.494088 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3598" for this suite. @ 09/01/25 12:27:15.507
â€¢ [7.822 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:27:15.526
  I0901 12:27:15.526846 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:27:15.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:15.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:15.559
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/01/25 12:27:15.574
  I0901 12:27:15.596855 15 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0901 12:27:16.026843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:17.027640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:18.028155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:19.028740      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:20.028825      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:20.612219 15 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:27:20.612
  STEP: getting scale subresource @ 09/01/25 12:27:20.613
  STEP: updating a scale subresource @ 09/01/25 12:27:20.626
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/01/25 12:27:20.648
  STEP: Patch a scale subresource @ 09/01/25 12:27:20.657
  I0901 12:27:20.687744 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-252" for this suite. @ 09/01/25 12:27:20.702
â€¢ [5.194 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/01/25 12:27:20.721
  I0901 12:27:20.721591 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 12:27:20.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:20.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:20.765
  STEP: Performing setup for networking test in namespace pod-network-test-9843 @ 09/01/25 12:27:20.774
  STEP: creating a selector @ 09/01/25 12:27:20.774
  STEP: Creating the service pods in kubernetes @ 09/01/25 12:27:20.774
  I0901 12:27:20.774964 15 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 12:27:21.029292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:22.029816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:23.030118      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:24.031155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:25.031340      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:26.031892      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:27.031989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:28.033057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:29.033474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:30.034181      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:31.034757      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:32.035294      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:33.036111      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:34.036960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:35.037687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 12:27:35.051
  E0901 12:27:36.038555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:37.039524      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:37.181087 15 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 12:27:37.181269 15 utils.go:496] Going to poll 10.233.66.212 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 12:27:37.190823 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.212:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9843 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:27:37.190902 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:27:37.192472 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9843/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.212%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 12:27:37.433982 15 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0901 12:27:37.434094 15 utils.go:496] Going to poll 10.233.64.182 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 12:27:37.450721 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.182:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9843 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:27:37.450803 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:27:37.450937 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9843/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.182%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 12:27:37.577748 15 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0901 12:27:37.577820 15 utils.go:496] Going to poll 10.233.65.63 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 12:27:37.588188 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.63:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9843 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:27:37.588566 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:27:37.588986 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9843/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.63%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 12:27:37.695354 15 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0901 12:27:37.696091 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9843" for this suite. @ 09/01/25 12:27:37.708
â€¢ [17.001 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/01/25 12:27:37.723
  I0901 12:27:37.723770 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 12:27:37.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:37.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:37.763
  STEP: Performing setup for networking test in namespace pod-network-test-6997 @ 09/01/25 12:27:37.773
  STEP: creating a selector @ 09/01/25 12:27:37.773
  STEP: Creating the service pods in kubernetes @ 09/01/25 12:27:37.773
  I0901 12:27:37.773925 15 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 12:27:38.039909      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:39.040533      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:40.040724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:41.041271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:42.043618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:43.045446      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:44.043598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:45.044661      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:46.044781      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:47.045022      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:48.046103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:49.046918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:50.047443      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:51.048555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:52.049592      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 12:27:52.064
  E0901 12:27:53.050240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:54.050766      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:27:54.118256 15 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 12:27:54.118354 15 networking.go:42] Breadth first check of 10.233.66.197 on host 192.168.121.194...
  I0901 12:27:54.127827 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.220:9080/dial?request=hostname&protocol=udp&host=10.233.66.197&port=8081&tries=1'] Namespace:pod-network-test-6997 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:27:54.127923 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:27:54.128130 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6997/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.220%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.197%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:27:54.310290 15 utils.go:356] Waiting for responses: map[]
  I0901 12:27:54.310453 15 utils.go:360] reached 10.233.66.197 after 0/1 tries
  I0901 12:27:54.310512 15 networking.go:42] Breadth first check of 10.233.64.173 on host 192.168.121.245...
  I0901 12:27:54.318701 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.220:9080/dial?request=hostname&protocol=udp&host=10.233.64.173&port=8081&tries=1'] Namespace:pod-network-test-6997 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:27:54.318753 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:27:54.318875 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6997/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.220%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.173%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:27:54.431018 15 utils.go:356] Waiting for responses: map[]
  I0901 12:27:54.431089 15 utils.go:360] reached 10.233.64.173 after 0/1 tries
  I0901 12:27:54.431114 15 networking.go:42] Breadth first check of 10.233.65.161 on host 192.168.121.182...
  I0901 12:27:54.441503 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.220:9080/dial?request=hostname&protocol=udp&host=10.233.65.161&port=8081&tries=1'] Namespace:pod-network-test-6997 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:27:54.441559 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:27:54.441668 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6997/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.220%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.161%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 12:27:54.575811 15 utils.go:356] Waiting for responses: map[]
  I0901 12:27:54.576923 15 utils.go:360] reached 10.233.65.161 after 0/1 tries
  I0901 12:27:54.577448 15 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 12:27:54.577700 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6997" for this suite. @ 09/01/25 12:27:54.59
â€¢ [16.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 09/01/25 12:27:54.613
  I0901 12:27:54.613220 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:27:54.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:54.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:54.648
  STEP: creating a ServiceAccount @ 09/01/25 12:27:54.656
  STEP: watching for the ServiceAccount to be added @ 09/01/25 12:27:54.675
  STEP: patching the ServiceAccount @ 09/01/25 12:27:54.683
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/01/25 12:27:54.696
  STEP: deleting the ServiceAccount @ 09/01/25 12:27:54.704
  I0901 12:27:54.734180 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8194" for this suite. @ 09/01/25 12:27:54.743
â€¢ [0.143 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/01/25 12:27:54.757
  I0901 12:27:54.757220 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:27:54.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:54.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:54.793
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/01/25 12:27:54.801
  E0901 12:27:55.050872      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:56.051360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:57.052320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:27:58.053247      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:27:58.859
  I0901 12:27:58.875080 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-06c98ed5-4711-439c-a3c1-4eb6b3851419 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:27:58.935
  I0901 12:27:58.986210 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3583" for this suite. @ 09/01/25 12:27:58.998
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/01/25 12:27:59.017
  I0901 12:27:59.017890 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:27:59.025
  E0901 12:27:59.052948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:27:59.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:27:59.063
  STEP: Creating configMap with name projected-configmap-test-volume-9af30c7a-578f-48d7-8879-64f03f293664 @ 09/01/25 12:27:59.074
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:27:59.084
  E0901 12:28:00.053698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:01.054652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:02.054356      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:03.055319      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:28:03.138
  I0901 12:28:03.149722 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-23c86e59-a84f-481b-a652-c1890a7f73f4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:28:03.175
  I0901 12:28:03.233151 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2195" for this suite. @ 09/01/25 12:28:03.25
â€¢ [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/01/25 12:28:03.283
  I0901 12:28:03.284456 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:28:03.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:03.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:03.328
  I0901 12:28:03.335988 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:28:04.055881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:05.056479      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:06.056477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:28:06.585379 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-580" for this suite. @ 09/01/25 12:28:06.596
â€¢ [3.331 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:28:06.616
  I0901 12:28:06.616209 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:28:06.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:28:06.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:28:06.65
  STEP: Creating configMap with name configmap-test-upd-becf5c35-0fa7-40d8-8437-d6099bcbc790 @ 09/01/25 12:28:06.694
  STEP: Creating the pod @ 09/01/25 12:28:06.706
  E0901 12:28:07.056683      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:08.057667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-becf5c35-0fa7-40d8-8437-d6099bcbc790 @ 09/01/25 12:28:08.775
  STEP: waiting to observe update in volume @ 09/01/25 12:28:08.786
  E0901 12:28:09.058687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:10.059690      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:11.060654      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:12.060865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:13.061995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:14.063154      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:15.064138      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:16.064743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:17.064877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:18.065719      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:19.066369      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:20.067391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:21.067739      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:22.068906      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:23.069618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:24.069566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:25.070829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:26.071101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:27.071969      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:28.071976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:29.073244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:30.072858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:31.073827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:32.073974      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:33.074635      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:34.075543      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:35.075237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:36.076119      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:37.075865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:38.076244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:39.076522      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:40.077045      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:41.077457      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:42.077882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:43.078768      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:44.079041      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:45.079082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:46.079183      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:47.079650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:48.080810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:49.081302      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:50.083182      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:51.083007      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:52.083558      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:53.084057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:54.084358      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:55.085117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:56.085951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:57.092518      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:58.093044      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:28:59.093817      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:00.093931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:01.094813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:02.094873      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:03.095889      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:04.095883      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:05.096205      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:06.096778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:07.097207      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:08.097568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:09.098239      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:10.098305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:11.099031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:12.098979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:13.099623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:14.099878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:15.100765      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:16.102198      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:17.101799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:18.102391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:19.102772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:20.103901      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:21.103841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:22.105333      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:23.105486      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:24.105755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:25.106749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:26.001553 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3057" for this suite. @ 09/01/25 12:29:26.018
â€¢ [79.435 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/01/25 12:29:26.054
  I0901 12:29:26.055125 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:29:26.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:26.105
  E0901 12:29:26.107153      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:26.116
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:29:26.125
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:29:26.125
  STEP: creating a pod to probe DNS @ 09/01/25 12:29:26.125
  STEP: submitting the pod to kubernetes @ 09/01/25 12:29:26.126
  E0901 12:29:27.107928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:28.108781      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:29.109700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:30.110213      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:29:30.199
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:29:30.214
  I0901 12:29:30.277382 15 dns_common.go:546] DNS probes using dns-8460/dns-test-9207bd88-d88a-4dec-b0c4-3fbae8f4d5de succeeded

  STEP: deleting the pod @ 09/01/25 12:29:30.279
  I0901 12:29:30.325852 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8460" for this suite. @ 09/01/25 12:29:30.34
â€¢ [4.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/01/25 12:29:30.358
  I0901 12:29:30.358082 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:29:30.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:30.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:30.401
  I0901 12:29:30.410350 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:29:31.110775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:32.111761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/01/25 12:29:32.981
  I0901 12:29:32.982543 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 create -f -'
  E0901 12:29:33.112610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:33.441805 15 builder.go:146] stderr: ""
  I0901 12:29:33.441917 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9752-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 12:29:33.443963 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 delete e2e-test-crd-publish-openapi-9752-crds test-foo'
  I0901 12:29:33.730357 15 builder.go:146] stderr: ""
  I0901 12:29:33.730946 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9752-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0901 12:29:33.731364 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 apply -f -'
  I0901 12:29:33.931242 15 builder.go:146] stderr: ""
  I0901 12:29:33.931315 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9752-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 12:29:33.932078 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 delete e2e-test-crd-publish-openapi-9752-crds test-foo'
  E0901 12:29:34.112755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:34.136055 15 builder.go:146] stderr: ""
  I0901 12:29:34.136381 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9752-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/01/25 12:29:34.136
  I0901 12:29:34.137861 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 create -f -'
  I0901 12:29:34.307593 15 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/01/25 12:29:34.307
  I0901 12:29:34.308269 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 create -f -'
  I0901 12:29:34.470912 15 builder.go:135] rc: 1
  I0901 12:29:34.471267 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 apply -f -'
  I0901 12:29:34.642620 15 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/01/25 12:29:34.643
  I0901 12:29:34.643594 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 create -f -'
  I0901 12:29:34.808037 15 builder.go:135] rc: 1
  I0901 12:29:34.808438 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 --namespace=crd-publish-openapi-7256 apply -f -'
  I0901 12:29:34.972091 15 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/01/25 12:29:34.972
  I0901 12:29:34.973619 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 explain e2e-test-crd-publish-openapi-9752-crds'
  E0901 12:29:35.113565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:35.143244 15 builder.go:146] stderr: ""
  I0901 12:29:35.143332 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9752-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/01/25 12:29:35.144
  I0901 12:29:35.144287 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 explain e2e-test-crd-publish-openapi-9752-crds.metadata'
  I0901 12:29:35.296773 15 builder.go:146] stderr: ""
  I0901 12:29:35.297273 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9752-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0901 12:29:35.297823 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 explain e2e-test-crd-publish-openapi-9752-crds.spec'
  I0901 12:29:35.473060 15 builder.go:146] stderr: ""
  I0901 12:29:35.473134 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9752-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0901 12:29:35.474076 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 explain e2e-test-crd-publish-openapi-9752-crds.spec.bars'
  I0901 12:29:35.679456 15 builder.go:146] stderr: ""
  I0901 12:29:35.679562 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9752-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/01/25 12:29:35.68
  I0901 12:29:35.681606 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-7256 explain e2e-test-crd-publish-openapi-9752-crds.spec.bars2'
  I0901 12:29:35.854469 15 builder.go:135] rc: 1
  E0901 12:29:36.114258      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:37.115184      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:38.115785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:38.365089 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7256" for this suite. @ 09/01/25 12:29:38.395
â€¢ [8.058 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/01/25 12:29:38.417
  I0901 12:29:38.418010 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:29:38.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:38.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:38.464
  STEP: Creating the pod @ 09/01/25 12:29:38.475
  E0901 12:29:39.116179      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:40.116550      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:41.104296 15 pod_client.go:173] Successfully updated pod "annotationupdate9cf95b7c-b134-4b07-ac76-d2739cb43691"
  E0901 12:29:41.117076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:42.118314      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:43.118857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:43.159835 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4493" for this suite. @ 09/01/25 12:29:43.176
â€¢ [4.782 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/01/25 12:29:43.2
  I0901 12:29:43.200216 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:29:43.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:43.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:43.248
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 12:29:43.261
  E0901 12:29:44.129283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:45.130236      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:46.130862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:47.131143      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:29:47.32
  I0901 12:29:47.335292 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-7f470c84-9e96-498d-ac9f-bf62d3d2858c container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:29:47.358
  I0901 12:29:47.395636 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8979" for this suite. @ 09/01/25 12:29:47.404
â€¢ [4.218 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/01/25 12:29:47.418
  I0901 12:29:47.418933 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:29:47.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:47.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:47.515
  I0901 12:29:47.521547 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:29:48.133166      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:48.578219 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6702" for this suite. @ 09/01/25 12:29:48.59
â€¢ [1.185 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 09/01/25 12:29:48.604
  I0901 12:29:48.605343 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:29:48.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:29:48.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:29:48.645
  STEP: creating service multiprotocol-test in namespace services-6468 @ 09/01/25 12:29:48.652
  STEP: creating pod pod1 in namespace services-6468 @ 09/01/25 12:29:48.68
  STEP: Creating pod pod1 in namespace services-6468 @ 09/01/25 12:29:48.68
  E0901 12:29:49.132522      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:50.132853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6468 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/01/25 12:29:50.742
  I0901 12:29:50.775146 15 service.go:4553] successfully validated that service multiprotocol-test in namespace services-6468 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/01/25 12:29:50.775
  I0901 12:29:50.775450 15 resource.go:361] Creating new exec pod
  E0901 12:29:51.133672      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:52.134391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:52.811744 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80'
  E0901 12:29:53.134364      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:53.165925 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.156 80\nConnection to 10.233.61.156 80 port [tcp/http] succeeded!\n"
  I0901 12:29:53.166067 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:29:53.166357 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.61.156 80'
  E0901 12:29:54.134921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:55.136320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:55.423845 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.61.156 80\n"
  I0901 12:29:55.423943 15 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/01/25 12:29:55.424
  I0901 12:29:55.482473 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80'
  I0901 12:29:55.861714 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.156 80\nConnection to 10.233.61.156 80 port [tcp/http] succeeded!\n"
  I0901 12:29:55.861817 15 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 12:29:55.862637 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.61.156 80'
  E0901 12:29:56.137708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:57.138111      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:29:58.138738      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:29:58.215635 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.61.156 80\n"
  I0901 12:29:58.215844 15 builder.go:147] stdout: ""
  I0901 12:29:58.216330 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.61.156 80'
  E0901 12:29:59.139782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:00.140917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:00.605850 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.61.156 80\n"
  I0901 12:30:00.605975 15 builder.go:147] stdout: ""
  I0901 12:30:00.606927 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.61.156 80'
  E0901 12:30:01.143244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:02.142717      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:02.932622 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.61.156 80\n"
  I0901 12:30:02.932744 15 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/01/25 12:30:02.932
  I0901 12:30:02.966747 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.61.156 80'
  E0901 12:30:03.143278      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:04.143300      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:05.144214      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:05.306812 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.61.156 80\n"
  I0901 12:30:05.307042 15 builder.go:147] stdout: "pod1"
  I0901 12:30:05.307782 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80'
  E0901 12:30:06.144377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:07.144559      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:07.653755 15 builder.go:135] rc: 1
  I0901 12:30:07.654336 15 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.61.156 80
  nc: connect to 10.233.61.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 12:30:07.658958 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80'
  E0901 12:30:08.145302      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:09.145541      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:09.971682 15 builder.go:135] rc: 1
  I0901 12:30:09.971912 15 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.61.156 80
  nc: connect to 10.233.61.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 12:30:09.972841 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80'
  E0901 12:30:10.146320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:11.146834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:12.147179      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:12.340819 15 builder.go:135] rc: 1
  I0901 12:30:12.341013 15 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-6468 exec execpodtbqp9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.61.156 80
  nc: connect to 10.233.61.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 12:30:12.342388 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6468" for this suite. @ 09/01/25 12:30:12.357
â€¢ [23.775 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 09/01/25 12:30:12.381
  I0901 12:30:12.381727 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:30:12.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:12.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:12.433
  STEP: Creating ServiceAccount "e2e-sa-dbwfl"  @ 09/01/25 12:30:12.443
  I0901 12:30:12.460030 15 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-dbwfl"  @ 09/01/25 12:30:12.46
  I0901 12:30:12.484246 15 service_accounts.go:868] AutomountServiceAccountToken: true
  I0901 12:30:12.484712 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4750" for this suite. @ 09/01/25 12:30:12.499
â€¢ [0.139 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/01/25 12:30:12.52
  I0901 12:30:12.520796 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:30:12.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:12.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:12.563
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/01/25 12:30:12.572
  I0901 12:30:12.596171 15 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1042  dbbc740b-f974-4a53-9ac3-cc990cc43a79 32718 0 2025-09-01 12:30:12 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-01 12:30:12 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x4k6f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x4k6f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0901 12:30:13.148161      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:14.148584      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/01/25 12:30:14.625
  I0901 12:30:14.625970 15 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1042 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:30:14.626049 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:30:14.626195 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-1042/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/01/25 12:30:14.817
  I0901 12:30:14.817748 15 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1042 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:30:14.817793 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:30:14.817998 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-1042/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0901 12:30:15.006758 15 dns.go:450] Deleting pod test-dns-nameservers...
  I0901 12:30:15.040667 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1042" for this suite. @ 09/01/25 12:30:15.057
â€¢ [2.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/01/25 12:30:15.076
  I0901 12:30:15.076327 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 12:30:15.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:15.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:15.118
  STEP: Creating LimitRange "e2e-limitrange-xtk8n" in namespace "limitrange-224" @ 09/01/25 12:30:15.125
  STEP: Creating another limitRange in another namespace @ 09/01/25 12:30:15.137
  E0901 12:30:15.148987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:15.164199 15 limit_range.go:299] Namespace "e2e-limitrange-xtk8n-6390" created
  I0901 12:30:15.164274 15 limit_range.go:300] Creating LimitRange "e2e-limitrange-xtk8n" in namespace "e2e-limitrange-xtk8n-6390"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-xtk8n" @ 09/01/25 12:30:15.176
  I0901 12:30:15.181962 15 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-xtk8n" in "limitrange-224" namespace @ 09/01/25 12:30:15.183
  I0901 12:30:15.197819 15 limit_range.go:335] LimitRange "e2e-limitrange-xtk8n" has been patched
  STEP: Delete LimitRange "e2e-limitrange-xtk8n" by Collection with labelSelector: "e2e-limitrange-xtk8n=patched" @ 09/01/25 12:30:15.197
  STEP: Confirm that the limitRange "e2e-limitrange-xtk8n" has been deleted @ 09/01/25 12:30:15.215
  I0901 12:30:15.215913 15 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0901 12:30:15.222613 15 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-xtk8n=patched"
  I0901 12:30:15.222723 15 limit_range.go:344] LimitRange "e2e-limitrange-xtk8n" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-xtk8n" @ 09/01/25 12:30:15.222
  I0901 12:30:15.228988 15 limit_range.go:350] Found 1 limitRange
  I0901 12:30:15.230071 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-224" for this suite. @ 09/01/25 12:30:15.245
  STEP: Destroying namespace "e2e-limitrange-xtk8n-6390" for this suite. @ 09/01/25 12:30:15.259
â€¢ [0.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/01/25 12:30:15.276
  I0901 12:30:15.276591 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:30:15.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:15.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:15.309
  E0901 12:30:16.150789      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:17.151382      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:18.152734      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:19.153632      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:19.387054 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1592" for this suite. @ 09/01/25 12:30:19.403
â€¢ [4.150 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/01/25 12:30:19.426
  I0901 12:30:19.426819 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename init-container @ 09/01/25 12:30:19.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:19.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:19.517
  STEP: creating the pod @ 09/01/25 12:30:19.524
  I0901 12:30:19.524838 15 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0901 12:30:20.154232      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:21.155106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:22.156483      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:23.156683      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:24.157804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:24.179130 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8779" for this suite. @ 09/01/25 12:30:24.195
â€¢ [4.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/01/25 12:30:24.216
  I0901 12:30:24.216313 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:30:24.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:24.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:24.253
  STEP: Setting up server cert @ 09/01/25 12:30:24.3
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:30:25.138
  STEP: Deploying the webhook pod @ 09/01/25 12:30:25.149
  E0901 12:30:25.158313      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/01/25 12:30:25.175
  I0901 12:30:25.194109 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:30:26.158662      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:27.159710      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:30:27.228
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:30:27.26
  E0901 12:30:28.159986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:30:28.261953 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 12:30:28.286
  STEP: create a pod @ 09/01/25 12:30:28.363
  E0901 12:30:29.161627      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:30.162168      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/01/25 12:30:30.411
  I0901 12:30:30.411938 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=webhook-6279 attach --namespace=webhook-6279 to-be-attached-pod -i -c=container1'
  I0901 12:30:30.693058 15 builder.go:135] rc: 1
  I0901 12:30:30.810761 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6279" for this suite. @ 09/01/25 12:30:30.84
  STEP: Destroying namespace "webhook-markers-9065" for this suite. @ 09/01/25 12:30:30.856
â€¢ [6.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/01/25 12:30:30.876
  I0901 12:30:30.876100 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-watch @ 09/01/25 12:30:30.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:30:30.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:30:30.911
  I0901 12:30:30.917046 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:30:31.173483      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:32.169552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:33.170694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/01/25 12:30:33.625
  I0901 12:30:33.638925 15 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:30:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:30:33Z]] name:name1 resourceVersion:32971 uid:617d43d6-b028-48b5-804e-9dc3e0a5ad9f] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:30:34.171076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:35.171310      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:36.171751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:37.175282      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:38.175552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:39.176388      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:40.177012      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:41.177882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:42.177976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:43.178638      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/01/25 12:30:43.64
  I0901 12:30:43.656995 15 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:30:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:30:43Z]] name:name2 resourceVersion:33019 uid:785f4d77-2425-4ebc-850f-026058b29e08] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:30:44.179372      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:45.180319      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:46.180632      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:47.180739      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:48.181684      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:49.182146      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:50.183127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:51.182919      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:52.183986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:53.183655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/01/25 12:30:53.658
  I0901 12:30:53.681284 15 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:30:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:30:53Z]] name:name1 resourceVersion:33042 uid:617d43d6-b028-48b5-804e-9dc3e0a5ad9f] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:30:54.184147      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:55.184862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:56.185651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:57.186264      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:58.187069      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:30:59.196346      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:00.189910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:01.190924      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:02.195005      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:03.193715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/01/25 12:31:03.682
  I0901 12:31:03.721322 15 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:30:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:31:03Z]] name:name2 resourceVersion:33065 uid:785f4d77-2425-4ebc-850f-026058b29e08] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:31:04.193676      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:05.194103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:06.194276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:07.194873      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:08.196988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:09.196380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:10.197133      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:11.197061      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:12.197666      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:13.198545      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/01/25 12:31:13.723
  I0901 12:31:13.751041 15 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:30:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:30:53Z]] name:name1 resourceVersion:33088 uid:617d43d6-b028-48b5-804e-9dc3e0a5ad9f] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:31:14.201237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:15.200337      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:16.200589      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:17.200578      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:18.201655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:19.202787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:20.204016      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:21.204569      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:22.204616      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:23.204814      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/01/25 12:31:23.752
  I0901 12:31:23.792348 15 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T12:30:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T12:31:03Z]] name:name2 resourceVersion:33111 uid:785f4d77-2425-4ebc-850f-026058b29e08] num:map[num1:9223372036854775807 num2:1000000]]}
  E0901 12:31:24.205196      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:25.205987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:26.206576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:27.206898      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:28.208377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:29.208685      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:30.208663      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:31.209560      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:32.210577      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:33.210745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:34.211795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:31:34.339534 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3018" for this suite. @ 09/01/25 12:31:34.357
â€¢ [63.504 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/01/25 12:31:34.382
  I0901 12:31:34.382149 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename security-context @ 09/01/25 12:31:34.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:34.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:34.443
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 12:31:34.451
  E0901 12:31:35.212757      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:36.213580      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:37.213042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:38.214199      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:31:38.518
  I0901 12:31:38.539256 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod security-context-a3d325b4-9f62-4bc7-a86c-672f6faa88ae container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:31:38.589
  I0901 12:31:38.634793 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5933" for this suite. @ 09/01/25 12:31:38.647
â€¢ [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/01/25 12:31:38.697
  I0901 12:31:38.697389 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:31:38.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:38.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:38.74
  I0901 12:31:38.750492 15 deployment.go:1645] Creating simple deployment test-new-deployment
  I0901 12:31:38.791909 15 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0901 12:31:39.213488      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:40.213980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/01/25 12:31:40.843
  STEP: updating a scale subresource @ 09/01/25 12:31:40.855
  STEP: verifying the deployment Spec.Replicas was modified @ 09/01/25 12:31:40.875
  STEP: Patch a scale subresource @ 09/01/25 12:31:40.884
  I0901 12:31:40.955212 15 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3567",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fdf94d4-4a8b-46c5-b64b-c726f071a880",
      ResourceVersion: (string) (len=5) "33202",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:31:40.971081 15 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3567",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc33d480-a3a9-4362-bcd1-e32ebff46081",
      ResourceVersion: (string) (len=5) "33209",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "1fdf94d4-4a8b-46c5-b64b-c726f071a880",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 66 64 66 39 34  64 34 2d 34 61 38 62 2d  |\"1fdf94d4-4a8b-|
              00000120  34 36 63 35 2d 62 36 34  62 2d 63 37 32 36 66 30  |46c5-b64b-c726f0|
              00000130  37 31 61 38 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |71a880\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:31:40.979987 15 deployment.go:68] Pod "test-new-deployment-685b768f58-s7tvd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-s7tvd",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3567",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0a26dc7-944d-4428-952b-4c91a4148913",
      ResourceVersion: (string) (len=5) "33205",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326700,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "dc33d480-a3a9-4362-bcd1-e32ebff46081",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 63  33 33 64 34 38 30 2d 61  |d\":\"dc33d480-a|
              00000090  33 61 39 2d 34 33 36 32  2d 62 63 64 31 2d 65 33  |3a9-4362-bcd1-e3|
              000000a0  32 65 62 66 66 34 36 30  38 31 5c 22 7d 22 3a 7b  |2ebff46081\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lngzf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lngzf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:31:40.983858 15 deployment.go:68] Pod "test-new-deployment-685b768f58-xbgtl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-xbgtl",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3567",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c9f7931-d429-44f1-8a3d-aac21062edb4",
      ResourceVersion: (string) (len=5) "33196",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "dc33d480-a3a9-4362-bcd1-e32ebff46081",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 63  33 33 64 34 38 30 2d 61  |d\":\"dc33d480-a|
              00000090  33 61 39 2d 34 33 36 32  2d 62 63 64 31 2d 65 33  |3a9-4362-bcd1-e3|
              000000a0  32 65 62 66 66 34 36 30  38 31 5c 22 7d 22 3a 7b  |2ebff46081\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 38 32 5c 22 7d 22 3a  |.233.65.182\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jxlp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jxlp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=13) "10.233.65.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8217a57a23f4500113e733594a54984d3fa1e2a233d1ce995e88b1fa4266c437",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9jxlp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:31:40.996429 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3567" for this suite. @ 09/01/25 12:31:41.056
â€¢ [2.401 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/01/25 12:31:41.099
  I0901 12:31:41.099895 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:31:41.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:41.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:41.138
  STEP: Creating secret with name projected-secret-test-505cb6cc-890d-44c7-9bf7-9af3d45e13b5 @ 09/01/25 12:31:41.146
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:31:41.158
  E0901 12:31:41.216220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:42.214481      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:43.215600      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:44.216334      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:45.217520      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:31:45.227
  I0901 12:31:45.256782 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-secrets-22d89279-89ad-400e-8274-f4cb088eb2ac container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:31:45.275
  I0901 12:31:45.319602 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6268" for this suite. @ 09/01/25 12:31:45.335
â€¢ [4.249 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/01/25 12:31:45.35
  I0901 12:31:45.350196 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 12:31:45.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:45.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:45.39
  STEP: creating a target pod @ 09/01/25 12:31:45.395
  E0901 12:31:46.217741      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:47.218140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/01/25 12:31:47.467
  E0901 12:31:48.219103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:49.219843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/01/25 12:31:49.533
  I0901 12:31:49.533378 15 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2631 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:31:49.533547 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:31:49.533732 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-2631/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 12:31:49.667041 15 exec_util.go:108] Exec stderr: ""
  I0901 12:31:49.698832 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2631" for this suite. @ 09/01/25 12:31:49.716
â€¢ [4.389 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/01/25 12:31:49.739
  I0901 12:31:49.739552 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:31:49.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:31:49.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:31:49.839
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/01/25 12:31:49.847
  I0901 12:31:49.848831 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:31:50.220049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:51.220667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:52.220857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:53.223603      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:54.224708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:55.225366      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:56.226377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:57.226549      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:31:58.227052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/01/25 12:31:59.164
  I0901 12:31:59.166904 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:31:59.227831      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:00.228352      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:01.228798      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:01.705786 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:32:02.229726      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:03.229308      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:04.230146      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:05.230828      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:06.231874      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:07.232779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:08.233044      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:09.233988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:10.234663      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:10.547693 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4093" for this suite. @ 09/01/25 12:32:10.583
â€¢ [20.867 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/01/25 12:32:10.607
  I0901 12:32:10.607102 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:32:10.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:10.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:10.649
  STEP: Setting up server cert @ 09/01/25 12:32:10.696
  E0901 12:32:11.235377      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:32:11.625
  STEP: Deploying the webhook pod @ 09/01/25 12:32:11.64
  STEP: Wait for the deployment to be ready @ 09/01/25 12:32:11.668
  I0901 12:32:11.692491 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:32:12.240487      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:13.240858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:32:13.722
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:32:13.752
  E0901 12:32:14.241347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:14.755174 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/01/25 12:32:14.78
  STEP: create a namespace for the webhook @ 09/01/25 12:32:14.841
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/01/25 12:32:14.892
  I0901 12:32:15.132254 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5119" for this suite. @ 09/01/25 12:32:15.147
  STEP: Destroying namespace "webhook-markers-8926" for this suite. @ 09/01/25 12:32:15.161
  STEP: Destroying namespace "fail-closed-namespace-3589" for this suite. @ 09/01/25 12:32:15.175
â€¢ [4.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/01/25 12:32:15.194
  I0901 12:32:15.194527 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 12:32:15.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:15.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:15.228
  STEP: Creating Indexed job @ 09/01/25 12:32:15.236
  E0901 12:32:15.241776      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/01/25 12:32:15.251
  E0901 12:32:16.243169      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:17.242903      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:18.243552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:19.243866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:20.244613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:21.271340      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:22.268834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:23.268907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:24.269694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:25.270734      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/01/25 12:32:25.333
  I0901 12:32:25.349050 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7592" for this suite. @ 09/01/25 12:32:25.364
â€¢ [10.193 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/01/25 12:32:25.387
  I0901 12:32:25.387295 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:32:25.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:25.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:25.434
  I0901 12:32:25.444469 15 deployment.go:1196] Creating deployment "webserver-deployment"
  I0901 12:32:25.459262 15 deployment.go:1200] Waiting for observed generation 1
  E0901 12:32:26.271039      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:27.273220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:27.490759 15 deployment.go:1205] Waiting for all required pods to come up
  I0901 12:32:27.505340 15 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/01/25 12:32:27.505
  E0901 12:32:28.274293      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:29.275018      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:29.575541 15 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0901 12:32:29.602874 15 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0901 12:32:29.634698 15 deployment.go:314] Updating deployment webserver-deployment
  I0901 12:32:29.634805 15 deployment.go:1224] Waiting for observed generation 2
  E0901 12:32:30.275848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:31.276840      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:31.657183 15 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0901 12:32:31.668252 15 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0901 12:32:31.677321 15 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 12:32:31.707697 15 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0901 12:32:31.707853 15 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0901 12:32:31.720772 15 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 12:32:31.745575 15 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0901 12:32:31.745714 15 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0901 12:32:31.769282 15 deployment.go:314] Updating deployment webserver-deployment
  I0901 12:32:31.769450 15 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0901 12:32:31.790479 15 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0901 12:32:31.796876 15 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0901 12:32:32.277083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:33.277174      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:34.189064 15 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fea6f7ac-934d-47c0-a5d6-c03952d4b115",
      ResourceVersion: (string) (len=5) "33923",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0901 12:32:34.316732      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:34.497728 15 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
      ResourceVersion: (string) (len=5) "33916",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fea6f7ac-934d-47c0-a5d6-c03952d4b115",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 61 36 66 37  61 63 2d 39 33 34 64 2d  |\"fea6f7ac-934d-|
              00000120  34 37 63 30 2d 61 35 64  36 2d 63 30 33 39 35 32  |47c0-a5d6-c03952|
              00000130  64 34 62 31 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d4b115\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:32:34.505675 15 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0901 12:32:34.507777 15 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
      ResourceVersion: (string) (len=5) "33906",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fea6f7ac-934d-47c0-a5d6-c03952d4b115",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 61 36 66 37  61 63 2d 39 33 34 64 2d  |\"fea6f7ac-934d-|
              00000120  34 37 63 30 2d 61 35 64  36 2d 63 30 33 39 35 32  |47c0-a5d6-c03952|
              00000130  64 34 62 31 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d4b115\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:32:34.546132 15 deployment.go:68] Pod "webserver-deployment-685b768f58-5q6z7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5q6z7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17ef5c23-7ed9-4eb1-a82e-e3e600e1879f",
      ResourceVersion: (string) (len=5) "33711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 30 31 5c 22 7d 22 3a  |.233.65.201\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hmqzd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hmqzd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=13) "10.233.65.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0229ed560fb2ca4f2f20b4c6d00509b7a0b7a21a6f91520aba4ce1e01ad926db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hmqzd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.641253 15 deployment.go:68] Pod "webserver-deployment-685b768f58-6xz69" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6xz69",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33e88fa4-e2db-4f0b-88dd-4d559e6cf11e",
      ResourceVersion: (string) (len=5) "33938",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brb8n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brb8n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-brb8n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.735622 15 deployment.go:68] Pod "webserver-deployment-685b768f58-9fgq2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9fgq2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffc02edc-e4be-4512-a2cb-8c25f2409047",
      ResourceVersion: (string) (len=5) "33893",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bzw4f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bzw4f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bzw4f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.739721 15 deployment.go:68] Pod "webserver-deployment-685b768f58-bk56s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bk56s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ad006b5-2138-476e-a2f6-a6d0f5ad8690",
      ResourceVersion: (string) (len=5) "33696",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  39 35 5c 22 7d 22 3a 7b  |.233.66.95\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wq9ds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wq9ds",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) (len=12) "10.233.66.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9cb79005fae234c2fb1fdc13e9c21460afa66d46b4cee952337869469e40e94a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wq9ds",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.751689 15 deployment.go:68] Pod "webserver-deployment-685b768f58-bqn65" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bqn65",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05686762-4405-43aa-a804-aba3f1bd54a7",
      ResourceVersion: (string) (len=5) "33879",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pldqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pldqm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pldqm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.758311 15 deployment.go:68] Pod "webserver-deployment-685b768f58-ccpth" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ccpth",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51f23e8a-9468-485b-a185-e3fc91ff42f9",
      ResourceVersion: (string) (len=5) "33924",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtf8l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtf8l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xtf8l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.798794 15 deployment.go:68] Pod "webserver-deployment-685b768f58-dshkc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dshkc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe35b653-e793-431f-81e9-39eedf817312",
      ResourceVersion: (string) (len=5) "33889",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85vrw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85vrw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-85vrw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.809200 15 deployment.go:68] Pod "webserver-deployment-685b768f58-gdqmc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gdqmc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ceb3668-7f26-400a-afb4-76e410078e14",
      ResourceVersion: (string) (len=5) "33947",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qtlxb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qtlxb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qtlxb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.819015 15 deployment.go:68] Pod "webserver-deployment-685b768f58-gmssg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gmssg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "706a1697-7579-49ed-97a2-83250dcc7e51",
      ResourceVersion: (string) (len=5) "33723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 32 32 5c 22 7d 22 3a  |.233.64.122\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66dkl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66dkl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) (len=13) "10.233.64.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://524adbb6bd66efa5dfc1c1c5bfce7b0176d2de1d309630dd5d32eaa8848d0186",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-66dkl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.824890 15 deployment.go:68] Pod "webserver-deployment-685b768f58-hkf6m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hkf6m",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1271ab5f-7d3f-4718-8d8b-e60c13b32e17",
      ResourceVersion: (string) (len=5) "33706",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 33 37 5c 22 7d 22 3a  |.233.65.237\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mt798",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mt798",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) (len=13) "10.233.65.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://1f12d5576c520324c4efe4f5979d1bf07a3dd5c008f1ad11a82ccd2953559b94",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mt798",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.919549 15 deployment.go:68] Pod "webserver-deployment-685b768f58-j24xb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j24xb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de66e6eb-5e78-4e20-aa70-f8fa5b7ccb53",
      ResourceVersion: (string) (len=5) "33728",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  36 5c 22 7d 22 3a 7b 22  |.233.66.6\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbn29",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbn29",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) (len=11) "10.233.66.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.66.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d6accd327325e9f12b321ed52716765682550aaae8d332912c4595614fbf7c95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hbn29",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.938320 15 deployment.go:68] Pod "webserver-deployment-685b768f58-l4878" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l4878",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44eef15d-3f26-40d4-95bf-1c4de357ebfb",
      ResourceVersion: (string) (len=5) "33915",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-btmwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-btmwc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-btmwc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:34.994489 15 deployment.go:68] Pod "webserver-deployment-685b768f58-lp7tb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lp7tb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5031270b-50ba-424d-ace7-eada9c8d9c72",
      ResourceVersion: (string) (len=5) "33882",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnhbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnhbt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hnhbt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.012269 15 deployment.go:68] Pod "webserver-deployment-685b768f58-p2b84" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p2b84",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcf66f06-3d55-4418-80f1-c12157485a7a",
      ResourceVersion: (string) (len=5) "33718",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 34 30 5c 22 7d 22 3a  |.233.64.240\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sqgzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sqgzs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) (len=13) "10.233.64.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://03d6a1e42c7e582e9eb89b49768fd27fdfdb7b2515cf154bca8f47b61d274afd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sqgzs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.016249 15 deployment.go:68] Pod "webserver-deployment-685b768f58-qc5kl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qc5kl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03d72d63-89e2-4061-9f78-80212f529eb9",
      ResourceVersion: (string) (len=5) "33920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-477hw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-477hw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-477hw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.019899 15 deployment.go:68] Pod "webserver-deployment-685b768f58-r4xlw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r4xlw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28320ab8-afe6-4971-9f85-80134bfd7100",
      ResourceVersion: (string) (len=5) "33851",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44vwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44vwk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-44vwk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.023579 15 deployment.go:68] Pod "webserver-deployment-685b768f58-trnhq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-trnhq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ce2eeaa-1a98-44c6-8025-b2b29dc5ce1b",
      ResourceVersion: (string) (len=5) "33880",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85mmx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85mmx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-85mmx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.031222 15 deployment.go:68] Pod "webserver-deployment-685b768f58-vsgm4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vsgm4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06f4c48d-d4c4-47c9-a85e-ce95db8b30ae",
      ResourceVersion: (string) (len=5) "33877",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v9jtr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v9jtr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v9jtr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.041007 15 deployment.go:68] Pod "webserver-deployment-685b768f58-xqd92" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xqd92",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2528059-2119-4792-9f0a-f3304e1066c6",
      ResourceVersion: (string) (len=5) "33692",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 35 31 5c 22 7d 22 3a  |.233.66.151\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8mbgq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8mbgq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) (len=13) "10.233.66.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a56a74747c20a81661645dd3661a4717a54851c9de818107b6b54244e7f792d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8mbgq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.060088 15 deployment.go:68] Pod "webserver-deployment-685b768f58-z9ltk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z9ltk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0df0806-cfc6-4ab6-979c-c7c44eff61a0",
      ResourceVersion: (string) (len=5) "33720",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "73e0c3d8-648e-47b0-b29e-fb9d438f37a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  65 30 63 33 64 38 2d 36  |d\":\"73e0c3d8-6|
              00000090  34 38 65 2d 34 37 62 30  2d 62 32 39 65 2d 66 62  |48e-47b0-b29e-fb|
              000000a0  39 64 34 33 38 66 33 37  61 35 5c 22 7d 22 3a 7b  |9d438f37a5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 37 33 5c 22 7d 22 3a  |.233.64.173\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cg889",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cg889",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) (len=13) "10.233.64.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892326747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://39f3cca5ae051b88e503f5ec984d99590ad084a4945581948d9b1849a267446e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cg889",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.075923 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4286h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4286h",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b9eb55d-fee1-45a1-9cd2-6edcb1ae97a1",
      ResourceVersion: (string) (len=5) "33750",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqk9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqk9c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mqk9c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.135793 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-65q5r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-65q5r",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c9bf889-e09e-4b23-b3ee-b9335513ff10",
      ResourceVersion: (string) (len=5) "33908",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8278q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8278q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8278q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.201956 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6cfjs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6cfjs",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98369a72-ac46-4410-9b02-6f8ce5ddb1b2",
      ResourceVersion: (string) (len=5) "33934",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7qq9l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7qq9l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7qq9l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.206681 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6ghh7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6ghh7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6cd3c00-81ae-44f5-8a43-fcf10a39a813",
      ResourceVersion: (string) (len=5) "33755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dd6fd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dd6fd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dd6fd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.211728 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6z5mm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6z5mm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78667aa7-bb55-4d52-9fa2-c935e489298b",
      ResourceVersion: (string) (len=5) "33786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ccmjg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ccmjg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ccmjg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.218219 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7s5rh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7s5rh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad477c4e-7130-4110-9ef5-b269cc8fff88",
      ResourceVersion: (string) (len=5) "33914",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8cjk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8cjk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j8cjk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0901 12:32:35.323599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:35.329273 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-85j9g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-85j9g",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ffdebdd-0c1a-4a52-a621-491cef292ab4",
      ResourceVersion: (string) (len=5) "33904",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t2xcp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t2xcp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t2xcp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.348928 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9jg5f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9jg5f",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4d8cd42-39c7-4c17-9415-cf7a25a33713",
      ResourceVersion: (string) (len=5) "33901",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j9b7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j9b7d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j9b7d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.482213 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bz7rc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bz7rc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0547e1a9-2d62-4155-b6b9-9a6c76f7179a",
      ResourceVersion: (string) (len=5) "33952",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvkvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvkvq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bvkvq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:35.947218 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pb2h6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pb2h6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13188a84-bef9-480d-a43d-de739a223100",
      ResourceVersion: (string) (len=5) "33783",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sqxgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sqxgc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sqxgc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:36.047566 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sl45d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sl45d",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f66618b4-d238-4eff-a97d-40e418b85785",
      ResourceVersion: (string) (len=5) "33981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 34 2e 31 30 30  5c 22 7d 22 3a 7b 22 2e  |3.64.100\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4h596",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4h596",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.245"
        }
      },
      PodIP: (string) (len=13) "10.233.64.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=332) "initializing source docker://webserver:404: (Mirrors also failed: [mirror.gcr.io/library/webserver:404: reading manifest 404 in mirror.gcr.io/library/webserver: manifest unknown: Failed to fetch \"404\"]): docker.io/library/webserver:404: reading manifest 404 in docker.io/library/webserver: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4h596",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:36.157230 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ttllw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ttllw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf045b45-137d-418c-8a0a-42cd656cab8f",
      ResourceVersion: (string) (len=5) "33898",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qh5qj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qh5qj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.194",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.194"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qh5qj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:36.312572 15 deployment.go:68] Pod "webserver-deployment-6fc69b9478-z766j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-z766j",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1699e119-6912-462b-8789-0e25488345c2",
      ResourceVersion: (string) (len=5) "33930",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "edab2585-37a1-414f-98c5-30f3c43d3bc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  61 62 32 35 38 35 2d 33  |d\":\"edab2585-3|
              00000090  37 61 31 2d 34 31 34 66  2d 39 38 63 35 2d 33 30  |7a1-414f-98c5-30|
              000000a0  66 33 63 34 33 64 33 62  63 39 5c 22 7d 22 3a 7b  |f3c43d3bc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vf84z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vf84z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892326752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892326752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vf84z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:32:36.315635 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:32:36.390094      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-2549" for this suite. @ 09/01/25 12:32:36.406
â€¢ [11.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/01/25 12:32:36.73
  I0901 12:32:36.730302 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:32:36.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:36.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:36.836
  E0901 12:32:37.390950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:38.391651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:39.009848 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8156" for this suite. @ 09/01/25 12:32:39.034
â€¢ [2.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/01/25 12:32:39.063
  I0901 12:32:39.063940 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:32:39.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:39.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:39.112
  STEP: Creating a kubernetes client @ 09/01/25 12:32:39.125
  I0901 12:32:39.125589 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename disruption-2 @ 09/01/25 12:32:39.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:39.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:39.174
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:32:39.199
  E0901 12:32:39.392656      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:40.394049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:32:41.249
  E0901 12:32:41.393822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:42.393899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:43.396987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:32:43.529
  E0901 12:32:44.398587      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:45.398825      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/01/25 12:32:45.581
  STEP: listing a collection of PDBs in namespace disruption-5780 @ 09/01/25 12:32:45.591
  STEP: deleting a collection of PDBs @ 09/01/25 12:32:45.6
  STEP: Waiting for the PDB collection to be deleted @ 09/01/25 12:32:45.717
  I0901 12:32:45.730914 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4508" for this suite. @ 09/01/25 12:32:45.748
  I0901 12:32:45.767079 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5780" for this suite. @ 09/01/25 12:32:45.847
â€¢ [6.809 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:32:45.882
  I0901 12:32:45.883629 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 12:32:45.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:45.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:45.931
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/01/25 12:32:45.953
  STEP: Watching for error events or started pod @ 09/01/25 12:32:45.981
  E0901 12:32:46.398901      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:47.399940      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/01/25 12:32:47.997
  E0901 12:32:48.400049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:49.400034      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/01/25 12:32:50.037
  STEP: Getting logs from the pod @ 09/01/25 12:32:50.038
  STEP: Checking that the sysctl is actually updated @ 09/01/25 12:32:50.065
  I0901 12:32:50.065675 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-368" for this suite. @ 09/01/25 12:32:50.085
â€¢ [4.227 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/01/25 12:32:50.109
  I0901 12:32:50.109115 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:32:50.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:50.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:50.158
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7177.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-7177.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 12:32:50.167
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7177.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7177.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 12:32:50.167
  STEP: creating a pod to probe /etc/hosts @ 09/01/25 12:32:50.167
  STEP: submitting the pod to kubernetes @ 09/01/25 12:32:50.167
  E0901 12:32:50.400773      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:51.400950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:52.401090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:53.401647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:32:54.243
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:32:54.257
  I0901 12:32:54.326176 15 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-7177/dns-test-ba874efb-9c5b-476e-b673-a2ba0f157de8: the server could not find the requested resource (get pods dns-test-ba874efb-9c5b-476e-b673-a2ba0f157de8)
  I0901 12:32:54.326919 15 dns_common.go:506] Lookups using dns-7177/dns-test-ba874efb-9c5b-476e-b673-a2ba0f157de8 failed for: [jessie_hosts@dns-querier-1]

  I0901 12:32:54.355128 15 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:32:54.378102 15 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:32:54.399291 15 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:32:54.402087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:55.403268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:56.402641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:57.403316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:32:58.403950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:32:59.304587 15 dns_common.go:546] DNS probes using dns-7177/dns-test-ba874efb-9c5b-476e-b673-a2ba0f157de8 succeeded

  STEP: deleting the pod @ 09/01/25 12:32:59.305
  I0901 12:32:59.345320 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7177" for this suite. @ 09/01/25 12:32:59.381
â€¢ [9.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  E0901 12:32:59.404042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 09/01/25 12:32:59.407
  I0901 12:32:59.407305 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 12:32:59.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:32:59.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:32:59.484
  STEP: Creating a LimitRange @ 09/01/25 12:32:59.495
  STEP: Setting up watch @ 09/01/25 12:32:59.497
  STEP: Submitting a LimitRange @ 09/01/25 12:32:59.618
  STEP: Verifying LimitRange creation was observed @ 09/01/25 12:32:59.635
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/01/25 12:32:59.639
  I0901 12:32:59.646039 15 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 12:32:59.646130 15 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/01/25 12:32:59.646
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/01/25 12:32:59.66
  I0901 12:32:59.666631 15 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 12:32:59.666715 15 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/01/25 12:32:59.666
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/01/25 12:32:59.681
  I0901 12:32:59.689218 15 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0901 12:32:59.689304 15 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/01/25 12:32:59.689
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 12:32:59.695
  STEP: Updating a LimitRange @ 09/01/25 12:32:59.7
  STEP: Verifying LimitRange updating is effective @ 09/01/25 12:32:59.713
  E0901 12:33:00.405005      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:01.404856      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/01/25 12:33:01.722
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 12:33:01.736
  STEP: Deleting a LimitRange @ 09/01/25 12:33:01.744
  STEP: Verifying the LimitRange was deleted @ 09/01/25 12:33:01.759
  E0901 12:33:02.405058      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:03.405478      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:04.405655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:05.406549      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:06.407376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:06.779117 15 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/01/25 12:33:06.779
  I0901 12:33:06.810496 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6926" for this suite. @ 09/01/25 12:33:06.825
â€¢ [7.439 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/01/25 12:33:06.846
  I0901 12:33:06.846744 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 12:33:06.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:33:06.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:33:06.893
  STEP: Creating pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422 @ 09/01/25 12:33:06.901
  E0901 12:33:07.407795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:08.408345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 12:33:08.942
  I0901 12:33:08.952153 15 container_probe.go:1749] Initial restart count of pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c is 0
  I0901 12:33:08.964982 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:09.408782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:10.408962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:10.977935 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:11.409089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:12.409297      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:12.994279 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:13.409373      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:14.409979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:15.004372 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:15.417063      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:16.418052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:17.024130 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:17.419210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:18.419355      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:19.034652 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:19.420929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:20.421329      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:21.048941 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:21.421694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:22.422148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:23.061066 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:23.423070      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:24.423866      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:25.073639 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:25.423931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:26.424772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:27.084013 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:27.425597      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:28.426035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:29.099489 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:29.428881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:30.427934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:31.113467 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:31.428498      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:32.429553      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:33.127002 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:33.430644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:34.431833      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:35.140149 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:35.431323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:36.431870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:37.154796 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:37.433275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:38.433295      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:39.169668 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:39.433947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:40.433921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:41.182622 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:41.435015      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:42.435925      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:43.195594 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:43.436890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:44.437772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:45.214302 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:45.439178      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:46.440112      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:47.226779 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:47.440123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:48.441172      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:49.242131 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:49.441530      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:50.441737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:51.255874 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:51.442136      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:52.443031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:53.266931 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:53.444075      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:54.444908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:55.279485 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:55.446140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:56.447019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:57.290002 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:57.448307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:33:58.449039      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:33:59.301831 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:33:59.448698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:00.449145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:01.317059 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:01.449905      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:02.451045      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:03.329979 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:03.451962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:04.451804      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:05.341686 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:05.453689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:06.454699      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:07.359136 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:07.455497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:08.456053      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:09.369352 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:09.456295      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:10.457137      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:11.384613 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:11.457621      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:12.458051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:13.395931 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:13.458843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:14.460131      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:15.422534 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:15.460474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:16.460968      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:17.434175 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:17.461222      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:18.461813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:19.462233      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:19.499724 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:20.463312      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:21.463481      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:21.512236 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:22.463770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:23.464059      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:23.524042 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:24.464953      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:25.464680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:25.534738 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:26.465695      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:27.465878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:27.545222 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:28.466058      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:29.467021      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:29.559884 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:30.467721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:31.468394      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:31.596362 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:32.468646      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:33.469321      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:33.610369 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:34.470009      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:35.470291      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:35.624539 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:36.470780      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:37.471729      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:37.639119 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:38.472857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:39.472201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:39.653734 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:40.473571      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:41.473934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:41.667343 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:42.474642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:43.474801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:43.679809 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:44.475224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:45.475566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:45.693280 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:46.475613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:47.476101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:47.707845 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:48.476819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:49.477111      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:49.723291 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:50.478136      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:51.477839      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:51.734266 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:52.478759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:53.479241      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:53.748235 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:54.480219      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:55.480562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:55.759367 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:56.480995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:57.481701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:57.774063 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:34:58.482189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:34:59.482775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:34:59.784826 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:00.483307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:01.484150      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:01.798489 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:02.485498      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:03.485718      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:03.811244 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:04.486075      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:05.486762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:05.825745 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:06.487177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:07.487169      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:07.838196 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:08.487878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:09.488784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:09.855852 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:10.489679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:11.490317      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:11.865971 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:12.490895      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:13.491636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:13.880225 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:14.492917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:15.494527      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:15.891492 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:16.494052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:17.494833      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:17.904902 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:18.495642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:19.495798      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:19.915993 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:20.496497      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:21.497337      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:21.929986 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:22.498648      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:23.498504      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:23.945943 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:24.499101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:25.499731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:25.960128 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:26.500580      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:27.500995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:27.970027 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:28.501944      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:29.502273      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:29.982083 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:30.504300      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:31.503212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:31.992970 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:32.503964      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:33.506131      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:34.010677 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:34.507035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:35.506591      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:36.025809 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:36.507831      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:37.507838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:38.044081 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:38.508835      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:39.508265      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:40.061329 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:40.509349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:41.509482      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:42.079862 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:42.509986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:43.510470      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:44.092356 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:44.510783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:45.511759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:46.106729 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:46.512015      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:47.512224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:48.115948 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:48.513268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:49.513721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:50.132580 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:50.513979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:51.514664      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:52.145489 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:52.515041      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:53.515810      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:54.157968 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:54.516733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:55.517254      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:56.174288 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:56.517784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:57.518357      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:35:58.186862 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:35:58.519393      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:35:59.520123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:00.202676 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:00.520827      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:01.521641      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:02.216234 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:02.523462      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:03.523666      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:04.234259 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:04.523854      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:05.524709      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:06.245961 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:06.525299      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:07.524887      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:08.263505 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:08.526063      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:09.527090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:10.279651 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:10.526790      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:11.526951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:12.294966 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:12.527395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:13.527566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:14.309277 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:14.529087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:15.531684      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:16.322144 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:16.530378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:17.530799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:18.339125 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:18.532073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:19.532928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:20.358940 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:20.533341      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:21.533652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:22.372247 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:22.533888      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:23.534072      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:24.390185 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:24.535094      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:25.535824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:26.401177 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:26.536636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:27.536824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:28.415691 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:28.540241      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:29.538252      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:30.425347 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:30.538788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:31.538800      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:32.440744 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:32.540004      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:33.540616      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:34.450711 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:34.541570      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:35.542738      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:36.468348 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:36.543083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:37.544082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:38.478024 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:38.544290      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:39.544944      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:40.492240 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:40.545759      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:41.546577      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:42.504902 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:42.547117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:43.547815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:44.516940 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:44.548496      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:45.549397      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:46.534043 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:46.550369      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:47.552275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:48.545341 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:48.552293      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:49.552194      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:50.553639      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:50.559963 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:51.553117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:52.553962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:52.573491 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:53.555165      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:54.555649      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:54.587384 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:55.555777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:56.556362      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:56.599750 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:57.556685      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:36:58.556998      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:36:58.619503 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:36:59.557059      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:00.557997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:00.634038 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:37:01.558255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:02.558795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:02.650767 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:37:03.561065      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:04.560028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:04.663209 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:37:05.560836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:06.560858      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:06.676790 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:37:07.562145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:08.562982      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:08.689637 15 container_probe.go:1759] Get pod busybox-04dd10fd-e329-40af-bdf0-b0047ae3382c in namespace container-probe-4422
  E0901 12:37:09.563134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:10.563280      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/01/25 12:37:10.691
  I0901 12:37:10.741049 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4422" for this suite. @ 09/01/25 12:37:10.776
â€¢ [243.945 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/01/25 12:37:10.795
  I0901 12:37:10.796638 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename events @ 09/01/25 12:37:10.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:37:10.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:37:10.84
  STEP: Create set of events @ 09/01/25 12:37:10.846
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 12:37:10.875
  STEP: delete a list of events @ 09/01/25 12:37:10.882
  I0901 12:37:10.882161 15 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 12:37:10.932
  I0901 12:37:10.941091 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-826" for this suite. @ 09/01/25 12:37:10.958
â€¢ [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:37:10.983
  I0901 12:37:10.983372 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename ingress @ 09/01/25 12:37:10.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:37:11.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:37:11.029
  STEP: getting /apis @ 09/01/25 12:37:11.036
  STEP: getting /apis/networking.k8s.io @ 09/01/25 12:37:11.047
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 12:37:11.05
  STEP: creating @ 09/01/25 12:37:11.053
  STEP: getting @ 09/01/25 12:37:11.092
  STEP: listing @ 09/01/25 12:37:11.101
  STEP: watching @ 09/01/25 12:37:11.111
  I0901 12:37:11.111950 15 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:37:11.114
  STEP: cluster-wide watching @ 09/01/25 12:37:11.123
  I0901 12:37:11.123860 15 ingress.go:198] starting watch
  STEP: patching @ 09/01/25 12:37:11.126
  STEP: updating @ 09/01/25 12:37:11.141
  I0901 12:37:11.164835 15 ingress.go:221] waiting for watch events with expected annotations
  I0901 12:37:11.165032 15 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 12:37:11.165
  STEP: updating /status @ 09/01/25 12:37:11.182
  STEP: get /status @ 09/01/25 12:37:11.212
  STEP: deleting @ 09/01/25 12:37:11.222
  STEP: deleting a collection @ 09/01/25 12:37:11.256
  I0901 12:37:11.299459 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4850" for this suite. @ 09/01/25 12:37:11.314
â€¢ [0.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 09/01/25 12:37:11.337
  I0901 12:37:11.337255 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 12:37:11.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:37:11.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:37:11.387
  STEP: Creating service test in namespace statefulset-1804 @ 09/01/25 12:37:11.398
  STEP: Looking for a node to schedule stateful set and pod @ 09/01/25 12:37:11.413
  STEP: Creating pod with conflicting port in namespace statefulset-1804 @ 09/01/25 12:37:11.423
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1804 @ 09/01/25 12:37:11.472
  E0901 12:37:11.563921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:12.564890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1804 @ 09/01/25 12:37:13.496
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1804 @ 09/01/25 12:37:13.518
  E0901 12:37:13.565100      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:13.579580 15 statefulset.go:848] Observed stateful pod in namespace: statefulset-1804, name: ss-0, uid: 1c0935b5-dea8-475f-af65-2f283c7239fb, status phase: Pending. Waiting for statefulset controller to delete.
  I0901 12:37:13.614476 15 statefulset.go:872] Observed stateful pod in namespace: statefulset-1804, name: ss-0, uid: 1c0935b5-dea8-475f-af65-2f283c7239fb, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 12:37:13.679468 15 statefulset.go:872] Observed stateful pod in namespace: statefulset-1804, name: ss-0, uid: 1c0935b5-dea8-475f-af65-2f283c7239fb, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 12:37:13.696710 15 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-1804
  STEP: Removing pod with conflicting port in namespace statefulset-1804 @ 09/01/25 12:37:13.696
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1804 and will be in running state @ 09/01/25 12:37:13.72
  E0901 12:37:14.565474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:15.565784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:15.741553 15 statefulset.go:138] Deleting all statefulset in ns statefulset-1804
  I0901 12:37:15.753021 15 rest.go:152] Scaling statefulset ss to 0
  E0901 12:37:16.566261      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:17.567059      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:18.567864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:19.567914      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:20.569077      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:21.569993      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:22.574843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:23.579487      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:24.580083      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:25.576565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:37:25.793752 15 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 12:37:25.803019 15 rest.go:90] Deleting statefulset ss
  I0901 12:37:25.843999 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1804" for this suite. @ 09/01/25 12:37:25.856
â€¢ [14.542 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:37:25.879
  I0901 12:37:25.879255 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:37:25.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:37:25.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:37:25.92
  STEP: Creating configMap configmap-7166/configmap-test-569d0ff7-b22b-4dc0-acab-adf6f8a9e416 @ 09/01/25 12:37:25.926
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:37:25.937
  E0901 12:37:26.590578      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:27.591811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:28.584370      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:29.583149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:37:29.994
  I0901 12:37:30.014083 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-0701ed9e-6077-40f9-9dcf-127b500ba902 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 12:37:30.065
  I0901 12:37:30.107189 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7166" for this suite. @ 09/01/25 12:37:30.133
â€¢ [4.270 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 09/01/25 12:37:30.15
  I0901 12:37:30.150506 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:37:30.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:37:30.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:37:30.196
  I0901 12:37:30.234349 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:37:30.583481      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:31.583687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:32.583979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:33.584808      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:34.585109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:35.585157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:36.585876      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:37.585961      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:38.586587      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:39.586743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:40.586878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:41.587162      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:42.587484      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:43.588292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:44.588615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:45.589335      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:46.590813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:47.591492      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:48.592213      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:49.592630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:50.592968      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:51.593101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:52.593476      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:53.593869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:54.594394      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:55.595658      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:56.596779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:57.596944      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:58.598066      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:37:59.598876      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:00.599186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:01.600115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:02.600249      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:03.600472      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:04.600743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:05.601724      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:06.602811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:07.603068      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:08.603397      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:09.603973      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:10.604291      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:11.604778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:12.606019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:13.606309      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:14.606654      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:15.606761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:16.607845      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:17.608781      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:18.610276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:19.610931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:20.613365      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:21.612324      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:22.613360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:23.613723      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:24.614792      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:25.615647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:26.616140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:27.616268      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:28.616775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:29.617130      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:38:30.265318 15 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 12:38:30.278
  I0901 12:38:30.278601 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 12:38:30.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:30.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:30.334
  STEP: Finding an available node @ 09/01/25 12:38:30.345
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:38:30.346
  E0901 12:38:30.617865      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:31.618023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:38:32.416
  I0901 12:38:32.450374 15 preemption.go:709] found a healthy node: aeshuj4hoh7a-3
  STEP: Adding a custom resource @ 09/01/25 12:38:32.464
  E0901 12:38:32.621736      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:33.621286      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:34.621946      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:35.622758      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:36.623514      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:37.623774      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:38.624304      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:38:38.639789 15 preemption.go:828] pods created so far: [1 1 1]
  I0901 12:38:38.639894 15 preemption.go:829] length of pods created so far: 3
  E0901 12:38:39.625691      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:40.625950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:38:40.668615 15 preemption.go:846] pods created so far: [2 2 1]
  E0901 12:38:41.626315      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:42.626920      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:43.626913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:44.628234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:45.629454      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:46.629934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:47.630649      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/01/25 12:38:47.67
  STEP: Removing a custom resource @ 09/01/25 12:38:47.865
  STEP: Removing a custom resource @ 09/01/25 12:38:47.903
  STEP: Removing a custom resource @ 09/01/25 12:38:47.935
  I0901 12:38:47.968145 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4758" for this suite. @ 09/01/25 12:38:47.984
  I0901 12:38:48.004055 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-567" for this suite. @ 09/01/25 12:38:48.086
â€¢ [77.956 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/01/25 12:38:48.107
  I0901 12:38:48.107367 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 12:38:48.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:48.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:48.148
  STEP: creating a policy with variables @ 09/01/25 12:38:48.177
  STEP: waiting until the marker is denied @ 09/01/25 12:38:48.23
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 12:38:48.454
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 12:38:48.478
  I0901 12:38:48.549454 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2137" for this suite. @ 09/01/25 12:38:48.584
â€¢ [0.505 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/01/25 12:38:48.611
  I0901 12:38:48.611685 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:38:48.62
  E0901 12:38:48.632310      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:48.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:48.67
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:38:48.682
  E0901 12:38:49.630998      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:50.631675      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:51.632114      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:52.633064      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:38:52.754
  I0901 12:38:52.767840 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-e52feb39-b6d3-49f7-95ca-32ff698e6202 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:38:52.798
  I0901 12:38:52.840082 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9268" for this suite. @ 09/01/25 12:38:52.856
â€¢ [4.268 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/01/25 12:38:52.881
  I0901 12:38:52.881219 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:38:52.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:38:52.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:38:52.933
  STEP: Setting up data @ 09/01/25 12:38:52.946
  STEP: Creating pod pod-subpath-test-projected-97wk @ 09/01/25 12:38:52.979
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:38:52.979
  E0901 12:38:53.708670      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:54.708939      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:55.708246      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:56.709063      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:57.709677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:58.709963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:38:59.710390      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:00.710358      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:01.710888      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:02.711177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:03.712351      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:04.712283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:05.713385      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:06.714023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:07.714704      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:08.714884      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:09.716188      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:10.717364      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:11.717834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:12.717995      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:13.718291      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:14.718699      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:15.719201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:16.719336      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:39:17.198
  I0901 12:39:17.219788 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-subpath-test-projected-97wk container test-container-subpath-projected-97wk: <nil>
  STEP: delete the pod @ 09/01/25 12:39:17.287
  STEP: Deleting pod pod-subpath-test-projected-97wk @ 09/01/25 12:39:17.343
  I0901 12:39:17.344223 15 delete.go:62] Deleting pod "pod-subpath-test-projected-97wk" in namespace "subpath-9268"
  I0901 12:39:17.356224 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9268" for this suite. @ 09/01/25 12:39:17.398
â€¢ [24.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/01/25 12:39:17.426
  I0901 12:39:17.426591 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 12:39:17.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:39:17.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:39:17.484
  STEP: Read namespace status @ 09/01/25 12:39:17.492
  I0901 12:39:17.505352 15 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/01/25 12:39:17.505
  I0901 12:39:17.520306 15 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/01/25 12:39:17.52
  I0901 12:39:17.548880 15 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0901 12:39:17.550101 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9052" for this suite. @ 09/01/25 12:39:17.568
â€¢ [0.171 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/01/25 12:39:17.597
  I0901 12:39:17.598030 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:39:17.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:39:17.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:39:17.644
  STEP: Setting up server cert @ 09/01/25 12:39:17.694
  E0901 12:39:17.719575      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:18.720679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:39:19.243
  STEP: Deploying the webhook pod @ 09/01/25 12:39:19.275
  STEP: Wait for the deployment to be ready @ 09/01/25 12:39:19.305
  I0901 12:39:19.330640 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:39:19.721857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:20.723002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:39:21.376306 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 39, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 39, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 39, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 39, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:39:21.723264      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:22.723195      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:39:23.389
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:39:23.416
  E0901 12:39:23.723515      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:39:24.417217 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/01/25 12:39:24.441
  STEP: create a pod that should be updated by the webhook @ 09/01/25 12:39:24.503
  I0901 12:39:24.689016 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6992" for this suite. @ 09/01/25 12:39:24.699
  STEP: Destroying namespace "webhook-markers-3475" for this suite. @ 09/01/25 12:39:24.714
  E0901 12:39:24.725510      15 retrywatcher.go:160] "Watch failed" err="context canceled"
â€¢ [7.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/01/25 12:39:24.757
  I0901 12:39:24.757331 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename discovery @ 09/01/25 12:39:24.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:39:24.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:39:24.789
  STEP: Setting up server cert @ 09/01/25 12:39:24.795
  E0901 12:39:25.725082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 09/01/25 12:39:25.935
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/01/25 12:39:25.94
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/01/25 12:39:25.944
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/01/25 12:39:25.947
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/01/25 12:39:25.952
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/01/25 12:39:25.955
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/01/25 12:39:25.961
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/01/25 12:39:25.966
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/01/25 12:39:25.971
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/01/25 12:39:25.974
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/01/25 12:39:25.979
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/01/25 12:39:25.983
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/01/25 12:39:25.986
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/01/25 12:39:25.989
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/01/25 12:39:25.993
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/01/25 12:39:25.997
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/01/25 12:39:26.001
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/01/25 12:39:26.004
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/01/25 12:39:26.009
  I0901 12:39:26.013677 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3299" for this suite. @ 09/01/25 12:39:26.029
â€¢ [1.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/01/25 12:39:26.057
  I0901 12:39:26.057487 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 12:39:26.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:39:26.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:39:26.113
  I0901 12:39:26.122764 15 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 12:39:26.148204 15 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 12:39:26.166662 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-1 before test
  I0901 12:39:26.187922 15 predicates.go:957] cilium-node-init-t2mqh from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188022 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 12:39:26.188061 15 predicates.go:957] cilium-phmzb from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188136 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 12:39:26.188168 15 predicates.go:957] coredns-668d6bf9bc-w8sj7 from kube-system started at 2025-09-01 10:53:37 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188194 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 12:39:26.188221 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188245 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:39:26.188271 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188295 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0901 12:39:26.188323 15 predicates.go:957] kube-proxy-9m2kx from kube-system started at 2025-09-01 10:43:58 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188348 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 12:39:26.188374 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-1 from kube-system started at 2025-09-01 11:02:14 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.188398 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:39:26.188476 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-sbccx from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:39:26.188503 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:39:26.188557 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 12:39:26.188585 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-2 before test
  I0901 12:39:26.215202 15 predicates.go:957] cilium-4g649 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215570 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 12:39:26.215635 15 predicates.go:957] cilium-node-init-xjhj7 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215666 15 predicates.go:959] 	Container node-init ready: true, restart count 2
  I0901 12:39:26.215695 15 predicates.go:957] cilium-operator-7869bdf68b-xzq27 from kube-system started at 2025-09-01 11:44:21 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215719 15 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0901 12:39:26.215745 15 predicates.go:957] coredns-668d6bf9bc-jtmfr from kube-system started at 2025-09-01 10:47:10 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215801 15 predicates.go:959] 	Container coredns ready: true, restart count 1
  I0901 12:39:26.215827 15 predicates.go:957] kube-apiserver-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215851 15 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0901 12:39:26.215876 15 predicates.go:957] kube-controller-manager-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215900 15 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 1
  I0901 12:39:26.215925 15 predicates.go:957] kube-proxy-x9ghv from kube-system started at 2025-09-01 10:44:58 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215947 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 12:39:26.215972 15 predicates.go:957] kube-scheduler-aeshuj4hoh7a-2 from kube-system started at 2025-09-01 10:52:19 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.215998 15 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0901 12:39:26.216024 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-2t4p8 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:39:26.216048 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:39:26.216072 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 12:39:26.216113 15 predicates.go:119] 
  Logging pods the apiserver thinks is on node aeshuj4hoh7a-3 before test
  I0901 12:39:26.239189 15 predicates.go:957] cilium-node-init-nkr6k from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.240099 15 predicates.go:959] 	Container node-init ready: true, restart count 1
  I0901 12:39:26.240852 15 predicates.go:957] cilium-tdgd6 from kube-system started at 2025-09-01 10:46:23 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.241355 15 predicates.go:959] 	Container cilium-agent ready: true, restart count 1
  I0901 12:39:26.241452 15 predicates.go:957] kube-proxy-sgb9m from kube-system started at 2025-09-01 10:45:27 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.241488 15 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0901 12:39:26.241518 15 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 11:08:19 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.241591 15 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0901 12:39:26.241636 15 predicates.go:957] sonobuoy-e2e-job-f2a5303f9c494ce3 from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:39:26.241661 15 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 12:39:26.241684 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:39:26.241760 15 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-wmhsb from sonobuoy started at 2025-09-01 11:08:26 +0000 UTC (2 container statuses recorded)
  I0901 12:39:26.241786 15 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 12:39:26.241808 15 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0901 12:39:26.241833 15 predicates.go:957] webhook-to-be-mutated from webhook-6992 started at 2025-09-01 12:39:24 +0000 UTC (1 container statuses recorded)
  I0901 12:39:26.241857 15 predicates.go:959] 	Container example ready: false, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 12:39:26.242
  E0901 12:39:26.725379      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:27.726613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 12:39:28.329
  STEP: Trying to apply a random label on the found node. @ 09/01/25 12:39:28.402
  STEP: verifying the node has the label kubernetes.io/e2e-5e8835db-0888-4f61-a773-e0b7ebaa3ee7 95 @ 09/01/25 12:39:28.433
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/01/25 12:39:28.444
  E0901 12:39:28.754343      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:29.751491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.182 on the node which pod4 resides and expect not scheduled @ 09/01/25 12:39:30.49
  E0901 12:39:30.750897      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:31.751204      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:32.751545      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:33.751703      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:34.752807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:35.752470      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:36.753180      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:37.753644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:38.753742      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:39.754257      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:40.756023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:41.754962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:42.755720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:43.756108      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:44.756050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:45.756349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:46.756694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:47.756913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:48.757622      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:49.757933      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:50.758796      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:51.759636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:52.759817      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:53.760547      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:54.760492      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:55.761306      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:56.762601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:57.762951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:58.763838      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:39:59.764837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:00.765989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:01.765968      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:02.766873      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:03.768613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:04.768897      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:05.769391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:06.769999      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:07.770748      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:08.771001      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:09.771506      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:10.772199      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:11.773073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:12.774037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:13.774186      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:14.775189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:15.775690      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:16.776814      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:17.777791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:18.777696      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:19.778693      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:20.778569      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:21.778966      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:22.780049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:23.780952      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:24.781102      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:25.781821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:26.781850      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:27.782145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:28.784835      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:29.785644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:30.785608      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:31.785677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:32.785869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:33.786390      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:34.787328      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:35.788046      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:36.787981      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:37.788803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:38.789140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:39.789218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:40.789788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:41.789892      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:42.790769      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:43.791117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:44.791233      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:45.792764      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:46.792816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:47.793240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:48.797613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:49.798551      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:50.798859      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:51.799623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:52.799793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:53.799829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:54.800390      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:55.800975      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:56.801831      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:57.802049      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:58.803367      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:40:59.803704      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:00.804324      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:01.805087      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:02.805666      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:03.806137      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:04.806484      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:05.807138      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:06.807462      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:07.807734      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:08.807889      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:09.808044      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:10.808227      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:11.808755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:12.809799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:13.809878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:14.810221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:15.810633      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:16.811586      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:17.811516      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:18.811791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:19.812633      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:20.813569      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:21.813636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:22.813888      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:23.814172      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:24.815056      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:25.815871      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:26.816851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:27.817493      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:28.818723      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:29.818148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:30.819829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:31.818917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:32.819912      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:33.820617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:34.821120      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:35.821822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:36.821880      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:37.823149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:38.822991      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:39.823561      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:40.823681      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:41.824307      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:42.824678      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:43.825577      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:44.825789      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:45.826195      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:46.826357      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:47.827791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:48.827807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:49.829274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:50.829346      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:51.829709      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:52.829885      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:53.831029      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:54.831493      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:55.832884      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:56.833193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:57.833566      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:58.834088      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:41:59.834339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:00.834869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:01.834869      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:02.836365      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:03.837251      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:04.837167      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:05.837934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:06.838047      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:07.838680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:08.839284      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:09.839837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:10.840754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:11.840332      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:12.840710      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:13.840950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:14.841318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:15.842386      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:16.843136      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:17.843107      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:18.843383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:19.844925      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:20.845455      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:21.846481      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:22.847332      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:23.848015      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:24.848864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:25.849718      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:26.850732      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:27.850824      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:28.851096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:29.851635      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:30.851958      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:31.851877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:32.852694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:33.852897      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:34.852733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:35.853899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:36.854508      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:37.854674      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:38.855165      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:39.855953      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:40.856488      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:41.856661      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:42.856888      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:43.857050      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:44.857725      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:45.857819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:46.858274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:47.859122      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:48.859913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:49.860799      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:50.860149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:51.860390      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:52.860752      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:53.861814      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:54.862376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:55.863695      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:56.864212      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:57.864945      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:58.865813      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:42:59.865957      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:00.867229      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:01.868020      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:02.868498      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:03.869323      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:04.870228      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:05.870084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:06.870178      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:07.870549      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:08.871927      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:09.873474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:10.873487      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:11.873788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:12.873893      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:13.874821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:14.875798      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:15.876512      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:16.876634      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:17.877547      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:18.877642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:19.878554      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:20.880937      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:21.881253      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:22.882158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:23.883652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:24.883711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:25.884550      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:26.887489      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:27.886300      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:28.886816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:29.887388      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:30.887925      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:31.888652      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:32.889003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:33.889777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:34.890073      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:35.890585      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:36.890841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:37.891801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:38.892459      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:39.892890      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:40.894653      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:41.893871      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:42.894365      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:43.894651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:44.895262      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:45.895312      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:46.896090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:47.896564      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:48.897496      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:49.898656      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:50.898740      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:51.898891      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:52.899176      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:53.899474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:54.900038      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:55.900793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:56.901175      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:57.901680      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:58.902023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:43:59.902753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:00.903559      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:01.904288      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:02.905613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:03.906036      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:04.906805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:05.907127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:06.908167      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:07.908832      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:08.910007      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:09.910720      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:10.911386      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:11.911376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:12.912908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:13.912905      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:14.913336      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:15.914318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:16.915947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:17.916638      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:18.917737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:19.918107      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:20.919287      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:21.919954      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:22.920171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:23.920949      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:24.921872      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:25.923005      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:26.923270      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:27.923830      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:28.923923      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:29.925070      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5e8835db-0888-4f61-a773-e0b7ebaa3ee7 off the node aeshuj4hoh7a-3 @ 09/01/25 12:44:30.522
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5e8835db-0888-4f61-a773-e0b7ebaa3ee7 @ 09/01/25 12:44:30.578
  I0901 12:44:30.609376 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4942" for this suite. @ 09/01/25 12:44:30.631
â€¢ [304.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/01/25 12:44:30.674
  I0901 12:44:30.674602 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 12:44:30.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:30.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:30.71
  I0901 12:44:30.726996 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4353" for this suite. @ 09/01/25 12:44:30.738
â€¢ [0.087 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/01/25 12:44:30.764
  I0901 12:44:30.764940 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:44:30.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:30.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:30.813
  STEP: Creating configMap that has name configmap-test-emptyKey-56f32b0e-9a97-4707-b32c-1f5ad66cf035 @ 09/01/25 12:44:30.824
  I0901 12:44:30.830258 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2978" for this suite. @ 09/01/25 12:44:30.845
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:44:30.875
  I0901 12:44:30.875853 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:44:30.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:30.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:30.922
  E0901 12:44:30.925435      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a Replicaset @ 09/01/25 12:44:30.941
  STEP: Verify that the required pods have come up. @ 09/01/25 12:44:30.953
  I0901 12:44:30.971996 15 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 12:44:30.972
  E0901 12:44:31.925771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:32.926586      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/01/25 12:44:32.994
  I0901 12:44:33.008317 15 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/01/25 12:44:33.008
  I0901 12:44:33.047387 15 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/01/25 12:44:33.047
  I0901 12:44:33.054235 15 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0901 12:44:33.054782 15 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.055194 15 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.055839 15 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.055965 15 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8145 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 12:44:33.056026 15 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/01/25 12:44:33.056
  I0901 12:44:33.056121 15 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 12:44:33.080610 15 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/01/25 12:44:33.08
  I0901 12:44:33.086851 15 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0901 12:44:33.087246 15 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.088951 15 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.092351 15 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.093359 15 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8145 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 12:44:33.094048 15 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 12:44:33.094145 15 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8145 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0901 12:44:33.094205 15 replica_set.go:729] Replicaset test-rs has a patched status
  I0901 12:44:33.094617 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8145" for this suite. @ 09/01/25 12:44:33.111
â€¢ [2.263 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/01/25 12:44:33.139
  I0901 12:44:33.140023 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:44:33.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:33.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:33.204
  STEP: Creating ReplicationController "e2e-rc-vjqph" @ 09/01/25 12:44:33.219
  I0901 12:44:33.243066 15 rc.go:792] Get Replication Controller "e2e-rc-vjqph" to confirm replicas
  E0901 12:44:33.926581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:44:34.243880 15 rc.go:792] Get Replication Controller "e2e-rc-vjqph" to confirm replicas
  I0901 12:44:34.254992 15 rc.go:801] Found 1 replicas for "e2e-rc-vjqph" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-vjqph" @ 09/01/25 12:44:34.255
  STEP: Updating a scale subresource @ 09/01/25 12:44:34.264
  STEP: Verifying replicas where modified for replication controller "e2e-rc-vjqph" @ 09/01/25 12:44:34.277
  I0901 12:44:34.277072 15 rc.go:792] Get Replication Controller "e2e-rc-vjqph" to confirm replicas
  E0901 12:44:34.927018      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:44:35.277815 15 rc.go:792] Get Replication Controller "e2e-rc-vjqph" to confirm replicas
  I0901 12:44:35.289280 15 rc.go:801] Found 2 replicas for "e2e-rc-vjqph" replication controller
  I0901 12:44:35.289788 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2974" for this suite. @ 09/01/25 12:44:35.302
â€¢ [2.189 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/01/25 12:44:35.328
  I0901 12:44:35.328893 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:44:35.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:44:35.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:44:35.368
  STEP: Creating a cronjob @ 09/01/25 12:44:35.376
  STEP: Ensuring more than one job is running at a time @ 09/01/25 12:44:35.404
  E0901 12:44:35.927312      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:36.927360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:37.928602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:38.928655      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:39.929122      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:40.929718      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:41.930777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:42.931589      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:43.931710      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:44.932123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:45.933500      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:46.934485      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:47.935837      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:48.936028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:49.936177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:50.936623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:51.937300      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:52.937881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:53.938105      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:54.938775      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:55.939279      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:56.940076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:57.940631      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:58.941575      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:44:59.943001      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:00.943442      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:01.943331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:02.943376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:03.943675      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:04.943802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:05.944148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:06.944541      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:07.945576      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:08.945743      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:09.946011      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:10.946834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:11.947608      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:12.948148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:13.948086      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:14.948267      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:15.949105      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:16.949366      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:17.950385      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:18.951094      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:19.952496      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:20.952548      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:21.953502      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:22.954354      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:23.954792      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:24.955378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:25.956592      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:26.956600      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:27.957289      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:28.957716      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:29.958805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:30.959036      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:31.960149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:32.960778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:33.961148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:34.961716      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:35.961801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:36.962316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:37.963845      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:38.964068      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:39.963999      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:40.965114      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:41.965078      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:42.965572      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:43.965842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:44.966657      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:45.966917      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:46.967142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:47.968289      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:48.968878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:49.969489      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:50.969864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:51.970037      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:52.970280      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:53.970753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:54.971753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:55.971988      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:56.972226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:57.973913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:58.973870      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:45:59.974549      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:00.975471      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/01/25 12:46:01.417
  STEP: Removing cronjob @ 09/01/25 12:46:01.432
  I0901 12:46:01.457650 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2484" for this suite. @ 09/01/25 12:46:01.48
â€¢ [86.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/01/25 12:46:01.496
  I0901 12:46:01.496131 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:46:01.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:01.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:01.6
  E0901 12:46:01.976287      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:02.975445      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:03.975979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:04.976834      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/01/25 12:46:05.763
  STEP: referencing matching pods with named port @ 09/01/25 12:46:05.784
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/01/25 12:46:05.88
  STEP: recreating EndpointSlices after they've been deleted @ 09/01/25 12:46:05.903
  I0901 12:46:05.972081 15 endpointslice.go:938] EndpointSlice for Service endpointslice-1073/example-named-port not found
  E0901 12:46:05.978502      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:06.977936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:07.978670      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:07.988105 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1073" for this suite. @ 09/01/25 12:46:08.002
â€¢ [6.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 12:46:08.046
  I0901 12:46:08.046902 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:46:08.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:08.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:08.085
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 12:46:08.149
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:46:08.163
  I0901 12:46:08.257819 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:46:08.257907 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:46:08.979271      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:09.198745 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:46:09.198804 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:46:09.980600      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:10.186925 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 12:46:10.187233 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:46:10.980777      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:11.192228 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:46:11.192620 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/01/25 12:46:11.206
  I0901 12:46:11.298383 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:46:11.298624 15 fixtures.go:131] Node aeshuj4hoh7a-3 is running 0 daemon pod, expected 1
  E0901 12:46:11.980842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:12.274394 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:46:12.276081 15 fixtures.go:131] Node aeshuj4hoh7a-3 is running 0 daemon pod, expected 1
  E0901 12:46:12.981266      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:13.269551 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:46:13.269622 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:46:13.281
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2299, will wait for the garbage collector to delete the pods @ 09/01/25 12:46:13.281
  I0901 12:46:13.362093 15 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.690323ms
  I0901 12:46:13.463326 15 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.217966ms
  E0901 12:46:13.981893      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:14.993184      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:15.074896 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:46:15.075041 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:46:15.086113 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37396"},"items":null}

  I0901 12:46:15.094610 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37396"},"items":null}

  I0901 12:46:15.150181 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2299" for this suite. @ 09/01/25 12:46:15.167
â€¢ [7.149 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/01/25 12:46:15.194
  I0901 12:46:15.194337 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:46:15.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:15.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:15.249
  E0901 12:46:15.993745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:16.994107      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:17.995191      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:18.995706      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:19.330152 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8887" for this suite. @ 09/01/25 12:46:19.345
â€¢ [4.180 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/01/25 12:46:19.374
  I0901 12:46:19.374945 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:46:19.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:19.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:19.451
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:46:19.46
  E0901 12:46:19.995864      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:20.997763      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:21.996895      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:22.999224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:23.535
  I0901 12:46:23.543733 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downward-api-a4475f7a-3023-425f-86dd-9d831cc58b4b container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:46:23.606
  I0901 12:46:23.654214 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-720" for this suite. @ 09/01/25 12:46:23.671
â€¢ [4.321 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/01/25 12:46:23.696
  I0901 12:46:23.696586 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 12:46:23.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:23.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:23.756
  STEP: Create VolumeAttachment "va-e2e-xz8vx" on node "aeshuj4hoh7a-3" @ 09/01/25 12:46:23.782
  STEP: Get VolumeAttachment "va-e2e-xz8vx" on node "aeshuj4hoh7a-3" @ 09/01/25 12:46:23.799
  STEP: Patch VolumeAttachment "va-e2e-xz8vx" on node "aeshuj4hoh7a-3" @ 09/01/25 12:46:23.807
  STEP: List VolumeAttachments with "va-e2e-xz8vx=patched" label @ 09/01/25 12:46:23.83
  STEP: Delete VolumeAttachment "va-e2e-xz8vx" on node "aeshuj4hoh7a-3" @ 09/01/25 12:46:23.837
  STEP: Confirm deletion of VolumeAttachment "va-e2e-xz8vx" on node "aeshuj4hoh7a-3" @ 09/01/25 12:46:23.852
  STEP: Create VolumeAttachment "va-e2e-68qmc" on node "aeshuj4hoh7a-2" @ 09/01/25 12:46:23.883
  STEP: Update the VolumeAttachment "va-e2e-68qmc" on node "aeshuj4hoh7a-2" with label "va-e2e=updated" @ 09/01/25 12:46:23.895
  STEP: Create VolumeAttachment "va-e2e-whbd6" on node "aeshuj4hoh7a-1" @ 09/01/25 12:46:23.983
  STEP: Update the VolumeAttachment "va-e2e-whbd6" on node "aeshuj4hoh7a-1" with label "va-e2e=updated" @ 09/01/25 12:46:23.995
  E0901 12:46:23.999349      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 12:46:24.02
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 12:46:24.076
  I0901 12:46:24.088909 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6522" for this suite. @ 09/01/25 12:46:24.107
â€¢ [0.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/01/25 12:46:24.129
  I0901 12:46:24.129742 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 12:46:24.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:24.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:24.173
  I0901 12:46:24.183283 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  I0901 12:46:24.817932 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9587" for this suite. @ 09/01/25 12:46:24.834
â€¢ [0.722 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/01/25 12:46:24.851
  I0901 12:46:24.851731 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename deployment @ 09/01/25 12:46:24.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:24.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:24.9
  I0901 12:46:24.914918 15 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0901 12:46:24.942601 15 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0901 12:46:24.969306 15 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0901 12:46:25.000674      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:26.010710      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:27.012832      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:27.023902 15 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0901 12:46:27.041052 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 46, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 46, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 46, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 46, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-db85869db\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:46:28.011621      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:29.012498      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:29.054223 15 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0901 12:46:29.088053 15 deployment.go:314] Updating deployment test-recreate-deployment
  I0901 12:46:29.088199 15 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0901 12:46:29.388084 15 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2988",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76feae09-03c2-4fbd-b262-9ebdad18c7e1",
      ResourceVersion: (string) (len=5) "37579",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327584,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 12:46:29.408619 15 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2988",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "633f256f-324a-4317-b23c-94bfd8dc833f",
      ResourceVersion: (string) (len=5) "37577",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "76feae09-03c2-4fbd-b262-9ebdad18c7e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 66 65 61 65  30 39 2d 30 33 63 32 2d  |\"76feae09-03c2-|
              00000120  34 66 62 64 2d 62 32 36  32 2d 39 65 62 64 61 64  |4fbd-b262-9ebdad|
              00000130  31 38 63 37 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |18c7e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:46:29.420283 15 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0901 12:46:29.421265 15 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2988",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f5e2b63-6320-4f07-b4bb-d729756aec15",
      ResourceVersion: (string) (len=5) "37567",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327584,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "76feae09-03c2-4fbd-b262-9ebdad18c7e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 66 65 61 65  30 39 2d 30 33 63 32 2d  |\"76feae09-03c2-|
              00000120  34 66 62 64 2d 62 32 36  32 2d 39 65 62 64 61 64  |4fbd-b262-9ebdad|
              00000130  31 38 63 37 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |18c7e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 12:46:29.445033 15 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-h5czg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-h5czg",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-2988",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e37cf1f0-5009-4db8-9b51-26fdf30ab53b",
      ResourceVersion: (string) (len=5) "37580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "633f256f-324a-4317-b23c-94bfd8dc833f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 33  33 66 32 35 36 66 2d 33  |d\":\"633f256f-3|
              00000090  32 34 61 2d 34 33 31 37  2d 62 32 33 63 2d 39 34  |24a-4317-b23c-94|
              000000a0  62 66 64 38 64 63 38 33  33 66 5c 22 7d 22 3a 7b  |bfd8dc833f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8ksb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8ksb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "aeshuj4hoh7a-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892327589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.182",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.182"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892327589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n8ksb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 12:46:29.450771 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2988" for this suite. @ 09/01/25 12:46:29.474
â€¢ [4.638 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 09/01/25 12:46:29.493
  I0901 12:46:29.493781 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:46:29.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:29.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:29.537
  STEP: validating cluster-info @ 09/01/25 12:46:29.546
  I0901 12:46:29.550720 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-2739 cluster-info'
  I0901 12:46:29.883858 15 builder.go:146] stderr: ""
  I0901 12:46:29.884155 15 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0901 12:46:29.884432 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2739" for this suite. @ 09/01/25 12:46:29.895
â€¢ [0.425 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/01/25 12:46:29.919
  I0901 12:46:29.919728 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:46:29.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:29.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:29.946
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:46:29.952
  E0901 12:46:30.012447      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:31.012783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:32.015672      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:33.017031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:46:34.008
  E0901 12:46:34.017029      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:34.026943 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-1cb6146d-ebfd-45ec-a05d-3f339ea605e0 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:46:34.057
  I0901 12:46:34.109252 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1084" for this suite. @ 09/01/25 12:46:34.125
â€¢ [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 09/01/25 12:46:34.148
  I0901 12:46:34.148856 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:46:34.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:34.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:34.198
  STEP: create deployment with httpd image @ 09/01/25 12:46:34.207
  I0901 12:46:34.208691 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7237 create -f -'
  I0901 12:46:34.521493 15 builder.go:146] stderr: ""
  I0901 12:46:34.522035 15 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/01/25 12:46:34.522
  I0901 12:46:34.523881 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7237 diff -f -'
  I0901 12:46:34.956882 15 builder.go:135] rc: 1
  I0901 12:46:34.957588 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7237 delete -f -'
  E0901 12:46:35.019946      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:35.319538 15 builder.go:146] stderr: ""
  I0901 12:46:35.319623 15 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0901 12:46:35.319873 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7237" for this suite. @ 09/01/25 12:46:35.335
â€¢ [1.205 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/01/25 12:46:35.36
  I0901 12:46:35.360108 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:46:35.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:35.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:35.425
  STEP: Creating a test headless service @ 09/01/25 12:46:35.431
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-1822.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-1822.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:46:35.463
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1822.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1822.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1822.svc.cluster.local;sleep 1; done
   @ 09/01/25 12:46:35.464
  STEP: creating a pod to probe DNS @ 09/01/25 12:46:35.464
  STEP: submitting the pod to kubernetes @ 09/01/25 12:46:35.465
  E0901 12:46:36.020391      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:37.021111      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:46:37.544
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:46:37.555
  I0901 12:46:37.593112 15 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.602968 15 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.611256 15 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.623014 15 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.633107 15 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.644501 15 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.654447 15 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1822.svc.cluster.local from pod dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b: the server could not find the requested resource (get pods dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b)
  I0901 12:46:37.667774 15 dns_common.go:506] Lookups using dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1822.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1822.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1822.svc.cluster.local jessie_udp@dns-test-service-2.dns-1822.svc.cluster.local]

  I0901 12:46:37.685784 15 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:46:37.706319 15 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:46:37.722679 15 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:46:38.021882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:39.023453      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:40.022594      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:41.023926      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:42.024061      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:42.673203 15 dns_common.go:546] DNS probes using dns-1822/dns-test-eae75c0b-f928-4c5e-a76e-24ed80cd408b succeeded

  STEP: deleting the pod @ 09/01/25 12:46:42.674
  STEP: deleting the test headless service @ 09/01/25 12:46:42.715
  I0901 12:46:42.776480 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1822" for this suite. @ 09/01/25 12:46:42.786
â€¢ [7.440 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/01/25 12:46:42.8
  I0901 12:46:42.800332 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 12:46:42.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:42.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:42.836
  STEP: Creating two CSIDrivers @ 09/01/25 12:46:42.844
  STEP: Getting "inline-driver-ac145a9c-dcfd-416f-a2b2-b7fbf020935a" & "inline-driver-2ff72a4d-52ff-419b-9e86-377e4261c315" @ 09/01/25 12:46:42.887
  STEP: Patching the CSIDriver "inline-driver-2ff72a4d-52ff-419b-9e86-377e4261c315" @ 09/01/25 12:46:42.905
  STEP: Updating the CSIDriver "inline-driver-2ff72a4d-52ff-419b-9e86-377e4261c315" @ 09/01/25 12:46:42.922
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5497" @ 09/01/25 12:46:42.943
  STEP: Deleting CSIDriver "inline-driver-ac145a9c-dcfd-416f-a2b2-b7fbf020935a" @ 09/01/25 12:46:42.951
  STEP: Confirm deletion of CSIDriver "inline-driver-ac145a9c-dcfd-416f-a2b2-b7fbf020935a" @ 09/01/25 12:46:42.965
  STEP: Deleting CSIDriver "inline-driver-2ff72a4d-52ff-419b-9e86-377e4261c315" via DeleteCollection @ 09/01/25 12:46:42.975
  STEP: Confirm deletion of CSIDriver "inline-driver-2ff72a4d-52ff-419b-9e86-377e4261c315" @ 09/01/25 12:46:42.993
  I0901 12:46:43.000606 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5497" for this suite. @ 09/01/25 12:46:43.015
  E0901 12:46:43.024546      15 retrywatcher.go:160] "Watch failed" err="context canceled"
â€¢ [0.233 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 09/01/25 12:46:43.033
  I0901 12:46:43.034018 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:46:43.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:43.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:43.07
  STEP: creating a collection of services @ 09/01/25 12:46:43.08
  I0901 12:46:43.081476 15 service.go:3635] Creating e2e-svc-a-p7mbk
  I0901 12:46:43.110177 15 service.go:3635] Creating e2e-svc-b-kk9bc
  I0901 12:46:43.142147 15 service.go:3635] Creating e2e-svc-c-kpzxw
  STEP: deleting service collection @ 09/01/25 12:46:43.175
  I0901 12:46:43.256085 15 service.go:3670] Collection of services has been deleted
  I0901 12:46:43.257493 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1912" for this suite. @ 09/01/25 12:46:43.27
â€¢ [0.249 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/01/25 12:46:43.284
  I0901 12:46:43.284496 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 12:46:43.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:43.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:43.318
  STEP: Creating a test headless service @ 09/01/25 12:46:43.325
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9815;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9815;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +notcp +noall +answer +search 29.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.29_tcp@PTR;sleep 1; done
   @ 09/01/25 12:46:43.353
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9815;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9815;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +notcp +noall +answer +search 29.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.29_tcp@PTR;sleep 1; done
   @ 09/01/25 12:46:43.353
  STEP: creating a pod to probe DNS @ 09/01/25 12:46:43.353
  STEP: submitting the pod to kubernetes @ 09/01/25 12:46:43.354
  E0901 12:46:44.024966      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:45.026203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:46.033705      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:47.034558      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 12:46:47.473
  STEP: looking for the results for each expected name from probers @ 09/01/25 12:46:47.484
  I0901 12:46:47.652139 15 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.663551 15 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.672722 15 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.682837 15 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.691978 15 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.701676 15 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.710290 15 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.720335 15 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.732599 15 dns_common.go:495] Unable to read jessie_udp@_http._tcp.test-service-2.dns-9815.svc from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.744718 15 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-9815.svc from pod dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579: the server could not find the requested resource (get pods dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579)
  I0901 12:46:47.772754 15 dns_common.go:506] Lookups using dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579 failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@_http._tcp.test-service-2.dns-9815.svc jessie_tcp@_http._tcp.test-service-2.dns-9815.svc]

  I0901 12:46:47.793337 15 dns_common.go:514] Pod client logs for webserver: 
  I0901 12:46:47.811310 15 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 12:46:47.835922 15 dns_common.go:514] Pod client logs for jessie-querier: 
  E0901 12:46:48.035045      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:49.036760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:50.035874      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:51.041207      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:52.041828      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:52.706358 15 dns_common.go:546] DNS probes using dns-9815/dns-test-86cc28e2-2654-4a3f-b2db-3a12f64bb579 succeeded

  STEP: deleting the pod @ 09/01/25 12:46:52.706
  STEP: deleting the test service @ 09/01/25 12:46:52.748
  STEP: deleting the test headless service @ 09/01/25 12:46:52.806
  I0901 12:46:52.834083 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9815" for this suite. @ 09/01/25 12:46:52.847
â€¢ [9.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/01/25 12:46:52.892
  I0901 12:46:52.893016 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:46:52.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:52.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:52.964
  I0901 12:46:52.973395 15 replica_set.go:191] Creating ReplicaSet my-hostname-basic-3fbaf28f-b889-4d45-9bb8-e2b7dd40362d
  I0901 12:46:53.009015 15 resource.go:87] Pod name my-hostname-basic-3fbaf28f-b889-4d45-9bb8-e2b7dd40362d: Found 0 pods out of 1
  E0901 12:46:53.042647      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:54.042933      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:55.043177      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:56.044732      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:46:57.045260      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:58.024922 15 resource.go:87] Pod name my-hostname-basic-3fbaf28f-b889-4d45-9bb8-e2b7dd40362d: Found 1 pods out of 1
  I0901 12:46:58.025054 15 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-3fbaf28f-b889-4d45-9bb8-e2b7dd40362d" is running
  I0901 12:46:58.032304 15 replica_set.go:220] Pod "my-hostname-basic-3fbaf28f-b889-4d45-9bb8-e2b7dd40362d-zl7rs" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:46:54 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:46:53 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:46:54 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:46:54 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 12:46:53 +0000 UTC Reason: Message:}])
  I0901 12:46:58.032368 15 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 12:46:58.032
  E0901 12:46:58.044494      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:46:58.065143 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6397" for this suite. @ 09/01/25 12:46:58.085
â€¢ [5.215 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/01/25 12:46:58.108
  I0901 12:46:58.109004 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:46:58.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:46:58.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:46:58.154
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/01/25 12:46:58.16
  E0901 12:46:59.044755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:00.045700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/01/25 12:47:00.218
  STEP: Then the orphan pod is adopted @ 09/01/25 12:47:00.247
  E0901 12:47:01.046904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:47:01.274225 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-938" for this suite. @ 09/01/25 12:47:01.288
â€¢ [3.194 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 09/01/25 12:47:01.303
  I0901 12:47:01.303706 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:47:01.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:47:01.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:47:01.348
  STEP: creating a Service @ 09/01/25 12:47:01.374
  STEP: watching for the Service to be added @ 09/01/25 12:47:01.416
  I0901 12:47:01.423996 15 service.go:3425] Found Service test-service-ljc8h in namespace services-3612 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31681}]
  I0901 12:47:01.424088 15 service.go:3432] Service test-service-ljc8h created
  STEP: Getting /status @ 09/01/25 12:47:01.424
  I0901 12:47:01.439671 15 service.go:3443] Service test-service-ljc8h has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/01/25 12:47:01.44
  STEP: watching for the Service to be patched @ 09/01/25 12:47:01.452
  I0901 12:47:01.458246 15 service.go:3466] observed Service test-service-ljc8h in namespace services-3612 with annotations: map[] & LoadBalancer: {[]}
  I0901 12:47:01.458319 15 service.go:3469] Found Service test-service-ljc8h in namespace services-3612 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0041388b0 []}]}
  I0901 12:47:01.458343 15 service.go:3476] Service test-service-ljc8h has service status patched
  STEP: updating the ServiceStatus @ 09/01/25 12:47:01.458
  I0901 12:47:01.478304 15 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/01/25 12:47:01.478
  I0901 12:47:01.481820 15 service.go:3507] Observed Service test-service-ljc8h in namespace services-3612 with annotations: map[] & Conditions: []
  I0901 12:47:01.482077 15 service.go:3518] Observed Service test-service-ljc8h in namespace services-3612 with annotations: map[patchedstatus:true] & Conditions: []
  I0901 12:47:01.482316 15 service.go:3514] Found Service test-service-ljc8h in namespace services-3612 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 12:47:01.482674 15 service.go:3525] Service test-service-ljc8h has service status updated
  STEP: patching the service @ 09/01/25 12:47:01.482
  STEP: watching for the Service to be patched @ 09/01/25 12:47:01.518
  I0901 12:47:01.523960 15 service.go:3548] observed Service test-service-ljc8h in namespace services-3612 with labels: map[test-service-static:true]
  I0901 12:47:01.524547 15 service.go:3548] observed Service test-service-ljc8h in namespace services-3612 with labels: map[test-service-static:true]
  I0901 12:47:01.524589 15 service.go:3548] observed Service test-service-ljc8h in namespace services-3612 with labels: map[test-service-static:true]
  I0901 12:47:01.524667 15 service.go:3551] Found Service test-service-ljc8h in namespace services-3612 with labels: map[test-service:patched test-service-static:true]
  I0901 12:47:01.524722 15 service.go:3558] Service test-service-ljc8h patched
  STEP: deleting the service @ 09/01/25 12:47:01.524
  STEP: watching for the Service to be deleted @ 09/01/25 12:47:01.558
  I0901 12:47:01.561557 15 service.go:3582] Observed event: ADDED
  I0901 12:47:01.561642 15 service.go:3582] Observed event: MODIFIED
  I0901 12:47:01.561924 15 service.go:3582] Observed event: MODIFIED
  I0901 12:47:01.562267 15 service.go:3582] Observed event: MODIFIED
  I0901 12:47:01.562362 15 service.go:3578] Found Service test-service-ljc8h in namespace services-3612 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0901 12:47:01.566999 15 service.go:3587] Service test-service-ljc8h deleted
  I0901 12:47:01.567258 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3612" for this suite. @ 09/01/25 12:47:01.575
â€¢ [0.284 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/01/25 12:47:01.591
  I0901 12:47:01.591164 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:47:01.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:47:01.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:47:01.619
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:47:01.627
  E0901 12:47:02.046934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:03.047744      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:04.048803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:05.049010      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:47:05.673
  I0901 12:47:05.683313 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-823086dd-e87e-4aac-b011-0021797738b7 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:47:05.704
  I0901 12:47:05.752834 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9129" for this suite. @ 09/01/25 12:47:05.773
â€¢ [4.207 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 09/01/25 12:47:05.799
  I0901 12:47:05.799961 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:47:05.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:47:05.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:47:05.84
  I0901 12:47:05.891970 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:47:06.049998      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:07.050282      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:08.051343      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:09.052235      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:10.053470      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:11.054116      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:12.054731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:13.055303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:14.055929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:15.056884      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:16.057123      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:17.057608      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:18.057772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:19.057886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:20.059038      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:21.059228      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:22.059613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:23.060620      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:24.061082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:25.062098      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:26.063064      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:27.063350      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:28.064465      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:29.065244      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:30.065689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:31.065844      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:32.067129      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:33.067220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:34.068085      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:35.068923      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:36.069677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:37.070113      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:38.070228      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:39.070715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:40.070764      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:41.071668      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:42.072104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:43.072868      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:44.072919      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:45.073398      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:46.073589      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:47.074226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:48.074725      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:49.075783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:50.076688      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:51.077650      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:52.078683      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:53.080772      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:54.080195      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:55.081235      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:56.081623      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:57.082575      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:58.083324      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:47:59.083588      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:00.084310      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:01.085760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:02.086822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:03.086976      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:04.087853      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:05.088581      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:05.916676 15 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 12:48:05.933
  STEP: Adding a custom resource @ 09/01/25 12:48:05.933
  I0901 12:48:06.001793 15 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0901 12:48:06.024731 15 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 12:48:06.024
  E0901 12:48:06.088875      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:06.093140 15 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 12:48:06.113616 15 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 12:48:06.113
  I0901 12:48:06.163124 15 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 12:48:06.175463 15 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 12:48:06.175
  E0901 12:48:07.089815      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:08.091470      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/01/25 12:48:08.276
  E0901 12:48:09.091570      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:10.092046      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:11.093033      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:12.094002      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/01/25 12:48:12.549
  STEP: Removing a custom resource @ 09/01/25 12:48:12.578
  STEP: Removing a custom resource @ 09/01/25 12:48:12.633
  I0901 12:48:12.672376 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3252" for this suite. @ 09/01/25 12:48:12.682
â€¢ [66.899 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/01/25 12:48:12.7
  I0901 12:48:12.700177 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 12:48:12.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:12.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:12.745
  E0901 12:48:13.094695      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:14.095293      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:15.095947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:16.096143      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:16.828228 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2555" for this suite. @ 09/01/25 12:48:16.848
â€¢ [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/01/25 12:48:16.882
  I0901 12:48:16.882322 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:48:16.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:16.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:16.945
  STEP: starting an echo server on multiple ports @ 09/01/25 12:48:16.991
  STEP: creating replication controller proxy-service-mbmnq in namespace proxy-7124 @ 09/01/25 12:48:16.992
  I0901 12:48:17.016240      15 runners.go:193] Created replication controller with name: proxy-service-mbmnq, namespace: proxy-7124, replica count: 1
  E0901 12:48:17.104599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:18.074672      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0901 12:48:18.102903      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:19.075920      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:19.104642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:20.076616      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:20.105868      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:21.077085      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:21.106935      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:22.077660      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:22.107074      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:23.078567      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:23.108368      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:24.079182      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:24.108949      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:25.079746      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:25.110613      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:26.080330      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:26.110209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:27.080866      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:27.110796      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:28.081139      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0901 12:48:28.111121      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:29.081694      15 runners.go:193] proxy-service-mbmnq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 12:48:29.094820 15 proxy.go:230] setup took 12.138543793s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/01/25 12:48:29.094
  E0901 12:48:29.113195      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:29.131566 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 35.797192ms)
  I0901 12:48:29.134752 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 38.425403ms)
  I0901 12:48:29.158120 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 60.904695ms)
  I0901 12:48:29.158229 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 60.276468ms)
  I0901 12:48:29.158318 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 62.207943ms)
  I0901 12:48:29.158377 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 62.574619ms)
  I0901 12:48:29.158710 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 61.666863ms)
  I0901 12:48:29.158928 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 61.549281ms)
  I0901 12:48:29.159741 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 61.547554ms)
  I0901 12:48:29.159948 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 63.432776ms)
  I0901 12:48:29.160058 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 63.385288ms)
  I0901 12:48:29.162964 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 65.168852ms)
  I0901 12:48:29.163079 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 66.291999ms)
  I0901 12:48:29.163752 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 68.583343ms)
  I0901 12:48:29.172870 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 75.285398ms)
  I0901 12:48:29.173688 15 proxy.go:558] (0) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 75.59884ms)
  I0901 12:48:29.199244 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 18.769847ms)
  I0901 12:48:29.213532 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 33.845049ms)
  I0901 12:48:29.213630 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 32.705567ms)
  I0901 12:48:29.213703 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 31.232867ms)
  I0901 12:48:29.213781 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 39.988404ms)
  I0901 12:48:29.213865 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 39.835416ms)
  I0901 12:48:29.213921 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 39.696352ms)
  I0901 12:48:29.213982 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 39.122866ms)
  I0901 12:48:29.214042 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 39.022142ms)
  I0901 12:48:29.214089 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 33.928204ms)
  I0901 12:48:29.216812 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 42.272417ms)
  I0901 12:48:29.217864 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 43.206626ms)
  I0901 12:48:29.217890 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 42.676963ms)
  I0901 12:48:29.218978 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 43.58709ms)
  I0901 12:48:29.219004 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 37.426448ms)
  I0901 12:48:29.241271 15 proxy.go:558] (1) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 58.205715ms)
  I0901 12:48:29.258747 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 16.946419ms)
  I0901 12:48:29.268287 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 25.971333ms)
  I0901 12:48:29.269886 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 27.32157ms)
  I0901 12:48:29.270682 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 27.881451ms)
  I0901 12:48:29.273246 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 29.595508ms)
  I0901 12:48:29.275599 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 32.55055ms)
  I0901 12:48:29.276188 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 34.096208ms)
  I0901 12:48:29.278095 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 34.790758ms)
  I0901 12:48:29.278189 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 34.384909ms)
  I0901 12:48:29.278240 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 34.525534ms)
  I0901 12:48:29.280063 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 36.524474ms)
  I0901 12:48:29.281910 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 36.244458ms)
  I0901 12:48:29.282137 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 38.116704ms)
  I0901 12:48:29.282200 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 38.335729ms)
  I0901 12:48:29.282680 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 38.472749ms)
  I0901 12:48:29.282736 15 proxy.go:558] (2) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 39.342917ms)
  I0901 12:48:29.299167 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 15.419147ms)
  I0901 12:48:29.301442 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 18.192044ms)
  I0901 12:48:29.309943 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 24.300982ms)
  I0901 12:48:29.310267 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 25.904679ms)
  I0901 12:48:29.310332 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 25.375591ms)
  I0901 12:48:29.312129 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 26.310743ms)
  I0901 12:48:29.315298 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 29.55142ms)
  I0901 12:48:29.317308 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 33.342219ms)
  I0901 12:48:29.318807 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 33.688521ms)
  I0901 12:48:29.318958 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 35.554843ms)
  I0901 12:48:29.319064 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 33.48947ms)
  I0901 12:48:29.319690 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 34.389889ms)
  I0901 12:48:29.319736 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 33.784671ms)
  I0901 12:48:29.319775 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 33.868413ms)
  I0901 12:48:29.320074 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 35.410709ms)
  I0901 12:48:29.320365 15 proxy.go:558] (3) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 34.577752ms)
  I0901 12:48:29.337033 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 15.051139ms)
  I0901 12:48:29.340226 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 18.309765ms)
  I0901 12:48:29.343493 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 21.883455ms)
  I0901 12:48:29.343950 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 22.138218ms)
  I0901 12:48:29.343117 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 21.675105ms)
  I0901 12:48:29.347246 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 25.077066ms)
  I0901 12:48:29.348197 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 27.287225ms)
  I0901 12:48:29.349676 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 28.516192ms)
  I0901 12:48:29.350200 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 27.869078ms)
  I0901 12:48:29.350853 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 28.607975ms)
  I0901 12:48:29.351118 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 28.864103ms)
  I0901 12:48:29.351171 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 29.155293ms)
  I0901 12:48:29.352810 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 30.513264ms)
  I0901 12:48:29.352932 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 30.90144ms)
  I0901 12:48:29.353206 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 31.739181ms)
  I0901 12:48:29.353463 15 proxy.go:558] (4) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 31.372135ms)
  I0901 12:48:29.370278 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 15.895355ms)
  I0901 12:48:29.371300 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 16.658399ms)
  I0901 12:48:29.373039 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 17.404483ms)
  I0901 12:48:29.379326 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 24.426169ms)
  I0901 12:48:29.380144 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 24.270086ms)
  I0901 12:48:29.380326 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 24.32732ms)
  I0901 12:48:29.380393 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 24.226273ms)
  I0901 12:48:29.380496 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 26.334492ms)
  I0901 12:48:29.380658 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 25.158786ms)
  I0901 12:48:29.380789 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 24.639266ms)
  I0901 12:48:29.380803 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 25.102052ms)
  I0901 12:48:29.381708 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 26.444714ms)
  I0901 12:48:29.382382 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 26.348379ms)
  I0901 12:48:29.382766 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 27.670349ms)
  I0901 12:48:29.383717 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 27.933164ms)
  I0901 12:48:29.384048 15 proxy.go:558] (5) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 27.792777ms)
  I0901 12:48:29.405927 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 20.422334ms)
  I0901 12:48:29.407197 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 21.481392ms)
  I0901 12:48:29.408918 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 24.537063ms)
  I0901 12:48:29.409503 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 23.605951ms)
  I0901 12:48:29.412027 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 26.750561ms)
  I0901 12:48:29.412100 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 24.966376ms)
  I0901 12:48:29.412095 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 27.22453ms)
  I0901 12:48:29.412130 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 27.067684ms)
  I0901 12:48:29.412188 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 25.145328ms)
  I0901 12:48:29.412260 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 24.512147ms)
  I0901 12:48:29.413110 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 26.982323ms)
  I0901 12:48:29.416617 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 31.972194ms)
  I0901 12:48:29.416782 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 30.367336ms)
  I0901 12:48:29.418271 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 30.93717ms)
  I0901 12:48:29.418446 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 31.250076ms)
  I0901 12:48:29.418827 15 proxy.go:558] (6) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 31.5843ms)
  I0901 12:48:29.441068 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 20.997255ms)
  I0901 12:48:29.449608 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 30.407849ms)
  I0901 12:48:29.454355 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 34.119382ms)
  I0901 12:48:29.455157 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 36.205767ms)
  I0901 12:48:29.463260 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 42.275859ms)
  I0901 12:48:29.464088 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 44.378766ms)
  I0901 12:48:29.464175 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 43.1008ms)
  I0901 12:48:29.468003 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 47.44447ms)
  I0901 12:48:29.469300 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 48.637791ms)
  I0901 12:48:29.469830 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 49.057347ms)
  I0901 12:48:29.471150 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 50.320068ms)
  I0901 12:48:29.471173 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 50.26349ms)
  I0901 12:48:29.471285 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 51.933728ms)
  I0901 12:48:29.471317 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 51.394131ms)
  I0901 12:48:29.471349 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 50.187871ms)
  I0901 12:48:29.471365 15 proxy.go:558] (7) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 50.155627ms)
  I0901 12:48:29.510761 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 38.439839ms)
  I0901 12:48:29.510904 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 38.152955ms)
  I0901 12:48:29.512452 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 39.784685ms)
  I0901 12:48:29.512817 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 39.759466ms)
  I0901 12:48:29.512866 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 39.207542ms)
  I0901 12:48:29.512899 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 39.348057ms)
  I0901 12:48:29.512932 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 40.38263ms)
  I0901 12:48:29.513150 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 39.969807ms)
  I0901 12:48:29.514956 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 43.106284ms)
  I0901 12:48:29.516130 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 42.307973ms)
  I0901 12:48:29.515907 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 42.562925ms)
  I0901 12:48:29.516718 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 43.484747ms)
  I0901 12:48:29.518964 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 46.687902ms)
  I0901 12:48:29.520656 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 46.928524ms)
  I0901 12:48:29.520868 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 47.468146ms)
  I0901 12:48:29.521292 15 proxy.go:558] (8) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 49.183829ms)
  I0901 12:48:29.549169 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 26.199601ms)
  I0901 12:48:29.549274 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 25.84808ms)
  I0901 12:48:29.549568 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 27.291233ms)
  I0901 12:48:29.549627 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 26.989263ms)
  I0901 12:48:29.549662 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 26.865205ms)
  I0901 12:48:29.550096 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 28.270459ms)
  I0901 12:48:29.550858 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 28.302704ms)
  I0901 12:48:29.550864 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 27.647341ms)
  I0901 12:48:29.550922 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 27.898242ms)
  I0901 12:48:29.550938 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 28.044075ms)
  I0901 12:48:29.558142 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 36.07421ms)
  I0901 12:48:29.561780 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 38.669093ms)
  I0901 12:48:29.564957 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 41.442778ms)
  I0901 12:48:29.564978 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 41.918613ms)
  I0901 12:48:29.568328 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 44.583283ms)
  I0901 12:48:29.568630 15 proxy.go:558] (9) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 45.001703ms)
  I0901 12:48:29.591630 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 22.74172ms)
  I0901 12:48:29.591724 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 21.187533ms)
  I0901 12:48:29.607923 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 38.827734ms)
  I0901 12:48:29.612186 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 40.34282ms)
  I0901 12:48:29.613373 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 41.736261ms)
  I0901 12:48:29.613496 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 41.55762ms)
  I0901 12:48:29.613567 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 41.814657ms)
  I0901 12:48:29.617368 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 45.299787ms)
  I0901 12:48:29.617486 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 45.274444ms)
  I0901 12:48:29.623164 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 51.680218ms)
  I0901 12:48:29.623389 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 53.412607ms)
  I0901 12:48:29.624195 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 52.299363ms)
  I0901 12:48:29.624263 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 52.009517ms)
  I0901 12:48:29.624506 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 52.106019ms)
  I0901 12:48:29.624820 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 52.830178ms)
  I0901 12:48:29.625271 15 proxy.go:558] (10) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 53.273158ms)
  I0901 12:48:29.634957 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 9.352363ms)
  I0901 12:48:29.635820 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 10.378158ms)
  I0901 12:48:29.688365 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 61.369481ms)
  I0901 12:48:29.688666 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 61.999538ms)
  I0901 12:48:29.688767 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 62.929279ms)
  I0901 12:48:29.688808 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 62.235666ms)
  I0901 12:48:29.688843 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 61.7868ms)
  I0901 12:48:29.688887 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 62.020038ms)
  I0901 12:48:29.688897 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 61.682069ms)
  I0901 12:48:29.693538 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 67.026663ms)
  I0901 12:48:29.693914 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 66.626228ms)
  I0901 12:48:29.694006 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 67.973778ms)
  I0901 12:48:29.694217 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 67.959625ms)
  I0901 12:48:29.693649 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 66.907671ms)
  I0901 12:48:29.694634 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 68.488201ms)
  I0901 12:48:29.694760 15 proxy.go:558] (11) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 67.563088ms)
  I0901 12:48:29.743426 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 47.266673ms)
  I0901 12:48:29.747540 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 52.216694ms)
  I0901 12:48:29.750272 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 54.013659ms)
  I0901 12:48:29.750565 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 54.534122ms)
  I0901 12:48:29.750327 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 53.963053ms)
  I0901 12:48:29.769289 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 74.144988ms)
  I0901 12:48:29.769494 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 73.523057ms)
  I0901 12:48:29.771173 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 74.427293ms)
  I0901 12:48:29.771990 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 77.148389ms)
  I0901 12:48:29.771325 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 74.664105ms)
  I0901 12:48:29.774751 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 78.094779ms)
  I0901 12:48:29.775794 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 79.867215ms)
  I0901 12:48:29.775838 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 79.961694ms)
  I0901 12:48:29.775878 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 80.81473ms)
  I0901 12:48:29.778133 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 82.677982ms)
  I0901 12:48:29.779141 15 proxy.go:558] (12) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 83.34924ms)
  I0901 12:48:29.794846 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 14.949618ms)
  I0901 12:48:29.836623 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 57.249707ms)
  I0901 12:48:29.840742 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 60.702988ms)
  I0901 12:48:29.845196 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 64.40121ms)
  I0901 12:48:29.845661 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 64.796255ms)
  I0901 12:48:29.847067 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 66.472132ms)
  I0901 12:48:29.847150 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 67.507603ms)
  I0901 12:48:29.849085 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 68.143694ms)
  I0901 12:48:29.850940 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 70.848404ms)
  I0901 12:48:29.850952 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 70.287279ms)
  I0901 12:48:29.851000 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 71.532027ms)
  I0901 12:48:29.851033 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 71.273369ms)
  I0901 12:48:29.851061 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 71.103589ms)
  I0901 12:48:29.851124 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 70.840791ms)
  I0901 12:48:29.851193 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 70.722232ms)
  I0901 12:48:29.855254 15 proxy.go:558] (13) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 75.058403ms)
  I0901 12:48:29.878934 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 23.545099ms)
  I0901 12:48:29.895729 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 39.566297ms)
  I0901 12:48:29.909787 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 52.060808ms)
  I0901 12:48:29.910949 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 54.036975ms)
  I0901 12:48:29.911046 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 53.401991ms)
  I0901 12:48:29.915252 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 57.752968ms)
  I0901 12:48:29.920813 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 64.028417ms)
  I0901 12:48:29.920942 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 63.097429ms)
  I0901 12:48:29.920978 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 63.878934ms)
  I0901 12:48:29.921007 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 64.434195ms)
  I0901 12:48:29.922800 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 67.008568ms)
  I0901 12:48:29.922731 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 65.446935ms)
  I0901 12:48:29.926315 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 68.969118ms)
  I0901 12:48:29.938003 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 79.9091ms)
  I0901 12:48:29.942685 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 84.494581ms)
  I0901 12:48:29.942866 15 proxy.go:558] (14) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 84.847204ms)
  I0901 12:48:29.970595 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 27.550249ms)
  I0901 12:48:29.973334 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 28.130386ms)
  I0901 12:48:29.974796 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 29.826825ms)
  I0901 12:48:29.976002 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 31.683318ms)
  I0901 12:48:29.976053 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 30.704737ms)
  I0901 12:48:29.976455 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 31.420277ms)
  I0901 12:48:29.976818 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 30.545416ms)
  I0901 12:48:29.979789 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 35.591948ms)
  I0901 12:48:29.979891 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 35.252645ms)
  I0901 12:48:29.981824 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 37.024248ms)
  I0901 12:48:29.982534 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 37.338458ms)
  I0901 12:48:29.983871 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 38.08089ms)
  I0901 12:48:29.984278 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 37.616574ms)
  I0901 12:48:29.984904 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 39.990174ms)
  I0901 12:48:29.985229 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 40.12005ms)
  I0901 12:48:29.991167 15 proxy.go:558] (15) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 46.190801ms)
  I0901 12:48:30.017017 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 23.181839ms)
  I0901 12:48:30.028881 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 36.217789ms)
  I0901 12:48:30.029021 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 34.920398ms)
  I0901 12:48:30.029131 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 34.660557ms)
  I0901 12:48:30.033104 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 39.887588ms)
  I0901 12:48:30.033197 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 37.92007ms)
  I0901 12:48:30.033292 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 35.600224ms)
  I0901 12:48:30.033308 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 39.751719ms)
  I0901 12:48:30.038169 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 43.829311ms)
  I0901 12:48:30.038247 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 42.524719ms)
  I0901 12:48:30.038290 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 43.556443ms)
  I0901 12:48:30.038355 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 41.487991ms)
  I0901 12:48:30.039034 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 41.734472ms)
  I0901 12:48:30.039183 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 40.978068ms)
  I0901 12:48:30.039711 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 42.540815ms)
  I0901 12:48:30.039815 15 proxy.go:558] (16) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 44.830317ms)
  I0901 12:48:30.067879 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 26.02136ms)
  I0901 12:48:30.067995 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 26.797691ms)
  I0901 12:48:30.070228 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 29.399843ms)
  I0901 12:48:30.071344 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 29.176301ms)
  I0901 12:48:30.071867 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 31.431275ms)
  I0901 12:48:30.074748 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 34.525661ms)
  I0901 12:48:30.075498 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 33.355854ms)
  I0901 12:48:30.075499 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 33.873787ms)
  I0901 12:48:30.076166 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 33.494004ms)
  I0901 12:48:30.077114 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 35.044293ms)
  I0901 12:48:30.077188 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 35.401036ms)
  I0901 12:48:30.077257 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 35.563698ms)
  I0901 12:48:30.077264 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 34.93226ms)
  I0901 12:48:30.077933 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 35.350009ms)
  I0901 12:48:30.078323 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 35.603777ms)
  I0901 12:48:30.079301 15 proxy.go:558] (17) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 37.083874ms)
  I0901 12:48:30.099012 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 19.251238ms)
  I0901 12:48:30.102177 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 22.630968ms)
  I0901 12:48:30.102860 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 23.470463ms)
  I0901 12:48:30.103916 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 21.944306ms)
  I0901 12:48:30.106218 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 26.538111ms)
  I0901 12:48:30.106368 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 26.283581ms)
  I0901 12:48:30.109891 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 29.194849ms)
  I0901 12:48:30.110040 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 28.875385ms)
  I0901 12:48:30.110116 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 29.066611ms)
  E0901 12:48:30.112474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:30.112706 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 31.914415ms)
  I0901 12:48:30.112446 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 31.478349ms)
  I0901 12:48:30.113639 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 33.054757ms)
  I0901 12:48:30.113721 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 32.615828ms)
  I0901 12:48:30.113850 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 33.440929ms)
  I0901 12:48:30.114792 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 34.969037ms)
  I0901 12:48:30.117497 15 proxy.go:558] (18) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 36.626061ms)
  I0901 12:48:30.148687 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 30.432189ms)
  I0901 12:48:30.152040 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:162/proxy/: bar (200; 33.190149ms)
  I0901 12:48:30.152044 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 32.304469ms)
  I0901 12:48:30.152150 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:443/proxy/tlsrewritem... (200; 32.189022ms)
  I0901 12:48:30.152120 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/http:proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">... (200; 32.467829ms)
  I0901 12:48:30.152325 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:160/proxy/: foo (200; 34.455775ms)
  I0901 12:48:30.154078 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname2/proxy/: bar (200; 36.038746ms)
  I0901 12:48:30.154185 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw:1080/proxy/rewriteme">test<... (200; 34.279322ms)
  I0901 12:48:30.154915 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:460/proxy/: tls baz (200; 34.854702ms)
  I0901 12:48:30.155705 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/: <a href="/api/v1/namespaces/proxy-7124/pods/proxy-service-mbmnq-xrgpw/proxy/rewriteme">test</a> (200; 35.857973ms)
  I0901 12:48:30.156030 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname1/proxy/: tls baz (200; 37.340725ms)
  I0901 12:48:30.156194 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/pods/https:proxy-service-mbmnq-xrgpw:462/proxy/: tls qux (200; 37.165563ms)
  I0901 12:48:30.156098 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/services/https:proxy-service-mbmnq:tlsportname2/proxy/: tls qux (200; 37.623594ms)
  I0901 12:48:30.156457 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname1/proxy/: foo (200; 38.743666ms)
  I0901 12:48:30.156395 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/services/proxy-service-mbmnq:portname2/proxy/: bar (200; 37.179821ms)
  I0901 12:48:30.156593 15 proxy.go:558] (19) /api/v1/namespaces/proxy-7124/services/http:proxy-service-mbmnq:portname1/proxy/: foo (200; 37.203732ms)
  STEP: deleting ReplicationController proxy-service-mbmnq in namespace proxy-7124, will wait for the garbage collector to delete the pods @ 09/01/25 12:48:30.157
  I0901 12:48:30.243716 15 resources.go:139] Deleting ReplicationController proxy-service-mbmnq took: 18.436812ms
  I0901 12:48:30.344380 15 resources.go:163] Terminating ReplicationController proxy-service-mbmnq pods took: 100.637406ms
  E0901 12:48:31.112820      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:48:31.446272 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7124" for this suite. @ 09/01/25 12:48:31.493
â€¢ [14.634 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/01/25 12:48:31.519
  I0901 12:48:31.519224 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:48:31.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:48:31.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:48:31.561
  STEP: Creating configMap with name cm-test-opt-del-28ed5093-37cb-41f2-8bca-10b0f7c371f5 @ 09/01/25 12:48:31.626
  STEP: Creating configMap with name cm-test-opt-upd-48a8520d-b821-4caa-a534-2c582ba7959c @ 09/01/25 12:48:31.638
  STEP: Creating the pod @ 09/01/25 12:48:31.65
  E0901 12:48:32.114793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:33.115562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-28ed5093-37cb-41f2-8bca-10b0f7c371f5 @ 09/01/25 12:48:33.801
  STEP: Updating configmap cm-test-opt-upd-48a8520d-b821-4caa-a534-2c582ba7959c @ 09/01/25 12:48:33.817
  STEP: Creating configMap with name cm-test-opt-create-fbceb7e0-d7a1-49ec-9a55-8cd7aaaf8eb8 @ 09/01/25 12:48:33.837
  STEP: waiting to observe update in volume @ 09/01/25 12:48:33.85
  E0901 12:48:34.117215      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:35.117348      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:36.117636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:37.119842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:38.119735      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:39.121814      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:40.123274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:41.122257      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:42.123298      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:43.123845      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:44.123954      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:45.125134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:46.125835      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:47.126383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:48.126188      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:49.127243      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:50.127592      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:51.127930      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:52.129019      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:53.129872      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:54.130665      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:55.131285      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:56.131695      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:57.132311      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:58.132287      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:48:59.132926      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:00.133732      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:01.133916      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:02.134778      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:03.135770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:04.136263      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:05.136565      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:06.137226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:07.137929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:08.138151      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:09.138909      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:10.138861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:11.139761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:12.140601      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:13.140795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:14.140972      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:15.141378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:16.141788      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:17.143130      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:18.143001      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:19.143901      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:20.144249      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:21.144592      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:22.145304      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:23.145595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:24.146003      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:25.146642      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:26.146936      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:27.147082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:28.148313      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:29.148732      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:30.148854      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:31.149989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:32.150761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:33.151308      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:34.152879      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:35.153279      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:36.152697      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:37.154288      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:38.153878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:39.155224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:40.155359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:41.155967      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:42.156761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:43.158351      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:44.158172      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:45.158986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:46.159331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:47.159841      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:48.160785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:49.161727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:50.161794      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:49:51.105396 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8598" for this suite. @ 09/01/25 12:49:51.12
â€¢ [79.621 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/01/25 12:49:51.14
  I0901 12:49:51.140800 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:49:51.144
  E0901 12:49:51.162329      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:51.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:51.187
  STEP: Creating a pod to test override command @ 09/01/25 12:49:51.197
  E0901 12:49:52.162610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:53.164930      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:54.164226      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:55.165056      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:49:55.262
  I0901 12:49:55.273263 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod client-containers-5335d74c-0f63-4821-9f1d-872ef79f31d1 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:49:55.304
  I0901 12:49:55.358556 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-145" for this suite. @ 09/01/25 12:49:55.376
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/01/25 12:49:55.401
  I0901 12:49:55.401340 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename subpath @ 09/01/25 12:49:55.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:49:55.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:49:55.434
  STEP: Setting up data @ 09/01/25 12:49:55.441
  STEP: Creating pod pod-subpath-test-downwardapi-x87k @ 09/01/25 12:49:55.489
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 12:49:55.489
  E0901 12:49:56.168928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:57.183672      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:58.183040      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:49:59.183336      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:00.184203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:01.184541      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:02.184802      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:03.185849      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:04.186000      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:05.186255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:06.187101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:07.187354      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:08.187354      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:09.187876      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:10.189350      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:11.190298      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:12.190718      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:13.191556      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:14.191910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:15.192035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:16.193699      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:17.193325      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:18.196322      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:19.197238      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:50:19.703
  I0901 12:50:19.713725 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-subpath-test-downwardapi-x87k container test-container-subpath-downwardapi-x87k: <nil>
  STEP: delete the pod @ 09/01/25 12:50:19.745
  STEP: Deleting pod pod-subpath-test-downwardapi-x87k @ 09/01/25 12:50:19.795
  I0901 12:50:19.795332 15 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-x87k" in namespace "subpath-1904"
  I0901 12:50:19.806588 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1904" for this suite. @ 09/01/25 12:50:19.823
â€¢ [24.446 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/01/25 12:50:19.853
  I0901 12:50:19.854043 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:50:19.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:19.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:19.911
  STEP: Counting existing ResourceQuota @ 09/01/25 12:50:19.92
  E0901 12:50:20.197663      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:21.197484      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:22.198045      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:23.199185      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:24.199127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 12:50:24.935
  STEP: Ensuring resource quota status is calculated @ 09/01/25 12:50:24.953
  E0901 12:50:25.218275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:26.207894      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/01/25 12:50:26.982
  STEP: Ensuring resource quota status captures replication controller creation @ 09/01/25 12:50:27.031
  E0901 12:50:27.208951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:28.211609      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/01/25 12:50:29.045
  STEP: Ensuring resource quota status released usage @ 09/01/25 12:50:29.071
  E0901 12:50:29.211713      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:30.211694      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:31.093999 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5793" for this suite. @ 09/01/25 12:50:31.122
â€¢ [11.293 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/01/25 12:50:31.147
  I0901 12:50:31.147953 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:50:31.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:31.195
  E0901 12:50:31.211818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:31.212
  STEP: Setting up server cert @ 09/01/25 12:50:31.279
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:50:31.977
  STEP: Deploying the webhook pod @ 09/01/25 12:50:31.992
  STEP: Wait for the deployment to be ready @ 09/01/25 12:50:32.036
  I0901 12:50:32.067091 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:50:32.212779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:33.213602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:34.103484 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 50, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 50, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 50, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 50, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:50:34.219207      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:35.215499      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:50:36.117
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:50:36.156
  E0901 12:50:36.216106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:37.156753 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 12:50:37.184897 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:50:37.216818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5784-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 12:50:37.738
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 12:50:37.797
  E0901 12:50:38.217126      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:39.217713      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:40.217281      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:40.599307 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8440" for this suite. @ 09/01/25 12:50:40.613
  STEP: Destroying namespace "webhook-markers-3057" for this suite. @ 09/01/25 12:50:40.633
â€¢ [9.506 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/01/25 12:50:40.657
  I0901 12:50:40.657113 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:50:40.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:40.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:40.701
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:50:40.72
  E0901 12:50:41.219950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:42.220291      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/01/25 12:50:42.808
  I0901 12:50:42.821317 15 disruption.go:691] running pods: 0 < 3
  E0901 12:50:43.220809      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:44.222703      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:44.824885 15 disruption.go:691] running pods: 2 < 3
  E0901 12:50:45.221934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:46.223618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:46.834808 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-948" for this suite. @ 09/01/25 12:50:46.85
â€¢ [6.217 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/01/25 12:50:46.874
  I0901 12:50:46.874923 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:50:46.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:46.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:46.921
  STEP: set up a multi version CRD @ 09/01/25 12:50:46.929
  I0901 12:50:46.931873 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:50:47.223106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:48.224352      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:49.224617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:50.224975      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:51.225104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:52.225171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/01/25 12:50:53.17
  E0901 12:50:53.226283      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the unserved version gets removed @ 09/01/25 12:50:53.258
  E0901 12:50:54.226656      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/01/25 12:50:55.042
  E0901 12:50:55.227096      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:56.227779      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:57.228339      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:58.228342      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:50:59.228737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:50:59.646919 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7039" for this suite. @ 09/01/25 12:50:59.683
â€¢ [12.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/01/25 12:50:59.71
  I0901 12:50:59.710225 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename chunking @ 09/01/25 12:50:59.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:50:59.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:50:59.757
  STEP: creating a large number of resources @ 09/01/25 12:50:59.765
  E0901 12:51:00.229164      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:01.229975      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:02.230951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:03.232069      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:04.232602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:05.232201      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:06.233359      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:07.233204      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:08.233821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:09.234218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:10.235489      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:11.235456      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:12.236312      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:13.237295      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:14.238899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:15.238784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:16.239719      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:17.240731      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/01/25 12:51:17.432
  I0901 12:51:17.475854 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 12:51:17.539288 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 12:51:17.574894 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 12:51:17.628894 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 12:51:17.682301 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 12:51:17.728581 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 12:51:17.779840 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 12:51:17.833118 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 12:51:17.880781 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 12:51:17.930725 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 12:51:17.980355 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 12:51:18.029665 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 12:51:18.080214 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 12:51:18.131289 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 12:51:18.181207 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 12:51:18.228060 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  E0901 12:51:18.240689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:51:18.282641 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 12:51:18.329149 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 12:51:18.381864 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 12:51:18.433160 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 12:51:18.481096 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 12:51:18.526724 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 12:51:18.580780 15 chunking.go:98] Retrieved 17/17 results with rv 39515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 12:51:18.630317 15 chunking.go:98] Retrieved 9/17 results with rv 39515 and continue 
  I0901 12:51:18.680324 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 12:51:18.727719 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 12:51:18.779818 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 12:51:18.828670 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 12:51:18.879223 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 12:51:18.926828 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 12:51:18.975666 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 12:51:19.029866 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 12:51:19.078737 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 12:51:19.136012 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 12:51:19.178267 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 12:51:19.233973 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0901 12:51:19.241312      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:51:19.281767 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 12:51:19.328719 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 12:51:19.378982 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 12:51:19.426479 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 12:51:19.481651 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 12:51:19.530108 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 12:51:19.574872 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 12:51:19.629921 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 12:51:19.681572 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 12:51:19.727213 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 12:51:19.778770 15 chunking.go:98] Retrieved 17/17 results with rv 39516 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 12:51:19.828993 15 chunking.go:98] Retrieved 9/17 results with rv 39516 and continue 
  I0901 12:51:19.879092 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 12:51:19.932002 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 12:51:19.978227 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 12:51:20.027836 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 12:51:20.077785 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 12:51:20.129297 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 12:51:20.178637 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 12:51:20.230641 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0901 12:51:20.241479      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:51:20.278975 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 12:51:20.330559 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 12:51:20.379879 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 12:51:20.430202 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 12:51:20.478726 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 12:51:20.531147 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 12:51:20.578140 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 12:51:20.629008 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 12:51:20.680563 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 12:51:20.728808 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 12:51:20.779371 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 12:51:20.835780 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 12:51:20.880241 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 12:51:20.927289 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 12:51:20.980250 15 chunking.go:98] Retrieved 17/17 results with rv 39520 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1MjAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 12:51:21.026214 15 chunking.go:98] Retrieved 9/17 results with rv 39520 and continue 
  STEP: retrieving those results all at once @ 09/01/25 12:51:21.026
  I0901 12:51:21.099724 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1937" for this suite. @ 09/01/25 12:51:21.131
â€¢ [21.473 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/01/25 12:51:21.183
  I0901 12:51:21.183747 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:51:21.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:51:21.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:51:21.236
  E0901 12:51:21.241761      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the rc @ 09/01/25 12:51:21.255
  W0901 12:51:21.267834      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0901 12:51:22.242178      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:23.242851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:24.243090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:25.259501      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:26.261678      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:27.287383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:28.296099      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:29.433538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 12:51:30.13
  E0901 12:51:30.530401      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 09/01/25 12:51:30.53
  E0901 12:51:31.553921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:32.604231      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:33.596193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:34.572062      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/01/25 12:51:35.541
  E0901 12:51:35.572689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:36.573733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:37.574287      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:38.574629      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:39.574667      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:40.575028      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:41.575272      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:42.581552      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:43.581482      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:44.581877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:45.582345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:46.583217      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:47.584826      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:48.584395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:49.584781      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:50.585157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:51.585117      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:52.586106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:53.600129      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:54.601682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:55.601441      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:56.601846      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:57.602705      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:58.603695      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:51:59.603906      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:00.605225      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:01.606473      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:02.607141      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:03.607903      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:04.608704      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 12:52:05.595
  E0901 12:52:05.608893      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:05.947222 15 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:52:05.947493 15 delete.go:95] Deleting pod "simpletest.rc-22g9z" in namespace "gc-4581"
  I0901 12:52:05.982227 15 delete.go:95] Deleting pod "simpletest.rc-24rfb" in namespace "gc-4581"
  I0901 12:52:06.039037 15 delete.go:95] Deleting pod "simpletest.rc-29wc7" in namespace "gc-4581"
  I0901 12:52:06.073951 15 delete.go:95] Deleting pod "simpletest.rc-2dsvz" in namespace "gc-4581"
  I0901 12:52:06.130770 15 delete.go:95] Deleting pod "simpletest.rc-2gwcs" in namespace "gc-4581"
  I0901 12:52:06.200748 15 delete.go:95] Deleting pod "simpletest.rc-486lp" in namespace "gc-4581"
  I0901 12:52:06.247648 15 delete.go:95] Deleting pod "simpletest.rc-4lx5h" in namespace "gc-4581"
  I0901 12:52:06.332707 15 delete.go:95] Deleting pod "simpletest.rc-4p6np" in namespace "gc-4581"
  I0901 12:52:06.412012 15 delete.go:95] Deleting pod "simpletest.rc-4vw5b" in namespace "gc-4581"
  E0901 12:52:06.611309      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:06.808367 15 delete.go:95] Deleting pod "simpletest.rc-4wxkl" in namespace "gc-4581"
  I0901 12:52:07.067057 15 delete.go:95] Deleting pod "simpletest.rc-5g4dh" in namespace "gc-4581"
  I0901 12:52:07.202682 15 delete.go:95] Deleting pod "simpletest.rc-5k72c" in namespace "gc-4581"
  I0901 12:52:07.470236 15 delete.go:95] Deleting pod "simpletest.rc-5ljlr" in namespace "gc-4581"
  E0901 12:52:07.610677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:07.655840 15 delete.go:95] Deleting pod "simpletest.rc-5mdld" in namespace "gc-4581"
  I0901 12:52:07.910375 15 delete.go:95] Deleting pod "simpletest.rc-64ncs" in namespace "gc-4581"
  I0901 12:52:08.151357 15 delete.go:95] Deleting pod "simpletest.rc-6ddjr" in namespace "gc-4581"
  I0901 12:52:08.197203 15 delete.go:95] Deleting pod "simpletest.rc-77gfn" in namespace "gc-4581"
  I0901 12:52:08.246273 15 delete.go:95] Deleting pod "simpletest.rc-7wxx7" in namespace "gc-4581"
  I0901 12:52:08.298499 15 delete.go:95] Deleting pod "simpletest.rc-846wt" in namespace "gc-4581"
  I0901 12:52:08.350501 15 delete.go:95] Deleting pod "simpletest.rc-86zc4" in namespace "gc-4581"
  I0901 12:52:08.390120 15 delete.go:95] Deleting pod "simpletest.rc-8nnx9" in namespace "gc-4581"
  I0901 12:52:08.492539 15 delete.go:95] Deleting pod "simpletest.rc-9dtff" in namespace "gc-4581"
  I0901 12:52:08.586769 15 delete.go:95] Deleting pod "simpletest.rc-9glh6" in namespace "gc-4581"
  E0901 12:52:08.611465      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:08.655465 15 delete.go:95] Deleting pod "simpletest.rc-9n2h9" in namespace "gc-4581"
  I0901 12:52:08.690788 15 delete.go:95] Deleting pod "simpletest.rc-9pq6c" in namespace "gc-4581"
  I0901 12:52:08.769900 15 delete.go:95] Deleting pod "simpletest.rc-9rghj" in namespace "gc-4581"
  I0901 12:52:08.837351 15 delete.go:95] Deleting pod "simpletest.rc-b2b74" in namespace "gc-4581"
  I0901 12:52:08.948525 15 delete.go:95] Deleting pod "simpletest.rc-c2z9r" in namespace "gc-4581"
  I0901 12:52:09.033811 15 delete.go:95] Deleting pod "simpletest.rc-cmzl2" in namespace "gc-4581"
  I0901 12:52:09.225530 15 delete.go:95] Deleting pod "simpletest.rc-cplxn" in namespace "gc-4581"
  I0901 12:52:09.335705 15 delete.go:95] Deleting pod "simpletest.rc-crp9p" in namespace "gc-4581"
  E0901 12:52:09.612375      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:09.649467 15 delete.go:95] Deleting pod "simpletest.rc-cs94p" in namespace "gc-4581"
  I0901 12:52:09.735214 15 delete.go:95] Deleting pod "simpletest.rc-cvbld" in namespace "gc-4581"
  I0901 12:52:09.777184 15 delete.go:95] Deleting pod "simpletest.rc-dd2pd" in namespace "gc-4581"
  I0901 12:52:09.882101 15 delete.go:95] Deleting pod "simpletest.rc-dfs44" in namespace "gc-4581"
  I0901 12:52:09.947943 15 delete.go:95] Deleting pod "simpletest.rc-dx78s" in namespace "gc-4581"
  I0901 12:52:10.007559 15 delete.go:95] Deleting pod "simpletest.rc-dx8pw" in namespace "gc-4581"
  I0901 12:52:10.047452 15 delete.go:95] Deleting pod "simpletest.rc-dx8rg" in namespace "gc-4581"
  I0901 12:52:10.104325 15 delete.go:95] Deleting pod "simpletest.rc-dzthc" in namespace "gc-4581"
  I0901 12:52:10.186571 15 delete.go:95] Deleting pod "simpletest.rc-fpdpq" in namespace "gc-4581"
  I0901 12:52:10.242257 15 delete.go:95] Deleting pod "simpletest.rc-ftspm" in namespace "gc-4581"
  I0901 12:52:10.344551 15 delete.go:95] Deleting pod "simpletest.rc-fxpmt" in namespace "gc-4581"
  I0901 12:52:10.476689 15 delete.go:95] Deleting pod "simpletest.rc-fxzvj" in namespace "gc-4581"
  E0901 12:52:10.613058      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:10.787055 15 delete.go:95] Deleting pod "simpletest.rc-g5tnj" in namespace "gc-4581"
  I0901 12:52:10.876679 15 delete.go:95] Deleting pod "simpletest.rc-gb4j5" in namespace "gc-4581"
  I0901 12:52:10.953261 15 delete.go:95] Deleting pod "simpletest.rc-ghsws" in namespace "gc-4581"
  I0901 12:52:11.087289 15 delete.go:95] Deleting pod "simpletest.rc-gjnlv" in namespace "gc-4581"
  I0901 12:52:11.149689 15 delete.go:95] Deleting pod "simpletest.rc-gnjl8" in namespace "gc-4581"
  I0901 12:52:11.280296 15 delete.go:95] Deleting pod "simpletest.rc-gp79w" in namespace "gc-4581"
  I0901 12:52:11.352820 15 delete.go:95] Deleting pod "simpletest.rc-gssb6" in namespace "gc-4581"
  E0901 12:52:11.614042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:11.671093 15 delete.go:95] Deleting pod "simpletest.rc-hr4ps" in namespace "gc-4581"
  I0901 12:52:11.888598 15 delete.go:95] Deleting pod "simpletest.rc-jdj2c" in namespace "gc-4581"
  I0901 12:52:11.984962 15 delete.go:95] Deleting pod "simpletest.rc-jjflh" in namespace "gc-4581"
  I0901 12:52:12.076662 15 delete.go:95] Deleting pod "simpletest.rc-js89b" in namespace "gc-4581"
  I0901 12:52:12.170720 15 delete.go:95] Deleting pod "simpletest.rc-jxblp" in namespace "gc-4581"
  I0901 12:52:12.224955 15 delete.go:95] Deleting pod "simpletest.rc-k9phm" in namespace "gc-4581"
  I0901 12:52:12.269137 15 delete.go:95] Deleting pod "simpletest.rc-khk8s" in namespace "gc-4581"
  I0901 12:52:12.355009 15 delete.go:95] Deleting pod "simpletest.rc-khtm8" in namespace "gc-4581"
  I0901 12:52:12.444775 15 delete.go:95] Deleting pod "simpletest.rc-ksjpk" in namespace "gc-4581"
  I0901 12:52:12.553642 15 delete.go:95] Deleting pod "simpletest.rc-lszhj" in namespace "gc-4581"
  E0901 12:52:12.618960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:12.622248 15 delete.go:95] Deleting pod "simpletest.rc-mgbrf" in namespace "gc-4581"
  I0901 12:52:12.966490 15 delete.go:95] Deleting pod "simpletest.rc-n2lxr" in namespace "gc-4581"
  I0901 12:52:13.252157 15 delete.go:95] Deleting pod "simpletest.rc-ngjcf" in namespace "gc-4581"
  I0901 12:52:13.369556 15 delete.go:95] Deleting pod "simpletest.rc-nlxwg" in namespace "gc-4581"
  I0901 12:52:13.420433 15 delete.go:95] Deleting pod "simpletest.rc-nxp5b" in namespace "gc-4581"
  I0901 12:52:13.552865 15 delete.go:95] Deleting pod "simpletest.rc-pjrgr" in namespace "gc-4581"
  E0901 12:52:13.617051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:13.629638 15 delete.go:95] Deleting pod "simpletest.rc-q6cdm" in namespace "gc-4581"
  I0901 12:52:13.703562 15 delete.go:95] Deleting pod "simpletest.rc-qb99q" in namespace "gc-4581"
  I0901 12:52:13.747477 15 delete.go:95] Deleting pod "simpletest.rc-qbl5c" in namespace "gc-4581"
  I0901 12:52:13.869824 15 delete.go:95] Deleting pod "simpletest.rc-qkpbq" in namespace "gc-4581"
  I0901 12:52:13.945940 15 delete.go:95] Deleting pod "simpletest.rc-r4ckm" in namespace "gc-4581"
  I0901 12:52:13.981967 15 delete.go:95] Deleting pod "simpletest.rc-r62b5" in namespace "gc-4581"
  I0901 12:52:14.016644 15 delete.go:95] Deleting pod "simpletest.rc-rjlh5" in namespace "gc-4581"
  I0901 12:52:14.178299 15 delete.go:95] Deleting pod "simpletest.rc-rkj6n" in namespace "gc-4581"
  I0901 12:52:14.267327 15 delete.go:95] Deleting pod "simpletest.rc-sldww" in namespace "gc-4581"
  I0901 12:52:14.350893 15 delete.go:95] Deleting pod "simpletest.rc-smdjl" in namespace "gc-4581"
  I0901 12:52:14.459583 15 delete.go:95] Deleting pod "simpletest.rc-sr6s6" in namespace "gc-4581"
  I0901 12:52:14.590686 15 delete.go:95] Deleting pod "simpletest.rc-swdhz" in namespace "gc-4581"
  E0901 12:52:14.618036      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:14.645488 15 delete.go:95] Deleting pod "simpletest.rc-td5w8" in namespace "gc-4581"
  I0901 12:52:14.723942 15 delete.go:95] Deleting pod "simpletest.rc-td9v8" in namespace "gc-4581"
  I0901 12:52:14.942698 15 delete.go:95] Deleting pod "simpletest.rc-tmk77" in namespace "gc-4581"
  I0901 12:52:15.170822 15 delete.go:95] Deleting pod "simpletest.rc-tmn6h" in namespace "gc-4581"
  I0901 12:52:15.302142 15 delete.go:95] Deleting pod "simpletest.rc-tzpl4" in namespace "gc-4581"
  I0901 12:52:15.535975 15 delete.go:95] Deleting pod "simpletest.rc-v46bc" in namespace "gc-4581"
  E0901 12:52:15.618749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:15.625831 15 delete.go:95] Deleting pod "simpletest.rc-v46rs" in namespace "gc-4581"
  I0901 12:52:15.667610 15 delete.go:95] Deleting pod "simpletest.rc-vgj2k" in namespace "gc-4581"
  I0901 12:52:15.696562 15 delete.go:95] Deleting pod "simpletest.rc-vpn75" in namespace "gc-4581"
  I0901 12:52:15.750378 15 delete.go:95] Deleting pod "simpletest.rc-vx4t5" in namespace "gc-4581"
  I0901 12:52:15.851213 15 delete.go:95] Deleting pod "simpletest.rc-vzfss" in namespace "gc-4581"
  I0901 12:52:15.905385 15 delete.go:95] Deleting pod "simpletest.rc-w4fgs" in namespace "gc-4581"
  I0901 12:52:15.950282 15 delete.go:95] Deleting pod "simpletest.rc-wfdml" in namespace "gc-4581"
  I0901 12:52:15.983854 15 delete.go:95] Deleting pod "simpletest.rc-wv869" in namespace "gc-4581"
  I0901 12:52:16.030125 15 delete.go:95] Deleting pod "simpletest.rc-x5tcs" in namespace "gc-4581"
  I0901 12:52:16.075471 15 delete.go:95] Deleting pod "simpletest.rc-xclp7" in namespace "gc-4581"
  I0901 12:52:16.146717 15 delete.go:95] Deleting pod "simpletest.rc-xdv7q" in namespace "gc-4581"
  I0901 12:52:16.233342 15 delete.go:95] Deleting pod "simpletest.rc-xrprd" in namespace "gc-4581"
  I0901 12:52:16.272812 15 delete.go:95] Deleting pod "simpletest.rc-xrql8" in namespace "gc-4581"
  I0901 12:52:16.352703 15 delete.go:95] Deleting pod "simpletest.rc-zjmzs" in namespace "gc-4581"
  I0901 12:52:16.454707 15 delete.go:95] Deleting pod "simpletest.rc-zmgqk" in namespace "gc-4581"
  I0901 12:52:16.586848 15 delete.go:95] Deleting pod "simpletest.rc-zxxdb" in namespace "gc-4581"
  E0901 12:52:16.619295      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:16.768117 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4581" for this suite. @ 09/01/25 12:52:16.818
â€¢ [55.669 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/01/25 12:52:16.853
  I0901 12:52:16.853969 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename configmap @ 09/01/25 12:52:16.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:16.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:16.994
  STEP: Creating configMap with name configmap-test-volume-7ccc2350-4521-415f-a53d-9e4a117b7c0f @ 09/01/25 12:52:17.004
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:52:17.035
  E0901 12:52:17.620041      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:18.620749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:19.622240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:20.624046      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:52:21.176
  I0901 12:52:21.184099 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-45ec06f2-3b4e-4014-800d-77a8a6d30902 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:52:21.239
  I0901 12:52:21.290567 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5247" for this suite. @ 09/01/25 12:52:21.306
â€¢ [4.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/01/25 12:52:21.333
  I0901 12:52:21.333964 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename security-context @ 09/01/25 12:52:21.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:21.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:21.375
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 12:52:21.383
  E0901 12:52:21.622963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:22.624929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:23.624491      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:24.625261      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:52:25.481
  I0901 12:52:25.490131 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod security-context-e6123445-ac1b-45a5-8815-ad2da6c7be0c container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:52:25.511
  I0901 12:52:25.547483 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9384" for this suite. @ 09/01/25 12:52:25.557
â€¢ [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/01/25 12:52:25.58
  I0901 12:52:25.580645 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:52:25.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:25.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:25.618
  STEP: Creating secret with name secret-test-map-662faafc-2714-45a4-b7b6-cbb1934bc96d @ 09/01/25 12:52:25.624
  E0901 12:52:25.625261      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:52:25.634
  E0901 12:52:26.625791      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:27.625851      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:28.627121      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:29.628811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:52:29.687
  I0901 12:52:29.701180 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-0e9f9596-204b-4e14-8170-2e3855d63651 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:52:29.727
  I0901 12:52:29.759614 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1828" for this suite. @ 09/01/25 12:52:29.771
â€¢ [4.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/01/25 12:52:29.795
  I0901 12:52:29.795117 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 12:52:29.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:29.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:29.831
  E0901 12:52:30.630671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:31.629311      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:31.919238 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6818" for this suite. @ 09/01/25 12:52:31.933
â€¢ [2.158 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/01/25 12:52:31.955
  I0901 12:52:31.955291 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 12:52:31.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:31.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:32
  STEP: Creating a cronjob @ 09/01/25 12:52:32.009
  STEP: creating @ 09/01/25 12:52:32.01
  STEP: getting @ 09/01/25 12:52:32.026
  STEP: listing @ 09/01/25 12:52:32.038
  STEP: watching @ 09/01/25 12:52:32.046
  I0901 12:52:32.046876 15 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/01/25 12:52:32.049
  STEP: cluster-wide watching @ 09/01/25 12:52:32.058
  I0901 12:52:32.058586 15 cronjob.go:407] starting watch
  STEP: patching @ 09/01/25 12:52:32.061
  STEP: updating @ 09/01/25 12:52:32.081
  I0901 12:52:32.100586 15 cronjob.go:431] waiting for watch events with expected annotations
  I0901 12:52:32.100697 15 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 12:52:32.1
  STEP: updating /status @ 09/01/25 12:52:32.114
  STEP: get /status @ 09/01/25 12:52:32.135
  STEP: deleting @ 09/01/25 12:52:32.146
  STEP: deleting a collection @ 09/01/25 12:52:32.178
  I0901 12:52:32.202943 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7944" for this suite. @ 09/01/25 12:52:32.211
â€¢ [0.275 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/01/25 12:52:32.23
  I0901 12:52:32.230980 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:52:32.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:32.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:32.315
  STEP: getting /apis @ 09/01/25 12:52:32.324
  STEP: getting /apis/node.k8s.io @ 09/01/25 12:52:32.338
  STEP: getting /apis/node.k8s.io/v1 @ 09/01/25 12:52:32.342
  STEP: creating @ 09/01/25 12:52:32.345
  STEP: watching @ 09/01/25 12:52:32.39
  I0901 12:52:32.390078 15 runtimeclass.go:275] starting watch
  STEP: getting @ 09/01/25 12:52:32.411
  STEP: listing @ 09/01/25 12:52:32.417
  STEP: patching @ 09/01/25 12:52:32.428
  STEP: updating @ 09/01/25 12:52:32.443
  I0901 12:52:32.453664 15 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 12:52:32.453
  STEP: deleting a collection @ 09/01/25 12:52:32.484
  I0901 12:52:32.521360 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1823" for this suite. @ 09/01/25 12:52:32.53
â€¢ [0.315 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/01/25 12:52:32.546
  I0901 12:52:32.546930 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 12:52:32.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:32.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:32.579
  STEP: Performing setup for networking test in namespace pod-network-test-9143 @ 09/01/25 12:52:32.585
  STEP: creating a selector @ 09/01/25 12:52:32.585
  STEP: Creating the service pods in kubernetes @ 09/01/25 12:52:32.585
  I0901 12:52:32.585832 15 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0901 12:52:32.629862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:33.630723      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:34.631052      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:35.631877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:36.633492      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:37.633234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:38.633787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:39.633951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:40.634142      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:41.634381      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:42.634926      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:43.635631      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:44.636923      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:45.636281      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:46.636886      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/01/25 12:52:46.897
  E0901 12:52:47.643082      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:48.643259      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:49.005722 15 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 12:52:49.005859 15 utils.go:496] Going to poll 10.233.66.106 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 12:52:49.018101 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.106 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9143 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:52:49.018192 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:52:49.018443 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9143/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.106+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0901 12:52:49.643138      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:50.188712 15 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0901 12:52:50.188817 15 utils.go:496] Going to poll 10.233.64.93 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 12:52:50.201478 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.93 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9143 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:52:50.201587 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:52:50.201710 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9143/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.93+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0901 12:52:50.643651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:51.357763 15 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0901 12:52:51.357875 15 utils.go:496] Going to poll 10.233.65.214 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 12:52:51.369769 15 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.214 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9143 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:52:51.369855 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:52:51.369978 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9143/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.214+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0901 12:52:51.644495      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:52:52.495199 15 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0901 12:52:52.495747 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9143" for this suite. @ 09/01/25 12:52:52.514
â€¢ [19.989 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/01/25 12:52:52.536
  I0901 12:52:52.537061 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 12:52:52.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:52.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:52.581
  I0901 12:52:52.612934 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8761" for this suite. @ 09/01/25 12:52:52.628
  E0901 12:52:52.645451      15 retrywatcher.go:160] "Watch failed" err="context canceled"
â€¢ [0.109 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/01/25 12:52:52.646
  I0901 12:52:52.646583 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 12:52:52.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:52.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:52.687
  STEP: create the container @ 09/01/25 12:52:52.694
  W0901 12:52:52.715820      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/01/25 12:52:52.716
  E0901 12:52:53.645795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:54.646134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:55.646639      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 12:52:55.771
  STEP: the container should be terminated @ 09/01/25 12:52:55.784
  STEP: the termination message should be set @ 09/01/25 12:52:55.784
  I0901 12:52:55.784781 15 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 12:52:55.784
  I0901 12:52:55.842987 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9596" for this suite. @ 09/01/25 12:52:55.858
â€¢ [3.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 09/01/25 12:52:55.876
  I0901 12:52:55.876686 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 12:52:55.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:52:55.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:52:55.919
  I0901 12:52:55.965069 15 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0901 12:52:56.647701      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:57.647821      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:58.648060      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:52:59.648330      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:00.649026      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:01.649950      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:02.651301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:03.651605      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:04.651963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:05.655605      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:06.655224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:07.657203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:08.656673      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:09.658968      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:10.666224      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:11.659034      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:12.660192      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:13.660610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:14.660793      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:15.661237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:16.661811      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:17.663215      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:18.663795      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:19.664628      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:20.665090      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:21.665679      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:22.666370      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:23.666331      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:24.666889      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:25.667754      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:26.668790      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:27.668986      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:28.669301      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:29.670163      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:30.670700      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:31.671536      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:32.672126      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:33.672918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:34.674115      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:35.675107      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:36.675329      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:37.675929      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:38.676309      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:39.676737      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:40.676891      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:41.677042      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:42.678079      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:43.678828      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:44.679148      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:45.679542      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:46.680104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:47.680597      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:48.680829      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:49.681752      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:50.682381      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:51.683209      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:52.683393      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:53.683903      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:54.684689      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:55.684857      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:53:55.983239 15 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 12:53:55.998
  I0901 12:53:55.998333 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 12:53:56.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:53:56.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:53:56.055
  I0901 12:53:56.143269 15 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0901 12:53:56.157878 15 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/01/25 12:53:56.314
  STEP: Removing a custom resource @ 09/01/25 12:53:56.34
  STEP: Removing a custom resource @ 09/01/25 12:53:56.37
  I0901 12:53:56.398955 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2855" for this suite. @ 09/01/25 12:53:56.41
  I0901 12:53:56.429221 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5265" for this suite. @ 09/01/25 12:53:56.511
â€¢ [60.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/01/25 12:53:56.535
  I0901 12:53:56.536000 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:53:56.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:53:56.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:53:56.587
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8255 @ 09/01/25 12:53:56.595
  STEP: changing the ExternalName service to type=NodePort @ 09/01/25 12:53:56.608
  STEP: creating replication controller externalname-service in namespace services-8255 @ 09/01/25 12:53:56.656
  I0901 12:53:56.676850      15 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8255, replica count: 2
  E0901 12:53:56.685818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:57.685599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:58.685938      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:53:59.686395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:53:59.734598      15 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 12:53:59.735033 15 resource.go:361] Creating new exec pod
  E0901 12:54:00.687360      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:01.686964      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:02.687687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:02.800500 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:54:03.279935 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.1.7) 80 port [tcp/http] succeeded!\n"
  I0901 12:54:03.280150 15 builder.go:147] stdout: ""
  E0901 12:54:03.688762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:03.800868 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:54:04.165499 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.1.7) 80 port [tcp/http] succeeded!\n"
  I0901 12:54:04.165788 15 builder.go:147] stdout: ""
  E0901 12:54:04.690173      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:04.800169 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 12:54:05.104330 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.1.7) 80 port [tcp/http] succeeded!\n"
  I0901 12:54:05.104479 15 builder.go:147] stdout: "externalname-service-ksc4w"
  I0901 12:54:05.104938 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.1.7 80'
  I0901 12:54:05.418006 15 builder.go:146] stderr: "+ + nc -v -t -w 2 10.233.1.7 80\necho hostName\nConnection to 10.233.1.7 80 port [tcp/http] succeeded!\n"
  I0901 12:54:05.418346 15 builder.go:147] stdout: "externalname-service-vcq7m"
  I0901 12:54:05.418913 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.194 32611'
  E0901 12:54:05.691721      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:05.755369 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.194 32611\nConnection to 192.168.121.194 32611 port [tcp/*] succeeded!\n"
  I0901 12:54:05.755658 15 builder.go:147] stdout: ""
  I0901 12:54:06.420080 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.194 32611'
  E0901 12:54:06.691218      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:06.788605 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.194 32611\nConnection to 192.168.121.194 32611 port [tcp/*] succeeded!\n"
  I0901 12:54:06.788729 15 builder.go:147] stdout: "externalname-service-ksc4w"
  I0901 12:54:06.789225 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8255 exec execpodlmlmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.182 32611'
  I0901 12:54:07.132972 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.182 32611\nConnection to 192.168.121.182 32611 port [tcp/*] succeeded!\n"
  I0901 12:54:07.133097 15 builder.go:147] stdout: "externalname-service-vcq7m"
  I0901 12:54:07.133356 15 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0901 12:54:07.196977 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8255" for this suite. @ 09/01/25 12:54:07.206
â€¢ [10.691 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/01/25 12:54:07.229
  I0901 12:54:07.229328 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:54:07.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:07.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:07.266
  STEP: Creating projection with secret that has name projected-secret-test-map-f656343c-44ba-45da-84ba-ebdef02cc4f2 @ 09/01/25 12:54:07.274
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:54:07.286
  E0901 12:54:07.692474      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:08.692234      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:09.692602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:10.693320      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:54:11.343
  I0901 12:54:11.355660 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-secrets-3135ce31-e88c-446f-a78a-6e2961a05105 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:54:11.405
  I0901 12:54:11.483291 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7342" for this suite. @ 09/01/25 12:54:11.493
â€¢ [4.292 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/01/25 12:54:11.522
  I0901 12:54:11.522160 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:54:11.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:11.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:11.591
  STEP: Setting up server cert @ 09/01/25 12:54:11.635
  E0901 12:54:11.694595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:54:12.361
  STEP: Deploying the webhook pod @ 09/01/25 12:54:12.375
  STEP: Wait for the deployment to be ready @ 09/01/25 12:54:12.436
  I0901 12:54:12.470678 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:54:12.694822      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:13.695378      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:14.510101 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 54, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 54, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:54:14.698885      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:15.700375      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:54:16.52
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:54:16.553
  E0901 12:54:16.700572      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:17.555865 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/01/25 12:54:17.583
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:54:17.637
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/01/25 12:54:17.662
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:54:17.691
  E0901 12:54:17.702134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/01/25 12:54:17.718
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 12:54:17.735
  I0901 12:54:17.878164 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5504" for this suite. @ 09/01/25 12:54:17.888
  STEP: Destroying namespace "webhook-markers-6799" for this suite. @ 09/01/25 12:54:17.916
â€¢ [6.412 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/01/25 12:54:17.936
  I0901 12:54:17.937035 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 12:54:17.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:17.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:17.986
  E0901 12:54:18.703362      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:19.703819      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:20.030166 15 delete.go:62] Deleting pod "var-expansion-d920493c-0c8e-4077-a000-f6267675e6ce" in namespace "var-expansion-2281"
  I0901 12:54:20.055617 15 delete.go:70] Wait up to 5m0s for pod "var-expansion-d920493c-0c8e-4077-a000-f6267675e6ce" to be fully deleted
  E0901 12:54:20.704948      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:21.707380      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:22.076568 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2281" for this suite. @ 09/01/25 12:54:22.095
â€¢ [4.182 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/01/25 12:54:22.119
  I0901 12:54:22.119624 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 12:54:22.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:22.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:22.172
  E0901 12:54:22.706852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:23.707149      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/01/25 12:54:24.262
  I0901 12:54:24.263682 15 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9362 pod-service-account-cc0e56fe-c04c-487b-a363-786fbf021ba2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/01/25 12:54:24.575
  I0901 12:54:24.575799 15 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9362 pod-service-account-cc0e56fe-c04c-487b-a363-786fbf021ba2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0901 12:54:24.708089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/01/25 12:54:24.872
  I0901 12:54:24.873050 15 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9362 pod-service-account-cc0e56fe-c04c-487b-a363-786fbf021ba2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0901 12:54:25.241717 15 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-9362"
  I0901 12:54:25.249907 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9362" for this suite. @ 09/01/25 12:54:25.269
â€¢ [3.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/01/25 12:54:25.3
  I0901 12:54:25.300902 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 12:54:25.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:25.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:25.344
  I0901 12:54:25.356352 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:54:25.709193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:26.709947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:27.711595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 12:54:27.804
  I0901 12:54:27.804764 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-495 --namespace=crd-publish-openapi-495 create -f -'
  I0901 12:54:28.192805 15 builder.go:146] stderr: ""
  I0901 12:54:28.193228 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6593-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 12:54:28.193728 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-495 --namespace=crd-publish-openapi-495 delete e2e-test-crd-publish-openapi-6593-crds test-cr'
  I0901 12:54:28.400592 15 builder.go:146] stderr: ""
  I0901 12:54:28.401254 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6593-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0901 12:54:28.401831 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-495 --namespace=crd-publish-openapi-495 apply -f -'
  I0901 12:54:28.594962 15 builder.go:146] stderr: ""
  I0901 12:54:28.595050 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6593-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 12:54:28.595256 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-495 --namespace=crd-publish-openapi-495 delete e2e-test-crd-publish-openapi-6593-crds test-cr'
  E0901 12:54:28.712557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:28.789153 15 builder.go:146] stderr: ""
  I0901 12:54:28.789273 15 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6593-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/01/25 12:54:28.789
  I0901 12:54:28.789903 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=crd-publish-openapi-495 explain e2e-test-crd-publish-openapi-6593-crds'
  I0901 12:54:28.948017 15 builder.go:146] stderr: ""
  I0901 12:54:28.948467 15 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6593-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0901 12:54:29.713023      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:30.713188      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:31.268157 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-495" for this suite. @ 09/01/25 12:54:31.307
â€¢ [6.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/01/25 12:54:31.349
  I0901 12:54:31.349339 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 12:54:31.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:31.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:31.391
  I0901 12:54:31.419019 15 endpointslice.go:1045] Endpoints addresses: [192.168.121.194 192.168.121.245] , ports: [6443]
  I0901 12:54:31.419099 15 endpointslice.go:1075] EndpointSlices addresses: [192.168.121.194 192.168.121.245] , ports: [6443]
  I0901 12:54:31.419278 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6274" for this suite. @ 09/01/25 12:54:31.466
â€¢ [0.138 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/01/25 12:54:31.488
  I0901 12:54:31.488254 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:54:31.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:31.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:31.528
  STEP: creating secret secrets-3097/secret-test-330213eb-8c73-4d40-9f9f-4f3b17a2b4a2 @ 09/01/25 12:54:31.534
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:54:31.542
  E0901 12:54:31.714861      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:32.715477      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:33.716269      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:34.717084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:54:35.642
  I0901 12:54:35.651255 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-configmaps-200b1ee3-1ab0-4003-944f-888c398fdbdb container env-test: <nil>
  STEP: delete the pod @ 09/01/25 12:54:35.68
  E0901 12:54:35.719482      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:35.723631 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3097" for this suite. @ 09/01/25 12:54:35.737
â€¢ [4.272 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/01/25 12:54:35.761
  I0901 12:54:35.761377 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:54:35.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:35.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:35.807
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:54:35.812
  E0901 12:54:36.719733      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:37.720223      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:38.720614      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:39.720760      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:54:39.869
  I0901 12:54:39.880184 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-b6b50fd7-abaa-4e0e-8e17-9a23384a8c1c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:54:39.906
  I0901 12:54:39.953656 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3828" for this suite. @ 09/01/25 12:54:39.968
â€¢ [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/01/25 12:54:39.99
  I0901 12:54:39.990652 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:54:39.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:40.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:40.032
  STEP: Creating configMap with name projected-configmap-test-volume-94f4e48a-d3da-4907-9af2-a46ef9174d9b @ 09/01/25 12:54:40.038
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:54:40.048
  E0901 12:54:40.720863      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:41.721557      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:42.723246      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:43.723337      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:54:44.111
  I0901 12:54:44.121807 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-90b09ae9-3e2e-4127-b257-d3fb606769c0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:54:44.147
  I0901 12:54:44.200621 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3658" for this suite. @ 09/01/25 12:54:44.22
â€¢ [4.252 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/01/25 12:54:44.285
  I0901 12:54:44.285326 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:54:44.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:44.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:44.327
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 12:54:44.334
  E0901 12:54:44.726636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:45.724292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:46.725113      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:47.726134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:54:48.389
  I0901 12:54:48.402688 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-9eee69d3-46e9-483d-a276-e43d41c8f76f container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:54:48.439
  I0901 12:54:48.477798 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7010" for this suite. @ 09/01/25 12:54:48.488
â€¢ [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/01/25 12:54:48.505
  I0901 12:54:48.505763 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:54:48.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:54:48.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:54:48.539
  STEP: Setting up server cert @ 09/01/25 12:54:48.58
  E0901 12:54:48.726756      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:54:49.43
  STEP: Deploying the webhook pod @ 09/01/25 12:54:49.441
  STEP: Wait for the deployment to be ready @ 09/01/25 12:54:49.484
  I0901 12:54:49.507046 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:54:49.727631      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:50.728140      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:54:51.528
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:54:51.581
  E0901 12:54:51.728843      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:54:52.582640 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/01/25 12:54:52.605
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:54:52.605
  I0901 12:54:52.653915 15 webhook.go:2669] Waiting for webhook configuration to be ready...
  E0901 12:54:52.729593      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/01/25 12:54:52.789
  E0901 12:54:53.730172      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/01/25 12:54:53.81
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:54:53.81
  E0901 12:54:54.730240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/01/25 12:54:54.887
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:54:54.887
  E0901 12:54:55.730644      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:56.731376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:57.732358      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:58.731826      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:54:59.733093      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/01/25 12:55:00.007
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 12:55:00.008
  E0901 12:55:00.734007      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:01.734232      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:02.735318      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:03.735904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:04.736918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:05.280200 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7087" for this suite. @ 09/01/25 12:55:05.298
  STEP: Destroying namespace "webhook-markers-5038" for this suite. @ 09/01/25 12:55:05.319
â€¢ [16.829 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/01/25 12:55:05.334
  I0901 12:55:05.334768 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:55:05.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:05.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:05.372
  STEP: Creating configMap with name projected-configmap-test-volume-map-01f015d3-248a-42c6-b02b-1f0d1bf4e67e @ 09/01/25 12:55:05.378
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:55:05.386
  E0901 12:55:05.739579      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:06.740227      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:07.741812      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:08.741969      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:55:09.464
  I0901 12:55:09.473956 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-06a0e06f-678f-4139-aa4a-5c1ba8c094c2 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:55:09.495
  I0901 12:55:09.535156 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5515" for this suite. @ 09/01/25 12:55:09.549
â€¢ [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/01/25 12:55:09.574
  I0901 12:55:09.575498 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:55:09.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:09.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:09.621
  STEP: Setting up server cert @ 09/01/25 12:55:09.661
  E0901 12:55:09.742555      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:10.742653      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:55:10.98
  STEP: Deploying the webhook pod @ 09/01/25 12:55:10.99
  STEP: Wait for the deployment to be ready @ 09/01/25 12:55:11.019
  I0901 12:55:11.050969 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:55:11.742755      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:12.743648      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:13.091295 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 55, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 55, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 55, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 55, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:55:13.744005      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:14.744646      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:55:15.103
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:55:15.132
  E0901 12:55:15.745740      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:16.132870 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/01/25 12:55:16.16
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/01/25 12:55:16.223
  I0901 12:55:16.223467 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  I0901 12:55:16.404077 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9907" for this suite. @ 09/01/25 12:55:16.44
  STEP: Destroying namespace "webhook-markers-897" for this suite. @ 09/01/25 12:55:16.46
â€¢ [6.909 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/01/25 12:55:16.484
  I0901 12:55:16.484199 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 12:55:16.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:16.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:16.518
  I0901 12:55:16.524543 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 12:55:16.746538      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:17.747366      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:18.747358      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:19.747682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:19.928716 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9244" for this suite. @ 09/01/25 12:55:19.952
â€¢ [3.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/01/25 12:55:19.978
  I0901 12:55:19.979040 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:55:19.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:20.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:20.022
  STEP: Setting up server cert @ 09/01/25 12:55:20.06
  E0901 12:55:20.748910      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:55:21.236
  STEP: Deploying the webhook pod @ 09/01/25 12:55:21.253
  STEP: Wait for the deployment to be ready @ 09/01/25 12:55:21.284
  I0901 12:55:21.308034 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:55:21.750610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:22.749588      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:23.351485 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 55, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 55, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:55:23.749800      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:24.750133      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:55:25.362
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:55:25.389
  E0901 12:55:25.750368      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:26.390577 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/01/25 12:55:26.419
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/01/25 12:55:26.427
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 12:55:26.427
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 12:55:26.427
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 12:55:26.431
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 12:55:26.431
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 12:55:26.435
  I0901 12:55:26.541016 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1106" for this suite. @ 09/01/25 12:55:26.566
  STEP: Destroying namespace "webhook-markers-5115" for this suite. @ 09/01/25 12:55:26.584
â€¢ [6.626 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/01/25 12:55:26.606
  I0901 12:55:26.606180 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:55:26.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:26.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:26.645
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5126 @ 09/01/25 12:55:26.65
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 12:55:26.679
  STEP: creating service externalsvc in namespace services-5126 @ 09/01/25 12:55:26.68
  STEP: creating replication controller externalsvc in namespace services-5126 @ 09/01/25 12:55:26.707
  E0901 12:55:26.751225      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:26.754428      15 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5126, replica count: 2
  E0901 12:55:27.752051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:28.753035      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:29.754217      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:29.808955      15 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/01/25 12:55:29.818
  I0901 12:55:29.877161 15 resource.go:361] Creating new exec pod
  E0901 12:55:30.753954      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:31.754370      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:31.929426 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-5126 exec execpodxfm96 -- /bin/sh -x -c nslookup nodeport-service.services-5126.svc.cluster.local'
  I0901 12:55:32.389646 15 builder.go:146] stderr: "+ nslookup nodeport-service.services-5126.svc.cluster.local\n"
  I0901 12:55:32.389813 15 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-5126.svc.cluster.local\tcanonical name = externalsvc.services-5126.svc.cluster.local.\nName:\texternalsvc.services-5126.svc.cluster.local\nAddress: 10.233.59.191\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5126, will wait for the garbage collector to delete the pods @ 09/01/25 12:55:32.39
  I0901 12:55:32.472002 15 resources.go:139] Deleting ReplicationController externalsvc took: 24.008158ms
  I0901 12:55:32.572884 15 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.866295ms
  E0901 12:55:32.754806      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:33.755610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:34.756222      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:35.756878      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:36.138785 15 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0901 12:55:36.173927 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5126" for this suite. @ 09/01/25 12:55:36.185
â€¢ [9.595 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/01/25 12:55:36.201
  I0901 12:55:36.201661 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 12:55:36.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:36.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:36.239
  E0901 12:55:36.758316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:37.758347      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/01/25 12:55:38.32
  STEP: Cleaning up the configmap @ 09/01/25 12:55:38.351
  STEP: Cleaning up the pod @ 09/01/25 12:55:38.384
  I0901 12:55:38.445391 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8428" for this suite. @ 09/01/25 12:55:38.47
â€¢ [2.293 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 09/01/25 12:55:38.496
  I0901 12:55:38.496111 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:55:38.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:38.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:38.532
  I0901 12:55:38.539630 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 create -f -'
  E0901 12:55:38.759077      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:38.973586 15 builder.go:146] stderr: ""
  I0901 12:55:38.973865 15 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0901 12:55:38.974433 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 create -f -'
  I0901 12:55:39.346462 15 builder.go:146] stderr: ""
  I0901 12:55:39.346973 15 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 12:55:39.347
  E0901 12:55:39.760542      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:40.363434 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:55:40.363589 15 framework.go:733] Found 0 / 1
  E0901 12:55:40.760908      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:41.355057 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:55:41.355274 15 framework.go:733] Found 1 / 1
  I0901 12:55:41.355321 15 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 12:55:41.363138 15 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 12:55:41.363195 15 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 12:55:41.363539 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 describe pod agnhost-primary-mnvdc'
  I0901 12:55:41.759675 15 builder.go:146] stderr: ""
  I0901 12:55:41.760225 15 builder.go:147] stdout: "Name:             agnhost-primary-mnvdc\nNamespace:        kubectl-7538\nPriority:         0\nService Account:  default\nNode:             aeshuj4hoh7a-3/192.168.121.182\nStart Time:       Mon, 01 Sep 2025 12:55:39 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.65.70\nIPs:\n  IP:           10.233.65.70\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://0cc2a12f5ca370ba81a033effe848435da086e9bfb381ed06c4a0aa7645e8e0e\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:1c5d47ecd9c4fca235ec0eeb9af0c39d8dd981ae703805a1f23676a9bf47c3bb\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 01 Sep 2025 12:55:39 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-zwnd6 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-zwnd6:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7538/agnhost-primary-mnvdc to aeshuj4hoh7a-3\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  E0901 12:55:41.760960      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:41.761298 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 describe rc agnhost-primary'
  I0901 12:55:41.970519 15 builder.go:146] stderr: ""
  I0901 12:55:41.970673 15 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7538\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-mnvdc\n"
  I0901 12:55:41.971623 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 describe service agnhost-primary'
  I0901 12:55:42.180073 15 builder.go:146] stderr: ""
  I0901 12:55:42.180258 15 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7538\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.57.96\nIPs:                      10.233.57.96\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.65.70:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0901 12:55:42.190877 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 describe node aeshuj4hoh7a-1'
  I0901 12:55:42.431678 15 builder.go:146] stderr: ""
  I0901 12:55:42.432077 15 builder.go:147] stdout: "Name:               aeshuj4hoh7a-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=aeshuj4hoh7a-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 01 Sep 2025 10:43:49 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  aeshuj4hoh7a-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 01 Sep 2025 12:55:41 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 01 Sep 2025 10:47:14 +0000   Mon, 01 Sep 2025 10:47:14 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Mon, 01 Sep 2025 12:53:13 +0000   Mon, 01 Sep 2025 11:02:43 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 01 Sep 2025 12:53:13 +0000   Mon, 01 Sep 2025 11:02:43 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 01 Sep 2025 12:53:13 +0000   Mon, 01 Sep 2025 11:02:43 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 01 Sep 2025 12:53:13 +0000   Mon, 01 Sep 2025 11:02:43 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.121.194\n  Hostname:    aeshuj4hoh7a-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8133124Ki\n  pods:               256\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283460Ki\n  pods:               256\nSystem Info:\n  Machine ID:                 a1af0a10863f4c5c806beb905c9c0baf\n  System UUID:                a1af0a10-863f-4c5c-806b-eb905c9c0baf\n  Boot ID:                    7e4445a2-931f-4b87-b339-b902ba5930b2\n  Kernel Version:             6.14.0-29-generic\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.32.7\n  Kubelet Version:            v1.32.8\n  Kube-Proxy Version:         v1.32.8\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-node-init-t2mqh                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         129m\n  kube-system                 cilium-phmzb                                               100m (6%)     0 (0%)      10Mi (0%)        0 (0%)         129m\n  kube-system                 coredns-668d6bf9bc-w8sj7                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     122m\n  kube-system                 kube-apiserver-aeshuj4hoh7a-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         131m\n  kube-system                 kube-controller-manager-aeshuj4hoh7a-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         131m\n  kube-system                 kube-proxy-9m2kx                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         131m\n  kube-system                 kube-scheduler-aeshuj4hoh7a-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         131m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-2b71d4b1fa9f4768-sbccx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         107m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (53%)  0 (0%)\n  memory             180Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0901 12:55:42.432887 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-7538 describe namespace kubectl-7538'
  I0901 12:55:42.674594 15 builder.go:146] stderr: ""
  I0901 12:55:42.674796 15 builder.go:147] stdout: "Name:         kubectl-7538\nLabels:       e2e-framework=kubectl\n              e2e-run=caccd6a4-faae-45df-a9b7-9656d1f0919f\n              kubernetes.io/metadata.name=kubectl-7538\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0901 12:55:42.675118 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7538" for this suite. @ 09/01/25 12:55:42.688
â€¢ [4.211 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/01/25 12:55:42.707
  I0901 12:55:42.707982 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:55:42.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:42.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:42.747
  E0901 12:55:42.761883      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/01/25 12:55:42.789
  E0901 12:55:43.762675      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:55:43.826
  STEP: Deploying the webhook pod @ 09/01/25 12:55:43.838
  STEP: Wait for the deployment to be ready @ 09/01/25 12:55:43.867
  I0901 12:55:43.891813 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:55:44.764449      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:45.763333      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:45.931017 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 55, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 55, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 55, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 55, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:55:46.764017      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:47.763931      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:55:47.939
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:55:47.971
  E0901 12:55:48.765039      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:48.974363 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 12:55:49
  I0901 12:55:49.112979 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8969" for this suite. @ 09/01/25 12:55:49.125
  STEP: Destroying namespace "webhook-markers-7528" for this suite. @ 09/01/25 12:55:49.15
â€¢ [6.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/01/25 12:55:49.201
  I0901 12:55:49.201516 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:55:49.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:55:49.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:55:49.243
  STEP: creating all guestbook components @ 09/01/25 12:55:49.248
  I0901 12:55:49.248706 15 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0901 12:55:49.248990 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 create -f -'
  I0901 12:55:49.765665 15 builder.go:146] stderr: ""
  I0901 12:55:49.765793 15 builder.go:147] stdout: "service/agnhost-replica created\n"
  E0901 12:55:49.766095      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:49.765901 15 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0901 12:55:49.768136 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 create -f -'
  I0901 12:55:50.131771 15 builder.go:146] stderr: ""
  I0901 12:55:50.131856 15 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0901 12:55:50.131970 15 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0901 12:55:50.132642 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 create -f -'
  I0901 12:55:50.478688 15 builder.go:146] stderr: ""
  I0901 12:55:50.480207 15 builder.go:147] stdout: "service/frontend created\n"
  I0901 12:55:50.480634 15 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0901 12:55:50.481885 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 create -f -'
  I0901 12:55:50.723023 15 builder.go:146] stderr: ""
  I0901 12:55:50.723594 15 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0901 12:55:50.724092 15 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 12:55:50.724818 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 create -f -'
  E0901 12:55:50.766630      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:51.063203 15 builder.go:146] stderr: ""
  I0901 12:55:51.063312 15 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0901 12:55:51.063559 15 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 12:55:51.064053 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 create -f -'
  E0901 12:55:51.788595      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:52.009237 15 builder.go:146] stderr: ""
  I0901 12:55:52.012607 15 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/01/25 12:55:52.04
  I0901 12:55:52.040348 15 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0901 12:55:52.788665      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:53.789169      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:54.789987      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:55.790376      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:56.790803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:55:57.142442 15 kubectl.go:2283] Waiting for frontend to serve content.
  I0901 12:55:57.183178 15 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0901 12:55:57.241979 15 kubectl.go:2293] Verifying that added entry can be retrieved.
  I0901 12:55:57.265371 15 kubectl.go:2306] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0901 12:55:57.791104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:58.792105      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:55:59.792746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:00.793089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:01.793252      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 09/01/25 12:56:02.304
  I0901 12:56:02.304611 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 delete --grace-period=0 --force -f -'
  I0901 12:56:02.524898 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:56:02.524983 15 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 12:56:02.525
  I0901 12:56:02.525805 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 delete --grace-period=0 --force -f -'
  I0901 12:56:02.730456 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:56:02.730558 15 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 12:56:02.73
  I0901 12:56:02.731587 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 delete --grace-period=0 --force -f -'
  E0901 12:56:02.793877      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:02.968987 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:56:02.969100 15 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 12:56:02.969
  I0901 12:56:02.969725 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 delete --grace-period=0 --force -f -'
  I0901 12:56:03.134936 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:56:03.135102 15 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 12:56:03.135
  I0901 12:56:03.136218 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 delete --grace-period=0 --force -f -'
  I0901 12:56:03.368007 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:56:03.368567 15 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 12:56:03.368
  I0901 12:56:03.369369 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-5375 delete --grace-period=0 --force -f -'
  I0901 12:56:03.785062 15 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 12:56:03.785218 15 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0901 12:56:03.785530 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:56:03.794089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-5375" for this suite. @ 09/01/25 12:56:03.805
â€¢ [14.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/01/25 12:56:03.835
  I0901 12:56:03.835269 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename watch @ 09/01/25 12:56:03.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:03.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:03.898
  STEP: creating a watch on configmaps with a certain label @ 09/01/25 12:56:03.906
  STEP: creating a new configmap @ 09/01/25 12:56:03.912
  STEP: modifying the configmap once @ 09/01/25 12:56:03.923
  STEP: changing the label value of the configmap @ 09/01/25 12:56:03.938
  STEP: Expecting to observe a delete notification for the watched object @ 09/01/25 12:56:03.954
  I0901 12:56:03.954667 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3826  b4124bb7-8431-49c1-a517-3ccaf206aff4 43859 0 2025-09-01 12:56:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 12:56:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:56:03.955050 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3826  b4124bb7-8431-49c1-a517-3ccaf206aff4 43860 0 2025-09-01 12:56:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 12:56:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:56:03.955254 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3826  b4124bb7-8431-49c1-a517-3ccaf206aff4 43862 0 2025-09-01 12:56:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 12:56:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/01/25 12:56:03.955
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/01/25 12:56:03.968
  E0901 12:56:04.794786      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:05.795389      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:06.796070      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:07.796916      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:08.796966      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:09.797749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:10.798130      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:11.798358      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:12.799341      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:13.799977      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/01/25 12:56:13.969
  STEP: modifying the configmap a third time @ 09/01/25 12:56:13.996
  STEP: deleting the configmap @ 09/01/25 12:56:14.022
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/01/25 12:56:14.041
  I0901 12:56:14.043079 15 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3826  b4124bb7-8431-49c1-a517-3ccaf206aff4 43943 0 2025-09-01 12:56:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 12:56:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:56:14.043453 15 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3826  b4124bb7-8431-49c1-a517-3ccaf206aff4 43944 0 2025-09-01 12:56:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 12:56:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:56:14.044382 15 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3826  b4124bb7-8431-49c1-a517-3ccaf206aff4 43945 0 2025-09-01 12:56:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 12:56:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 12:56:14.045226 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3826" for this suite. @ 09/01/25 12:56:14.066
â€¢ [10.250 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/01/25 12:56:14.085
  I0901 12:56:14.085327 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 12:56:14.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:14.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:14.129
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/01/25 12:56:14.136
  E0901 12:56:14.802089      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:15.801031      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:16.802352      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:17.802859      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:56:18.199
  I0901 12:56:18.210098 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-cb8d55f6-b774-43b7-aa6f-c1b37ae9f819 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 12:56:18.234
  I0901 12:56:18.279317 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2711" for this suite. @ 09/01/25 12:56:18.291
â€¢ [4.227 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:56:18.313
  I0901 12:56:18.313629 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/01/25 12:56:18.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:18.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:18.35
  STEP: mirroring a new custom Endpoint @ 09/01/25 12:56:18.386
  I0901 12:56:18.401883 15 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0901 12:56:18.803084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:19.803907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/01/25 12:56:20.412
  STEP: mirroring deletion of a custom Endpoint @ 09/01/25 12:56:20.44
  I0901 12:56:20.473639 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4436" for this suite. @ 09/01/25 12:56:20.486
â€¢ [2.186 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/01/25 12:56:20.499
  I0901 12:56:20.499929 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 12:56:20.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:20.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:20.533
  STEP: Creating a pod to test downward api env vars @ 09/01/25 12:56:20.541
  E0901 12:56:20.804785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:21.805807      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:22.806394      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:23.807014      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:56:24.604
  I0901 12:56:24.617009 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downward-api-085b17e9-ebe9-4e9e-bdbe-f449d661d1fb container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 12:56:24.645
  I0901 12:56:24.686227 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9450" for this suite. @ 09/01/25 12:56:24.701
â€¢ [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/01/25 12:56:24.728
  I0901 12:56:24.728670 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename services @ 09/01/25 12:56:24.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:24.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:24.773
  STEP: creating service nodeport-test with type=NodePort in namespace services-8102 @ 09/01/25 12:56:24.785
  E0901 12:56:24.807615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating replication controller nodeport-test in namespace services-8102 @ 09/01/25 12:56:24.82
  I0901 12:56:24.829844      15 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-8102, replica count: 2
  E0901 12:56:25.807977      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:26.808568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:27.808846      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:27.881846      15 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 12:56:27.882285 15 resource.go:361] Creating new exec pod
  E0901 12:56:28.810095      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:29.810276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:30.811048      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:30.939219 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8102 exec execpods285v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 12:56:31.327908 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.30.182) 80 port [tcp/http] succeeded!\n"
  I0901 12:56:31.328084 15 builder.go:147] stdout: "nodeport-test-dqz5h"
  I0901 12:56:31.328924 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8102 exec execpods285v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.182 80'
  I0901 12:56:31.636253 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.30.182 80\nConnection to 10.233.30.182 80 port [tcp/http] succeeded!\n"
  I0901 12:56:31.636346 15 builder.go:147] stdout: "nodeport-test-dqz5h"
  I0901 12:56:31.637063 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8102 exec execpods285v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.194 32251'
  E0901 12:56:31.811727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:31.975774 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.194 32251\nConnection to 192.168.121.194 32251 port [tcp/*] succeeded!\n"
  I0901 12:56:31.975856 15 builder.go:147] stdout: "nodeport-test-dqz5h"
  I0901 12:56:31.976552 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8102 exec execpods285v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.245 32251'
  I0901 12:56:32.299945 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.245 32251\nConnection to 192.168.121.245 32251 port [tcp/*] succeeded!\n"
  I0901 12:56:32.300282 15 builder.go:147] stdout: ""
  E0901 12:56:32.812938      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:32.977689 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8102 exec execpods285v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.245 32251'
  I0901 12:56:33.358346 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.245 32251\nConnection to 192.168.121.245 32251 port [tcp/*] succeeded!\n"
  I0901 12:56:33.358566 15 builder.go:147] stdout: ""
  E0901 12:56:33.813952      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:33.977124 15 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=services-8102 exec execpods285v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.245 32251'
  I0901 12:56:34.312289 15 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.245 32251\nConnection to 192.168.121.245 32251 port [tcp/*] succeeded!\n"
  I0901 12:56:34.312494 15 builder.go:147] stdout: "nodeport-test-dqz5h"
  I0901 12:56:34.314788 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8102" for this suite. @ 09/01/25 12:56:34.328
â€¢ [9.616 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/01/25 12:56:34.345
  I0901 12:56:34.345277 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pods @ 09/01/25 12:56:34.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:34.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:34.381
  E0901 12:56:34.815238      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:35.815836      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:36.816084      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:37.816213      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:38.816575      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:39.816770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:56:40.586
  I0901 12:56:40.600305 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod client-envvars-14d124ac-e21a-43e9-acdc-1c761f49f42b container env3cont: <nil>
  STEP: delete the pod @ 09/01/25 12:56:40.635
  I0901 12:56:40.679771 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3167" for this suite. @ 09/01/25 12:56:40.703
â€¢ [6.375 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/01/25 12:56:40.729
  I0901 12:56:40.729584 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:56:40.758
  E0901 12:56:40.817296      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:40.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:40.845
  STEP: Creating projection with secret that has name secret-emptykey-test-399cbf53-94e2-4556-a43b-2a15361da953 @ 09/01/25 12:56:40.851
  I0901 12:56:40.856238 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6760" for this suite. @ 09/01/25 12:56:40.864
â€¢ [0.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/01/25 12:56:40.879
  I0901 12:56:40.879982 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 12:56:40.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:40.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:40.913
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 12:56:40.965
  E0901 12:56:41.818239      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:42.818888      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:43.818602      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:44.826277      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/01/25 12:56:45.029
  E0901 12:56:45.826210      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:46.827848      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:47.843437      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:48.829112      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/01/25 12:56:49.119
  STEP: delete the pod with lifecycle hook @ 09/01/25 12:56:49.177
  E0901 12:56:49.830054      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:50.833949      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:56:51.258356 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2618" for this suite. @ 09/01/25 12:56:51.279
â€¢ [10.424 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/01/25 12:56:51.305
  I0901 12:56:51.305305 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename job @ 09/01/25 12:56:51.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:56:51.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:56:51.368
  STEP: Looking for a node to schedule job pods @ 09/01/25 12:56:51.377
  STEP: Creating a job @ 09/01/25 12:56:51.403
  STEP: Waiting for all the pods to be ready @ 09/01/25 12:56:51.419
  E0901 12:56:51.831184      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:52.833350      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:53.832770      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:54.833608      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:55.833918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:56.834071      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:57.835370      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:58.835274      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:56:59.835636      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:00.836354      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/01/25 12:57:01.524
  STEP: Evict all the Pods @ 09/01/25 12:57:01.541
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-xz8mt/job-208 @ 09/01/25 12:57:01.541
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-s9wtz/job-208 @ 09/01/25 12:57:01.541
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-fgrql/job-208 @ 09/01/25 12:57:01.542
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-s9wtz/job-208 to be deleted @ 09/01/25 12:57:01.63
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-xz8mt/job-208 to be deleted @ 09/01/25 12:57:01.637
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-fgrql/job-208 to be deleted @ 09/01/25 12:57:01.657
  E0901 12:57:01.837492      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:02.837901      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:03.838182      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:04.838263      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:05.840091      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:06.840104      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/01/25 12:57:07.699
  E0901 12:57:07.840953      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:08.841666      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:09.842786      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:10.842909      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:11.843528      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:12.844305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:13.844488      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:14.845134      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:15.845934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:16.846881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:17.847789      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:18.848292      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:19.848980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:20.849762      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:21.849771      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:22.849979      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:23.850103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:24.850568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:25.851109      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:26.851335      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:27.852155      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:28.851800      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:29.853221      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:30.853145      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:31.853881      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:32.854394      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:33.855308      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:34.855475      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:35.855316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:36.856580      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:37.856792      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:38.857239      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:39.857967      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:40.858651      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:41.858892      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:42.859285      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:43.860276      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:44.861160      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:45.861767      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:46.863203      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:47.863801      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:48.865240      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:49.864785      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:57:50.090804 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-208" for this suite. @ 09/01/25 12:57:50.104
â€¢ [58.813 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/01/25 12:57:50.119
  I0901 12:57:50.119056 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 12:57:50.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:57:50.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:57:50.156
  STEP: Creating 50 configmaps @ 09/01/25 12:57:50.161
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 12:57:50.657
  I0901 12:57:50.684205 15 resource.go:87] Pod name wrapped-volume-race-e7e7d98c-89bc-4928-91ee-b54e0bcd82e9: Found 0 pods out of 5
  E0901 12:57:50.867013      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:51.955786      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:52.956753      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:53.957158      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:54.957974      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:57:55.700389 15 resource.go:87] Pod name wrapped-volume-race-e7e7d98c-89bc-4928-91ee-b54e0bcd82e9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 12:57:55.7
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 12:57:55.778
  I0901 12:57:55.819316 15 resource.go:87] Pod name wrapped-volume-race-49667e56-35b3-416d-beb6-22275151aa90: Found 0 pods out of 5
  E0901 12:57:55.958934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:56.969309      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:57.970200      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:58.970194      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:57:59.970275      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:00.856110 15 resource.go:87] Pod name wrapped-volume-race-49667e56-35b3-416d-beb6-22275151aa90: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 12:58:00.856
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 12:58:00.941
  E0901 12:58:00.970913      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:00.983010 15 resource.go:87] Pod name wrapped-volume-race-126105d5-6514-4b0c-8edc-aa147db3abbf: Found 0 pods out of 5
  E0901 12:58:01.971885      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:02.971599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:03.971899      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:04.972113      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:05.973767      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:06.006155 15 resource.go:87] Pod name wrapped-volume-race-126105d5-6514-4b0c-8edc-aa147db3abbf: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 12:58:06.007
  STEP: deleting ReplicationController wrapped-volume-race-126105d5-6514-4b0c-8edc-aa147db3abbf in namespace emptydir-wrapper-1484, will wait for the garbage collector to delete the pods @ 09/01/25 12:58:06.076
  I0901 12:58:06.168318 15 resources.go:139] Deleting ReplicationController wrapped-volume-race-126105d5-6514-4b0c-8edc-aa147db3abbf took: 28.524926ms
  I0901 12:58:06.369393 15 resources.go:163] Terminating ReplicationController wrapped-volume-race-126105d5-6514-4b0c-8edc-aa147db3abbf pods took: 201.031812ms
  E0901 12:58:06.973749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:07.975469      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-49667e56-35b3-416d-beb6-22275151aa90 in namespace emptydir-wrapper-1484, will wait for the garbage collector to delete the pods @ 09/01/25 12:58:08.77
  I0901 12:58:08.857319 15 resources.go:139] Deleting ReplicationController wrapped-volume-race-49667e56-35b3-416d-beb6-22275151aa90 took: 21.069062ms
  I0901 12:58:08.957779 15 resources.go:163] Terminating ReplicationController wrapped-volume-race-49667e56-35b3-416d-beb6-22275151aa90 pods took: 100.45663ms
  E0901 12:58:08.991332      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:09.992783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-e7e7d98c-89bc-4928-91ee-b54e0bcd82e9 in namespace emptydir-wrapper-1484, will wait for the garbage collector to delete the pods @ 09/01/25 12:58:10.459
  I0901 12:58:10.538080 15 resources.go:139] Deleting ReplicationController wrapped-volume-race-e7e7d98c-89bc-4928-91ee-b54e0bcd82e9 took: 16.675362ms
  I0901 12:58:10.641995 15 resources.go:163] Terminating ReplicationController wrapped-volume-race-e7e7d98c-89bc-4928-91ee-b54e0bcd82e9 pods took: 103.913717ms
  E0901 12:58:10.992918      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:11.993659      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/01/25 12:58:12.642
  E0901 12:58:12.994163      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:13.295907 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1484" for this suite. @ 09/01/25 12:58:13.305
â€¢ [23.198 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/01/25 12:58:13.32
  I0901 12:58:13.320396 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:58:13.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:13.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:13.365
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:58:13.373
  E0901 12:58:13.994282      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:14.995078      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:15.996103      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:16.996345      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:58:17.429
  I0901 12:58:17.442687 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-fb8a1683-a973-4114-a1c7-f2d70f0c1f5e container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:58:17.503
  I0901 12:58:17.546104 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-504" for this suite. @ 09/01/25 12:58:17.559
â€¢ [4.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/01/25 12:58:17.586
  I0901 12:58:17.586905 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:58:17.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:17.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:17.625
  STEP: Setting up server cert @ 09/01/25 12:58:17.666
  E0901 12:58:17.996951      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:58:18.436
  STEP: Deploying the webhook pod @ 09/01/25 12:58:18.45
  STEP: Wait for the deployment to be ready @ 09/01/25 12:58:18.481
  I0901 12:58:18.506554 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:58:18.997800      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:19.998385      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:20.541221 15 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 12, 58, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 58, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 12, 58, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 12, 58, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 12:58:20.998941      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:21.999922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:58:22.554
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:58:22.593
  E0901 12:58:23.000698      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:23.593580 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 12:58:23.619
  STEP: create a pod that should be denied by the webhook @ 09/01/25 12:58:23.679
  STEP: create a pod that causes the webhook to hang @ 09/01/25 12:58:23.718
  E0901 12:58:24.002233      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:25.002617      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:26.003604      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:27.003880      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:28.004628      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:29.004816      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:30.005048      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:31.005341      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:32.005805      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:33.006692      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/01/25 12:58:33.737
  STEP: create a configmap that should be admitted by the webhook @ 09/01/25 12:58:33.78
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 12:58:33.813
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 12:58:33.836
  STEP: create a namespace that bypass the webhook @ 09/01/25 12:58:33.853
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/01/25 12:58:33.879
  I0901 12:58:34.003875 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 12:58:34.006430      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9483" for this suite. @ 09/01/25 12:58:34.024
  STEP: Destroying namespace "webhook-markers-6376" for this suite. @ 09/01/25 12:58:34.048
  STEP: Destroying namespace "exempted-namespace-3166" for this suite. @ 09/01/25 12:58:34.066
â€¢ [16.496 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/01/25 12:58:34.082
  I0901 12:58:34.082817 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 12:58:34.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:34.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:34.119
  STEP: creating @ 09/01/25 12:58:34.125
  STEP: getting @ 09/01/25 12:58:34.175
  STEP: listing in namespace @ 09/01/25 12:58:34.188
  STEP: patching @ 09/01/25 12:58:34.197
  STEP: deleting @ 09/01/25 12:58:34.227
  I0901 12:58:34.250776 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7573" for this suite. @ 09/01/25 12:58:34.258
â€¢ [0.186 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/01/25 12:58:34.27
  I0901 12:58:34.270035 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 12:58:34.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:34.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:34.306
  I0901 12:58:34.391673 15 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 12:58:34.407
  I0901 12:58:34.513061 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:58:34.513174 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:58:35.006768      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:35.478201 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:58:35.478274 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:58:36.007558      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:36.439112 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:58:36.439210 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:58:37.007921      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:37.439052 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:58:37.439161 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/01/25 12:58:37.505
  STEP: Check that daemon pods images are updated. @ 09/01/25 12:58:37.556
  I0901 12:58:37.567674 15 daemon_set.go:1193] Wrong image for pod: daemon-set-4rcws. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:58:37.567765 15 daemon_set.go:1193] Wrong image for pod: daemon-set-g2z6s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:58:37.567792 15 daemon_set.go:1193] Wrong image for pod: daemon-set-z5cf5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0901 12:58:38.008010      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:38.568141 15 daemon_set.go:1193] Wrong image for pod: daemon-set-4rcws. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:58:38.568240 15 daemon_set.go:1193] Wrong image for pod: daemon-set-z5cf5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0901 12:58:39.009076      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:39.631587 15 daemon_set.go:1193] Wrong image for pod: daemon-set-4rcws. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 12:58:39.631678 15 daemon_set.go:1198] Pod daemon-set-jdsmn is not available
  I0901 12:58:39.631699 15 daemon_set.go:1193] Wrong image for pod: daemon-set-z5cf5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0901 12:58:40.009173      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:40.569746 15 daemon_set.go:1193] Wrong image for pod: daemon-set-z5cf5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0901 12:58:41.009556      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:41.581653 15 daemon_set.go:1198] Pod daemon-set-nj44s is not available
  I0901 12:58:41.581741 15 daemon_set.go:1193] Wrong image for pod: daemon-set-z5cf5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0901 12:58:42.009707      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:42.571824 15 daemon_set.go:1198] Pod daemon-set-nj44s is not available
  I0901 12:58:42.571945 15 daemon_set.go:1193] Wrong image for pod: daemon-set-z5cf5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0901 12:58:43.010669      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:43.573628 15 daemon_set.go:1198] Pod daemon-set-8rrdv is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/01/25 12:58:43.588
  I0901 12:58:43.616462 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:58:43.616598 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:58:44.010962      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:44.622319 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 12:58:44.622764 15 fixtures.go:131] Node aeshuj4hoh7a-1 is running 0 daemon pod, expected 1
  E0901 12:58:45.012558      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:45.618816 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 12:58:45.618953 15 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 12:58:45.78
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4728, will wait for the garbage collector to delete the pods @ 09/01/25 12:58:45.78
  I0901 12:58:45.867367 15 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.252316ms
  I0901 12:58:45.969026 15 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.654071ms
  E0901 12:58:46.012682      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:46.979356 15 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 12:58:46.979562 15 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 12:58:46.993964 15 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45445"},"items":null}

  I0901 12:58:47.007063 15 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45445"},"items":null}

  E0901 12:58:47.013171      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:47.059003 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4728" for this suite. @ 09/01/25 12:58:47.07
â€¢ [12.820 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/01/25 12:58:47.09
  I0901 12:58:47.090381 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:58:47.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:47.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:47.131
  STEP: Creating configMap with name projected-configmap-test-volume-map-c4020932-bd80-48d3-b4c6-3a85b3a3bbda @ 09/01/25 12:58:47.139
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:58:47.149
  E0901 12:58:48.013305      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:49.013746      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:50.014591      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:51.014516      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:58:51.208
  I0901 12:58:51.218174 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-6b8084a8-0269-4011-8b33-464984b33253 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:58:51.247
  I0901 12:58:51.290939 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1544" for this suite. @ 09/01/25 12:58:51.306
â€¢ [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/01/25 12:58:51.33
  I0901 12:58:51.330790 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/01/25 12:58:51.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:51.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:51.371
  STEP: Setting up the test @ 09/01/25 12:58:51.378
  STEP: Creating hostNetwork=false pod @ 09/01/25 12:58:51.378
  E0901 12:58:52.014677      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:53.015383      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:54.015782      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:55.016106      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/01/25 12:58:55.502
  E0901 12:58:56.017101      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:58:57.017714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/01/25 12:58:57.557
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/01/25 12:58:57.558
  I0901 12:58:57.558209 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:57.558303 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:57.558546 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 12:58:57.733102 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:57.733815 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:57.734726 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:57.735711 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 12:58:57.874947 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:57.875229 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:57.875262 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:57.875382 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  E0901 12:58:58.017711      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:58:58.019967 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:58.020041 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.020067 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.020155 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 12:58:58.137340 15 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/01/25 12:58:58.14
  I0901 12:58:58.140319 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.140623 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.141262 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0901 12:58:58.278978 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:58.279070 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.279093 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.279215 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0901 12:58:58.382189 15 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/01/25 12:58:58.382
  I0901 12:58:58.382669 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.382720 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.382915 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 12:58:58.529967 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:58.530050 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.530071 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.530187 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 12:58:58.627040 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:58.627332 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.627478 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.627714 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0901 12:58:58.751516 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:58.751614 15 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5903 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 12:58:58.751638 15 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 12:58:58.751870 15 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5903/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 12:58:58.848022 15 exec_util.go:108] Exec stderr: ""
  I0901 12:58:58.848297 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5903" for this suite. @ 09/01/25 12:58:58.86
â€¢ [7.553 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/01/25 12:58:58.886
  I0901 12:58:58.886711 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename discovery @ 09/01/25 12:58:58.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:58:58.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:58:58.935
  STEP: Setting up server cert @ 09/01/25 12:58:58.944
  E0901 12:58:59.018562      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:00.019325      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:00.020066 15 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0901 12:59:00.022834 15 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0901 12:59:00.022904 15 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0901 12:59:00.022927 15 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0901 12:59:00.023056 15 discovery.go:139] Checking APIGroup: apps
  I0901 12:59:00.026012 15 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0901 12:59:00.026090 15 discovery.go:148] Versions found [{apps/v1 v1}]
  I0901 12:59:00.026129 15 discovery.go:154] apps/v1 matches apps/v1
  I0901 12:59:00.026155 15 discovery.go:139] Checking APIGroup: events.k8s.io
  I0901 12:59:00.029013 15 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0901 12:59:00.029065 15 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0901 12:59:00.029083 15 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0901 12:59:00.029099 15 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0901 12:59:00.031865 15 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0901 12:59:00.031914 15 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0901 12:59:00.031932 15 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0901 12:59:00.031970 15 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0901 12:59:00.035293 15 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0901 12:59:00.035378 15 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0901 12:59:00.035460 15 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0901 12:59:00.035536 15 discovery.go:139] Checking APIGroup: autoscaling
  I0901 12:59:00.039802 15 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0901 12:59:00.039858 15 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0901 12:59:00.039875 15 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0901 12:59:00.039891 15 discovery.go:139] Checking APIGroup: batch
  I0901 12:59:00.042889 15 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0901 12:59:00.043074 15 discovery.go:148] Versions found [{batch/v1 v1}]
  I0901 12:59:00.043109 15 discovery.go:154] batch/v1 matches batch/v1
  I0901 12:59:00.043134 15 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0901 12:59:00.047332 15 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0901 12:59:00.047384 15 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0901 12:59:00.047443 15 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0901 12:59:00.047462 15 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0901 12:59:00.050144 15 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0901 12:59:00.050199 15 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0901 12:59:00.050218 15 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0901 12:59:00.050233 15 discovery.go:139] Checking APIGroup: policy
  I0901 12:59:00.053155 15 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0901 12:59:00.053205 15 discovery.go:148] Versions found [{policy/v1 v1}]
  I0901 12:59:00.053250 15 discovery.go:154] policy/v1 matches policy/v1
  I0901 12:59:00.053267 15 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0901 12:59:00.056105 15 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0901 12:59:00.057323 15 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0901 12:59:00.057383 15 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0901 12:59:00.057482 15 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0901 12:59:00.060251 15 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0901 12:59:00.060320 15 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0901 12:59:00.060338 15 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0901 12:59:00.060355 15 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0901 12:59:00.063683 15 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0901 12:59:00.063766 15 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0901 12:59:00.063799 15 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0901 12:59:00.063827 15 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0901 12:59:00.066235 15 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0901 12:59:00.067278 15 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0901 12:59:00.067340 15 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0901 12:59:00.067410 15 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0901 12:59:00.071009 15 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0901 12:59:00.071072 15 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0901 12:59:00.071092 15 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0901 12:59:00.071139 15 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0901 12:59:00.073656 15 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0901 12:59:00.073712 15 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0901 12:59:00.073733 15 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0901 12:59:00.073751 15 discovery.go:139] Checking APIGroup: node.k8s.io
  I0901 12:59:00.076753 15 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0901 12:59:00.076860 15 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0901 12:59:00.076884 15 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0901 12:59:00.076944 15 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0901 12:59:00.081237 15 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0901 12:59:00.081296 15 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0901 12:59:00.081325 15 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0901 12:59:00.081341 15 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0901 12:59:00.086069 15 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0901 12:59:00.086124 15 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0901 12:59:00.086144 15 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0901 12:59:00.086160 15 discovery.go:139] Checking APIGroup: cilium.io
  I0901 12:59:00.089642 15 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0901 12:59:00.090133 15 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0901 12:59:00.090167 15 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0901 12:59:00.090390 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1845" for this suite. @ 09/01/25 12:59:00.106
â€¢ [1.240 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/01/25 12:59:00.126
  I0901 12:59:00.126941 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename apf @ 09/01/25 12:59:00.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:00.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:00.166
  STEP: getting /apis @ 09/01/25 12:59:00.178
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 12:59:00.192
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 12:59:00.195
  STEP: creating @ 09/01/25 12:59:00.198
  STEP: getting @ 09/01/25 12:59:00.237
  STEP: listing @ 09/01/25 12:59:00.245
  STEP: watching @ 09/01/25 12:59:00.255
  I0901 12:59:00.255971 15 flowcontrol.go:620] starting watch
  STEP: patching @ 09/01/25 12:59:00.258
  STEP: updating @ 09/01/25 12:59:00.271
  I0901 12:59:00.291724 15 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 12:59:00.292
  STEP: patching /status @ 09/01/25 12:59:00.3
  STEP: updating /status @ 09/01/25 12:59:00.313
  STEP: deleting @ 09/01/25 12:59:00.332
  STEP: deleting a collection @ 09/01/25 12:59:00.361
  I0901 12:59:00.406704 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-89" for this suite. @ 09/01/25 12:59:00.416
â€¢ [0.301 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/01/25 12:59:00.429
  I0901 12:59:00.430124 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:59:00.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:00.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:00.483
  STEP: Given a ReplicationController is created @ 09/01/25 12:59:00.488
  STEP: When the matched label of one of its pods change @ 09/01/25 12:59:00.499
  I0901 12:59:00.507693 15 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0901 12:59:01.019963      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:02.020914      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:03.021660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:04.022208      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:05.023005      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:05.520481 15 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 12:59:05.552
  E0901 12:59:06.023787      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:06.571365 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1119" for this suite. @ 09/01/25 12:59:06.581
â€¢ [6.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/01/25 12:59:06.603
  I0901 12:59:06.603886 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename disruption @ 09/01/25 12:59:06.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:06.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:06.637
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:59:06.653
  E0901 12:59:07.024708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:08.024767      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/01/25 12:59:08.667
  STEP: Waiting for all pods to be running @ 09/01/25 12:59:08.699
  I0901 12:59:08.709395 15 disruption.go:691] running pods: 0 < 1
  E0901 12:59:09.025715      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:10.027568      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/01/25 12:59:10.715
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:59:10.76
  STEP: Patching PodDisruptionBudget status @ 09/01/25 12:59:10.787
  STEP: Waiting for the pdb to be processed @ 09/01/25 12:59:10.812
  I0901 12:59:10.823045 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5863" for this suite. @ 09/01/25 12:59:10.833
â€¢ [4.248 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/01/25 12:59:10.852
  I0901 12:59:10.853586 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename proxy @ 09/01/25 12:59:10.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:10.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:10.884
  I0901 12:59:10.890286 15 proxy.go:387] Creating pod...
  E0901 12:59:11.026783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:12.034654      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:13.035316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:14.035629      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:14.948959 15 proxy.go:411] Creating service...
  I0901 12:59:14.988520 15 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=DELETE
  I0901 12:59:15.013924 15 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:59:15.014053 15 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=OPTIONS
  I0901 12:59:15.025883 15 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:59:15.026160 15 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=PATCH
  E0901 12:59:15.035585      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:15.035773 15 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:59:15.036597 15 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=POST
  I0901 12:59:15.047142 15 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:59:15.047259 15 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=PUT
  I0901 12:59:15.055118 15 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:59:15.055193 15 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=DELETE
  I0901 12:59:15.065567 15 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 12:59:15.065632 15 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0901 12:59:15.076192 15 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 12:59:15.076258 15 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=PATCH
  I0901 12:59:15.089149 15 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 12:59:15.089211 15 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=POST
  I0901 12:59:15.099184 15 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 12:59:15.099280 15 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=PUT
  I0901 12:59:15.109654 15 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 12:59:15.110209 15 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=GET
  I0901 12:59:15.116593 15 proxy.go:487] http.Client request:GET StatusCode:301
  I0901 12:59:15.116686 15 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=GET
  I0901 12:59:15.125209 15 proxy.go:487] http.Client request:GET StatusCode:301
  I0901 12:59:15.125616 15 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/pods/agnhost/proxy?method=HEAD
  I0901 12:59:15.131784 15 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0901 12:59:15.131846 15 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9841/services/e2e-proxy-test-service/proxy?method=HEAD
  I0901 12:59:15.141593 15 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0901 12:59:15.142134 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9841" for this suite. @ 09/01/25 12:59:15.153
â€¢ [4.314 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/01/25 12:59:15.166
  I0901 12:59:15.166779 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 12:59:15.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:15.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:15.199
  I0901 12:59:15.206159 15 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0901 12:59:16.036572      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/01/25 12:59:16.235
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/01/25 12:59:16.248
  E0901 12:59:17.037531      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/01/25 12:59:17.268
  I0901 12:59:17.285333 15 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/01/25 12:59:17.287
  I0901 12:59:17.295007 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1644" for this suite. @ 09/01/25 12:59:17.305
â€¢ [2.151 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/01/25 12:59:17.32
  I0901 12:59:17.320708 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename apf @ 09/01/25 12:59:17.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:17.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:17.364
  STEP: getting /apis @ 09/01/25 12:59:17.37
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 12:59:17.382
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 12:59:17.386
  STEP: creating @ 09/01/25 12:59:17.39
  STEP: getting @ 09/01/25 12:59:17.427
  STEP: listing @ 09/01/25 12:59:17.434
  STEP: watching @ 09/01/25 12:59:17.451
  I0901 12:59:17.451546 15 flowcontrol.go:394] starting watch
  STEP: patching @ 09/01/25 12:59:17.459
  STEP: updating @ 09/01/25 12:59:17.472
  I0901 12:59:17.487737 15 flowcontrol.go:422] waiting for watch events with expected annotations
  I0901 12:59:17.487948 15 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/01/25 12:59:17.488
  STEP: patching /status @ 09/01/25 12:59:17.498
  STEP: updating /status @ 09/01/25 12:59:17.508
  STEP: deleting @ 09/01/25 12:59:17.562
  STEP: deleting a collection @ 09/01/25 12:59:17.59
  I0901 12:59:17.628479 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1606" for this suite. @ 09/01/25 12:59:17.637
â€¢ [0.334 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/01/25 12:59:17.655
  I0901 12:59:17.655355 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:59:17.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:17.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:17.686
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/01/25 12:59:17.692
  E0901 12:59:18.038121      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:19.038303      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/01/25 12:59:19.741
  STEP: Then the orphan pod is adopted @ 09/01/25 12:59:19.767
  E0901 12:59:20.039290      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/01/25 12:59:20.789
  I0901 12:59:20.801672 15 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 12:59:20.831
  E0901 12:59:21.039745      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:21.855435 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2864" for this suite. @ 09/01/25 12:59:21.874
â€¢ [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/01/25 12:59:21.894
  I0901 12:59:21.894963 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename gc @ 09/01/25 12:59:21.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:21.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:21.932
  STEP: create the deployment @ 09/01/25 12:59:21.94
  W0901 12:59:21.958705      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 12:59:21.959
  E0901 12:59:22.040615      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/01/25 12:59:22.183
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/01/25 12:59:22.197
  STEP: Gathering metrics @ 09/01/25 12:59:22.819
  E0901 12:59:23.041051      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:23.268105 15 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 12:59:23.271863 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1419" for this suite. @ 09/01/25 12:59:23.306
â€¢ [1.516 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/01/25 12:59:23.411
  I0901 12:59:23.412041 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:59:23.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:23.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:23.527
  STEP: Creating configMap with name projected-configmap-test-volume-f20a4954-6f2e-49c8-9a51-c275a4731087 @ 09/01/25 12:59:23.572
  STEP: Creating a pod to test consume configMaps @ 09/01/25 12:59:23.606
  E0901 12:59:24.041189      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:25.042141      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:26.042888      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:27.043882      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:59:27.674
  I0901 12:59:27.687795 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-configmaps-7a54399b-2256-4ffc-be6b-9e64288e4495 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:59:27.707
  I0901 12:59:27.735220 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3837" for this suite. @ 09/01/25 12:59:27.744
â€¢ [4.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/01/25 12:59:27.759
  I0901 12:59:27.759562 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename events @ 09/01/25 12:59:27.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:27.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:27.8
  STEP: Create set of events @ 09/01/25 12:59:27.806
  I0901 12:59:27.816283 15 core_events.go:198] created test-event-1
  I0901 12:59:27.826106 15 core_events.go:198] created test-event-2
  I0901 12:59:27.833808 15 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 12:59:27.833
  STEP: delete collection of events @ 09/01/25 12:59:27.843
  I0901 12:59:27.843250 15 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 12:59:27.906
  I0901 12:59:27.906502 15 core_events.go:230] requesting list of events to confirm quantity
  I0901 12:59:27.912286 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8726" for this suite. @ 09/01/25 12:59:27.92
â€¢ [0.180 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/01/25 12:59:27.939
  I0901 12:59:27.939611 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:59:27.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:27.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:28
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:59:28.01
  E0901 12:59:28.044640      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:29.057336      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:30.057660      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:31.058648      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:32.060915      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:59:32.063
  I0901 12:59:32.074291 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-42816471-e1e6-4175-a30e-1a8ae06915e4 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:59:32.098
  I0901 12:59:32.139748 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6532" for this suite. @ 09/01/25 12:59:32.155
â€¢ [4.235 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/01/25 12:59:32.174
  I0901 12:59:32.174831 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename containers @ 09/01/25 12:59:32.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:32.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:32.209
  STEP: Creating a pod to test override all @ 09/01/25 12:59:32.217
  E0901 12:59:33.060938      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:34.061863      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:35.061922      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:36.062664      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:59:36.266
  I0901 12:59:36.277651 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod client-containers-2dd210ba-cbba-4037-9eb3-bec63e275341 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 12:59:36.3
  I0901 12:59:36.346942 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4600" for this suite. @ 09/01/25 12:59:36.376
â€¢ [4.221 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/01/25 12:59:36.395
  I0901 12:59:36.396018 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 12:59:36.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:36.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:36.445
  STEP: Creating a ResourceQuota @ 09/01/25 12:59:36.452
  STEP: Getting a ResourceQuota @ 09/01/25 12:59:36.46
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/01/25 12:59:36.473
  STEP: Patching the ResourceQuota @ 09/01/25 12:59:36.48
  STEP: Deleting a Collection of ResourceQuotas @ 09/01/25 12:59:36.494
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 12:59:36.517
  I0901 12:59:36.523104 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8008" for this suite. @ 09/01/25 12:59:36.536
â€¢ [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/01/25 12:59:36.558
  I0901 12:59:36.558054 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 12:59:36.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:36.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:36.592
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 12:59:36.6
  E0901 12:59:37.062710      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:38.064783      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:39.064894      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:40.065220      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:59:40.66
  I0901 12:59:40.675801 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downwardapi-volume-705f5d7a-7494-4b3f-9916-683ea495ac9c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 12:59:40.704
  I0901 12:59:40.751114 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6619" for this suite. @ 09/01/25 12:59:40.764
â€¢ [4.227 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/01/25 12:59:40.785
  I0901 12:59:40.786071 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename webhook @ 09/01/25 12:59:40.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:40.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:40.823
  STEP: Setting up server cert @ 09/01/25 12:59:40.879
  E0901 12:59:41.065818      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:42.066605      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 12:59:42.508
  STEP: Deploying the webhook pod @ 09/01/25 12:59:42.526
  STEP: Wait for the deployment to be ready @ 09/01/25 12:59:42.558
  I0901 12:59:42.581572 15 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 12:59:43.068553      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:44.068727      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 12:59:44.609
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 12:59:44.64
  E0901 12:59:45.069567      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:45.642000 15 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 12:59:45.67
  STEP: verifying the validating webhook match conditions @ 09/01/25 12:59:45.698
  STEP: updating the validating webhook match conditions @ 09/01/25 12:59:45.709
  STEP: verifying the validating webhook match conditions @ 09/01/25 12:59:45.74
  I0901 12:59:45.887260 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6486" for this suite. @ 09/01/25 12:59:45.903
  STEP: Destroying namespace "webhook-markers-9060" for this suite. @ 09/01/25 12:59:45.929
â€¢ [5.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/01/25 12:59:45.95
  I0901 12:59:45.950115 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 12:59:45.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:45.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:46.003
  STEP: Create a ReplicaSet @ 09/01/25 12:59:46.011
  STEP: Verify that the required pods have come up @ 09/01/25 12:59:46.029
  I0901 12:59:46.042280 15 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0901 12:59:46.070038      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:47.070237      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:48.070610      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:49.070769      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:50.071319      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:51.052203 15 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/01/25 12:59:51.052
  I0901 12:59:51.064263 15 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/01/25 12:59:51.064
  E0901 12:59:51.071553      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: DeleteCollection of the ReplicaSets @ 09/01/25 12:59:51.072
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/01/25 12:59:51.191
  I0901 12:59:51.299076 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3058" for this suite. @ 09/01/25 12:59:51.324
â€¢ [5.401 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 09/01/25 12:59:51.356
  I0901 12:59:51.356673 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 12:59:51.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:51.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:51.418
  STEP: starting the proxy server @ 09/01/25 12:59:51.428
  I0901 12:59:51.431842 15 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3021239279 --namespace=kubectl-1713 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/01/25 12:59:51.616
  I0901 12:59:51.681229 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0901 12:59:51.697350 15 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:33551

  I0901 12:59:51.697925 15 kubectl.go:2236] kubectl proxy stderr: W0901 12:59:51.611922    1087 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-1713" for this suite. @ 09/01/25 12:59:51.72
â€¢ [0.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/01/25 12:59:51.741
  I0901 12:59:51.741294 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pv @ 09/01/25 12:59:51.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:51.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:51.823
  STEP: Creating initial PV and PVC @ 09/01/25 12:59:51.831
  I0901 12:59:51.831551 15 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8845" @ 09/01/25 12:59:51.866
  STEP: Listing PVCs in namespace "pv-8845" @ 09/01/25 12:59:51.891
  STEP: Reading "pvc-hzl4m" Status @ 09/01/25 12:59:51.908
  STEP: Reading "pv-8845-rf9ww" Status @ 09/01/25 12:59:51.923
  STEP: Patching "pvc-hzl4m" Status @ 09/01/25 12:59:51.942
  STEP: Patching "pv-8845-rf9ww" Status @ 09/01/25 12:59:51.964
  STEP: Updating "pvc-hzl4m" Status @ 09/01/25 12:59:51.982
  STEP: Updating "pv-8845-rf9ww" Status @ 09/01/25 12:59:52.004
  I0901 12:59:52.063808 15 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 12:59:52.064643 15 pv.go:205] Deleting PersistentVolumeClaim "pvc-hzl4m"
  E0901 12:59:52.072191      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 12:59:52.089063 15 pv.go:193] Deleting PersistentVolume "pv-8845-rf9ww"
  I0901 12:59:52.114994 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8845" for this suite. @ 09/01/25 12:59:52.131
â€¢ [0.410 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/01/25 12:59:52.154
  I0901 12:59:52.154934 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 12:59:52.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:52.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:52.212
  STEP: Creating secret with name secret-test-667060cd-1153-441e-85c6-18e2d3191a90 @ 09/01/25 12:59:52.224
  STEP: Creating a pod to test consume secrets @ 09/01/25 12:59:52.236
  E0901 12:59:53.073852      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:54.073214      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:55.074624      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:56.075612      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 12:59:56.306
  I0901 12:59:56.315471 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-7351a610-5699-451a-939c-eabc890094e5 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 12:59:56.33
  I0901 12:59:56.365965 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1214" for this suite. @ 09/01/25 12:59:56.381
â€¢ [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/01/25 12:59:56.404
  I0901 12:59:56.404850 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 12:59:56.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 12:59:56.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 12:59:56.447
  STEP: Setting up server cert @ 09/01/25 12:59:56.46
  E0901 12:59:57.075751      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 12:59:58.076803      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 12:59:58.241
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 12:59:58.256
  STEP: Wait for the deployment to be ready @ 09/01/25 12:59:58.292
  I0901 12:59:58.312005 15 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0901 12:59:59.078215      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:00.078973      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 13:00:00.351
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 13:00:00.395
  E0901 13:00:01.079222      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 13:00:01.395681 15 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 13:00:01.422650 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 13:00:02.079904      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:03.081687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:04.081006      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/01/25 13:00:04.276
  STEP: v2 custom resource should be converted @ 09/01/25 13:00:04.296
  I0901 13:00:04.977929 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8475" for this suite. @ 09/01/25 13:00:04.99
â€¢ [8.633 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/01/25 13:00:05.038
  I0901 13:00:05.038648 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 13:00:05.042
  E0901 13:00:05.081529      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:05.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:05.094
  STEP: Creating a pod to test env composition @ 09/01/25 13:00:05.099
  E0901 13:00:06.081792      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:07.082862      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:08.082927      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:09.083279      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:00:09.166
  I0901 13:00:09.176020 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod var-expansion-8cdb6fe7-f215-438c-83ae-e066f9285cb1 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 13:00:09.204
  I0901 13:00:09.293213 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8724" for this suite. @ 09/01/25 13:00:09.309
â€¢ [4.288 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/01/25 13:00:09.327
  I0901 13:00:09.327705 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename secrets @ 09/01/25 13:00:09.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:09.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:09.389
  STEP: Creating secret with name secret-test-eff044a6-11aa-46a5-9349-11d7f9bf5de7 @ 09/01/25 13:00:09.396
  STEP: Creating a pod to test consume secrets @ 09/01/25 13:00:09.405
  E0901 13:00:10.083676      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:11.083845      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:12.085297      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:13.085842      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:00:13.5
  I0901 13:00:13.512320 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-secrets-c3a48427-6e35-4395-8ed0-261d5a601ecf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 13:00:13.533
  I0901 13:00:13.577284 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2903" for this suite. @ 09/01/25 13:00:13.588
â€¢ [4.278 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/01/25 13:00:13.606
  I0901 13:00:13.606589 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 13:00:13.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:13.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:13.646
  I0901 13:00:13.656051 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  W0901 13:00:13.658681      15 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003d94720 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0901 13:00:14.086334      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:15.086255      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:16.086997      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0901 13:00:16.389857      15 warnings.go:70] unknown field "alpha"
  W0901 13:00:16.389990      15 warnings.go:70] unknown field "beta"
  W0901 13:00:16.390011      15 warnings.go:70] unknown field "delta"
  W0901 13:00:16.390083      15 warnings.go:70] unknown field "epsilon"
  W0901 13:00:16.390335      15 warnings.go:70] unknown field "gamma"
  I0901 13:00:17.035896 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1594" for this suite. @ 09/01/25 13:00:17.054
â€¢ [3.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/01/25 13:00:17.083
  I0901 13:00:17.083176 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  E0901 13:00:17.088504      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 13:00:17.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:17.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:17.174
  STEP: Creating replication controller my-hostname-basic-b26ebce4-3d6b-41f0-ae26-e4bfdba0f14d @ 09/01/25 13:00:17.181
  I0901 13:00:17.258343 15 resource.go:87] Pod name my-hostname-basic-b26ebce4-3d6b-41f0-ae26-e4bfdba0f14d: Found 1 pods out of 1
  I0901 13:00:17.258453 15 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-b26ebce4-3d6b-41f0-ae26-e4bfdba0f14d" are running
  E0901 13:00:18.088717      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:19.089714      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 13:00:19.275545 15 rc.go:523] Pod "my-hostname-basic-b26ebce4-3d6b-41f0-ae26-e4bfdba0f14d-vhzsz" is running and ready(conditions: [{Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 13:00:17 +0000 UTC Reason: Message:}])
  I0901 13:00:19.275620 15 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 13:00:19.275
  I0901 13:00:19.305620 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7981" for this suite. @ 09/01/25 13:00:19.318
â€¢ [2.252 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/01/25 13:00:19.335
  I0901 13:00:19.335553 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename pv @ 09/01/25 13:00:19.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:19.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:19.369
  STEP: Creating initial PV and PVC @ 09/01/25 13:00:19.373
  I0901 13:00:19.373967 15 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6866" @ 09/01/25 13:00:19.419
  STEP: Listing PVCs in namespace "pv-6866" @ 09/01/25 13:00:19.471
  STEP: Patching the PV "pv-6866-n2ds6" @ 09/01/25 13:00:19.503
  STEP: Patching the PVC "pvc-28ffj" @ 09/01/25 13:00:19.578
  STEP: Getting PV "pv-6866-n2ds6" @ 09/01/25 13:00:19.608
  STEP: Getting PVC "pvc-28ffj" @ 09/01/25 13:00:19.615
  STEP: Deleting PVC "pvc-28ffj" @ 09/01/25 13:00:19.624
  STEP: Confirm deletion of PVC "pvc-28ffj" @ 09/01/25 13:00:19.637
  E0901 13:00:20.090749      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:21.091784      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-6866-n2ds6" @ 09/01/25 13:00:21.669
  STEP: Confirm deletion of PV "pv-6866-n2ds6" @ 09/01/25 13:00:21.693
  E0901 13:00:22.092261      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:23.093618      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/01/25 13:00:23.72
  I0901 13:00:23.720945 15 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6866-7ks2l" @ 09/01/25 13:00:23.765
  STEP: Updating the PVC "pvc-lmjz8" @ 09/01/25 13:00:23.823
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-lmjz8=updated" @ 09/01/25 13:00:23.841
  STEP: Deleting PVC "pvc-lmjz8" via DeleteCollection @ 09/01/25 13:00:23.849
  STEP: Confirm deletion of PVC "pvc-lmjz8" @ 09/01/25 13:00:23.869
  E0901 13:00:24.093199      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:25.093267      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-6866-7ks2l" via DeleteCollection @ 09/01/25 13:00:25.889
  STEP: Confirm deletion of PV "pv-6866-7ks2l" @ 09/01/25 13:00:25.919
  E0901 13:00:26.094373      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:27.095157      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 13:00:27.943257 15 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 13:00:27.943352 15 pv.go:205] Deleting PersistentVolumeClaim "pvc-lmjz8"
  I0901 13:00:27.954760 15 pv.go:193] Deleting PersistentVolume "pv-6866-7ks2l"
  I0901 13:00:27.966711 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6866" for this suite. @ 09/01/25 13:00:27.983
â€¢ [8.675 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/01/25 13:00:28.01
  I0901 13:00:28.010806 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename projected @ 09/01/25 13:00:28.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:28.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:28.057
  STEP: Creating projection with secret that has name projected-secret-test-0f91a94a-7f05-4de5-bbcb-8cd6c488fabe @ 09/01/25 13:00:28.065
  STEP: Creating a pod to test consume secrets @ 09/01/25 13:00:28.077
  E0901 13:00:28.096057      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:29.096316      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:30.096947      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:31.097193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:32.097708      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:00:32.139
  I0901 13:00:32.150706 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod pod-projected-secrets-28be5d5f-0967-4ed4-bd49-866c5dbca22f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 13:00:32.176
  I0901 13:00:32.222200 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5538" for this suite. @ 09/01/25 13:00:32.238
â€¢ [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/01/25 13:00:32.263
  I0901 13:00:32.263144 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 13:00:32.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:32.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:32.313
  STEP: Creating a ResourceQuota with terminating scope @ 09/01/25 13:00:32.32
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 13:00:32.33
  E0901 13:00:33.098598      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:34.098522      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/01/25 13:00:34.345
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 13:00:34.371
  E0901 13:00:35.098980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:36.099934      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/01/25 13:00:36.386
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/01/25 13:00:36.442
  E0901 13:00:37.100297      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:38.101126      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/01/25 13:00:38.454
  E0901 13:00:39.101907      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:40.102389      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 13:00:40.469
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 13:00:40.508
  E0901 13:00:41.102895      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:42.103127      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/01/25 13:00:42.52
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/01/25 13:00:42.559
  E0901 13:00:43.104747      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:44.104980      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/01/25 13:00:44.573
  E0901 13:00:45.105690      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:46.105879      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/01/25 13:00:46.585
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 13:00:46.628
  E0901 13:00:47.106193      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:48.107599      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 13:00:48.641298 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5406" for this suite. @ 09/01/25 13:00:48.658
â€¢ [16.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/01/25 13:00:48.693
  I0901 13:00:48.693111 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 13:00:48.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:48.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:48.789
  STEP: apply creating a deployment @ 09/01/25 13:00:48.802
  I0901 13:00:48.843180 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4306" for this suite. @ 09/01/25 13:00:48.857
â€¢ [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/01/25 13:00:48.883
  I0901 13:00:48.883221 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename dns @ 09/01/25 13:00:48.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:48.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:48.925
  STEP: Creating a test externalName service @ 09/01/25 13:00:48.931
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3482.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3482.svc.cluster.local; sleep 1; done
   @ 09/01/25 13:00:48.94
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3482.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3482.svc.cluster.local; sleep 1; done
   @ 09/01/25 13:00:48.94
  STEP: creating a pod to probe DNS @ 09/01/25 13:00:48.94
  STEP: submitting the pod to kubernetes @ 09/01/25 13:00:48.942
  E0901 13:00:49.107928      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:50.108989      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:51.109170      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:52.109665      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 13:00:52.998
  STEP: looking for the results for each expected name from probers @ 09/01/25 13:00:53.011
  I0901 13:00:53.062255 15 dns_common.go:571] DNS probes using dns-test-0c8baa53-e623-42a3-8ce8-b47cd565bcd7 succeeded

  STEP: changing the externalName to bar.example.com @ 09/01/25 13:00:53.062
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3482.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3482.svc.cluster.local; sleep 1; done
   @ 09/01/25 13:00:53.098
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3482.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3482.svc.cluster.local; sleep 1; done
   @ 09/01/25 13:00:53.098
  STEP: creating a second pod to probe DNS @ 09/01/25 13:00:53.099
  STEP: submitting the pod to kubernetes @ 09/01/25 13:00:53.099
  E0901 13:00:53.110661      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:54.111395      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:55.110999      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 13:00:55.15
  STEP: looking for the results for each expected name from probers @ 09/01/25 13:00:55.162
  I0901 13:00:55.196223 15 dns_common.go:571] DNS probes using dns-test-2f801733-c8e8-472b-92bc-38ca88ceb899 succeeded

  STEP: changing the service to type=ClusterIP @ 09/01/25 13:00:55.196
  W0901 13:00:55.243189      15 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3482.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3482.svc.cluster.local; sleep 1; done
   @ 09/01/25 13:00:55.243
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3482.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3482.svc.cluster.local; sleep 1; done
   @ 09/01/25 13:00:55.243
  STEP: creating a third pod to probe DNS @ 09/01/25 13:00:55.243
  STEP: submitting the pod to kubernetes @ 09/01/25 13:00:55.258
  E0901 13:00:56.113392      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:57.114187      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/01/25 13:00:57.3
  STEP: looking for the results for each expected name from probers @ 09/01/25 13:00:57.316
  I0901 13:00:57.363973 15 dns_common.go:571] DNS probes using dns-test-898f2a61-0027-4b9d-85df-5e2e98faf806 succeeded

  STEP: deleting the pod @ 09/01/25 13:00:57.364
  STEP: deleting the pod @ 09/01/25 13:00:57.392
  STEP: deleting the pod @ 09/01/25 13:00:57.448
  STEP: deleting the test externalName service @ 09/01/25 13:00:57.51
  I0901 13:00:57.537837 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3482" for this suite. @ 09/01/25 13:00:57.549
â€¢ [8.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/01/25 13:00:57.586
  I0901 13:00:57.586613 15 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3021239279
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 13:00:57.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 13:00:57.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 13:00:57.628
  STEP: Creating a pod to test downward api env vars @ 09/01/25 13:00:57.649
  E0901 13:00:58.114671      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:00:59.115687      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:01:00.115151      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 13:01:01.116025      15 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 13:01:01.712
  I0901 13:01:01.722226 15 output.go:207] Trying to get logs from node aeshuj4hoh7a-3 pod downward-api-1bae5824-67cc-40ae-a320-5585df76e317 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 13:01:01.755
  I0901 13:01:01.812231 15 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9390" for this suite. @ 09/01/25 13:01:01.824
â€¢ [4.255 seconds]
------------------------------
SSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0901 13:01:01.842798 15 suites.go:34] Running AfterSuite actions on node 1
  I0901 13:01:01.842855 15 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.117 seconds]
------------------------------

Ran 411 of 6624 Specs in 6718.524 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6213 Skipped
PASS

Ginkgo ran 1 suite in 1h52m0.583414835s
Test Suite Passed
